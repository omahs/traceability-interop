{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d07c6813-38ff-4a7b-ae91-def9178c484a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "349e2195-1326-4ae8-9774-261c56cbe18b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3e44972-c45b-42b2-849b-b874b2b81eda",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9e30ae48-ba5b-4b4a-be7a-9f558a5ed226"
                }
              }
            ]
          },
          {
            "id": "1a55c11f-4892-4357-ac7c-5818b71b59dd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29e39e93-d5b0-4ecd-ae59-05ac679638af",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25d4bcc9-986b-4e3b-a47a-d839d1361b10"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff8fbffa-8711-430c-a426-c7ad769f45a1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "46da9204-41fe-4a20-b09a-1d1c25fb15e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81261c3a-7d6a-4bc7-a6a2-bfdbb0720f0e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "256425ed-e012-40c3-bb66-ec1692be7c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16052cdc-3c42-4501-89b8-40e45532d788"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57d34ace-2d38-426d-a8dd-2719a081d351",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52f347f0-467e-4920-acaa-2ff99e2e0616"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "44f2257e-92ec-441a-b625-db96e27acbeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec27062e-ba39-465a-96f6-48b8d0e74f39"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7d5d910-cfd6-43f9-8680-cf34f7e2778f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7a124b26-f113-445e-84c9-3760c701ef1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a75b5323-b58e-4f20-8e76-9bd6977772d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "349a0455-760c-4c25-a3d6-0ee08c217e7b"
            }
          }
        ]
      },
      {
        "id": "e5acb7f7-8cd0-4d8b-91ba-538590e37825",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9d361046-4808-4460-ba8d-48ebb3bcedf4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63dfd1dc-2b23-473b-8ea4-2972a7987144",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d38d7f8d-78e5-4a6a-b630-5511fb77d86a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020352e9-a1a6-495c-a60a-d8701e3aba23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61ac591a-3035-4372-93cf-10d41d9e93a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5c5535-c238-4c11-8410-8825dce7d383",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1c06ca-5e99-4b9c-8dba-867458188fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d778828f-a0d8-48db-9564-e4c07d229bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663b34e-e7a0-40e7-b45a-8f6cc5bc4649",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9837f741-b66b-4292-bdb9-72d337908562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4da3fbf1-3137-4cf6-a406-172aa038d01d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a93e311b-7064-45eb-88a3-5ad0f333e068",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08a0fbfd-61ce-42e3-a4e8-da71d8610353",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c48b7-7e69-454b-966f-399968193c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34e16f5b-3255-4978-b502-c2f8029c6d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf8e3b3-3779-4ad9-8146-4117431b914e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bb2a58-ef93-49eb-b682-2e80cd403a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53dba8e-0882-492d-9d22-123a3314c026",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b240ec2-db88-4358-9b5b-8bd5f12bd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adeb5868-38b1-4b2d-98b4-04012c758e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca955063-0cb3-47c2-892b-e3e4caf8bdb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5b05ad4d-d8d3-4597-801a-8b2000839274"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "158b195c-df61-4ca5-82b3-f458b2367489",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3bcd8d49-17a3-4494-b5bb-9096152c4903",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f59f19e5-f873-4e3e-9826-2b762e237c75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f5a25799-3c49-4b6d-84ce-349a5ac5c755"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5351106f-e832-45c1-b22c-5fd13b5a093b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a93b1cb4-23bd-4c94-b6bd-e1f51b57ba59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ad8e48-aa58-4a05-aff8-f91aa0621cde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c843435-1175-472f-aecc-e85f4c6774af"
            }
          }
        ]
      },
      {
        "id": "ca332b12-15b0-4532-84be-2ad497e4e06c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1e2f32f1-ac4f-482b-82ec-67eac71b5c74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd3991f8-86c9-4ed9-abdf-7c633bf534a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9bc21148-d13f-4a55-95c1-10839859bcd7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d01480-940a-459e-8182-4ba5c7efc92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfde461-50cc-436a-99a9-cf48aeef606f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448d1da8-7a31-486f-b87b-a958dd3b41f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce76383a-e380-44a4-8022-3e70348055ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2c7946-6083-4a17-81e7-8a8060ff8036",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e71c239-0119-4ed1-9859-f75cc31ff3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06a529a-e068-492d-8d12-6529693580db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f540e8-cac9-419f-8efa-5bdf32f6fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c47243c9-91e7-44f7-9293-d55466d4b820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86298a16-bb90-4f51-ac52-7bd649906277",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0478eb42-162e-4c0e-a13d-0de2ebb89522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ac2572-d7e3-4b86-bbfd-5583f9366e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24239a35-6fdd-4954-aee5-9ba2dd6d6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31e9dc20-6687-419f-a718-9c3a9749eddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5dbd39-c343-4980-ade7-2cbe455b796c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45741099-74e0-4311-81b6-18f118b9882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393ba861-0751-4a01-a3b5-992c7c486cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197108c0-348d-4f48-995c-099264e32723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02528976-443c-445e-bf37-1e67fab171f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1450bce-30f9-4907-9331-cd9d230d0238",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867cdf63-ad74-4383-891d-bf2d617032a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9725c601-6c65-4e6a-9dd6-61573a605c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc128883-cbef-405e-a5dd-8e14a0a0207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed4a2099-f0fd-40a4-9a2a-66696a9b5938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7839f3f0-75aa-4aaf-a27c-033cfb69297e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2068a-0322-480c-b339-b030f6b82543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb22e0c-36ae-4c5a-bb81-afcdc9b80631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd76810-4922-4e81-b04f-6cbcc74aec56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95406bec-4752-4aec-aa84-e9da66fd8a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e84ee6c-dd38-426d-8a7b-f2ecc500c1f9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e8b8c5-feae-48b7-8e32-3f8b9687978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe57b13a-f1be-4314-b599-a9880f2cf5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e30d423-379c-4c17-a668-17fb5cc909b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9073a3ed-6b54-4d28-a485-a2e5fda41416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4219291f-73e9-4bdc-8e46-46ae2eb76f54",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc1b6a9-f482-4438-800b-b144acd1eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26681799-58bd-4f62-abbe-d852cfb98cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cd566c-a753-445f-b6ab-a16fac6b4d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b55e12dc-d008-4e24-a158-65a751d92344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c585d74-dc33-4612-8daa-1368b68bfc15",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf0690c-ba94-4dc3-ad97-50e07fe43d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0da439f-81b7-4350-a2cc-ca905a400cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d6bfac-ce3b-443b-b59a-fdcf9b4723f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c82dfb6-2094-4e14-99e4-a5612437caef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e045637a-396f-4007-bbfa-bcda9207851d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f215a3-6575-4e60-95c6-387f9464be9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40caddcd-a268-4bf9-b614-88d6e0837522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ae5e7-d578-4f40-9115-9729ea63b0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7170c881-0356-405d-82a4-14ed41677472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de622aa7-1022-4abb-aafd-cae7058be5fe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7689c73d-d6f3-49ee-b151-26980627372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b8d89-b81a-4708-8240-4877ed06a9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816af3f7-52f8-4687-830c-357410aeb3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95af644-bcb8-4ea5-b0e9-b1ba56d492f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a9f3b6-a4bf-4e6e-9443-bfe05e69b356",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae4cf7d-1331-475f-9b05-641d18e39d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779b729a-ad8b-4db8-bd8a-2380010729ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c0881-818c-4c4b-8d9f-99662792adfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0fa0021-f602-47b1-af75-98b9828d02c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fbbf75-9d3b-449d-84c5-04fdeebfbc87",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ecf5a9-6e22-4c8f-abb5-a25fc8570902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d4388-a03a-4efb-a885-d29c7b03f474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f9931e-2457-4cbb-b439-2e510eaba4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2830f2-7f0b-4dec-9cb6-360c11ac7229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f684eef-0064-409a-b256-7318d2ccc4d2",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ec57b-87dc-4a55-928c-df4cbbfc5311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2726818-9bbd-4501-abd5-8bd989d9ca71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36da67d-ac51-4faf-ba75-b1d0b6e68cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "36533c97-16b9-4818-b06f-94a40c6250fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d44e4ee-1163-4f03-8a92-ba2a6674a81b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a162ff78-fa47-4f55-b77d-f9318203d752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f1d617-fe91-46de-a79f-5fde77af8b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2dde3d-ff36-4fb4-bfc4-7ba041fd9f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc398ffd-6d68-4ba1-930a-6b4f9f62cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae05dc6b-7ea0-4360-8766-5334a5be7dca",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230dae97-a83e-4a25-92dc-667032229fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95d3fc2-a05c-4af6-887c-6d4285ac3589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066d98f7-72f3-4a58-bcec-e7c10d7ed6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10ba6153-c22f-4662-abaa-500069927a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155ec39-41da-438e-b03c-72ddf61a0b55",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd91030-437a-4301-b59a-bd9e45b4b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f41909-a8ce-4c13-b4b3-b98919bb3fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ed4081-57bc-4c9a-b745-c7f1ea795f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61e67153-1dbf-444b-ab76-bae3b16792fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7443e1a2-e32f-4ee3-8d77-353186a8191f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ce7b8d-aaf4-44ce-8b74-806e21e97281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69974cf-d0ba-46a8-80ca-bd4be79100a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f7554e-8c9b-4101-bb57-3332b21f9121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd40fcc-5c82-40d5-b2e7-ba5c6a68233b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756f4320-6b6e-45ca-b00b-5a1170852c14",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f4cdc7-0115-4042-bc8a-d7682d10d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfbf435-e009-47c7-aee9-481e61935cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc749c6-c7f8-4b00-9ba5-68d3a4529e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7628ae70-e77d-464f-b20e-c029babc77ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f629c26-d6f4-438e-807d-9215cf67e3c7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf1e60a-5ea0-4c21-805f-a655558bd6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7eb47f-77c6-4b6b-a543-e04c3f7cd5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2eaa0d-0a1b-4803-977f-97f917e235c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0700cf12-e728-4889-a68c-c32456affe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e2ee1b-e7d2-43ff-ad68-b0eb1e267273",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ce1914-53f0-416d-ad73-e7720092653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab821ad2-2d44-4a82-9176-027a081a7bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70162741-34ad-4361-be3d-219bbab25704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab3d547-df03-484b-a8f1-a64b7f40f1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9663a2-2ba1-47f4-9658-aa53c154cd1b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab742158-d3a0-4fa7-9f4d-76724922980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3876f25-4b4b-44bf-9fd4-f6fbb23f2c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6e6ec5-a531-4210-8e8b-f953a0653130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75fec2e-8cdb-4b0b-8bcf-ac0e8518030a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6423a47-083f-4613-81f5-658e3692c6ed",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f951f2ea-6082-4a26-b78a-d935d3f56731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a43566-dd00-469b-84d2-0e0ab1430a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9219f4-db55-4065-b0ef-0e8429c85c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b455f2f-9c6e-4f7f-97a5-b27d182a72b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02f97ab-70b4-4d8f-a266-904a24341c8a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b85a1-d0ec-402f-bea8-cc539d8037bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f048780-1038-4db8-befc-e2f01e0a0be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3f08e1-e88a-4aab-9451-ee1c3de220d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "327e8232-89ed-417d-8742-1edb32dcf247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d8202d-bbe3-49c8-8435-6972d66adcf4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a298ab0d-faf4-400a-87c3-17d9d5903d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d9e9db-d2d1-41b2-b4a5-220c4ad6204b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202b6e75-a298-4d48-92a1-208a308e5a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57f878a4-7ae7-45c5-beec-e713b5c8380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23203d-2c72-4d02-b67b-f483b55abfa6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f983b-4759-41c7-9b15-0ae122b06c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ed45e7-a3e7-42e5-8bd3-0f9da663ebf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd964f9c-1f20-410e-b3c2-b3411a80ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12736b4-ec72-4e84-b462-4fc2a81fbcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f4c3de-61be-48ce-8d72-1ffff84452b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603af2dd-438a-4427-91ba-2a9617de9471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e2cf7c-de69-4ed5-a23f-c78d6d84054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e467e46-02c6-416e-8112-d57568875c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "353af805-eea7-47c7-8a63-ae4dc63ffdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e20fc48-506e-4de1-8180-5816d2e88717",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97095057-f939-4745-b85d-c903f534bc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7948bc81-543f-433b-a688-57608fc2f082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c1c49-7a37-4160-ae94-82391edbf25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16c976b-1140-47c2-b0dd-ce8b819e8836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b320fe1e-c42a-4b6d-87fa-ffd8823fcf49",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8495424-80a1-4b44-9ec1-135a387c83b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4319cfd6-a1be-4984-a253-9c5e6c5247dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82259f2-1807-4952-8c48-57a2bf2c50a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd2a95b-5222-4778-a6ed-727d08a4beba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dedfc57-c98a-43e4-b5c5-0c5c5c575f8e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b2058a-65a2-4f41-9f97-67f44c4fcd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff561357-22f6-4c08-8e24-84da26595698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7005940-5b2d-43d1-bc51-44398dce8679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62ed623-9da8-4f3c-8d66-f344d0d12cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1da46f-be88-4796-a23e-2c8d25f27872",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3db1d5-f934-4a4a-9fe3-586476c4dcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504ddd37-bcf0-48cc-81f6-4d3b341dae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b8727-2823-478b-8194-c298b8aa96e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60444218-c968-402a-87ab-25cfff6071a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7530550-d89e-4151-ac90-092ad210cafe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0b53b-8169-4423-ad50-8312b12ff44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56118827-6f17-4818-a85b-12ecd2b7f408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3b2670-bd5c-46c4-9ae3-4f8172d86a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd648b5-c920-4be1-ade7-606c813109bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3fca85-10e2-49ee-9a2a-54ce2dc2dd94",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d5b01-8a05-45c8-9bf4-e236ae7c7c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb989a9-5fac-48f2-bdbe-3cb216f92726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ef50d8-c593-4352-a743-1af98542f50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8746f7d2-f945-4945-8804-11b5e217667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3c89e6-fc75-448e-bfab-68910a044480",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb032a6-ef6b-4a7d-a960-5c4f19b66c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dfef57-a04c-4fda-bc38-68a37de3ee9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4b41b3-024c-4855-987a-524a75bf1afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0a8d43-1c7d-4e0c-8ab5-4a35ce46528e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3502d0c-4caf-4b12-a275-1a1fa99cb76c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67a4f6a-7c9b-48b0-a712-cbea05ee0a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2aec80-81c0-4fa2-ba0f-cf8f89464ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21714372-9f12-486a-b2dc-9f08f5854bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c61616-5c56-45e3-b65c-71986cfe17fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5e2138-1383-472f-a043-70d967d0fe5c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5d4996-a979-4c53-bc8f-70e487bf970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ba8403-79bc-42e9-b3d1-6f9b10c8aad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ff64bf-f8f0-4f82-a83b-f5ac742147c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc79c46f-ec36-4a56-8cd1-49f2abcb0ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df06a99-7cdc-42c5-8f4d-664745dfe2c8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52527afe-2d02-4ffb-8042-85aede1a3c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cf085b-af99-4358-ab60-310c1d0e2183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f436e66f-35da-4bc2-a79a-90181e1652a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "80b3c8c4-a51c-4980-94db-e1515d4caf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897e4eb3-0761-48c8-ae32-8c11d3a989b4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cd7229-a1fc-49ff-b2f9-7079987fd22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b235338e-316c-431a-8409-41ff7db4d48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e5ecdc-5801-4a55-a1ca-8997f663ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7158b425-d8a5-4c0c-b722-8e8d2930d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b34b2ec-ea0d-473d-ad13-468920ddd948",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017bc8dc-234a-43bd-890e-c09130b256e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807c15c7-1093-4403-ba66-dce65a48d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7dc912-9c9c-4db8-be17-649b9f3771f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffa2f75-2a23-4bd4-b16e-6b54eea90761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5301d0b-1deb-493f-861f-92162c7e7609",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11cfc97-bdf9-4edf-a3d8-b27dcbd772b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d55abb2-9010-4988-9755-0008bfafab13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d7f32-0142-46a6-a227-03fb22d69776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc13e7a-2998-46e2-809e-d305df69a7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9591ad64-71ab-4282-bb5d-ec3149b4890f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199bdfd3-7fd7-4615-955e-33f1ecc83a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580bd4c9-eb60-4d07-b318-897c3b685488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04afa3f1-f180-4048-9eb1-606bb2056d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8280b911-f08f-4aca-a7cd-ab828b504bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80d64c5-717a-4970-b278-b744339d7a98",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676dc7a2-d9d3-4785-85f3-facaa94a1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3488a239-5310-4df9-a23e-6578a4c4916f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45726f03-30a1-46da-8c6f-7076636f9960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4025c292-2509-44fa-bdc8-f99f149e0602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642e91b5-81f8-4f39-b139-ba0079f35b3a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68bfd10-b8cb-4216-9287-6fd4d1170e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf68e18-72b5-486b-b50f-d5495de51c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa76b1df-8279-4f18-bc30-6a9266b766b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e315c38d-0073-4458-89b7-c686c83bad1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b4c37c-2380-4bae-9c0b-bdfa5141e496",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dda346-ef32-4f2c-b4a9-5759819c8d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5bc277-fa8d-445f-85cc-663de8bc9769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981664df-8763-4e6f-be6f-4e5318ae5765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "68648b85-2235-416b-964e-4486f869b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ad9f40-23c4-4485-84cb-a552b9d9cc95",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f6811-93f0-4b84-bedd-f50afdde5870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91fc49b-74d1-4ac6-be1f-7d8480d550d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501acefe-f1b1-47ca-a61a-b33646ed64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6dea0b-a257-46fb-9622-6c221f1e83a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59a6221-1a8b-4f9a-8b36-c6f700bcc537",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc87da7b-c63c-4fcb-a2af-613884980f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73feeff4-8b9d-411a-8a6b-2322acdff2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653bd9fe-92d7-48d4-97ac-5a99ae50225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9720f2-65c4-4843-b97d-3e43ce180cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158243c9-2de1-4c19-a339-8d85fdc92116",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607ce305-dcee-40dc-b1ee-27b7796c524c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c730bbb-c153-4803-b76e-775efed8dc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfc1c5c-7086-4724-ac4b-a7983080cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7c7651-0500-4244-89e2-26661bbfb6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513ee93e-300d-4bfe-903a-f1620b2096b6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8924ce-5ac7-49ba-a5a3-57c2c4025c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef88071-ee5d-432f-b4c6-890a2951d9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d24623-e41e-461c-bd3d-d0661dd91035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ee7931-8009-4104-8835-c40ec2cad533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87617ff3-b1b7-4b19-a12d-b62a8a3e77e4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8804e75-6604-4a6f-9320-373fdf1fc1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce2911b-8362-419e-9415-c7da5b0f39f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4162ca-c5db-4fce-9090-bc0ad6a8cf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b03b6a-746e-44da-8874-8629401d9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aadf88-54b6-4c8a-bfe7-3c0e175e8812",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4290f5-0b53-46a3-9744-449025c43b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335e5f13-cb69-4758-a422-e53a7cc8b5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6931bd6-da52-4244-bde6-360d46510eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a70560-4382-4cd6-9971-62b3375f4b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7300a-4c93-48d7-8c43-e6cd0e592cd3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09175cda-011b-4400-9d4b-8f6d73cae903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87da378-1969-4699-8809-5bf9b1d8bda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb8c55-e210-43a3-9959-ff8336c700a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a7356e-0a75-482a-892b-15465f951ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066bc210-027b-4780-8838-3d5653341c31",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5f59f1-d3af-4335-af8e-687b772a683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c8479f-710d-4b71-b8b3-469efc211ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c587c1bf-c5f1-47ee-9894-5e395506e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43a3179c-a7d5-4fcd-b609-2a790d8dab51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f4e400-c26c-4ac8-83d9-612192ae9dff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d5e66b-5d58-4823-833c-d503949585b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9423b9a2-ddee-4a51-acdb-1759c0e43435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4932ef7e-b94b-4ed3-90de-28c9a4990ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3621fdb-8cfa-4f5d-a3ce-d461dc464124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c53d2e-0cd4-449e-a2f3-9df55074ffdf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf9fd36-5a14-4d99-a7cf-50760770d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110de886-86c0-4db1-bdda-0a4ba9e2f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fd9718-07cd-4981-9aef-45f258d8cc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6293692-b5da-4658-99c3-a31462d2dcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cac105-2c2f-4bad-97e6-ddacdef8c0dc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534efe82-0055-4387-bcb5-5b5e59a8da47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b300dd1-f595-4b89-b998-d43699cb125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5415ba-2a8c-42b4-9c94-27c16e534d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33963aee-53d1-4841-965c-0605a25e215d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a9a905-84b4-40b3-b7b7-d88fa890185a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f5d608-4a99-4dec-90d3-af3b242ec65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b395d4-534f-4186-87c3-2c7a2758b01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd8f836-cfe1-4f65-a275-09cbe5611894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4adba1-bb69-440a-8e8b-b4c14486241f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d680d2b-3001-40e1-b319-a49226cfa43e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9043cb39-38fd-4779-9e68-8b30b7964963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf67fa0-d7cb-41c8-8e7b-52c350f086c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58515a46-9bae-48a6-9a14-6ffaa9c52163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df3001b-01e1-49f6-8235-77b4e251ddbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc345f53-8644-4ae4-90b3-c0f008d29999",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8036e6-941e-4620-af7f-48427c5209c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246deb81-8e5a-4d00-8849-8d66fee2b660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c998f77a-d514-474d-86d8-7ae1b6892332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a5de8b-aa93-4488-a0c3-46d066169fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d33c88-08b9-4dad-b859-349019b9508f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b915f972-cc9d-4c44-bf22-c74f4fad4d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b1c70-35d4-46af-85b1-3a50d7282322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e5880d-4235-4019-a915-4f4670527a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa77c9af-0998-4774-a35b-098c62d7ac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ea1c25-c42b-4e3e-86d2-62cd6d3015d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eaf9ec-5f13-4066-97c0-8b3887102c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca3e073-55e5-448d-8aef-0acd450e1f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778ddff2-49b4-48c7-95f5-115ae02305bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f4310b-2646-446d-9bcf-2b193b8e2dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474615e0-4738-4d77-b6d9-8d3a6f352c43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f0018a-4a0b-4e49-80e7-f3aad9d1145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01567e82-9331-4575-94d1-017c951ae760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee58fc-2ebf-4ba0-9b50-153945d05d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cac9c2f-34fc-4901-abb4-1fd2da0e1bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd75aa-3a28-47d1-b323-465ee21e113e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6086f95-789d-4180-b4ea-636feab8ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ec2e24-5dcd-4da8-be17-5d43fb1b4ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d489684b-0398-47a6-82dd-9bbe69f100a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd60f3a3-384a-43fe-8abc-91bda85e707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3447f73b-3414-49a5-ab1a-eff67c6ead70",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd498213-3d2f-4183-b247-3be07a0297f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2838daf2-9b51-4d5e-831d-ab0b3994f7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd79bb10-b7b8-4c33-9fa2-f57391bc0633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "272ec2b7-0d08-4c0e-ab5a-b918f03ad672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4058abb5-81a5-4f93-942e-793ba6a408a1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dfc726-2292-4dca-a384-923202926a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40891120-a134-4d9a-9a41-7b1f1dfbc6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5347285a-0cdc-446d-b933-7fcb2899a6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c7907c-31ee-4bab-9849-705d60376c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465fa67b-d359-4bab-b488-db15cde4a88c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ead9a4-a380-4dd6-8b74-2122640700fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e728ceb9-d55b-4f92-97f4-94cbf7edb6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edad52c-7065-4367-bb82-5d2b8379c7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6546c127-824f-4a66-8c60-6ab11fbe9498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e21777-2350-4e98-8d5b-d9daf1f1e2f0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965dac81-8aeb-474c-91cc-136c5fbcbf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1e96bc-a0f1-43d8-920f-28f7b2d9c2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9c87de-844b-4cc1-9145-85ce6737542d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37babea-92a0-43d2-bdc7-1f5b68d7705a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5e46f7-8e30-414f-ac18-7569be20aa7e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e18a81c-00a4-4186-897b-6247f3e5bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3dbfc2f-6ff9-4cb1-a30e-c5df2f7f210b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c92e3ed-3d21-41b0-a7b4-711f7e220858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e824ff68-244d-4ccf-8a59-bf50ece8e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c640510-4e87-4f89-9650-6da76306a82b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d4564-395a-4f76-bab3-3ee6d6e531a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6171a82-3656-4e7f-85b0-4d124f61aebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d285fa-77e1-4c81-8473-6935c9698cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e799df3-bad8-4791-8371-13977359676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f591e49d-0a39-4dec-8bee-489ca564db9e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed35ace-2e01-4188-b46c-cbfa848f1e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b66f03-099c-4eb4-ab18-f96470639fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8022131e-baec-4c5b-b6e8-01e008a6878d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61e491ae-7436-41d9-8f63-c15212c1fb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5057f521-11d6-4890-8be1-2746fd418153",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed3a077-a815-48f7-8e04-2fbd03dd5f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d249d1f-0db0-4fb4-a73c-6fb3cc0b4e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa62bc9-c658-4d9e-bf4c-0d1ffa75012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a58223-48e1-4ae0-b4ad-e61e85f423da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95abb6a-54bc-4f74-8660-3054f71a7078",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90de788c-df8b-4957-a9d7-40ffce544f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657910ee-78ec-44f5-a280-37c02daeeddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64917df7-18f3-4a19-b41d-93ef1d7bf3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47408973-0e11-40eb-843d-04a9c40fd44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4955daa4-2b40-44e0-983b-6a096432d774",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddef822-735d-4617-83e5-ebde2281d0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742ca0c0-e242-40c4-b27c-fd79c7411629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a85aff6-80ef-435c-8019-6bed38454612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e20e5f-8fc4-41c3-b3ac-724e72f2982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb5e47b-9239-4518-bc1d-878e9d1e1351",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa33a1a-7a44-41cf-9e52-00a239fd05fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00234eca-591c-460b-8914-52085655de95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7083b63-cf49-4699-8e20-2fd165009eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec85607-fa8c-457f-b455-412805a67148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312bebeb-20c8-4595-a4d2-afd8c3053a01",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9006f941-fcb6-46fd-a775-5b866a7724be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ace2ea-50be-4a1c-9b43-9c84e5205ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb60abf-5927-4773-92b7-b4b6c90aeb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cceb50e-0cea-4236-88ef-e14d83f33f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce380a0-88ba-4372-a38d-d9089193a63b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5cac38-0eca-4933-a8f6-142599a7dbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f114d696-26cb-484a-9256-7053760d2781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f52ffea-a7cb-4165-8496-aff7f9a93830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d9b5f1-2e8d-4af7-a930-b1c039e99bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9130b6be-30c5-44bd-93ee-58caeea976d0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6092d728-a0f6-4b29-984b-2188fccc75ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8731b7-376e-41b0-8aaa-cce523d8ff9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7fee5-4ba6-4a70-9fb5-ee487f071613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03836b69-9db5-4e89-8fe9-a529b0ddecec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6555f954-2e44-4602-84bb-de3c34381c86",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2752ca68-d921-424f-b039-446aa56c47b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd866c9-3586-408e-ab95-e1c5fd55c2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c957899-612b-4db9-ba1e-b70b4536d951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4724c33c-0f68-4cf0-824d-a8bdd4929e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6abaa4e-e102-44f3-8382-4a04cfe48c50",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457db3a0-fa5e-48a4-bbd5-92477b10c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31b365-6ac3-45f9-8f69-5615b5efca4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78627d8a-cbe5-4761-bb4d-f9c7c6a04cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf39b4f-9659-419b-9198-5c9fcaaf0489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676b935b-7432-400d-857f-160bcc6fa644",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e11f2c-3306-48dd-bff8-099c83abdf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5589f479-9aa9-44b2-800a-74b8818e8993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cf54a4-d2f6-40d0-a269-934c53ffb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b42a2028-b110-4835-a18c-fc0c03b6fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc234c3-deb0-4980-96ee-8af2fe7f7d0c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65754660-47ac-444c-a4ad-782fdc420b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb1ed9f-2f02-461b-8cb4-5d2c92b5baa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9a141-12b7-44f4-b815-532b6f750063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6230d461-a1c4-4b3c-9b5b-33106028bdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449fa48-f9de-4203-831d-37e411803ffb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c63428-07b0-4c0c-b173-21909d29019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2410b6-2fbc-4277-8a2a-7d7e4ae13ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0414d7-f157-4a51-a113-69fd24d22c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b394783b-0552-4fca-8990-efa28247edf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9dc6a5-edf8-427a-a535-0e063b1b0fe5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6d52ba-109b-47d1-a88e-e49de96434d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ce6d63-71b5-449d-a1b5-130ae881bc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13582aca-7287-4206-ba83-cb470ee11e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6cb9aa-e1f3-4628-b1b2-c61b2339f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6366d7-4ba7-4910-a49c-6af0e8c217d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea3c9c5-b533-4b13-9f0a-213c160bb8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03f3746-c906-4503-897d-0ed33251bc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df189155-c191-4aa6-9eba-9e5475c88d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a723ab-5f7c-4f8b-9024-e85dd8832c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5e5a9c-0f56-4b27-be34-15c3ec211725",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21542a6-e32a-460c-9727-007d3e9f3e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c748b0d-adc6-4b2b-8188-5083775bfd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d41d57b-2c3a-499c-b163-1e11c3351a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c95ee1-cd81-4004-9b1c-9e96b6c67dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba8a93-1165-4718-b50b-5f5de25c6f93",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d81d9b-3fff-4878-8258-28d0823dabac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bc0576-87e1-4e86-96a2-9fcddb09b8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a6bb2d-6b91-43d3-afe7-af9aec61cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13e9cebc-77b7-4c58-906c-ab3b20b69941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1a3f5e-32a9-40b3-9908-50228b7b9a13",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a23cb48-8b50-488d-8a6e-7095a984bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f05b50-6cdc-481f-9522-c949230990bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ef61df-07fe-4598-ad94-bdf6e072586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4b6ecb-72a4-41ad-8ef3-6d5f5a7d804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c97b18-8a2c-4e69-866c-82e313d69212",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf886a6-4462-4bfb-af53-d3ce358edd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95e1d13-ef7a-42a0-983f-4ca2ed424a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5bc336-440d-46c2-b6dc-9ebc6df68ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b84ee24-1dcf-43d3-b11d-515ccae120aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523b58bc-0b88-44a7-8475-ff65b85b937b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf385e15-b4e7-4c93-9c46-670e188425f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7ca285-991d-45c2-b7b9-7372c3be3fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4881ca-a930-4369-86a1-0093bf0fd91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69982cc4-3838-42a2-b6e2-bdd1d6d4a16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e66293-4a6f-41c3-88d1-36c3e0b2da9f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd53f16-c120-431e-8776-01378b9df43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc889f58-8d77-4060-9a5b-fe1a8ca18e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bdbb0b-7262-48a9-ad86-71e41cc29bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc96189a-9381-4ac9-991f-a09d386302ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da360be-5d61-47da-abe4-897449172336",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5900fe12-b8cd-457f-a4bd-dfce39c31de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22fd89b-cebd-460a-b328-92ab00eecf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9c8af-4c4c-495e-84a2-fb15f3782a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e429a27-1959-46ff-be1a-42e16c1f1e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16682fa-3ca8-4b41-aa39-d744c905171f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafb013b-4d94-4664-bec5-f0b9d0d183fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd8cbd9-76b5-4869-a206-2c0c42cec125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b5068e-b54f-47e9-8142-0fb64065ce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9fb8ab-bb09-451c-b1a8-65319257714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bde6b75-fe11-480a-a83d-529512283f61",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cca143c-6ab7-4546-bb98-d398fe05e407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf61d60-cfdf-465d-8ab2-d29e3b9e6670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33241b1b-6790-4aaf-8a8a-ec1f4414fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cc5d65-6fe3-4f4a-83c8-6bf8cccf1c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26f8c93-245a-4196-bbfc-747c5931b6a2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaa858f-86f3-452a-923b-95ed71b3053f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6131641e-7c5d-4627-8c75-9151b395f073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0e782d-f448-4a08-b9e9-47ac77062d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "573a9d63-1028-4241-a094-44c907e1e90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02fcaf1-9ee0-4a93-97e9-ca957095094b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b29a30-d50d-4bcc-ae1a-4d979d3207f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "60713698-7b57-4b71-9bf5-8b787f0e4ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae52e93-acbd-4e40-9dd4-68eb7685a4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0feb1b-70e6-4450-936d-96a01cbfac36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e66540ea-54f2-4fe6-80d8-02d4df6122f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16752d73-0b9c-493f-93bc-3d2b32a14c34",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc5e5f2-e76a-4905-ab2f-4a8159dedce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8c8f50f-38b2-4b2c-b1ab-694b06d3f5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5430cf6c-a638-4f9b-9e23-b8e1a367d177",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "00bd143c-1fbf-4d84-8b62-1932e07c4e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2b49e6-31ff-48dc-b5af-35c2e0ec7387",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9208a91d-181d-405e-9bd7-d906e21ddf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "128b0f8a-d4bf-4f14-b25e-289000a7e199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106a4b1a-8459-4f34-9bb9-22aa34c0491d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b84db524-03dd-409a-b3ee-02b5b7effd7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8db3799-8049-4d8b-9b25-98802622660d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d3b236a-b451-4dc8-9671-8fbd309c8ecb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "156e22c1-e93f-44ac-83bb-455e10434f15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf8ef709-8f02-4740-8a5f-6020209a8b5f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07aa4715-34ba-4745-88c1-6df0b39dd93d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b97980d-12e2-4ff8-b9ab-b347766c16b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd0bee85-81b9-447f-bafa-0b76f96fd91a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b5ad4a1-4534-4f31-85db-5c0c571bda63"
                }
              }
            ]
          },
          {
            "id": "e9219739-b98f-46c9-a20e-a9e2f2179296",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3138cd0f-1c45-4919-965a-60e82b99b2d8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9333f19-1f72-44a5-8d39-914085e0d3fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "676019c5-e048-41e7-b0c5-a4361805c3ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88431558-a55e-4b74-9eb0-36a020aebfad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e63d2846-a82d-4d57-af30-98b862c497e7"
                    }
                  }
                ]
              },
              {
                "id": "1c3c7c04-6d23-403e-93cb-4bc8b066a915",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf5b5d1-4bc5-4946-9a3c-4ad65c72752b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5384bb2-405a-4903-8fbb-3002a7e4202c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a2c8c67-2369-4b33-8dad-7b6dfaf7bdd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "540fb2ab-a123-45dc-8fff-842b69838aec"
                    }
                  }
                ]
              },
              {
                "id": "b9e7b563-ccdd-4e72-b325-a13a48c4445d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d9ce4f-74e0-4fc4-bc89-3771048ddb46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dd2c6bd-a5ad-47b0-9934-daad4cc49c4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51bcf318-f0c6-4e86-9fbc-4211f5cf8877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "32e78c31-764c-43ad-9811-06e8fbab500e"
                    }
                  }
                ]
              },
              {
                "id": "a18f72e9-eff6-449a-a663-356bb9b384b9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ccc68c5-3e68-4d74-b5ca-30b3f838c675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db164449-5f8e-42f2-9060-25068df6274e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e465a40-83e9-4e60-bf1d-760480a33674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e4ca3cf5-236b-4b73-a523-6796934900a9"
                    }
                  }
                ]
              },
              {
                "id": "d725ce43-829b-4e56-b6cd-62b47b49cff3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b9f77cf-c7a6-4ffa-a7ff-612024ed3e09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8399a89b-e414-4730-be66-46b62fcf6ebf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d7a1fbb-a846-4d07-8b8d-907fa80965c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4609261-0536-4163-9c5a-b3349a836f88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "165202fb-0c0d-444b-b716-13ddacf3b9b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84e6e93b-9be1-47a8-ba14-38c70560e252"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b6a9328-80c0-4c7b-87bc-f006d5e5784e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac874558-c54a-47b1-866b-8b676a1836a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "627abf13-c02a-4702-8e9c-32d6a3748b70",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5de59a29-8fa6-4809-aaf1-56ca033f2350"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fb4905c-3af5-48a0-9141-2d1822a22396",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4bf8c3d-2676-4424-8459-f9e927124d65"
            }
          }
        ]
      },
      {
        "id": "b4cf88e6-70a6-41c5-afbc-b52ad36be599",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ebe27aea-9a8e-4104-8303-936d43fe63a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea538f61-86e0-490c-ae72-36f68a6cee3d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1133085-e46c-4126-9c1b-0afaba05113b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261a416e-0b25-4352-aa83-eed5de99a99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cd4079-4661-4cae-862f-1bb9d4955063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30106552-39bf-4a99-baac-5051ead9df3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6b5b1b-269f-4322-85e8-920d4a573483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68414fe0-6f8d-45a3-b1c8-60c567ba2de9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34615f6-c9b4-43cd-8186-8abfc494d9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb3b271-073a-4679-aaa7-23db31d7f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63c2abd-75df-4208-9c72-85a677a6a9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "721fa006-33d5-44ee-8ead-d9a57b01b19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8da5db-c109-453b-8263-1488c97e12f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9697d8c0-8b52-47af-872f-53ac4c9511ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4064c9-f9be-4afc-877e-6a90b0209c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b31e1e-1618-48d8-bc75-90a302cc93c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad81797-fad0-4971-81c9-ebabc2fb8a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eae1e9a-58c2-4454-828a-685a8e64ae01",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25348fae-bba9-43f7-abd3-9032f60d570a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44bea57-c4c3-428e-9695-3f6401a16176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac90f41e-5801-47a8-a718-eeea2df95215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "172da559-0ff8-42f3-8d0b-26ecd475134b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2c5aec-7632-4d7f-9bc6-14a371f395f1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d4a5c2-d810-4cf0-a39c-6ed8163a163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3405164-1b8e-4a6f-b7af-5a68af4aec8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c591c1bc-14a9-49e1-bc40-5089c3fad374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9fb06f-9dd1-4b86-97a9-3cba80e9acfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00967e82-bf7d-4b47-8c35-a84357c090f9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9009d7d-b75a-4018-9bc8-63e78ecba24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a68c4ea-9a50-49dd-b34b-9f6d2e262704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9238e3e7-304c-4bdf-ba99-150296978d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adc04a78-f3c5-45a1-86f7-7bf3395fb400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84772696-07d1-4fb0-a0f8-b6cd7a807124",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4608d8-7544-4d73-a319-3f23d1e0ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3cd332-9d58-46ca-bdd4-1d3fe1a56f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94082d98-41f6-43d2-a3f3-7b9be38db396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "267526eb-91a0-4626-9c7a-f68661810ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc5c630-9893-41c3-a80b-5fe63a53fdcf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44078c4e-84cc-4b3f-95f4-022cef212bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca75e12-afaf-4849-9af6-bf8c7f4f5296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7ca41-2416-4abe-83aa-be50dc9c7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3873662-e2a3-4526-af7f-5427207a625a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e72602-4a09-4ae1-8308-46f4b98e349d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1ef557-4671-405d-aaa4-ae65974f672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d95c93d-0bb6-4542-9c48-a9d061389b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae0965a-f124-436f-8790-ac5d54938b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "150e624c-1d24-4459-ad92-4bd603230878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf4bf02-07f6-4b0e-99d4-382e38e82eae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886543bf-ab48-4683-a049-65082a26565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71110f96-03e8-42e0-b534-8e286c5505ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05ce48-df9d-4a81-b646-498e64634de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38bdfe46-dd9c-4b7f-9a55-0bae4e611f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d371fa-6949-4f9e-9467-a2d750f81404",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447ce9bd-5243-482e-8773-3205794476a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd89336-5c97-4ee4-86a5-d98b9e8bf7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5323016-3c56-42a7-8af0-00c14325001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "90883839-25cc-486e-9542-168bd66e08b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96854cf6-7ec0-4d1e-b7e6-d32fa74905aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6573a0a-6b57-4579-8366-158428eb9567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5805bc25-37e0-477a-a6e1-c6ef9a085e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf399c9-6196-430f-bc4d-c3378440a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2e677d-5d5c-46a1-b58e-bfd8efcd40f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdc35ed-6355-4b90-b712-386bd969d1f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab6c8b5-f4f2-420b-bb4e-122923c59532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6142f9-4b66-4e25-be76-c15cd142fd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ffebc4-a05f-491a-b6e7-5eec6c2c6b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6d445b-a0ca-4996-8139-54b79c843921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245da14d-c9b5-4359-8229-1c8af5001264",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709e7ace-e902-4fa5-8efe-5bab995f76db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c460bb83-2950-4dd0-85d2-4f6033c7adfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4dc9ff-8a1d-40f1-a8cd-b6dfb874cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccb1631-c1ce-461f-95a1-41a2fae31556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c837a79-b958-435a-a7ef-c3d2def581ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06429f5-9a1c-43db-8908-138b2a77a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d6276d-97ac-427f-8788-1b7f351d9eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65fe6fc-00a3-40d5-be1e-718492da133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8f9619-008b-45c8-8abb-291df83a194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb968355-70b5-4ac4-a233-ea253f5ce432",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4694c1-b11b-48e0-83d2-00855e252cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745fcbe6-dc97-41af-b514-3dbb0dc22fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f192e-7785-4c4f-8f8f-11463b994d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2427a72-dd9a-4653-9a4e-aa2c1480a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353484f7-4463-42c7-bfe7-fef870d62b28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10e90f9-3673-4d3d-a8b7-7213dc011107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b990d18f-f741-4cd7-93db-8353517aca5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7602bf-5d51-4983-9f49-1c79a77703b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddea4e2a-48e8-479c-9a75-afcf9b1a4ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d987c13-7b7a-4f05-968b-31c1c993848a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562a1374-3f2c-4021-9248-79829af13deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8036ae56-4053-481c-bb0d-31d9fd1a9cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6203bb-60a2-494f-b479-0cf3077f3999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a122ba7c-9475-4a5a-b65e-72975985e927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b72adf-ae0c-4361-82bf-072dff90404c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e72cd21-8f4a-4486-bccb-ef9e9a5866d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ce1fb8-ee99-4a3a-9ba7-14102af1a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24fb159-3957-4bd3-a8d0-04eb6fe588a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b25746c-4f6e-408d-b744-9b9ab7c5f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b28240-ae4a-4f74-9895-7181e53640b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18518819-50c6-4842-9600-49e3d832634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f20b1d-f3f1-499b-9280-2f324413d274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172662fd-02a0-46a6-9bd1-2bbb1b39d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc36a0f-6a57-46d7-92a5-fb55cd158268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9664759b-60c9-4047-89ea-488c5817ff17",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd776e6-617e-49cb-bda0-388ac0e125e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443ed005-95d9-415d-a33e-309b58cf9aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f153e0fd-5875-45b3-87a5-7af9faeec3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a655d8e-a8e3-4862-89bb-aba8064b9852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc698f6-9584-4c09-9df2-c57972533cfc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0101833f-2243-46ff-ae66-3cb57aef3045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45082321-a573-4526-bdcf-4f3ee4d86a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54868579-d0eb-47e3-940b-ae4caada5d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac761921-c3bd-4bde-b584-b0fd5f2c34cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67ef923-27fb-42c6-a5ea-cf9bfe3987cd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14255303-f7b9-42d7-8f97-72bc1bc5217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b0c903-7d10-4369-87f3-9cf4dd92ea11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce18747a-944e-4c10-8cbf-70f2e3cd829d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7980862-e3ea-4ea7-9ca8-c306f9bc20da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed92293d-7f75-41a8-8035-6094039edea4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881179fd-749d-4164-a704-f6310f937ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e57a54e-d725-4854-89dc-94f14e3e7fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc32dec0-df0b-474e-a418-abfe406f865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5527e3-0a42-4393-a580-f8100453ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04727329-6987-495b-b481-f22bd6b95de6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd330c8-c40e-4469-a1d9-f3a8a2ee2273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9878d9c7-2277-41e5-9a80-4b1164408eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b712dc9-8a50-4322-8dbb-61da4e0d3ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490e3598-6b8d-4d3e-90c9-b92e1a6453f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902dd304-ff8d-4ae7-a7c1-997360eb560b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f10704-0444-4e80-b42e-a1c5e9f2388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821d6df3-b190-4821-85e6-f913f9f4949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8c2e42-91b6-4bea-8fc6-c6c41024f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16a13c7-2306-498e-adad-13966031b4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295b3114-9195-4ab0-bb5c-01669ca80754",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb17a6d-10ec-472f-a0f2-1f1f30dc5197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b007435b-ca89-429b-bcfd-a6ed5898ea42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b1c99-735d-44ad-a768-5f70b8061703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f617d576-ea67-4013-b6fc-85cb35669cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34561242-1181-4ad4-941e-cf2718f487c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4dcafb-193e-49d4-84af-9f86ae5ea609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0040af-cb41-4340-a8a9-d726b56315f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218616db-0e4a-4329-8040-fdb520bc070f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f00a60-f96b-4e9f-86de-9af3ec6057c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4480dd7-d3da-477c-bbd4-ec29f4cf6feb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11044343-ea51-4c6b-8f04-cb53d95d1573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a66d6fc-8615-47c9-8b26-9685124a9c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d970c482-6f4e-4575-8c30-a3b6d392f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95499e22-33d9-451a-b863-063822c8764b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853f3cdc-c4f9-45db-b643-2ef3a864a2d4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebbc783-d964-4867-9b1b-80cac79b9508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7d30b1-dbe7-4c1d-a64d-c6fc13400cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930891d4-e98d-4ce7-9785-40d903e3ccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da1d0eab-3fcb-4c3b-813c-e71d2bba7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55e6ba-95fe-4906-abee-c04160bed68d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c4826-7fca-4964-97c3-7d6e1fffd37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a984ecb-cc82-4c09-a720-be1e94b545ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47a55a1-d777-450d-b721-8184884451e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c944b49e-de7f-4730-8503-24db5f62e7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914aac6f-ecd1-4aa6-8a89-852a34d6434d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952f72c5-b6cb-4afa-9a1e-a5f387e445d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61e6120-9053-472a-810e-219dc31776c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672874c6-09c1-4bad-82a0-0b3ba559eb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b40610-ba21-4c2a-bf62-691d3ba8ea99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d17de375-dbd6-4e21-9290-efe6cb1dd6f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ebc64a7-11a4-43ca-8ef9-f47f1a8d3b55",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ce9ae-8cb1-48aa-a1c6-1615370435c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fb40d6-d8f5-4c4e-a0d3-8a1be44195c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a20a8d-d4c1-471f-86fa-76c1c3082cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d6a44b8-d6da-41eb-87ee-4e6247f3b7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02acee28-2dde-4cc6-b591-0c37672006d7",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd9371-2fea-4663-ae10-323df19a0507",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c1daa6cf-3ee6-4587-8466-c9fdac4acb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd0f3ba-3936-42e4-8bc4-84fb86a5ec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c0a9580-0d96-4000-b731-afe39bb1388e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "644819ad-08b5-41d6-852b-a077430e83df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02ac16b2-f009-4f74-a4b6-9df5efd72662"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "478af937-c4ec-460a-bbd6-3532dcd0a684",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ec5ef59-72c8-4733-bab0-906b1cbba59f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e084e539-da99-4771-9738-d0d8b2ddc29c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66c1f125-2676-4d81-a7a9-ff79428325bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1113f12-5c14-4528-92f1-1c703556d998",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "553828ad-c33d-4000-9138-dc8d45213c63"
            }
          }
        ]
      },
      {
        "id": "a3ac780a-a989-4b79-9ff6-04e2aa2a675a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "364709a7-e78d-4fef-82e6-5d70349c9249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "355b6e07-1bef-4af5-a477-f369d5ed16b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "152b1b62-c41a-4553-b174-7cb5f2fce27e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a72a236-ea39-436e-be97-253da51b18a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3deb4d-0794-4c2d-84b9-a4763f92976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632581d2-6953-47de-aac5-da9e1218414c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868ddaf-b24f-4278-8328-220c39b21964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0df35fa-4f5c-4af5-87fb-19867389423b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dd8191-debe-48c1-82ad-91a9baa7d553",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611fcbe1-9f7d-4a81-9189-fdddef395c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e533cce4-1885-4a1d-bb1e-1aededfc926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ca04b5-b359-46ea-ade6-033818451c2b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9561c65-44e2-4c93-aabe-8f2d2dc69a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf44678-e9fe-4bea-9b50-228de1d45504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426009c1-1355-471f-a007-66de57131141",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3f366f-8704-4ece-9f29-bc21274ccc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440f06d5-4d66-432d-b044-5932cd46d603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4518d0ee-5d3a-4ec5-8e81-a78bba441ac9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acff25f2-3e57-453a-a61a-c3d2b8dc937e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6157e8bb-3f22-44b0-b890-16ae3068fc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7469d56-53bf-4955-abf1-3b922890779e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb4fdb0-ad88-44b1-bae8-7e1e29e21096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a31b1a-9b08-4e61-b830-da854e29ae71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bb8d85-214c-44c3-8f81-13e09547c8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f31702-99d8-4689-af85-77f58e6948bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd41d652-a1f2-4852-8906-2b68687ac9e2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c766f8e8-c2ae-4239-b3f9-6d9d07cdf5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b4f383-ab17-4f85-9e98-5c4949174019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6ad748-b741-4a14-9346-e8de380e3c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73788d27-f87a-44cf-9f1e-cb0372fec604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e83ef2-7d70-4d42-bd5e-5bc0e558bd48",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f4a8b0-dc7a-4757-b938-f4dd3507d587",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccf72221-e7cf-4b5c-8174-508355bfe600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02438e6b-42dc-4d20-a738-240a675358c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fba62d-32dd-4f1a-a074-71e316b45269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fe75ce-9dc5-4391-9a47-b4328bc403b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c9a942-30ad-4b13-8a60-a6259cf61f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28054357-2b9e-4199-9a3a-27dba448a89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe333247-4697-4be2-8adb-306db9b4d2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0280a518-147e-4f31-bc7b-4cd39f2a34b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9cbbb2-e25a-420e-a53e-d0a86446249a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32342b64-559a-488e-b8cb-330573597d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d3966a-ba5a-48ee-858b-20b092a65f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ecf82d-cc2d-45f7-a085-6c31dd389859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898de31e-d2b4-4b11-bde1-c549aabdb90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f68a2d-e31e-4532-aac2-42219010d35a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a510c790-74e9-4ab8-aed6-ef08ee96e73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9c226c-3a4a-46e3-9f9d-2359170089e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ab3e78-b3f9-4625-866a-01c1f97bdaa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c50909-d483-4c78-bbde-2dcb063a87c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5975e49a-d6d1-4faa-8851-278762ce5a46",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1624ce7-3d28-4852-aac2-718596572009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec12e1f5-cc72-4192-916f-fd4a18520f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932569cf-01fa-4a97-971e-5fa4be6d81c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbc2fa6-7d15-4ced-8b8e-db5a903f3d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b384bc-9ea4-42e9-b69f-5b8781402efb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b036aa6-1ca5-437c-b664-3da9370d150e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ce6b61-37fe-4c93-9303-fe46967f543a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29971930-d88c-4c32-8873-53ba7764d33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8a33e4-b90b-48d5-82da-31f0926a6dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eca7bb-fd39-4690-932a-cfb12165cc96",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b0e5af-3538-4200-b534-64bf3839c699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e531a1f9-d2a1-4cd2-be98-56c8ce5a3a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be30d6e-5035-4f69-a869-11b569d9c04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9441091f-eddc-435d-a4f7-a13d4d9330eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f2a245-5f0b-4f8e-919c-388deeda3611",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9021f572-2e84-4d65-8d5a-82b52fcfe991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a29d959-ad6a-4124-a2f6-d94b015f28f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070f3d30-7d42-4b70-803f-588342c862e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d64b78-7866-4dfc-8e22-105a6cb93915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f9533f-f0b1-4869-ab1d-e45410b120f8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10cd346-f793-44ed-be67-01c2de41392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d0be17-5cdc-403f-91fe-37e5ca3d5e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae019a-e2a1-400e-8ebc-e7b4d7a32a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec92f4c-3986-43a1-ac90-fbf44c88eb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d7ff62-75de-4395-aba9-71709adb6c2a",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f6bb9f-15a1-42bd-bcb7-f3e377670fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c649fd-427c-47f7-ac38-837de08d0195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c81c0bf-4c9f-45cb-92f2-7bfddd08bbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18a42ac-249f-4cbb-ac76-94a4f2b6d5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdfcd6f-b079-4c54-92a9-98617ffc262c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d5c096-4764-44d4-a31a-6fe4afe7af1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfbf6a0-6b84-4845-af6d-926d2f2d37a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d8fa66-5e54-429c-be79-8a6468a3212f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed58db48-7680-4427-9921-bac401845f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bfb2b6-2268-4fa6-be0b-d70fa0ed6dd5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801235d4-634e-4cd6-b3f2-b3afea0197ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ffb10c-9ef5-4ab0-8a65-a23e416da7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a188be4b-5f96-4f85-99f7-0132cbc5a4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280a5987-de8e-4263-ac0f-dbffd0944079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be475f5-3320-41d1-985e-71a1d3d1d930",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91747ddb-dd8c-4b8c-bbf8-9ced344cb9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19e123a-05fd-4fa3-b898-9f27ccb4757c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6fce43-c720-4f42-a5db-298e0d3717df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9476c9-2ded-4bb4-a7d6-ec80036485c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015aae04-0169-41a0-9cad-b9f60ad269e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d19e14-a14e-42b4-91fd-bcee2c2e97ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df97ee85-191a-4dda-a2cb-388ac1c0875e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355414ef-9fef-4e82-be4b-9fca27d802bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9493e7-12c7-4155-8225-3b7b160f615c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944047c8-e7dc-4883-bad4-40a59b992a72",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b23d91-243f-4c2f-84ad-1cf2a93a5e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518a6d98-34a7-45bc-beb8-1ae07ed07bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904705c5-f447-4da2-ab7b-1f4f7b518862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c23627-0805-421e-8c13-d06aade3ec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fbf1a1-3e7e-4657-ac7e-fa60de97bce3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c75ed3c-b573-4645-9260-212264f0fe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd67347-e549-41e5-a725-377b2aebe928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a78132-a6dc-4282-b743-1143fb7a412d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed089b4-cee4-4961-893e-4c95e0e27b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3791c34-d709-4df0-84f9-f8c571763aaf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ceb5ba-068e-4481-a3c4-79ec205561e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e82bb4-664c-4728-8d7a-62215a430199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c223fe2d-ec2a-45c3-8834-122d8a01af2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34878ce1-576b-4331-913c-151ae1a310c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc0d2b-d380-486a-ba7c-b89411bb43cb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec402d81-02a6-4e6e-9890-645ba0e79670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c71be81d-52e2-4f95-b5e5-97627ba01a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddda2afa-c35e-420d-bba0-072f031e787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822b0259-0985-489b-80d4-d5374fead148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a8f53b-946b-43f6-ae0b-3be3b6d7e06c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8ebb63-031a-4b8b-a144-fefd3e4dd452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8bd4a7-355f-4745-b674-7cb44bbcc446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fc307a-2ea9-4bf2-8692-981b8e7ba77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ba49fa-e605-4818-8025-4627a3d94d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e59ba0-40ed-458d-b932-7e136c892cac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9cd297-d455-41b8-ae55-1355e00dbbd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7cb0bb2-c42f-4c58-90f7-af125f2437ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb2a892-08b9-4e29-a436-d80207effc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ef23e7-c8dd-4666-bf72-aa870703fbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51810cad-9d46-4a46-acd9-6f7dd93e7a6d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a638b84-ca1a-4743-a070-dc6e596e4e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ceadb71-0813-4bb4-a04f-d6474eceeddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c821e9b2-a0a2-467f-beb5-b30454d96673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91530790-4e96-413a-aad4-8fac27ee60aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae6558f-7ce9-4665-b1a2-115b9f97758d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffd8c34-642c-4822-8556-7f93860017ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8882c068-b92a-4690-b6a4-b141ff9c05f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b7045d-a3d0-4bb0-9ae0-61fd1ca51d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a36619-b346-44a6-98fb-b0910716704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3b4873-df3d-4ded-8ad7-932f93a047e8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eebf79f-7d09-4a87-a65a-a9fd37461c42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158b19b4-95ea-429c-974d-7c57784d141c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37142b9-8197-4c80-b2f4-602ed9c755a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a13307e-c857-43cb-aeed-922af61a1566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89489559-62d8-4cf4-af72-5c440cc93870",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663b6e1-cddf-47bc-8f75-24f9242d20f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b5fe25-e1ee-40b0-bbe5-81c8cf91c85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c68c8f5-22d1-4f8c-9240-4204e564df4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c49c600-9c4a-4a40-9874-7564654df257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b189f227-7452-4f29-b290-6176f32c8dfc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634db1e3-8bed-4d9e-afa1-e34e74c3578b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04326718-1c8d-4bc0-b5e2-4229e061892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d887e1fd-be3d-415e-9514-aaf4d524ebfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9159ab9d-4cdc-4525-afcf-0e3289655c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db63296-075c-468a-9034-0530b0c23802",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2859c00b-9ee8-41dc-a1fc-fd74994d22a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5822ab-60ac-4de3-b2d5-27b1b2c913ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7b4317-27b2-4370-bd55-ba06982e9dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaa775d-22b5-46a1-9d97-318c3ba6db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8357bd94-9dce-47be-b386-3f51765360bd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0aff85-29f2-454d-9b0c-d2337afec68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16385f83-16d4-4593-bcf3-49170e00a18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d5ab1-b1cf-412f-ac89-77a85f4da1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9c08d7-a6cb-4377-92ab-7e036a469fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56ef263-88d2-4bb9-9d54-b7436ab15d55",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c36fe57-ec4b-4d8b-8a94-410982a94af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc166b15-c45b-4572-a019-e2b7db194731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa37f82f-ce6a-4255-b8d8-996b15ad8612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb847e9d-6498-49dd-8d94-3e571772d0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286ed10e-3504-4554-9063-4acaf4c7167c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ab84c-1438-4aba-b031-db9a25db445f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c11c34-be2e-445c-92e7-f9cf47f74874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ccde5d-1f93-4fbe-9043-ada1b6ea16f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b022f17-6bcf-457a-af2a-ae0df954fa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de06684-756f-4b85-915a-f499717b6178",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daba7b00-2eb5-4722-8ebb-114bbff82de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6737a766-e2d1-4a98-93d5-13891d89f266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf1ccca-31f3-4d68-80ef-790388b7000c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886558c0-aa66-4256-9f19-210bd974167b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2874ea74-6d09-4ca8-a599-aaa02705cce7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d191d6af-c072-4ec8-8b3b-9c6f05b01324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af90cf44-3d34-4b95-aa3b-84c8352ce6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fb29da-798f-4cc6-80e2-4bb4290711c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2100ab43-c03d-445b-ae2c-f933763a9b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7782f68d-991e-4ba0-a2b7-753ed933c858",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7040c4-dafd-465a-ade2-a0ba28cce648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdf65a6-b368-4c46-be0e-3c596a133bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f1e5ed-8e93-4107-9a18-68744d804f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd49a84-5834-44fc-87da-53e33a4ec662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02be8f2-31e2-464a-9eaa-e225d4ade673",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2389d8-6319-4fe4-b222-41591131cc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae05c1de-72d3-43e5-a97e-a1a524f28cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e90aa7-aaa6-49e3-b1d7-f73f30aaeabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b070c59-3b6a-4d22-be5c-042474515638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317faeab-d797-4ddb-99ef-8f1426ccaadf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f8dfe3-bc3d-4d42-86ce-15fac20d2c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7efe05-2035-45bb-b5d4-0334adef5529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf664b5e-89f7-4caa-aab0-4bb32134e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b4ea6f-db73-4e7f-a256-0657fa3ed41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399a14b-9107-4bf5-9643-a3e7775601ca",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524f39af-2661-4b70-aa68-0e04e95877da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d28129-089a-47c8-87d6-baac46eff415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0abe7d1-8825-49ac-8586-1bad687cc26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eafd65d-8d46-47bb-b991-23fc644516c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db573f7-52fb-45ef-a199-d9039a4328c0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e3c448-4bf8-4479-8696-14bc1903741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dffeb0-103b-4c6e-b5ec-0b3a0fde611d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e4966f-8c37-4733-92b1-dfd3d0ae3c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb71bca1-6754-4c47-b870-172e4ee288a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a666b00e-98f6-4137-8420-434ee96e003d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8768d5e-849f-4c3a-8172-80487934c4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bb307d-af8b-4fae-9d86-2806bec55d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778b4206-6483-42ad-99b7-6241f948476d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e89357-6415-42e7-bda3-f62fb72ec7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc2143c-0d0e-4207-b8f7-b94c8db3c542",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f100aa-2802-4a10-8aa7-23878aab8e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba50dfc-5cf9-4da3-be5e-5cea848c8394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd79052e-ed0e-43d3-9b31-f8be587beb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011f9591-31fa-4baa-ae2f-d1dc8c3a0e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098191ae-6b92-440b-a570-686ad6cf0140",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e5535d-f7ff-4652-a7cd-f661e18fbd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc133b76-f245-483e-9d9e-5275a4292eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147fff70-6724-4b53-8cac-1e3104164683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a4a882-b455-4656-abdb-620dc5b823d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c570d8f2-336e-413f-8176-b57e3f380322",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d75dce9-3680-406d-94fe-2ac563848da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f606bab8-3218-45d1-b6d9-4e063f1ff00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0422309c-286f-4c65-b156-1b264670ffdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b663948d-9c2e-4751-9c24-e3bd3ce9ecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad44735-789b-4502-9ba3-1745534c1077",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37adef79-3b0e-4fd7-b50f-3d01f24315c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdb9b2e-bb93-4601-aaa7-9b9dbd997854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbf14af-f339-4625-8cc9-a7dcacc537ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb5458a-cd2f-457a-b404-eeb4bdca2f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ddac1b-3308-4d53-89af-29855a2b5b82",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd14e6b-3c48-4f7f-9a49-fd1408d86bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7924dbbd-3210-45a2-86e2-1fcd64f2081b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc919607-b02f-48d2-b6fe-4c465aa2bb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d736948-9d40-43ad-97d2-07c573b0aa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3663d78-0634-4cb0-a9a9-0b41acbd3d4f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ca4b6b-e7f4-46e2-aa56-29efb37a10c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba77ec3-afa0-4ff2-aad9-2a477a59f368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27643a8-086a-421d-9c0e-bdae55d9e93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525d464f-0430-4df5-965d-bdd6ff3d0032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd3fce5-7c5a-4bb1-8614-17f5ac4e3181",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3bab88-025e-4d93-9287-c8692f946813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119ca8e-3fdf-48ee-bf0c-3460c6e70bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fa52c3-a517-4540-be47-a9e0700d782f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f60c20-04d7-412c-b09f-e18e13d16e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6384d1-2160-434a-bebd-f984e49e2718",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058d8e0a-ce08-4d15-b69d-89cea7221e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187402f6-ec8b-4029-8000-4a54d6e93c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f59fa-06dd-4903-9f7a-389f70fb1a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a820f825-419d-4409-9da1-88ce2369480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de32262-0c37-472e-947f-c84225dbcd2f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ce0fe-e1bc-4c46-b799-50117cb7cd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef60097-d05c-4a4e-ad22-a9246fe70050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214be3cd-f024-4a62-ba40-13b87147ee0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ffc67b-73fb-4d1e-ad31-b6319749700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1731a24-890b-4b53-97d6-7abb9cf9cadb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7f4eeb-c547-44cc-83b5-4d522067220d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d07081a-afc5-46df-a743-42630cb40661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a283ab4-240c-46aa-873d-eae6520c16a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6a21bd-9baa-4df5-9203-5e86252bd18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9193866d-f30d-4110-ba4e-de83f7cd43ed",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b657cf-e8f6-4115-930b-ed2df0b81bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c92cb7b-175f-45e8-a4fe-87ab19478b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5018eca-44de-4330-a3aa-062bc2fec78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2118eb6-52b6-4c77-b25a-4c0e8185d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c9ae88-8dbc-4cb5-842c-d5694a89f893",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483e4c04-529c-43eb-85c4-fbd485671402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28375b78-eda3-4fc8-9336-a49c619bfa3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3f0cb-2a91-4a37-97d1-68cd4fd5a0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389db948-92b1-43a6-8263-d9fa38579dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036a5bd2-6e71-4c63-91d4-b21e79fbcc8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56064e0-6737-4094-b4b4-5ebefdb2b813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bd4c4e-caf9-4758-a724-7ff16728970b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e5a61-a996-4b98-8e06-24de69b3bbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3743395a-5fed-4967-9751-6a26a7b6c46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1fe6f1-330a-485d-bc96-609c284fc617",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feefd49-87b3-47d2-843f-fc64733ffe47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3284ffc2-ff27-45e8-9f60-7126a451278c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a83e91-7f39-4172-8bbc-25309f4e9d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5143b7d4-35f5-4a1f-b48c-21189996ce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e707e0-ca1c-4a05-9aed-0c3a38f10155",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81d6838-86c7-4344-97d8-6ed7ea0dedfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af059c3b-7490-4ab9-91e1-229d4852fcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7848ba0c-dbb4-4210-8892-b1a130c67fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e19349b-2fc5-4fcd-9050-c9aa38cc0b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa09405-26e7-415f-9b17-a4f3e4098647",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2047b267-2914-4650-a68d-935dcb856648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34481c85-041f-4698-af5a-a959874375b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd19a97-f782-4ac0-bf01-5de76461323a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d6b876-abe9-4d40-bc07-821c28e06e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37c2b01-9634-489e-972e-2260cf7ca3ca",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2378f8-90f2-4f10-84b9-61cda5f0dc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b4435a-63a6-4c40-b96e-8bfc406104f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12885c60-4a76-4be1-aaf6-3a2a8bdd4bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a54ef5-732e-4035-b3ab-cec1baa9a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d49dba-4107-47de-a858-387dce8a1035",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf36991-cde8-4aee-8c62-0ded97edea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6244bce-368a-4c52-af1d-827e06189e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9002c275-0985-4918-a8ba-054a213e6077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf19c1f6-bb7e-4504-beb5-0cee228bdbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba683896-73ef-41f2-b419-e5c61fd545d0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2804672b-f3de-4770-8fc4-51c5a99a541a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f94b4-c448-41f3-9a17-076db8ef5dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17212651-ff3e-4f8e-9313-29c3b5273183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3766e3f0-77cf-4e21-8723-348dac9896e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb3ec4b-c698-497a-a61b-733e826191f2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d177f3-5f5b-4bc7-b958-22ac6e7c826f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25875b41-0e31-4e14-bbf8-0eb1876ab783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd320792-296e-49a8-8669-53db8582ab92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50d6c31-e707-40ca-8f98-0ba889491f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5591fd5-dc57-46a9-9457-63b2ac0ba676",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabe26b5-2e11-447f-be1e-82609185a576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e06e18d-6164-4925-84ff-37c5b794d037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3de14-7688-4d48-b131-abaa5c2b7aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c094c52d-2fe1-4008-82d7-03f5f947522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c80178-3d22-42a3-aa43-aab9766c4fb8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431cd9e-e193-490e-beb1-125d1354de08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214e4b77-f127-4a76-bea3-0d3cd521e7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c5656-8ab3-4341-9e55-0920d2618980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa43489-8098-4e33-8eee-88ea94317887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67265fb6-8e28-4608-9769-aee8a15fbff4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd8d2d-a406-4883-af0f-e9528a545ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511c6305-a753-4457-9ec7-1a124d9b8ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3025d917-8cca-48c5-be0c-b0beb6e210b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d1906c-fafb-4f47-8533-098e3a2082c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa15d46-bdaf-45dc-8222-14263915a3f1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6d48e9-0a90-41af-8a81-ac5551b0e30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0e20f9-6b81-429a-b94a-c0d0649ad186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2211e871-6222-43f9-978d-810435f0a124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568cff14-d219-4ea9-be9a-a7faea967e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1581c05-08f5-4a0f-850c-390aaa6a379e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b084153-530f-4391-a13b-e635b7c101c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d8463c-bd96-4eb4-b8b3-80d54c34271c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7fd78a-bf0d-498a-8491-306c7c81d349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45ce719-9e9b-47b9-b3fc-8576fb5de70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3c059d-11b1-4f10-9390-dbc0c2b4585f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f400d2c7-ea36-4b31-92ab-8c17b218223b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96fd0304-92b6-4cce-bfd4-7bef922baf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e50320-1442-470c-88a8-ccc5fc4b1bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d519142d-50e2-4fbc-8f44-1bdc9b8052c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf54554b-1ecf-4faf-9ff5-31bbc6f86d2d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb97c8c-26bf-4ae2-81c6-090db9c44b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a127d454-0b1f-437d-aba5-102ad93a9755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18d68b7-4c39-41a6-b9d5-94ac9faa46c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0092d1ee-f675-42d3-99fd-d3e77fa4c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8740637-4f78-49fb-9105-55c94b93d1ea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc1f7d6-c638-412e-b62f-929bcb482fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0098c746-17c5-4762-a16f-a3494f682513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fbfaa9-d540-4a71-af1b-f77abb6b67eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31c3ad1-de3b-43d3-a3e5-fc1091085fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c6f6f-afcc-4867-9095-dd7f5ff60e7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e789674-0d19-4dd7-940c-a3afbe5bc12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d56b28b-75b6-4b2e-a8bc-f5665258aa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1737c71d-b119-483c-bc3f-9995dae5818e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40f46fa-6236-4296-a36b-400fd6028dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479976ed-1a7e-45cd-a562-2dddd99d0940",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8300162-98b7-4824-830f-ff83346b91b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0fcc8c-98ff-4e28-a2a0-b88a1e0fd9a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f5a2e6-3dca-40e2-b7a3-207645d005b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68d6869-fb89-459d-95df-c7e985de3fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a5d963-ac22-41ec-bcc6-e5d1d9157f6c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1f6ff7-6adf-41ef-876d-713d965c24b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1c93c2e-a240-4349-a7b1-57be09c11831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e66420-15c4-4405-bed1-b7aaf754ccdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e2da0c-196e-44e0-801e-27dea7b10879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8ce53-7747-4f3a-948f-2ae2bc492ba6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335d811a-d559-418a-a1fa-6a0ec877f71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c20ebc-6bba-4b48-8280-128083e267fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be787a-6ccd-4ba1-a95b-b53ace9d2178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3943a3-3258-4905-bbc9-94449932ab37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e45608-f477-4a08-9099-2c41c4cad6d5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38455a28-df38-470f-bbee-d84f813e1f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f518a3e9-723c-4dab-a483-9866957d2574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92951a2-21d0-4c1d-a418-633c7100077e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bad0474-f89b-4ea2-8a2d-eca338098906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b710d9a-273f-4b57-a67e-aee26b3c1e6e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a399a7-5b8b-414c-a3b2-b75a6bab8d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52876bf4-87f8-4455-8771-4e26d2598287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdff1ac5-0823-4a73-a03a-e2825b52a259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4fba2b-0091-4096-ac71-f4859d199976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5a97b-5786-4439-997f-779beea8843f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea20748-93ba-444c-bbeb-1ecaccc23770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9a58f6-1d28-42db-9446-1d27eb8e14a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91510a9-b0cd-492c-be42-bbc2110688a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f5521f-7ba8-4e1f-8821-f50452791cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280afd37-f768-4a35-89b0-058e96e10f3e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47793d1e-a61e-4141-a2fd-1b530b928296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e88175-feac-4b56-96a2-c9bf64618216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3632dd-9cf1-4544-b310-d4887d03344c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f880eb-ebfa-4686-b6d3-6b82fea2fa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a3029e-f4f8-451b-b2e2-7444f76544c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0155494e-1bb0-454f-b3e8-0dcb2c6b3a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e429992f-0a19-48e5-be3a-660639ab8b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7ee6de-c72c-4083-9614-353c7249976d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc81750-26b8-4d02-a2db-5d1346a6623e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e98c42-ad03-4a8e-9664-d85d18c42b9e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aba983e-5d3b-4272-b616-909b5add296e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e63f319a-f8b5-4766-b411-64a6c5a5458a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e3d9f5-571b-409c-a098-90d30dc101c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92bef1c-a01d-4676-8628-23aefe6045b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00420356-c5c1-4e16-8357-479eda4ebeb6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58de51a-e8d1-4538-a240-7bcbff0c9f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf53c1b-672e-4015-b10c-cbf7191e164f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aec0355-95e3-4bac-a283-a57560e47318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9af7b0d-94c4-45ee-a94e-c32e14b834cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c92ab9b-4503-4e53-8329-142b75a48642",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba4cef-5997-4ba4-9428-e0e4943a5d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2933c3-a8ae-4ac1-9359-99d759198726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9204ce2-66cb-4d48-a5cd-5258431af5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd39571-9542-4449-8521-29fcdb102975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f518b2-a17b-4cd3-9a02-c80d0b1d6ef4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9081a2e4-3745-4434-96b8-da19050d6cb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1ac25e-6f4a-461c-8a34-6978adf3443f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9698a86-7f05-46b6-857a-884d41de332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0531cda0-4223-4fef-b7c0-0d213adbd793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a6018-de45-420b-ab02-0c8a85f3689f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4f7c4-a713-4b39-ae08-79684dc254f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba0a92f-3a06-4d87-8ed2-1c702d24cbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afec1a3-f1e9-4c7f-af51-e3f1e1164cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5523bb-5f3f-4826-94c7-fc9ebf134698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b811fe-b918-4288-8c3f-1013eb9bd95e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7dfbc3-75e3-44e0-a012-9ed9a9c4a0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977589d0-4e8b-4158-8f17-46d29251ff7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336971b9-2bfd-4493-adb9-3f145ff00e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa4f5f7-1916-4c34-bd3d-c9059343938d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aed8c5-d3ae-43c0-b1d7-430ab008214e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7814732d-43bf-4dda-b11d-dc8faa9270a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12dce40-19ac-421e-a54e-16b315e38636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c8e4cd-f33c-4450-aedd-18c29b404e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b8b004-f595-444b-9e48-5a3faba7611f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6927e098-f6d5-4336-9ad2-1b06782fe7cc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbd3bd8-e7df-4162-b386-46650772aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02d37e3-f61b-481b-8e06-29a050fad72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbf92cc-e8e9-477b-8f3a-644bdb30935c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2c81ee-dc01-48bc-92ee-1ff35d3f7c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd08aa3-90df-4052-a257-d647cababbfd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffddad2-5e42-40be-9057-0c4f34ba0978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd59926c-0e18-4598-b486-ba032b2d2305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4ffb51-0e59-43ba-a4ee-6b8e053a0e71",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e002ef84-0a92-41be-b53b-d19b8d5dba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c74ca-69ac-435b-869d-91577db6aed2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309cd12b-589d-4959-99ef-d3b89210dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41aa063-6019-4322-a426-a61c8b57b67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85300e2-eb4f-4283-929d-325f714cc29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea82b44f-7ff1-443a-8783-d8bb94aab2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f562a6-301e-4b87-a9cb-d4faeda6fa32",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558eb46-dda7-4bed-b18d-176f663a8569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7420de-26ad-4684-9291-68d981ba9197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8a7b37-d70b-4643-a790-057fbc39ac1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed1b5c3-d1dd-44ec-9b93-1a4b73543e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e48b6cb-1dc8-4cb1-94de-f39e92179317",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadc02ee-a31e-4a5c-8cd1-fdd159dbfd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d4cf86-c6ec-4952-a158-08707c0f0883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851489c9-773c-450e-8abb-b059d1809b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c682ac46-4f1f-4df1-87f7-ed811f87cbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48339a19-7fb2-4060-b8e1-79fb61639c25",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148a7fca-dfa5-410a-bfd7-e17db0726411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bba4d5-2358-4b1c-bd0e-8140aff3c507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc79f0e4-8cb7-4750-8400-b369e3498904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d2ecef-90e3-4802-aa18-ef67f1ebea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda472c8-4616-481b-b530-cb303632f270",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ee0bbc-a91a-41c7-8d02-490ed3e2866c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2bbf22d-be24-4545-a111-a200754ca887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad95b6-80e8-4ce7-bb3c-9e59b5ce8697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2075b6c0-a68c-4b30-8b11-d30567777e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73af2e3b-6451-4509-b27c-dbaf0dbf893b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6704a760-6f64-4161-8f78-93483fbe76fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc573438-13e8-4326-bd4f-b1b1998de170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f4e804-92d8-4252-9a79-980a10d4bda4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54645f83-4caf-4815-a4c4-e03a85001b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8253d224-b5fe-473b-a888-ba53242b9840",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7fa62-ad67-4243-bf8b-537440dffe26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4480cfb-e7d5-470a-9c83-383831cb414c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab47e51-5bdc-4c8c-8c90-05c3de7ca960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9acc63b-94e9-47dc-9588-fa413d9fe0e6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d581a1af-6dd6-47ed-8304-7e6e834743ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acbb693e-7a0b-4b9e-b444-e4a5f19e5bb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c9b4716-418f-4829-867d-6ab58dcda678",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed801212-ffc1-439f-b5a2-606a8d3f21b9"
                    }
                  }
                ]
              },
              {
                "id": "fc0816c0-669f-457f-b596-18b34d076391",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88d392d8-1513-4947-b57a-7664980411a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509063af-457b-4ca1-8ff6-ac782db3e97a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2fe3a9bd-c7cf-4bd1-ac89-9365c070c377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ca2fc4-376b-4a99-a5b4-bf749fe6c077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "280865e4-ca9c-46da-b477-927362b9be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3480c3b3-7273-440d-b445-2f8b7e84a596",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3538f-18d0-4402-b4f0-7746be106ae8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e769e372-6d4d-4335-a124-8c0fe3fc8915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab64e6c-4538-4a5f-b748-02b79645cc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22d3bd10-d69d-4826-b576-f015e118c8f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54c909e0-59e9-421e-af38-5d4dd2c9feb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e825d26-0e67-4ea5-92b6-4588993085cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa74ad1-5945-4e61-b90b-74d1e60581b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b895d65b-8334-4de0-b046-99d4f8fa810d"
                    }
                  }
                ]
              },
              {
                "id": "530d86d1-5ec9-45f0-80a4-94cf8284bfb7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "459d1439-bf35-411c-bde1-079a912f94f5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c4a5b6-8f0a-4d5c-afb1-4e4a1a969306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f07e2511-cdb5-4d82-b9e2-ae23ee64b97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eedb67d-7a95-4c14-9974-673fdaeab2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec916b3-afa3-4a0b-969d-c6497b12fec9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba158e12-e10d-4642-87a4-4be31938318d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "749fa9e0-ce1b-489e-9448-38485973d4b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb0aec8f-398b-4828-9b46-18c017692cbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "651a398d-013f-4c83-83d8-2e1eac8464ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b53f721-60c0-4806-baec-f8eb5a7d5400",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3dd91f5-3498-4ae8-a217-38ca949db5f9"
                    }
                  }
                ]
              },
              {
                "id": "b935dca1-9bd0-4115-bf39-f662c6d85b4f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9f3b04-c54d-495b-bc01-f535052f83cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f7d4b26b-ad43-47e7-ab91-ff5fec658f36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05772a63-ad6e-4d18-a97b-6cdf5d29b421",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "176cb2f2-4fd1-4e13-9b21-dd07c4ce931e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "979ae9cf-7226-487f-94cc-f50b959f85fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "271558eb-5cc5-4758-b62a-3840633b7cc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dca2d2e-9d58-4354-8723-6dd39806009c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6305e83c-ee99-45e6-a094-7a5a9f832c59"
            }
          }
        ]
      },
      {
        "id": "13173dd5-82b2-47ef-9e31-f9202c8378de",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "05682432-29a4-4c4d-bcbc-af28dda2d409",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f10e6b65-19af-46ce-b068-da15f41231f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c55ddfb-6813-48cd-88f0-575fe5b8aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "899842b7-8ad8-4838-bcba-9471e643322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11810b55-9a58-4269-83bb-094a53ae32ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82cef30-bc45-46c4-b288-0cea8f26f0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11961e8-2eee-43d0-a56e-a8760b0b5e05",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4439dddd-86b7-4fc6-9dd4-adaa6f9f8031",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "946b42d2-8eac-4689-910e-bbc415c34c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2faadd-6bba-44d3-804d-648c626b1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "320d04ec-0c19-46fb-ab39-cfa6e99adebd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23f6ccb0-2c51-42d7-95b8-0b3d4b96d5ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9a3ec18-e9c6-44ac-8786-cba9b043ba98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c63d2a8-4a82-4320-90da-e53af33031ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2922becc-5528-450b-a326-cee210923173"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d661e360-bfe3-432c-ab8e-f822e5cf9b56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cb98ac9a-8090-4906-8493-9de4c7fa1ab4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e77c17-5568-45fa-8b54-ef4109cd9e5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fec14d0-d4cc-46f1-b64c-fa1f4312e098"
            }
          }
        ]
      },
      {
        "id": "8371e743-b675-47d7-b576-8f45a1f24963",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b811f45e-a497-4eff-9584-fbe6b3f8b9f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04cfd6ba-da7f-44a2-90ad-c59846c57601",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d37d2be9-1d26-4cde-a7c8-9c9038a6cd4d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c30642-e9c1-4a1a-ac42-ee62842042aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "20348b82-cf69-47e7-b88d-91ae1f7a7f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b82edd-ebb4-4498-a5c2-a7c6507bc474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d331c3c1-92ce-47bb-901b-ebd502c92f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6612bb6c-7f2f-4b37-a53f-8169e0b0ed07",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d1a864-edce-457f-a137-e5b9d2131209",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccca33eb-3bc3-4df7-827f-b7d45d09f601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390a50e2-ce49-4aeb-a01c-505352d564a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08bacbb8-40c8-4716-9c5e-bbc96925138f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff6bb700-201a-4066-b2d1-a341b8c55ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f80ef8f2-76d8-4694-b9d6-d828ac447e0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d769e274-9de1-486f-80d4-c863a2fd29fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb24809-1ce5-4503-82ed-223611cb4582"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2740ab6f-1fd1-4c1b-bbbf-ecb380b309fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c5bf3910-f461-40b5-889d-d569831fe0c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1bb3a93-6719-494c-bd17-7f9b21cccbd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e982c4a3-e94c-474d-b5a2-67b79caac810"
            }
          }
        ]
      },
      {
        "id": "021b24d9-0dd4-4932-90e8-9d107491e23d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c54e363b-c69a-42c2-b9cb-770c871e3946",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c0c6369-378d-4cb2-a430-719aa85cc7ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ef823f9-a39b-43d1-9ed5-2536f81578c9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b57935-33de-4b17-b342-5a4b7d87ddae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b387d87e-e28c-4197-af3f-dab64852fb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe85a35-4248-4bdb-965e-54f086d4ad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50ba91b6-4418-45f1-8a79-05954681848e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dea4a6-dd77-4a23-8a26-caec93a90140",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823ce2a8-65f5-4763-8f5a-cdc61a723999",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28a766fe-8653-418e-8220-2c176f24eaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40253f0-baba-4e24-bc03-126600020c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1365312-d1ac-4a1f-b6fa-f64a0ba114ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "571f0c07-2a0f-4393-9c38-51c13cda4327",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e1f7e36-b3b2-48c6-bdf5-0cc9176b857d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9fb12b5-da93-449b-a612-87d06c046a9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67b29fcc-17f5-401d-82bc-18d559442eff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "036b810b-0965-4c61-9b66-734904b91a6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d6437532-22a4-4d86-9533-4185ac0d0892"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad12840b-f956-4aa4-b947-dd8bf464e745",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "660a6fd3-629f-4aa9-9c2a-ceeead623594"
            }
          }
        ]
      },
      {
        "id": "910e588a-f0ca-4e58-8697-cd11b74132b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d90e0579-a272-4c99-a04b-070404918a45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f52577fc-5dd1-43d7-8c61-6984fc70c050",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "278d3dae-fadc-4deb-a6b9-5cdbeeba9d89",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51618d7f-11a4-44fb-b623-54ba8565c1fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a328c4c6-0265-44b5-b920-816f270a738a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 598.5152671755727,
      "responseMin": 13,
      "responseMax": 5902,
      "responseSd": 764.9352650326541,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672015091173,
      "completed": 1672015258449
    },
    "executions": [
      {
        "id": "349e2195-1326-4ae8-9774-261c56cbe18b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fa0dac48-7b4a-4dd5-a53f-8870bc8fe6e7",
          "httpRequestId": "4bb6d05e-ef8c-4f45-b137-957a59a44c85"
        },
        "item": {
          "id": "349e2195-1326-4ae8-9774-261c56cbe18b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "759df1b5-1caf-4db6-bc4c-0f730ac5c716",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 0
        }
      },
      {
        "id": "1a55c11f-4892-4357-ac7c-5818b71b59dd",
        "cursor": {
          "ref": "aace8abf-f231-4507-a497-4d93504277ec",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "17d0c98d-94c2-49d9-8b2c-082d80bf0339"
        },
        "item": {
          "id": "1a55c11f-4892-4357-ac7c-5818b71b59dd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "383e2739-6bd5-44da-8135-a2387dee40f3",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "81261c3a-7d6a-4bc7-a6a2-bfdbb0720f0e",
        "cursor": {
          "ref": "40f77fc1-f334-46aa-83b5-8abf2fab7cff",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "49d48b74-eb2e-478a-96f8-3130ae2c7fc7"
        },
        "item": {
          "id": "81261c3a-7d6a-4bc7-a6a2-bfdbb0720f0e",
          "name": "did_json"
        },
        "response": {
          "id": "cdd5e22a-bf73-47e0-a1fb-2ea4af88e35c",
          "status": "OK",
          "code": 200,
          "responseTime": 658,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38d7f8d-78e5-4a6a-b630-5511fb77d86a",
        "cursor": {
          "ref": "5e72ddc8-a0a5-4963-8f86-490799b71540",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4d19c46-48d3-460b-bfad-132338a7eadb"
        },
        "item": {
          "id": "d38d7f8d-78e5-4a6a-b630-5511fb77d86a",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d1988a6-51c7-43bc-91b0-b53ab08d27cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38d7f8d-78e5-4a6a-b630-5511fb77d86a",
        "cursor": {
          "ref": "5e72ddc8-a0a5-4963-8f86-490799b71540",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4d19c46-48d3-460b-bfad-132338a7eadb"
        },
        "item": {
          "id": "d38d7f8d-78e5-4a6a-b630-5511fb77d86a",
          "name": "did:invalid"
        },
        "response": {
          "id": "6d1988a6-51c7-43bc-91b0-b53ab08d27cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5c5535-c238-4c11-8410-8825dce7d383",
        "cursor": {
          "ref": "c1011ea0-c3ab-44c9-a3f3-d7ec34b70990",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f2ac8c46-b6e5-489d-94a6-d2a6fd31b831"
        },
        "item": {
          "id": "8c5c5535-c238-4c11-8410-8825dce7d383",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f73a3806-74f4-40a6-a8fd-335a96dcd554",
          "status": "Not Found",
          "code": 404,
          "responseTime": 631,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663b34e-e7a0-40e7-b45a-8f6cc5bc4649",
        "cursor": {
          "ref": "46a2aa73-9aec-459b-b3cc-45068804d58a",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "efe0a24f-f462-4a01-a680-be8c51f61416"
        },
        "item": {
          "id": "1663b34e-e7a0-40e7-b45a-8f6cc5bc4649",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13e26df2-0ef3-495e-a121-4f21bb85197f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 522,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a0fbfd-61ce-42e3-a4e8-da71d8610353",
        "cursor": {
          "ref": "64262e67-f389-4b4e-bb48-42eed4261175",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "31f9290a-3404-4af5-9f1d-ecba8534dd45"
        },
        "item": {
          "id": "08a0fbfd-61ce-42e3-a4e8-da71d8610353",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7aab07cf-8e56-4c42-b809-0e2dec36129d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53dba8e-0882-492d-9d22-123a3314c026",
        "cursor": {
          "ref": "b6e632ec-01db-462b-9842-9d103f0836dc",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "400b8730-790d-4f5f-97c3-57e062d25a71"
        },
        "item": {
          "id": "b53dba8e-0882-492d-9d22-123a3314c026",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7334b740-77b5-43d3-99a9-99c82933c77f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 731,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53dba8e-0882-492d-9d22-123a3314c026",
        "cursor": {
          "ref": "b6e632ec-01db-462b-9842-9d103f0836dc",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "400b8730-790d-4f5f-97c3-57e062d25a71"
        },
        "item": {
          "id": "b53dba8e-0882-492d-9d22-123a3314c026",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7334b740-77b5-43d3-99a9-99c82933c77f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 731,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcd8d49-17a3-4494-b5bb-9096152c4903",
        "cursor": {
          "ref": "a34ba3ea-b6dd-4d47-b41a-961140d81354",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c2028d84-28a1-435b-a041-4b334a3f1d27"
        },
        "item": {
          "id": "3bcd8d49-17a3-4494-b5bb-9096152c4903",
          "name": "identifiers"
        },
        "response": {
          "id": "51326f6a-9c1f-4497-9714-0c75e862db23",
          "status": "OK",
          "code": 200,
          "responseTime": 849,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc21148-d13f-4a55-95c1-10839859bcd7",
        "cursor": {
          "ref": "eeac1bff-1898-4059-a494-ac64940aa677",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d32e1dbc-ce13-4e05-889a-3f34755f93f6"
        },
        "item": {
          "id": "9bc21148-d13f-4a55-95c1-10839859bcd7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ebe3c64-40d3-4a14-b33d-c723bf654eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc21148-d13f-4a55-95c1-10839859bcd7",
        "cursor": {
          "ref": "eeac1bff-1898-4059-a494-ac64940aa677",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d32e1dbc-ce13-4e05-889a-3f34755f93f6"
        },
        "item": {
          "id": "9bc21148-d13f-4a55-95c1-10839859bcd7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ebe3c64-40d3-4a14-b33d-c723bf654eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c7946-6083-4a17-81e7-8a8060ff8036",
        "cursor": {
          "ref": "38332bfa-ac06-4548-a869-b2f2555facd6",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "caf63a6c-c3cf-42ce-bc6c-8283acb669ad"
        },
        "item": {
          "id": "2e2c7946-6083-4a17-81e7-8a8060ff8036",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "beaad3f3-a608-42cb-ba15-456350a54c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86298a16-bb90-4f51-ac52-7bd649906277",
        "cursor": {
          "ref": "d97fb7fd-b881-47db-baba-ec932df74674",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "00d1b495-b05f-4f15-8307-53e6a0bce318"
        },
        "item": {
          "id": "86298a16-bb90-4f51-ac52-7bd649906277",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "772679f8-74c5-428d-bed8-61a7e4445daa",
          "status": "Created",
          "code": 201,
          "responseTime": 2394,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "8a5dbd39-c343-4980-ade7-2cbe455b796c",
        "cursor": {
          "ref": "a66e5663-706d-4fc3-88e9-3e6bf12ac777",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5706eb35-39a0-4175-bc9e-438b9cec6776"
        },
        "item": {
          "id": "8a5dbd39-c343-4980-ade7-2cbe455b796c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1053c0f-97dd-4ef9-a03e-047f50e944c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1450bce-30f9-4907-9331-cd9d230d0238",
        "cursor": {
          "ref": "c40323cb-ee45-4e3f-93ce-b4b292054412",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "96545bc0-b246-4a07-bbd5-af26460b03f6"
        },
        "item": {
          "id": "d1450bce-30f9-4907-9331-cd9d230d0238",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0f13ffd5-d7b9-4452-9ce5-307c8b24273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7839f3f0-75aa-4aaf-a27c-033cfb69297e",
        "cursor": {
          "ref": "234c851a-87b4-45d6-8ab8-66160d648195",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9e0e07e2-90eb-4341-bdd2-766968d88842"
        },
        "item": {
          "id": "7839f3f0-75aa-4aaf-a27c-033cfb69297e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a85bf918-d389-408a-a170-63f04c6c72c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e84ee6c-dd38-426d-8a7b-f2ecc500c1f9",
        "cursor": {
          "ref": "7ca53bac-75db-4482-9b09-5e1935ac6ff1",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eabe9ef2-f931-475a-b94a-3ea084f32263"
        },
        "item": {
          "id": "6e84ee6c-dd38-426d-8a7b-f2ecc500c1f9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9b87dd41-3567-46c8-a0c1-8a642e3f58b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4219291f-73e9-4bdc-8e46-46ae2eb76f54",
        "cursor": {
          "ref": "bd502f85-4d0e-4025-b694-57636c65f61d",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "be6af3d4-cf23-4165-a952-9da90a98671a"
        },
        "item": {
          "id": "4219291f-73e9-4bdc-8e46-46ae2eb76f54",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "49d621d9-07cf-4c92-b606-4789885b557b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c585d74-dc33-4612-8daa-1368b68bfc15",
        "cursor": {
          "ref": "c7de05f5-b07c-48a1-94b3-35379311d265",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d2833e24-5849-48d0-98fe-9ca9b3ce90b7"
        },
        "item": {
          "id": "7c585d74-dc33-4612-8daa-1368b68bfc15",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f9089e4-4e23-437e-aaee-5fae4ded1f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e045637a-396f-4007-bbfa-bcda9207851d",
        "cursor": {
          "ref": "ea104776-e4d3-444a-a8b7-73c783b9ab19",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef276bcb-42cf-4009-8b28-b7746c489524"
        },
        "item": {
          "id": "e045637a-396f-4007-bbfa-bcda9207851d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "30fc5f25-73a4-485b-b1ca-7d6237db4042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de622aa7-1022-4abb-aafd-cae7058be5fe",
        "cursor": {
          "ref": "6679d9d5-74c9-4f56-82e7-18a0eabb392b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "94d28b0c-7c4b-4f32-83c0-0b39bc5b5ebe"
        },
        "item": {
          "id": "de622aa7-1022-4abb-aafd-cae7058be5fe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "715f5b9f-21b4-4fad-9c57-ab2ee1da0490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a9f3b6-a4bf-4e6e-9443-bfe05e69b356",
        "cursor": {
          "ref": "f0761df5-02b3-4cf1-a6b2-fe7ada0340cb",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c4cff80-036e-40bf-b7f9-8d8376dc136c"
        },
        "item": {
          "id": "08a9f3b6-a4bf-4e6e-9443-bfe05e69b356",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "44041c1f-6223-4d0a-8ae1-38c2469824e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fbbf75-9d3b-449d-84c5-04fdeebfbc87",
        "cursor": {
          "ref": "8d946823-408e-482c-9dfb-8042bd6269fe",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "40f10dcb-9667-4bb0-bbdc-d36adc123027"
        },
        "item": {
          "id": "46fbbf75-9d3b-449d-84c5-04fdeebfbc87",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea9e2593-8762-4ef7-b791-dce19684d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f684eef-0064-409a-b256-7318d2ccc4d2",
        "cursor": {
          "ref": "f3709536-2a3f-4abc-97e2-84d31749b3a3",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f620b74e-0908-46c5-be42-340cb52410d5"
        },
        "item": {
          "id": "2f684eef-0064-409a-b256-7318d2ccc4d2",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "895265b7-135d-40f5-bc7b-f93cbbd0b7c3",
          "status": "Created",
          "code": 201,
          "responseTime": 4410,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "1d44e4ee-1163-4f03-8a92-ba2a6674a81b",
        "cursor": {
          "ref": "eb939d90-0fcd-49f9-968e-e0ca97d79113",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "18f40ca4-3de6-4454-a04f-bc87b0baf98b"
        },
        "item": {
          "id": "1d44e4ee-1163-4f03-8a92-ba2a6674a81b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "872dd69f-b080-4f53-ad14-de54a56cbe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae05dc6b-7ea0-4360-8766-5334a5be7dca",
        "cursor": {
          "ref": "010e7c61-0292-4aa0-ae9b-e9a992706219",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "db40dd66-5d3a-4b01-bd83-d1f753e2f4e1"
        },
        "item": {
          "id": "ae05dc6b-7ea0-4360-8766-5334a5be7dca",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "53a15082-8e5c-4102-83e8-1ddc3d14ac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155ec39-41da-438e-b03c-72ddf61a0b55",
        "cursor": {
          "ref": "25ab26df-0ef3-4d01-8887-fafe8a0bb338",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1414fe1b-7203-4a75-96eb-17b41aa0d9cd"
        },
        "item": {
          "id": "9155ec39-41da-438e-b03c-72ddf61a0b55",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a24879c8-33ba-4aef-9f6a-4752e6260c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7443e1a2-e32f-4ee3-8d77-353186a8191f",
        "cursor": {
          "ref": "1ade9a78-aa3a-4ac5-962b-0ecac9dfe6b8",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "907bd697-9026-4011-a789-56f21872e913"
        },
        "item": {
          "id": "7443e1a2-e32f-4ee3-8d77-353186a8191f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a792af2-c395-4f45-a71c-9d4baac4c90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756f4320-6b6e-45ca-b00b-5a1170852c14",
        "cursor": {
          "ref": "92508681-18fa-484c-bf3e-aa81b166dc9d",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "616b9774-2a76-4836-9d42-79aff65332dc"
        },
        "item": {
          "id": "756f4320-6b6e-45ca-b00b-5a1170852c14",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "543367fa-6267-4522-a79a-409bfcfc00fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f629c26-d6f4-438e-807d-9215cf67e3c7",
        "cursor": {
          "ref": "4df16e65-97f1-4d56-aab0-488b41c7d67c",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "26b6cb63-8319-4549-8bb1-dcd8c585acae"
        },
        "item": {
          "id": "7f629c26-d6f4-438e-807d-9215cf67e3c7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4ac5aac3-ebfc-4a4d-af82-9c965fe07c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e2ee1b-e7d2-43ff-ad68-b0eb1e267273",
        "cursor": {
          "ref": "f15cf137-44c5-453c-a126-a2400272c405",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7644300b-411c-48b5-a59a-3d1014adaa9f"
        },
        "item": {
          "id": "23e2ee1b-e7d2-43ff-ad68-b0eb1e267273",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "672e5411-e93d-42bb-9788-b4ec21fc12cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9663a2-2ba1-47f4-9658-aa53c154cd1b",
        "cursor": {
          "ref": "0f3c978c-c217-4b43-8041-6bf65af44b92",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a849d6f3-8059-44f9-a140-89b2fb45264d"
        },
        "item": {
          "id": "ca9663a2-2ba1-47f4-9658-aa53c154cd1b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3ed6d9c4-fc73-4494-8d71-3e25f3d64d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6423a47-083f-4613-81f5-658e3692c6ed",
        "cursor": {
          "ref": "b3c36d38-b559-4134-9db9-732df3972079",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "69120ea5-db99-4725-bc41-de8d61708e40"
        },
        "item": {
          "id": "e6423a47-083f-4613-81f5-658e3692c6ed",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "85b614a5-f378-4891-9583-d166e6db2233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02f97ab-70b4-4d8f-a266-904a24341c8a",
        "cursor": {
          "ref": "722f1c79-8498-46d9-846d-d1ee7f57b7fe",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3f344e6b-aa45-41e0-9724-9c4aa645bcb6"
        },
        "item": {
          "id": "c02f97ab-70b4-4d8f-a266-904a24341c8a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f2c3e42-53ca-4b90-9c07-7b6e4e85e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d8202d-bbe3-49c8-8435-6972d66adcf4",
        "cursor": {
          "ref": "e96119ac-6660-42ed-ab94-ed73abc8a833",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01d65f0c-6156-4d8a-9323-42e83728d78a"
        },
        "item": {
          "id": "c7d8202d-bbe3-49c8-8435-6972d66adcf4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7d3697d9-65df-4c6e-9b91-0f2a0de46a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23203d-2c72-4d02-b67b-f483b55abfa6",
        "cursor": {
          "ref": "8deb9f4d-ed14-4da9-be2d-4d55223a2e7e",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ebeb4fe-7083-4e26-be30-fbc8b8e13bfc"
        },
        "item": {
          "id": "0e23203d-2c72-4d02-b67b-f483b55abfa6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d60debd1-cb2f-406e-8a16-bca604e35bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f4c3de-61be-48ce-8d72-1ffff84452b3",
        "cursor": {
          "ref": "b4a99378-e27f-4d76-93db-4be31bead763",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6ce2e19-4aa4-4f6b-b2bf-7639492ddaee"
        },
        "item": {
          "id": "45f4c3de-61be-48ce-8d72-1ffff84452b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa34ec18-f52d-4604-89a1-cb61b1ad2f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e20fc48-506e-4de1-8180-5816d2e88717",
        "cursor": {
          "ref": "c6aab5eb-36a0-4d11-b62f-0ae5307d9cf0",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "32696754-f9d2-467d-8faf-1420d9b7e4dd"
        },
        "item": {
          "id": "5e20fc48-506e-4de1-8180-5816d2e88717",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d70f850b-ce3b-4183-8e81-2df9f2f7a4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b320fe1e-c42a-4b6d-87fa-ffd8823fcf49",
        "cursor": {
          "ref": "c619fbd9-3496-49de-a26c-9619c8497ff3",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "35f43c5f-3bea-4f36-91cd-cc79b0d577e2"
        },
        "item": {
          "id": "b320fe1e-c42a-4b6d-87fa-ffd8823fcf49",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f1e79d37-0326-4783-aac8-0f203e891091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dedfc57-c98a-43e4-b5c5-0c5c5c575f8e",
        "cursor": {
          "ref": "0f236ca9-c1d1-483d-8f6f-fb6cddedcf37",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0b1a047a-94a9-44c2-a193-5666a0d75660"
        },
        "item": {
          "id": "8dedfc57-c98a-43e4-b5c5-0c5c5c575f8e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "374b01ee-c6e7-4ec2-8228-dcd2e989340e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1da46f-be88-4796-a23e-2c8d25f27872",
        "cursor": {
          "ref": "bc59bfff-9412-45ff-af41-dfa810788358",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "de155d57-07db-45eb-b6c2-a589779da666"
        },
        "item": {
          "id": "8b1da46f-be88-4796-a23e-2c8d25f27872",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1887dcb-b2c5-4bd5-9894-93f1774cb184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7530550-d89e-4151-ac90-092ad210cafe",
        "cursor": {
          "ref": "2ae3fb5a-f1ad-44f9-b348-b638e6ed6ba2",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "67053e4c-86f3-4b70-a779-b6dd73c78e13"
        },
        "item": {
          "id": "b7530550-d89e-4151-ac90-092ad210cafe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a3410e93-4bd5-45b5-a140-8531c4041fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3fca85-10e2-49ee-9a2a-54ce2dc2dd94",
        "cursor": {
          "ref": "6ff3be90-8455-4d52-a9f9-853cf363043f",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3210c28b-fc6f-4631-9117-dcacfa7a4563"
        },
        "item": {
          "id": "bf3fca85-10e2-49ee-9a2a-54ce2dc2dd94",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c8a38d80-9239-46ff-806b-dc3e2066853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3c89e6-fc75-448e-bfab-68910a044480",
        "cursor": {
          "ref": "7fbc4ecd-7a0b-4320-a2fc-beb97ba353d8",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "220f9e51-2edb-4c7e-9c6d-82afc74b8eb0"
        },
        "item": {
          "id": "5a3c89e6-fc75-448e-bfab-68910a044480",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f4278d8b-12d6-416c-b54b-5aea257849cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3502d0c-4caf-4b12-a275-1a1fa99cb76c",
        "cursor": {
          "ref": "6471b078-e88c-4612-9753-a720eb3b270f",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e5db9d2f-c17e-466e-ab6f-4284a3bfef0b"
        },
        "item": {
          "id": "a3502d0c-4caf-4b12-a275-1a1fa99cb76c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "28b0e1bd-eaa3-4a99-b48a-a6042bbcbeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5e2138-1383-472f-a043-70d967d0fe5c",
        "cursor": {
          "ref": "8944bdd1-3dbc-4078-ba40-b327d11ef9de",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c99742cd-b328-44fb-90ba-3dc61e326f19"
        },
        "item": {
          "id": "df5e2138-1383-472f-a043-70d967d0fe5c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "28bb4329-7a5d-4980-9a6f-b19a06f76f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df06a99-7cdc-42c5-8f4d-664745dfe2c8",
        "cursor": {
          "ref": "6f4a4058-87d8-4b89-9300-8ed2de638d2a",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bc7d3983-51cd-49b5-b9a7-3ccfeb58559c"
        },
        "item": {
          "id": "0df06a99-7cdc-42c5-8f4d-664745dfe2c8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2c6951ab-0830-47ab-823b-4cdad4230d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897e4eb3-0761-48c8-ae32-8c11d3a989b4",
        "cursor": {
          "ref": "ab6708b7-88a1-4991-8707-6c4bfff92fcb",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ef00a3da-9cad-424b-9fb0-8db0f912ce07"
        },
        "item": {
          "id": "897e4eb3-0761-48c8-ae32-8c11d3a989b4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e8a57499-89aa-4e72-9dc7-b5426570f53c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 644,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b34b2ec-ea0d-473d-ad13-468920ddd948",
        "cursor": {
          "ref": "8e6ac2dc-982f-4612-8997-6ead6f1c868a",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "99e6281e-4627-46b3-a8b3-8671dedf4ea6"
        },
        "item": {
          "id": "9b34b2ec-ea0d-473d-ad13-468920ddd948",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0124ba70-05e8-4680-868e-0a9f3e734842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5301d0b-1deb-493f-861f-92162c7e7609",
        "cursor": {
          "ref": "1f71315d-15ba-4eec-9865-ac3988a52fdd",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "33c6fca8-cd7f-45c5-83c7-79909d6e78b2"
        },
        "item": {
          "id": "b5301d0b-1deb-493f-861f-92162c7e7609",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3c7b6530-dff0-47fa-8c4d-12c40e2890fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9591ad64-71ab-4282-bb5d-ec3149b4890f",
        "cursor": {
          "ref": "ce864445-8d4c-44e6-a6e8-13e979b3c2e4",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "86eb10e9-37fa-47f0-a225-576715a4dbbe"
        },
        "item": {
          "id": "9591ad64-71ab-4282-bb5d-ec3149b4890f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "27d2d245-e3ed-4aa4-b79c-9a19c88e5809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d64c5-717a-4970-b278-b744339d7a98",
        "cursor": {
          "ref": "35710645-0bcd-4a25-b765-429265825f3e",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "61844d98-abf6-4b49-9964-a8d2c3d347b6"
        },
        "item": {
          "id": "a80d64c5-717a-4970-b278-b744339d7a98",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "28c65e84-73d6-4c74-b284-39321693d550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642e91b5-81f8-4f39-b139-ba0079f35b3a",
        "cursor": {
          "ref": "771b3b53-a458-4c21-9842-a6af27361368",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "595541d7-dbdb-4ee0-bd04-76e878d7ebae"
        },
        "item": {
          "id": "642e91b5-81f8-4f39-b139-ba0079f35b3a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1fc01f46-62fc-4537-adfe-98a1f0219182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b4c37c-2380-4bae-9c0b-bdfa5141e496",
        "cursor": {
          "ref": "ea706832-7e6b-4e30-913b-842adb26e75c",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "713d9890-2b49-4758-954a-dd6974d01a27"
        },
        "item": {
          "id": "39b4c37c-2380-4bae-9c0b-bdfa5141e496",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "83d7076a-c776-4d52-9bb4-4e5ad23d1db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ad9f40-23c4-4485-84cb-a552b9d9cc95",
        "cursor": {
          "ref": "0c6ae676-08e0-4044-a803-0c1445f53da6",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "36488a85-d462-4315-8563-4efaeb78a033"
        },
        "item": {
          "id": "78ad9f40-23c4-4485-84cb-a552b9d9cc95",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70fc39be-a958-41d5-b9c9-0b175efacaec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 597,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59a6221-1a8b-4f9a-8b36-c6f700bcc537",
        "cursor": {
          "ref": "b7644604-0a2a-4717-9de6-b37307d00f86",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "40c699b2-9d9f-4f4b-9797-153397b6a958"
        },
        "item": {
          "id": "a59a6221-1a8b-4f9a-8b36-c6f700bcc537",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5bd71a31-02f0-4cb0-9318-1390d5060b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158243c9-2de1-4c19-a339-8d85fdc92116",
        "cursor": {
          "ref": "037583be-4b6e-46b2-b024-7976c100ff3d",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c641f3f1-8446-484c-bba0-bf7a8ee0698f"
        },
        "item": {
          "id": "158243c9-2de1-4c19-a339-8d85fdc92116",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5d68083b-422b-4967-ab9e-8bc33fb3e6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513ee93e-300d-4bfe-903a-f1620b2096b6",
        "cursor": {
          "ref": "0d072e44-4593-45ba-830e-44c0a8621f11",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4ef2f916-47b3-454c-ab4e-791baf05db14"
        },
        "item": {
          "id": "513ee93e-300d-4bfe-903a-f1620b2096b6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c4b2436c-212d-4624-936f-76dc0a65568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87617ff3-b1b7-4b19-a12d-b62a8a3e77e4",
        "cursor": {
          "ref": "290deaf3-b765-41ad-949a-ca92df7a52fd",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fafc8709-f792-4b02-a795-32945c2b3310"
        },
        "item": {
          "id": "87617ff3-b1b7-4b19-a12d-b62a8a3e77e4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "baeed41c-fd26-4e9d-9b97-cb65bcb1a2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aadf88-54b6-4c8a-bfe7-3c0e175e8812",
        "cursor": {
          "ref": "0395f0c2-2d77-40a6-9097-f146a158c50f",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "733b695c-d11c-45a2-a8e8-df44cd7dee28"
        },
        "item": {
          "id": "64aadf88-54b6-4c8a-bfe7-3c0e175e8812",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7ef488d5-8f60-4efc-9dee-eb1d0cc657a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7300a-4c93-48d7-8c43-e6cd0e592cd3",
        "cursor": {
          "ref": "c3190eb0-578a-47a8-b53f-bd31e368049e",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0ee73db5-28a8-4f85-981c-6fec90eaca9f"
        },
        "item": {
          "id": "47f7300a-4c93-48d7-8c43-e6cd0e592cd3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "582f24f9-0453-4c51-b57e-aa5a04d354a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066bc210-027b-4780-8838-3d5653341c31",
        "cursor": {
          "ref": "29616ba2-61d1-49d1-878e-2a662ded59af",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "afcdc6ee-7ed2-41f3-abeb-71947bee7d6e"
        },
        "item": {
          "id": "066bc210-027b-4780-8838-3d5653341c31",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8196b6f-2c4d-4159-ada5-8d8441d21740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f4e400-c26c-4ac8-83d9-612192ae9dff",
        "cursor": {
          "ref": "22eb5741-eeec-415e-8c52-eaf837bc5d91",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1a70ae63-4ef6-4f81-b4b3-e4fe14c77937"
        },
        "item": {
          "id": "17f4e400-c26c-4ac8-83d9-612192ae9dff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3e78e737-14cb-4778-9217-1fdafb8d3188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c53d2e-0cd4-449e-a2f3-9df55074ffdf",
        "cursor": {
          "ref": "6fa1ea97-9f3b-4da0-9ce9-1a9cc620838e",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2a4e77a4-73d1-4de5-9eef-59d2d4d54cb6"
        },
        "item": {
          "id": "02c53d2e-0cd4-449e-a2f3-9df55074ffdf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "903cda42-06b2-4453-b308-51b1c0381f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cac105-2c2f-4bad-97e6-ddacdef8c0dc",
        "cursor": {
          "ref": "487c30ec-4f09-4a6f-b513-65cb83098105",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8193493-0a4a-4b1e-865e-dd740e4f9bd7"
        },
        "item": {
          "id": "02cac105-2c2f-4bad-97e6-ddacdef8c0dc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4a82d6c1-7e38-4868-8c55-8486fdcbf6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a9a905-84b4-40b3-b7b7-d88fa890185a",
        "cursor": {
          "ref": "132f1863-d398-4823-8101-c11fa832e5ce",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7f68b85e-8caf-4599-92f1-ef0df11de770"
        },
        "item": {
          "id": "25a9a905-84b4-40b3-b7b7-d88fa890185a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ca482640-6360-4b30-88fb-380ff38ce69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d680d2b-3001-40e1-b319-a49226cfa43e",
        "cursor": {
          "ref": "b02791d1-87ce-4d0b-851b-20c370697d9a",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c7e64355-293f-4adc-b883-d2a2f72bebf9"
        },
        "item": {
          "id": "7d680d2b-3001-40e1-b319-a49226cfa43e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aabbd52c-14da-49aa-a100-6ee8ebfc1449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc345f53-8644-4ae4-90b3-c0f008d29999",
        "cursor": {
          "ref": "ac92f828-2781-45af-ba99-a866e3770412",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9b48843c-cfae-4873-a9ef-94924dc7cfc4"
        },
        "item": {
          "id": "fc345f53-8644-4ae4-90b3-c0f008d29999",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "afcc6b64-2655-4455-9b32-8f698ee22049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d33c88-08b9-4dad-b859-349019b9508f",
        "cursor": {
          "ref": "f1b133f8-5ccb-4d16-9a0b-4a9a5b4a3c34",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "52019bae-7a41-4cd2-9fbe-fbbcbf37b2f3"
        },
        "item": {
          "id": "59d33c88-08b9-4dad-b859-349019b9508f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fedb8441-6c6b-4cda-a9ad-d4eb10aa5217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ea1c25-c42b-4e3e-86d2-62cd6d3015d0",
        "cursor": {
          "ref": "845872e0-7d01-43d1-8b09-f55a99a3dac5",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4bdde992-2910-4aea-8fe3-7d01084763ed"
        },
        "item": {
          "id": "49ea1c25-c42b-4e3e-86d2-62cd6d3015d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f46886ad-9ff2-4b51-b148-093023ff3a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474615e0-4738-4d77-b6d9-8d3a6f352c43",
        "cursor": {
          "ref": "2a8cc62f-d425-40c3-bbcf-cef65b203f23",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ec288337-bbb3-4de4-a575-31df6fa691ca"
        },
        "item": {
          "id": "474615e0-4738-4d77-b6d9-8d3a6f352c43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b6ae0f37-5306-4209-889f-3813748bcda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd75aa-3a28-47d1-b323-465ee21e113e",
        "cursor": {
          "ref": "0bc76b84-50e1-451a-9a69-af1124ab0989",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cf676c81-5808-4192-8507-a778422f6d13"
        },
        "item": {
          "id": "3edd75aa-3a28-47d1-b323-465ee21e113e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c979c114-c08b-4cc8-b18a-53c54ae4d22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3447f73b-3414-49a5-ab1a-eff67c6ead70",
        "cursor": {
          "ref": "7d702c09-2393-4dec-b76f-f459ebf44ed1",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df3bff69-9efe-4abb-8faa-b01a54b4f68e"
        },
        "item": {
          "id": "3447f73b-3414-49a5-ab1a-eff67c6ead70",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9801457-0bb6-4bc7-ac90-ab36a6b0e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4058abb5-81a5-4f93-942e-793ba6a408a1",
        "cursor": {
          "ref": "d3c87c54-d3b1-439f-9828-c58eb0f5166d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "118a6b88-036e-4ca0-aa56-5a1d80e94bdf"
        },
        "item": {
          "id": "4058abb5-81a5-4f93-942e-793ba6a408a1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c8b14bae-1bf5-4b53-acab-90831a2edaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465fa67b-d359-4bab-b488-db15cde4a88c",
        "cursor": {
          "ref": "a2896f9b-fe9a-4acc-93f9-886ec5fe9c50",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a743294b-fa3e-4308-8be2-42698533c4b3"
        },
        "item": {
          "id": "465fa67b-d359-4bab-b488-db15cde4a88c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1285f295-fbf2-4065-84a8-318c66eb210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e21777-2350-4e98-8d5b-d9daf1f1e2f0",
        "cursor": {
          "ref": "657d9590-58ab-406d-b7da-7b4595608bdc",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c8996c7b-f454-4bbf-b17c-8c560baa07a2"
        },
        "item": {
          "id": "60e21777-2350-4e98-8d5b-d9daf1f1e2f0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ee9d16f2-408b-4c17-b816-3952aa42b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5e46f7-8e30-414f-ac18-7569be20aa7e",
        "cursor": {
          "ref": "e74943fe-44eb-4a20-9136-0a8a36f5672e",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8bd101f5-2681-4a81-8df2-f70a9b8b6be0"
        },
        "item": {
          "id": "0d5e46f7-8e30-414f-ac18-7569be20aa7e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6f32fcab-0fca-4684-9e0c-be2281135922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c640510-4e87-4f89-9650-6da76306a82b",
        "cursor": {
          "ref": "3f68b02d-888a-4635-9eb2-8df7acb1791a",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "51f59663-4215-4ad5-b46f-e2ac5ad9b757"
        },
        "item": {
          "id": "5c640510-4e87-4f89-9650-6da76306a82b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b8186ab2-e256-41d2-9b09-f3da46b1c74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f591e49d-0a39-4dec-8bee-489ca564db9e",
        "cursor": {
          "ref": "2b3fb74a-71a8-44ca-88d4-328a33294c3a",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e51fc397-f344-4be8-9bee-b588183a0d2f"
        },
        "item": {
          "id": "f591e49d-0a39-4dec-8bee-489ca564db9e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "259c1acb-9547-4970-a149-dad9a256e948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5057f521-11d6-4890-8be1-2746fd418153",
        "cursor": {
          "ref": "90b4a95c-9f25-4df5-bb06-7a1554cd6948",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73911078-8f8b-4269-8308-8901c823afb4"
        },
        "item": {
          "id": "5057f521-11d6-4890-8be1-2746fd418153",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f34b4e0f-9c18-485c-b050-86999e1b1c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95abb6a-54bc-4f74-8660-3054f71a7078",
        "cursor": {
          "ref": "059fb42b-9dc8-4050-9991-5a45b58136a7",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5c4ae7bb-017d-4eea-be3f-603a548327da"
        },
        "item": {
          "id": "f95abb6a-54bc-4f74-8660-3054f71a7078",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e332661b-1bcc-41b0-b3c5-2eb30f252ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4955daa4-2b40-44e0-983b-6a096432d774",
        "cursor": {
          "ref": "b81ec0ea-13d9-49da-ad66-7a98eeb0d25c",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fc45cf2b-0e19-481e-96c5-e4f6cb6bc113"
        },
        "item": {
          "id": "4955daa4-2b40-44e0-983b-6a096432d774",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "acecbb88-a874-4de7-a72a-9cd53de504a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb5e47b-9239-4518-bc1d-878e9d1e1351",
        "cursor": {
          "ref": "9bcd870a-a4a4-473c-80d7-2e88ecc8b628",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3f0feb47-52fa-4d1b-bf10-17dd40b39aee"
        },
        "item": {
          "id": "1bb5e47b-9239-4518-bc1d-878e9d1e1351",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "49022ef7-6056-4ba6-9a2b-da58ed4dddc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312bebeb-20c8-4595-a4d2-afd8c3053a01",
        "cursor": {
          "ref": "7d7e06bb-4a6d-4fbc-8a22-fa9e48b41c3b",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ff24ed93-364d-4cc2-bee0-e526b9b5b6f9"
        },
        "item": {
          "id": "312bebeb-20c8-4595-a4d2-afd8c3053a01",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "00e3b850-b033-43a4-8fc3-f5dbfd0ef6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce380a0-88ba-4372-a38d-d9089193a63b",
        "cursor": {
          "ref": "a13c8987-0b85-47b0-a377-cbaedce6cb4d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a95f4069-664b-4c7d-bc02-d902acd99c86"
        },
        "item": {
          "id": "7ce380a0-88ba-4372-a38d-d9089193a63b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6404afe2-4d2e-4345-b40e-9c78668aafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9130b6be-30c5-44bd-93ee-58caeea976d0",
        "cursor": {
          "ref": "10c1386a-6318-4f85-9d20-c0d756c8d901",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f1fafdf0-952e-4883-9c7e-47b881d22604"
        },
        "item": {
          "id": "9130b6be-30c5-44bd-93ee-58caeea976d0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ec3508fc-2976-447e-a6dd-fbacbb4d6b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6555f954-2e44-4602-84bb-de3c34381c86",
        "cursor": {
          "ref": "c11d3346-214b-48f8-9224-14fefe04cfca",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e390c284-fe50-4b4e-9913-a390487212c4"
        },
        "item": {
          "id": "6555f954-2e44-4602-84bb-de3c34381c86",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "76c503ed-2c0b-4ffa-a4d7-32c4e4aab2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6abaa4e-e102-44f3-8382-4a04cfe48c50",
        "cursor": {
          "ref": "ce1530ec-d7b4-42b2-be06-f5bada771d69",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c1ebf5af-63bb-4b28-bea7-bb6573052251"
        },
        "item": {
          "id": "a6abaa4e-e102-44f3-8382-4a04cfe48c50",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7eb9f042-63b6-4bcb-b624-f27aec887ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676b935b-7432-400d-857f-160bcc6fa644",
        "cursor": {
          "ref": "027ddbaa-ec3d-46fc-b180-8b0bf67ac84e",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e264ac37-373e-4997-8664-ee1b94244906"
        },
        "item": {
          "id": "676b935b-7432-400d-857f-160bcc6fa644",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2ffaed54-0dca-4c40-8617-8a163d134e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc234c3-deb0-4980-96ee-8af2fe7f7d0c",
        "cursor": {
          "ref": "7b048328-632f-4846-baad-17ff5096b6c7",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b6711a23-5f9a-4d7c-bcc0-b38f28c36a0b"
        },
        "item": {
          "id": "3cc234c3-deb0-4980-96ee-8af2fe7f7d0c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "031f9908-d196-47c4-9166-679002a3b54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449fa48-f9de-4203-831d-37e411803ffb",
        "cursor": {
          "ref": "4bf68396-b2a5-4b81-878b-16b2b435c7e4",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c453c42-5d66-49f7-b9e2-fb1506a82228"
        },
        "item": {
          "id": "4449fa48-f9de-4203-831d-37e411803ffb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "91835abd-5150-485a-bac4-099066ef3152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9dc6a5-edf8-427a-a535-0e063b1b0fe5",
        "cursor": {
          "ref": "4ac5d138-10ff-4fa0-b06e-3027eb4efae0",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5eaee126-39d6-4ef0-9521-a0da6ed5d766"
        },
        "item": {
          "id": "5b9dc6a5-edf8-427a-a535-0e063b1b0fe5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a89191ff-9b87-4f87-8af3-803ba10af0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6366d7-4ba7-4910-a49c-6af0e8c217d0",
        "cursor": {
          "ref": "5d1b488a-5912-4e0a-81fa-b9679effa46d",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d04484cb-c06c-46f6-9a22-4e253a1f33a4"
        },
        "item": {
          "id": "ce6366d7-4ba7-4910-a49c-6af0e8c217d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e45606de-0dfc-41bd-b26d-8c28c46e0aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5e5a9c-0f56-4b27-be34-15c3ec211725",
        "cursor": {
          "ref": "26617d91-7353-44de-9eac-8d466b396098",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3eed8785-f5e5-4d9f-9358-072c4a5d4378"
        },
        "item": {
          "id": "fc5e5a9c-0f56-4b27-be34-15c3ec211725",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6ac2140-a3a4-4be6-9065-4b31a2e43b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba8a93-1165-4718-b50b-5f5de25c6f93",
        "cursor": {
          "ref": "6754b146-ac98-4459-abc5-dcdfc53bdd29",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f71771a0-e02f-4dc6-87af-f0681a66a3cb"
        },
        "item": {
          "id": "74ba8a93-1165-4718-b50b-5f5de25c6f93",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de36de7a-2c48-416a-aa06-523d090d93b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1a3f5e-32a9-40b3-9908-50228b7b9a13",
        "cursor": {
          "ref": "1fd90296-4784-4c24-85a1-77fb56f2f799",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e11b7e67-787f-47d3-ba65-eecd347bbd0c"
        },
        "item": {
          "id": "1b1a3f5e-32a9-40b3-9908-50228b7b9a13",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dca9623f-e11d-4bca-a27f-2c8cb3ca5418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c97b18-8a2c-4e69-866c-82e313d69212",
        "cursor": {
          "ref": "9113b69f-4209-4d06-a91a-e8a9fd017646",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "67e4897b-4898-4df2-901f-07f1dd85934b"
        },
        "item": {
          "id": "04c97b18-8a2c-4e69-866c-82e313d69212",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cec83963-9499-42c6-86a1-8659229ff729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523b58bc-0b88-44a7-8475-ff65b85b937b",
        "cursor": {
          "ref": "b7a6dcab-4b31-4634-b835-b0dc3b47b97b",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a9ca19b3-a472-4e9a-b44f-a02617203780"
        },
        "item": {
          "id": "523b58bc-0b88-44a7-8475-ff65b85b937b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "375794ac-61a1-4554-ac2d-739589331596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e66293-4a6f-41c3-88d1-36c3e0b2da9f",
        "cursor": {
          "ref": "4afa3315-7f53-4ff3-ad8b-77c0cdf70405",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94be9e67-e14d-4bd9-9727-de94125447c3"
        },
        "item": {
          "id": "42e66293-4a6f-41c3-88d1-36c3e0b2da9f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "01855b03-dd15-4ff4-860c-6a008f6e25ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da360be-5d61-47da-abe4-897449172336",
        "cursor": {
          "ref": "f26cbcd5-1608-40d9-bcdd-e397ba74d116",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7ab45101-1c40-47e9-8560-133b571b915d"
        },
        "item": {
          "id": "5da360be-5d61-47da-abe4-897449172336",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5aa1eb4a-6453-4ad3-80a6-307b346fbb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16682fa-3ca8-4b41-aa39-d744c905171f",
        "cursor": {
          "ref": "aa471888-9a26-4ed4-9cd6-601b349a11d8",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0a3a5c43-a3ed-4202-863d-e448ad02ed79"
        },
        "item": {
          "id": "e16682fa-3ca8-4b41-aa39-d744c905171f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "44965b87-ac4a-4b33-a4f1-ed7b0f4a861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bde6b75-fe11-480a-a83d-529512283f61",
        "cursor": {
          "ref": "13f9fd69-0bff-4169-8672-93760c6ae949",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa95015c-1d3a-40d3-911c-aad458796426"
        },
        "item": {
          "id": "3bde6b75-fe11-480a-a83d-529512283f61",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9b3848c2-46e3-4464-a7a4-a55af7b2b655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26f8c93-245a-4196-bbfc-747c5931b6a2",
        "cursor": {
          "ref": "64ba8616-26b9-48ce-bfa0-390a4afc1906",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "445a40c9-390c-40e6-9895-5f39f1977435"
        },
        "item": {
          "id": "f26f8c93-245a-4196-bbfc-747c5931b6a2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "21d7497a-ad62-4dbc-8d2a-316a3e7f238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02fcaf1-9ee0-4a93-97e9-ca957095094b",
        "cursor": {
          "ref": "0cac3d44-0f32-445a-bf7d-40eaca8358c6",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8b870486-7758-44ce-bbd9-0f58a70b462c"
        },
        "item": {
          "id": "d02fcaf1-9ee0-4a93-97e9-ca957095094b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f0bffa97-c939-4215-895d-14edac46fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16752d73-0b9c-493f-93bc-3d2b32a14c34",
        "cursor": {
          "ref": "777445b7-aa48-4b36-8248-b1dff148e87f",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eb7d785d-2fba-4fbc-bfce-021f940546eb"
        },
        "item": {
          "id": "16752d73-0b9c-493f-93bc-3d2b32a14c34",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "697a6f7c-112b-4208-992d-a783d74db31e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2b49e6-31ff-48dc-b5af-35c2e0ec7387",
        "cursor": {
          "ref": "1afa0ae8-4409-4230-aa03-8486e00465bf",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "81a325d6-4505-4625-bbb4-057c62bd097f"
        },
        "item": {
          "id": "6c2b49e6-31ff-48dc-b5af-35c2e0ec7387",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "752ca7a4-3286-468b-96a0-105689515d11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3138cd0f-1c45-4919-965a-60e82b99b2d8",
        "cursor": {
          "ref": "317db1bf-9c90-4724-b142-a3a9f07b5cdb",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "873c3222-e871-4fa2-a7f5-08817f04f932"
        },
        "item": {
          "id": "3138cd0f-1c45-4919-965a-60e82b99b2d8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf42acc3-13e5-4350-bd8c-ebdedda335f2",
          "status": "Created",
          "code": 201,
          "responseTime": 4052,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "1c3c7c04-6d23-403e-93cb-4bc8b066a915",
        "cursor": {
          "ref": "92b6ae25-25ea-4453-90e5-b0d49fe10e62",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1f766fec-4278-4d39-9161-c97c1f01001f"
        },
        "item": {
          "id": "1c3c7c04-6d23-403e-93cb-4bc8b066a915",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "74008dde-9a2f-488a-8ffd-c6b2d831ca4d",
          "status": "Created",
          "code": 201,
          "responseTime": 4330,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "b9e7b563-ccdd-4e72-b325-a13a48c4445d",
        "cursor": {
          "ref": "2c81de80-143f-42ee-a99f-7a9d5fde964d",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1de1741e-3284-4f5a-a05b-d89339cdd244"
        },
        "item": {
          "id": "b9e7b563-ccdd-4e72-b325-a13a48c4445d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e92dcc2c-9b0c-4385-9d57-b3232b765e5f",
          "status": "Created",
          "code": 201,
          "responseTime": 4758,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "a18f72e9-eff6-449a-a663-356bb9b384b9",
        "cursor": {
          "ref": "7915644c-b1d8-4c5c-add6-77d01c12e547",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04feb828-69f2-45da-a2bd-8e098b9e0aa2"
        },
        "item": {
          "id": "a18f72e9-eff6-449a-a663-356bb9b384b9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c26326ca-8c33-492d-b2cb-582ccbbf9b06",
          "status": "Created",
          "code": 201,
          "responseTime": 5902,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "d725ce43-829b-4e56-b6cd-62b47b49cff3",
        "cursor": {
          "ref": "d50f0855-839a-4049-bc27-f4ba6c09315d",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0e48530b-9f94-4bdd-98e1-58aa7808621f"
        },
        "item": {
          "id": "d725ce43-829b-4e56-b6cd-62b47b49cff3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b6c78e44-2db1-4bc9-b116-6dee0d64aaa6",
          "status": "Created",
          "code": 201,
          "responseTime": 5861,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "d1133085-e46c-4126-9c1b-0afaba05113b",
        "cursor": {
          "ref": "a97889f3-ed2e-44b7-91f5-4acb9808f63b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b762d84f-26b5-4a76-8605-fc91e4a9fc8d"
        },
        "item": {
          "id": "d1133085-e46c-4126-9c1b-0afaba05113b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3b36903-b0ba-4933-8ee2-23919cd42b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1133085-e46c-4126-9c1b-0afaba05113b",
        "cursor": {
          "ref": "a97889f3-ed2e-44b7-91f5-4acb9808f63b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b762d84f-26b5-4a76-8605-fc91e4a9fc8d"
        },
        "item": {
          "id": "d1133085-e46c-4126-9c1b-0afaba05113b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3b36903-b0ba-4933-8ee2-23919cd42b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68414fe0-6f8d-45a3-b1c8-60c567ba2de9",
        "cursor": {
          "ref": "4df437ac-7b6b-47a7-ad3a-168e0bb95043",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b593740e-7695-4e92-bbf4-ccb7b7e0559f"
        },
        "item": {
          "id": "68414fe0-6f8d-45a3-b1c8-60c567ba2de9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4e8523fc-3ec9-4b50-84c3-da57e7441c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8da5db-c109-453b-8263-1488c97e12f5",
        "cursor": {
          "ref": "020dacd7-d2ec-41b1-bfae-bc1ee15e028e",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cd6493dc-274e-40d6-884a-8b987c400ad7"
        },
        "item": {
          "id": "8c8da5db-c109-453b-8263-1488c97e12f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e78c2f19-beb7-459c-bf0a-2f4d9f4a6937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae1e9a-58c2-4454-828a-685a8e64ae01",
        "cursor": {
          "ref": "f783d53e-1ddb-49f5-9012-79d95782ff74",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3b4ec877-0c0d-4b37-9ff6-2c8b550a7647"
        },
        "item": {
          "id": "9eae1e9a-58c2-4454-828a-685a8e64ae01",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2356476-5c82-4903-ab21-bab6c6c389fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2c5aec-7632-4d7f-9bc6-14a371f395f1",
        "cursor": {
          "ref": "cb3692c2-3067-4c17-9ed6-a52fc116f4ed",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36fad1a1-bf8b-467a-becd-626c8db88d29"
        },
        "item": {
          "id": "4a2c5aec-7632-4d7f-9bc6-14a371f395f1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2889e673-749f-4a43-8c2f-4a66ad8db1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00967e82-bf7d-4b47-8c35-a84357c090f9",
        "cursor": {
          "ref": "75318f5e-1608-4eae-9810-e9c64574d385",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "39b20520-6aea-491a-b67e-6efea3852b8b"
        },
        "item": {
          "id": "00967e82-bf7d-4b47-8c35-a84357c090f9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7701e3a8-1fca-4573-870a-dcadc70baf8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84772696-07d1-4fb0-a0f8-b6cd7a807124",
        "cursor": {
          "ref": "9fae735a-917d-499b-a41b-5a57c7313e97",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9cb3ec2c-cc0e-41b8-8aee-1c4659587917"
        },
        "item": {
          "id": "84772696-07d1-4fb0-a0f8-b6cd7a807124",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "82b10e10-3f9b-4ec3-8e33-6217df71ff3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc5c630-9893-41c3-a80b-5fe63a53fdcf",
        "cursor": {
          "ref": "ff900f31-5ff1-4596-a397-dd751f3ff316",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e0cbe6f-e89f-4d3b-a314-bb3d91fc27c9"
        },
        "item": {
          "id": "dfc5c630-9893-41c3-a80b-5fe63a53fdcf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2149b9c0-b3d2-4f90-98b3-2cd1388ae055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e72602-4a09-4ae1-8308-46f4b98e349d",
        "cursor": {
          "ref": "8227909c-12cc-4bfc-8f39-8eb301698115",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c247bbf1-076d-4f25-ae0f-08770dd5ef8f"
        },
        "item": {
          "id": "89e72602-4a09-4ae1-8308-46f4b98e349d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "10e3e346-86e8-4281-ae8b-3cf6dda2c598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4bf02-07f6-4b0e-99d4-382e38e82eae",
        "cursor": {
          "ref": "604316df-e5b2-44f0-88a3-c0bb52ea73a7",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "27834d42-0f12-4424-a42c-f1ba871e2223"
        },
        "item": {
          "id": "0bf4bf02-07f6-4b0e-99d4-382e38e82eae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2af86714-72de-456e-bb1f-f73dbdafe186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d371fa-6949-4f9e-9467-a2d750f81404",
        "cursor": {
          "ref": "f341debe-8d89-487e-a412-68d37b4be854",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "208f0070-f564-451c-8620-ec7dfeabdaf4"
        },
        "item": {
          "id": "f3d371fa-6949-4f9e-9467-a2d750f81404",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11f6a420-e1d9-4157-8d7f-928269b8f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96854cf6-7ec0-4d1e-b7e6-d32fa74905aa",
        "cursor": {
          "ref": "ed5e6e4f-3b7b-4331-b303-f86dc4a2457f",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6d7dd60-6a09-468a-886c-77c8cb7f9ab1"
        },
        "item": {
          "id": "96854cf6-7ec0-4d1e-b7e6-d32fa74905aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d41dcf43-d9fc-4539-88a6-d13bcd0471a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdc35ed-6355-4b90-b712-386bd969d1f2",
        "cursor": {
          "ref": "249422aa-2975-4b08-b416-0a48190b483d",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8a45ff96-e0f8-4e0b-97c4-29b6de48cb41"
        },
        "item": {
          "id": "9fdc35ed-6355-4b90-b712-386bd969d1f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7efcf125-46b8-4cdc-aff9-a705036711e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245da14d-c9b5-4359-8229-1c8af5001264",
        "cursor": {
          "ref": "ed0856cf-f43e-48b3-b788-9f80f8f74241",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "698e9b9c-5f09-48e8-b3a8-29590df0f925"
        },
        "item": {
          "id": "245da14d-c9b5-4359-8229-1c8af5001264",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e571ae6c-09bb-45e3-8660-420c33c2f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c837a79-b958-435a-a7ef-c3d2def581ce",
        "cursor": {
          "ref": "45fb3148-1260-4f09-98f7-77db18247075",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c6af7d9b-5f58-4be3-9a0d-e6cfb483c2de"
        },
        "item": {
          "id": "6c837a79-b958-435a-a7ef-c3d2def581ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ded89c0c-9d81-4cee-9fc4-1aad146f10c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb968355-70b5-4ac4-a233-ea253f5ce432",
        "cursor": {
          "ref": "bd6e412b-8a88-44e9-9809-a9a9477ac920",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a46d10b4-66b3-4d40-a9e9-164ad2862809"
        },
        "item": {
          "id": "eb968355-70b5-4ac4-a233-ea253f5ce432",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "792d10c2-7632-4f9a-be3c-23304aa908ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353484f7-4463-42c7-bfe7-fef870d62b28",
        "cursor": {
          "ref": "d7e3ed8e-a5c6-4192-93ff-676530338b03",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "45dfe5ac-d795-4bab-81f3-0bbd58edd3b6"
        },
        "item": {
          "id": "353484f7-4463-42c7-bfe7-fef870d62b28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77758292-0dec-479f-9b0e-dcccc49511b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d987c13-7b7a-4f05-968b-31c1c993848a",
        "cursor": {
          "ref": "cd2676c5-2665-4f24-99cc-094a8ef50e1a",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d5c39d3-0dfe-44ba-80af-e6931650c681"
        },
        "item": {
          "id": "4d987c13-7b7a-4f05-968b-31c1c993848a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e5cb2d06-8869-4749-a88a-f575eb98f9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b72adf-ae0c-4361-82bf-072dff90404c",
        "cursor": {
          "ref": "8464612f-69d6-40a8-861c-a6d844d95025",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0e1e9c5f-1832-497f-ae87-2213f8ae8ce8"
        },
        "item": {
          "id": "67b72adf-ae0c-4361-82bf-072dff90404c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "50a03a74-5f1c-42f7-aaa9-b01bfdda4247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b28240-ae4a-4f74-9895-7181e53640b7",
        "cursor": {
          "ref": "e2cfdd30-7edb-480d-9814-ee5b4cdb33ce",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "956e200a-0e48-46d7-b760-e15187cd3abe"
        },
        "item": {
          "id": "e5b28240-ae4a-4f74-9895-7181e53640b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "947e5881-0624-4172-bcd1-5d4a7c69ced9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9664759b-60c9-4047-89ea-488c5817ff17",
        "cursor": {
          "ref": "bb6975d1-4500-4376-b5b6-61a47e0488ec",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bbe62885-d178-413e-8772-9bdcea47d1c3"
        },
        "item": {
          "id": "9664759b-60c9-4047-89ea-488c5817ff17",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8b27ddc8-8a99-409d-b94c-7457d523dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc698f6-9584-4c09-9df2-c57972533cfc",
        "cursor": {
          "ref": "9eaabba4-1503-4ea7-b2de-f7f71b2aa3bc",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f32dec56-60f0-4bf0-a369-0021c9a50d7d"
        },
        "item": {
          "id": "2fc698f6-9584-4c09-9df2-c57972533cfc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0b468536-8774-421e-8687-5ce077039d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67ef923-27fb-42c6-a5ea-cf9bfe3987cd",
        "cursor": {
          "ref": "661d4175-81f4-4a97-9d11-809343354466",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d161c06c-e4da-4dbd-b31b-510359521857"
        },
        "item": {
          "id": "b67ef923-27fb-42c6-a5ea-cf9bfe3987cd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5785f4c6-3f5c-4e8a-9ad0-5a9b78f0c1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed92293d-7f75-41a8-8035-6094039edea4",
        "cursor": {
          "ref": "405cb80e-473b-48fa-9b9f-ebdd291f8ccb",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "67bfcfc8-e964-491a-a199-ee62effc1839"
        },
        "item": {
          "id": "ed92293d-7f75-41a8-8035-6094039edea4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e2033cfe-5fa6-4668-8da2-72cf9adba8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04727329-6987-495b-b481-f22bd6b95de6",
        "cursor": {
          "ref": "84d3c851-cc2a-41cf-ba70-3d4c7e937afb",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dce825b9-36f1-4a75-b45d-f3be1299d5d4"
        },
        "item": {
          "id": "04727329-6987-495b-b481-f22bd6b95de6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2bf5c494-78ef-4455-94ea-46d108239610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902dd304-ff8d-4ae7-a7c1-997360eb560b",
        "cursor": {
          "ref": "bacd413d-7617-40fd-ac91-0b04da58724a",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "95834522-2351-465f-a15f-183f4a3f7e76"
        },
        "item": {
          "id": "902dd304-ff8d-4ae7-a7c1-997360eb560b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7252c981-4e0d-4ad3-aecd-6ff3f22517e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295b3114-9195-4ab0-bb5c-01669ca80754",
        "cursor": {
          "ref": "4a0ad24c-ecb0-4ad5-a863-32f5e8d7db58",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c1ee954-e9d4-4cb1-98e8-76280adb5c95"
        },
        "item": {
          "id": "295b3114-9195-4ab0-bb5c-01669ca80754",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a083fdd5-72eb-437b-8193-32c7663cc4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34561242-1181-4ad4-941e-cf2718f487c3",
        "cursor": {
          "ref": "c080cf91-c586-4cb7-af55-e2c06c1fd26f",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dd062010-1061-40d5-8754-e6ec1738d220"
        },
        "item": {
          "id": "34561242-1181-4ad4-941e-cf2718f487c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "34067aa4-c64b-4351-958a-606825a4dce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4480dd7-d3da-477c-bbd4-ec29f4cf6feb",
        "cursor": {
          "ref": "4712039b-07d5-4ee4-a196-60bdc868f762",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7aa268f4-156e-4dde-aace-148d1f87949a"
        },
        "item": {
          "id": "e4480dd7-d3da-477c-bbd4-ec29f4cf6feb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c6d64a17-6a70-42c9-abe8-a26f207ad129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853f3cdc-c4f9-45db-b643-2ef3a864a2d4",
        "cursor": {
          "ref": "3c2d71d0-4387-4b04-8322-3ba8e3ab9ac0",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d64cbe42-3a70-4d08-bce6-518b902ff913"
        },
        "item": {
          "id": "853f3cdc-c4f9-45db-b643-2ef3a864a2d4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8e159694-d83e-4b7b-8662-3f115a198a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55e6ba-95fe-4906-abee-c04160bed68d",
        "cursor": {
          "ref": "2517352a-9997-4182-9bdb-a23b40afed4a",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "45b0c524-1803-4a9a-8b1a-91a027c6eace"
        },
        "item": {
          "id": "ff55e6ba-95fe-4906-abee-c04160bed68d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "137d6a6b-2d5e-4dfd-8b1f-c2b286c78fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914aac6f-ecd1-4aa6-8a89-852a34d6434d",
        "cursor": {
          "ref": "6b41156a-894f-4cef-a4bc-6554a4e1bc49",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff549b63-3fab-42b5-a765-7a9104cad643"
        },
        "item": {
          "id": "914aac6f-ecd1-4aa6-8a89-852a34d6434d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4bda4f5f-2099-48bc-80a1-1aaa5f6d7a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebc64a7-11a4-43ca-8ef9-f47f1a8d3b55",
        "cursor": {
          "ref": "582cdc38-65cc-45c9-9cf4-4caf4548849c",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7bbdc650-bb82-4b48-8bd9-fc33f1e40883"
        },
        "item": {
          "id": "4ebc64a7-11a4-43ca-8ef9-f47f1a8d3b55",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1a12c2dd-aab7-46b4-8049-e4ea837825ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02acee28-2dde-4cc6-b591-0c37672006d7",
        "cursor": {
          "ref": "ace6f813-c86d-4a25-a137-f9db8f72a297",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a4eb53ac-69dd-4b7a-996b-8a97e992adc8"
        },
        "item": {
          "id": "02acee28-2dde-4cc6-b591-0c37672006d7",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "5b18cf57-f032-4bc8-9bf9-6c6e5071e6f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152b1b62-c41a-4553-b174-7cb5f2fce27e",
        "cursor": {
          "ref": "38c324c0-69cb-4045-8307-2ea28cc2421f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c7e634fe-9484-4fc6-a76b-3d644e53f8e3"
        },
        "item": {
          "id": "152b1b62-c41a-4553-b174-7cb5f2fce27e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c53149d-7d52-4ac4-96c3-7c9b98ccdb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152b1b62-c41a-4553-b174-7cb5f2fce27e",
        "cursor": {
          "ref": "38c324c0-69cb-4045-8307-2ea28cc2421f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c7e634fe-9484-4fc6-a76b-3d644e53f8e3"
        },
        "item": {
          "id": "152b1b62-c41a-4553-b174-7cb5f2fce27e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3c53149d-7d52-4ac4-96c3-7c9b98ccdb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632581d2-6953-47de-aac5-da9e1218414c",
        "cursor": {
          "ref": "a6cb23c0-9039-4a99-aa97-ce968f86c1a9",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c4aa32fd-be5d-4842-b03b-9e1de5892f51"
        },
        "item": {
          "id": "632581d2-6953-47de-aac5-da9e1218414c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "275fc2d1-2593-4420-b473-0a88df1d7b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dd8191-debe-48c1-82ad-91a9baa7d553",
        "cursor": {
          "ref": "c4f29c19-698a-4781-86df-034671837666",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c08c4ad6-4a39-4935-b181-842bbeaf05c0"
        },
        "item": {
          "id": "e8dd8191-debe-48c1-82ad-91a9baa7d553",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "07a46b80-0664-4489-949c-e835d93c8a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ca04b5-b359-46ea-ade6-033818451c2b",
        "cursor": {
          "ref": "6cda63f1-91db-4f49-b452-03660f279b8d",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "782787d7-4278-491a-84c1-158bdaf78dad"
        },
        "item": {
          "id": "93ca04b5-b359-46ea-ade6-033818451c2b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a24737b2-cc36-4f55-9c57-534896ec067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426009c1-1355-471f-a007-66de57131141",
        "cursor": {
          "ref": "e6d6ec92-2237-4518-a75a-d703e22f5a1a",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "29609201-6d18-4809-bf5d-d16a8533456b"
        },
        "item": {
          "id": "426009c1-1355-471f-a007-66de57131141",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f807513b-440b-49f1-bdd8-c15bfcc0c589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4518d0ee-5d3a-4ec5-8e81-a78bba441ac9",
        "cursor": {
          "ref": "2c97165f-de95-40f3-8433-d3e2bbb4ff8e",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9976abd-b04d-40c7-ac64-59f15061efd0"
        },
        "item": {
          "id": "4518d0ee-5d3a-4ec5-8e81-a78bba441ac9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a35c2a71-df49-4364-be2e-da0477bb044a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7469d56-53bf-4955-abf1-3b922890779e",
        "cursor": {
          "ref": "e89eefbe-1669-48d1-9494-146c369a07b7",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cfc0049b-fd62-4019-81c2-37bcb6113e18"
        },
        "item": {
          "id": "d7469d56-53bf-4955-abf1-3b922890779e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2c86f517-80d0-40e7-9a11-16189933fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd41d652-a1f2-4852-8906-2b68687ac9e2",
        "cursor": {
          "ref": "2ce0895c-60d3-4a92-9001-eec7eb6b2ff4",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dbc64151-4282-4cc5-9d9d-5f88458fc4f3"
        },
        "item": {
          "id": "dd41d652-a1f2-4852-8906-2b68687ac9e2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b9366474-6500-4f3d-b9c6-845021531c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e83ef2-7d70-4d42-bd5e-5bc0e558bd48",
        "cursor": {
          "ref": "c377955c-3d08-4581-81c6-da20a82edde3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "38ce0ab1-a3f2-4c7b-9f1b-8b6e56a7b819"
        },
        "item": {
          "id": "a5e83ef2-7d70-4d42-bd5e-5bc0e558bd48",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cca7631a-efe4-4622-8068-e456d504802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fe75ce-9dc5-4391-9a47-b4328bc403b0",
        "cursor": {
          "ref": "034e4ecc-28b3-41f6-869a-061a85122119",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "142f1422-3ac0-4bd8-b8d6-eddc0b133a1f"
        },
        "item": {
          "id": "14fe75ce-9dc5-4391-9a47-b4328bc403b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "02590b5b-e423-4888-9e13-f03816cc7f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9cbbb2-e25a-420e-a53e-d0a86446249a",
        "cursor": {
          "ref": "37a2b2c5-47f1-4e13-a231-bdef03711959",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "76fe3f94-76c7-4a04-8cd6-62c180618078"
        },
        "item": {
          "id": "cd9cbbb2-e25a-420e-a53e-d0a86446249a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "390690bb-bf48-486e-a022-18999e79673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f68a2d-e31e-4532-aac2-42219010d35a",
        "cursor": {
          "ref": "0977f564-0d0c-412c-ab2a-081025b291a7",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "526792ff-fb4e-4f83-a7fb-c3c35962103b"
        },
        "item": {
          "id": "97f68a2d-e31e-4532-aac2-42219010d35a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc411b7d-d7a1-4c85-bec2-e73fb2742efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5975e49a-d6d1-4faa-8851-278762ce5a46",
        "cursor": {
          "ref": "5726582e-e84f-4a8c-af9c-569884d62420",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "60e004c9-2e29-45e9-9bbe-b8d694fbf0af"
        },
        "item": {
          "id": "5975e49a-d6d1-4faa-8851-278762ce5a46",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0e7c2e3e-4f56-4022-abf4-a1f6d1f36b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b384bc-9ea4-42e9-b69f-5b8781402efb",
        "cursor": {
          "ref": "debc43a8-44b9-4920-a35a-79585ce0956a",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8fdbef2c-3e4c-4e72-bdd6-7074a9c059db"
        },
        "item": {
          "id": "47b384bc-9ea4-42e9-b69f-5b8781402efb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bc858f58-4a37-498d-a8a6-69cab3543dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eca7bb-fd39-4690-932a-cfb12165cc96",
        "cursor": {
          "ref": "de018a6e-dd48-4cb6-958b-6e49dccac4ab",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "340b3dc4-02ce-4f30-9a48-dc5a6f46e1d4"
        },
        "item": {
          "id": "03eca7bb-fd39-4690-932a-cfb12165cc96",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a390a04a-ac15-4ad4-ba41-48212d82cc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f2a245-5f0b-4f8e-919c-388deeda3611",
        "cursor": {
          "ref": "20ded113-b7a0-41c2-a39f-0683932001bb",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4004059c-7eaa-411b-9516-478281ffd842"
        },
        "item": {
          "id": "07f2a245-5f0b-4f8e-919c-388deeda3611",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ab1ad6c-6d96-4cdc-841b-afdb35337643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f9533f-f0b1-4869-ab1d-e45410b120f8",
        "cursor": {
          "ref": "8de39314-b16e-4687-8281-52c23f5725de",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dec1e290-6ab4-4e08-8c90-c651ef089916"
        },
        "item": {
          "id": "c7f9533f-f0b1-4869-ab1d-e45410b120f8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a35d46b9-8629-450e-b695-88c277b4d719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d7ff62-75de-4395-aba9-71709adb6c2a",
        "cursor": {
          "ref": "0c7a43d1-4fcf-470a-addb-c2ce108137f1",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c17483d3-d571-46a8-aa53-ab6cc4ebb44d"
        },
        "item": {
          "id": "b6d7ff62-75de-4395-aba9-71709adb6c2a",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "7d356232-73fb-47d7-97d7-a235b36a241c",
          "status": "OK",
          "code": 200,
          "responseTime": 3578,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "2fdfcd6f-b079-4c54-92a9-98617ffc262c",
        "cursor": {
          "ref": "65d00adc-4ed9-4b1c-af77-5af1aa01f023",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "920a8935-ade5-49dc-81a1-f128deb04bd8"
        },
        "item": {
          "id": "2fdfcd6f-b079-4c54-92a9-98617ffc262c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9c1f1a74-07f8-478f-974b-4e8c3b5067a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bfb2b6-2268-4fa6-be0b-d70fa0ed6dd5",
        "cursor": {
          "ref": "557d9db7-7662-4ff7-b54c-88045d324e57",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0900e2de-821b-4fd2-a5e5-e9ad7bc2a20b"
        },
        "item": {
          "id": "72bfb2b6-2268-4fa6-be0b-d70fa0ed6dd5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d99da2e1-caac-4bdb-9663-037089341458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be475f5-3320-41d1-985e-71a1d3d1d930",
        "cursor": {
          "ref": "39e2ab75-2baa-4b04-a51e-3989788c6f9f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9264108e-33ad-4cb7-b859-a63eb6ae514c"
        },
        "item": {
          "id": "9be475f5-3320-41d1-985e-71a1d3d1d930",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "34fdf8fd-7826-4d44-92d4-248809e84406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015aae04-0169-41a0-9cad-b9f60ad269e8",
        "cursor": {
          "ref": "4ca2d4a1-807f-4eff-8832-4cfb62608a92",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7cf9502e-d6cc-4a5b-bd99-281f999a60cd"
        },
        "item": {
          "id": "015aae04-0169-41a0-9cad-b9f60ad269e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b38d54dc-b537-4b04-a330-796595f4ded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944047c8-e7dc-4883-bad4-40a59b992a72",
        "cursor": {
          "ref": "ca2e3974-2c72-42dc-89d4-80f336aadbb0",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7dc6ef5f-2e4e-4aa8-b4e8-a231b1fb3353"
        },
        "item": {
          "id": "944047c8-e7dc-4883-bad4-40a59b992a72",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "eb88838c-7c5c-491a-85ba-4f17d5af07b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fbf1a1-3e7e-4657-ac7e-fa60de97bce3",
        "cursor": {
          "ref": "823bd4f7-a0f5-4d65-a9ee-c4126dcc4eef",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f9a9f3f-618a-4036-be22-ad5ebe291ee7"
        },
        "item": {
          "id": "04fbf1a1-3e7e-4657-ac7e-fa60de97bce3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "783236be-d8c6-4d02-8c50-5e10742e377f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3791c34-d709-4df0-84f9-f8c571763aaf",
        "cursor": {
          "ref": "cc218ac3-c549-4c48-8251-5a0984af608f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bea56eae-8109-455a-9d24-896c7052589e"
        },
        "item": {
          "id": "e3791c34-d709-4df0-84f9-f8c571763aaf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e513183a-8720-4822-835f-0d936f2ee8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc0d2b-d380-486a-ba7c-b89411bb43cb",
        "cursor": {
          "ref": "b53022a6-3d0f-4581-a5e6-a2a4553a982d",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4c5b5e99-8f14-4688-8e24-6344994f16fc"
        },
        "item": {
          "id": "a9fc0d2b-d380-486a-ba7c-b89411bb43cb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "23104733-3c12-4023-8bac-9bcf65c9b3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a8f53b-946b-43f6-ae0b-3be3b6d7e06c",
        "cursor": {
          "ref": "4edc181a-8b2f-4eb2-97c8-f8ee9a0ddd38",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "93810d04-2ac4-4a9b-91aa-4725218d5603"
        },
        "item": {
          "id": "95a8f53b-946b-43f6-ae0b-3be3b6d7e06c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3db6f1b7-f3de-43dc-87da-3dd6e437f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e59ba0-40ed-458d-b932-7e136c892cac",
        "cursor": {
          "ref": "b59d4538-2920-4f53-9718-68b9ab5f7c92",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b3268e1-41d0-4f48-96bc-c101bca58d80"
        },
        "item": {
          "id": "53e59ba0-40ed-458d-b932-7e136c892cac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "de58e21b-c6f8-45cb-897f-14ce63885cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51810cad-9d46-4a46-acd9-6f7dd93e7a6d",
        "cursor": {
          "ref": "83f1346d-ce7a-46f0-a139-425cbf9f53a3",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "75e9891b-c728-4cb2-9a7f-e2301b90d9c3"
        },
        "item": {
          "id": "51810cad-9d46-4a46-acd9-6f7dd93e7a6d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a200fbdf-4edc-4db4-8b71-41632bcdbe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae6558f-7ce9-4665-b1a2-115b9f97758d",
        "cursor": {
          "ref": "41be7ab5-25ca-441b-bb35-54c8976b417d",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c5ee27c0-bb1e-45f4-aa7a-155c8299b80f"
        },
        "item": {
          "id": "dae6558f-7ce9-4665-b1a2-115b9f97758d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9969a932-c44f-4b4b-a23e-793df76b654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3b4873-df3d-4ded-8ad7-932f93a047e8",
        "cursor": {
          "ref": "ef4f3ecc-38af-4c7f-a293-7ee2df1d3431",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b37c24ce-db04-4549-8f9e-b690100993fa"
        },
        "item": {
          "id": "1c3b4873-df3d-4ded-8ad7-932f93a047e8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "24c14d04-17da-4091-96b1-f79ffe36a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89489559-62d8-4cf4-af72-5c440cc93870",
        "cursor": {
          "ref": "897be9a4-ec2b-4be9-af14-b52350acf956",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b7803de1-d217-4e0d-8dfd-b14ef2ad0dd2"
        },
        "item": {
          "id": "89489559-62d8-4cf4-af72-5c440cc93870",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2d52a8e9-43f6-4f6c-aa8d-55aaf01eb4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b189f227-7452-4f29-b290-6176f32c8dfc",
        "cursor": {
          "ref": "5e733a28-a606-43f8-a1a5-eafedbc5703d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ec2f6e79-1e70-431f-b92a-bdc1d513195c"
        },
        "item": {
          "id": "b189f227-7452-4f29-b290-6176f32c8dfc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6fab7c07-007a-43f0-ac9c-4b817ba9ab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db63296-075c-468a-9034-0530b0c23802",
        "cursor": {
          "ref": "db3085ec-bb2b-44b3-9270-19636b4ed7c2",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e7694e89-9d60-48a1-b501-d5eeb1cb597e"
        },
        "item": {
          "id": "2db63296-075c-468a-9034-0530b0c23802",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "16ebd900-1674-46c6-bfc7-5767f37ef83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8357bd94-9dce-47be-b386-3f51765360bd",
        "cursor": {
          "ref": "00a81511-5ee8-4a75-be33-c4cb0d0c12da",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "391657e0-db76-4979-9228-77e7fc04dd6e"
        },
        "item": {
          "id": "8357bd94-9dce-47be-b386-3f51765360bd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "725d49f7-665e-4299-b618-734524dc31bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56ef263-88d2-4bb9-9d54-b7436ab15d55",
        "cursor": {
          "ref": "f256a80c-e21d-416e-b214-df8328a917ea",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c5e4cc98-01ef-4c14-b4d7-2b768b52d19c"
        },
        "item": {
          "id": "c56ef263-88d2-4bb9-9d54-b7436ab15d55",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee9a9b28-e638-4862-acca-5c14c672c390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286ed10e-3504-4554-9063-4acaf4c7167c",
        "cursor": {
          "ref": "2a8b1004-4512-4dcc-a2c4-ca5730d02d65",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "df08b6ba-fb35-453d-8a33-a3b74afad464"
        },
        "item": {
          "id": "286ed10e-3504-4554-9063-4acaf4c7167c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a58fc75e-d783-4294-ad76-7d1c49dae899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de06684-756f-4b85-915a-f499717b6178",
        "cursor": {
          "ref": "cf26383e-a9e2-4caa-86b7-fd75a0386d9c",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1fd4eba4-b0da-4b27-9483-ef005a9fb4bd"
        },
        "item": {
          "id": "3de06684-756f-4b85-915a-f499717b6178",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d73ad0e5-5a64-4404-90da-f5e12275958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2874ea74-6d09-4ca8-a599-aaa02705cce7",
        "cursor": {
          "ref": "589812ef-2915-4207-b5f1-e3def6bdf76b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9b1a9453-e06b-42cd-b962-3aa1d4b8abcb"
        },
        "item": {
          "id": "2874ea74-6d09-4ca8-a599-aaa02705cce7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "16564127-5306-4df5-b689-fef146594c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782f68d-991e-4ba0-a2b7-753ed933c858",
        "cursor": {
          "ref": "59423cb3-c4e1-424d-bc77-507ff6aa814a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "74aa7ecf-1c4a-4dc4-a1f9-a7466382ab29"
        },
        "item": {
          "id": "7782f68d-991e-4ba0-a2b7-753ed933c858",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b55ae042-d1ae-4a5b-bd29-de7423e511e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02be8f2-31e2-464a-9eaa-e225d4ade673",
        "cursor": {
          "ref": "4fc287a6-ae6a-462c-803b-e5641334d236",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f6fdc227-08a5-488f-ab5f-90453873ff18"
        },
        "item": {
          "id": "b02be8f2-31e2-464a-9eaa-e225d4ade673",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3e73c6be-e067-466a-9da9-7a6e1a934063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317faeab-d797-4ddb-99ef-8f1426ccaadf",
        "cursor": {
          "ref": "66f2aa3a-41c8-4c7f-a5db-944417ec0f0d",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "41bb9302-83ec-4b69-86ae-5b1b38dcec5f"
        },
        "item": {
          "id": "317faeab-d797-4ddb-99ef-8f1426ccaadf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64e91bf1-33e3-4e7c-b057-85caa2066c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399a14b-9107-4bf5-9643-a3e7775601ca",
        "cursor": {
          "ref": "45720fa2-a7dc-46b3-9907-51054af5643c",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "40ebbc1c-8800-46d8-8d1a-f47bf6bb5e70"
        },
        "item": {
          "id": "e399a14b-9107-4bf5-9643-a3e7775601ca",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2a06fc8e-d136-4fa7-8650-0df75e4d1868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db573f7-52fb-45ef-a199-d9039a4328c0",
        "cursor": {
          "ref": "628d8af3-e4dd-4c71-8830-5d18181c35ea",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8f15a81b-c33b-4497-a40a-286ebf600e04"
        },
        "item": {
          "id": "0db573f7-52fb-45ef-a199-d9039a4328c0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e490a5a4-a43c-4431-ac77-371b59bc3b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a666b00e-98f6-4137-8420-434ee96e003d",
        "cursor": {
          "ref": "d583aff0-37e9-4d33-9361-739887909f47",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c26c026-a08f-499e-9b65-6b3c86bab5fe"
        },
        "item": {
          "id": "a666b00e-98f6-4137-8420-434ee96e003d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e7acfd1-dbc5-47cc-a4c2-c9729b464c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc2143c-0d0e-4207-b8f7-b94c8db3c542",
        "cursor": {
          "ref": "4a0be50a-665a-4895-8418-bb6a1005bf79",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "179535fc-b16d-4e6b-abc7-9a0aa776cbfc"
        },
        "item": {
          "id": "ebc2143c-0d0e-4207-b8f7-b94c8db3c542",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "38cc9f11-551a-4664-bdda-c400564cf56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098191ae-6b92-440b-a570-686ad6cf0140",
        "cursor": {
          "ref": "94e788a0-12ed-42ce-b9e6-3b7204b1927a",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7657eea4-3f9c-46a6-8c70-837cf790f7ed"
        },
        "item": {
          "id": "098191ae-6b92-440b-a570-686ad6cf0140",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "62141c98-e11e-4b3a-8ff0-89ffdd5472a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c570d8f2-336e-413f-8176-b57e3f380322",
        "cursor": {
          "ref": "a43c1069-fcd4-4e77-9e39-5a8c6a4c8c8b",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "feaedf75-0717-4e9c-99e9-cf6437c6e362"
        },
        "item": {
          "id": "c570d8f2-336e-413f-8176-b57e3f380322",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "601b8681-74ce-4b3f-b252-8a0a3e0c52bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad44735-789b-4502-9ba3-1745534c1077",
        "cursor": {
          "ref": "935fe377-1b8b-438a-b51e-2c5f7644af34",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dc2e5bbc-2470-4b3b-b8f8-78f951df053d"
        },
        "item": {
          "id": "bad44735-789b-4502-9ba3-1745534c1077",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d32e07a5-d0d9-476d-a6d9-951fe0949150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ddac1b-3308-4d53-89af-29855a2b5b82",
        "cursor": {
          "ref": "db86b3cc-a770-460e-ae4a-5554e57a8c98",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ce140908-5aa6-4d9c-84b9-3c466076a6d4"
        },
        "item": {
          "id": "c3ddac1b-3308-4d53-89af-29855a2b5b82",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cffcf700-b345-4a88-86ae-5d0cb9c4dd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3663d78-0634-4cb0-a9a9-0b41acbd3d4f",
        "cursor": {
          "ref": "09c4db53-023d-482d-a8d4-c3d4753143f3",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c92a663c-ae69-496c-a0e0-f20fcc88e183"
        },
        "item": {
          "id": "f3663d78-0634-4cb0-a9a9-0b41acbd3d4f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3faa8ac-f505-459a-b5a1-3f1ae048a310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd3fce5-7c5a-4bb1-8614-17f5ac4e3181",
        "cursor": {
          "ref": "8f8c7be8-a4d1-4eec-9494-25db317f40df",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "769dcdad-e5d7-48e9-8dd1-4bf67f499b92"
        },
        "item": {
          "id": "9cd3fce5-7c5a-4bb1-8614-17f5ac4e3181",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1d2152fa-2142-47c4-b674-0a994cfd33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6384d1-2160-434a-bebd-f984e49e2718",
        "cursor": {
          "ref": "739aedfb-22f1-4859-b422-ce06fbe3e774",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "40186aea-6785-4d8a-954b-b72b16068a9d"
        },
        "item": {
          "id": "eb6384d1-2160-434a-bebd-f984e49e2718",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ab3475f3-0133-4218-8812-1d79521274b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de32262-0c37-472e-947f-c84225dbcd2f",
        "cursor": {
          "ref": "e87497f4-ad54-4805-a71f-ea0ba7e4d84b",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7860a70a-9eae-44a7-9262-ebf5a11abce3"
        },
        "item": {
          "id": "6de32262-0c37-472e-947f-c84225dbcd2f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4dc1a1a2-021b-4a0b-8201-e28dfdc74aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1731a24-890b-4b53-97d6-7abb9cf9cadb",
        "cursor": {
          "ref": "04901d78-244c-496d-acde-853febb92b73",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "79b3a500-763f-4537-9d9f-aa75d5106d37"
        },
        "item": {
          "id": "f1731a24-890b-4b53-97d6-7abb9cf9cadb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "52529fab-5c62-4b0b-a007-e5074409b0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9193866d-f30d-4110-ba4e-de83f7cd43ed",
        "cursor": {
          "ref": "21d47041-c92b-42ae-95ce-7a1cab2ff327",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "67a0bb93-382f-4360-a3d2-ab0ee08b1cab"
        },
        "item": {
          "id": "9193866d-f30d-4110-ba4e-de83f7cd43ed",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3a573216-947a-41a6-819d-f0026b3a0bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c9ae88-8dbc-4cb5-842c-d5694a89f893",
        "cursor": {
          "ref": "c4928a6e-2785-4c30-b5b1-1070edb0d3c2",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9e87cf7f-c6ba-4262-8e6a-bf899e456890"
        },
        "item": {
          "id": "12c9ae88-8dbc-4cb5-842c-d5694a89f893",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "11851801-cfb0-46a9-bbdb-606c32e1df3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a5bd2-6e71-4c63-91d4-b21e79fbcc8f",
        "cursor": {
          "ref": "8b313eae-2690-4f81-a0e6-346f08c9fd71",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e7054dd3-9157-49c2-912f-7250c7dd0727"
        },
        "item": {
          "id": "036a5bd2-6e71-4c63-91d4-b21e79fbcc8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c0cd2b1-857d-4218-9fd5-bbaf7a02e39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1fe6f1-330a-485d-bc96-609c284fc617",
        "cursor": {
          "ref": "2297bb75-c148-429f-84a6-590eb804a3d5",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91c40d54-e3f8-4e67-88b1-9f78c9298cc7"
        },
        "item": {
          "id": "0e1fe6f1-330a-485d-bc96-609c284fc617",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2353ce99-2cc8-454d-a7a0-81f2a7b45270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e707e0-ca1c-4a05-9aed-0c3a38f10155",
        "cursor": {
          "ref": "78c25ec5-0212-4bc0-9c94-68cab3090d4e",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e449af4-cfc4-4263-ac0a-f09e34fdbfa4"
        },
        "item": {
          "id": "70e707e0-ca1c-4a05-9aed-0c3a38f10155",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e2f46ae7-e83b-49ae-929e-d730d1724796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa09405-26e7-415f-9b17-a4f3e4098647",
        "cursor": {
          "ref": "0ce72296-6cbe-4c27-8588-05bb43522417",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f7481861-47ef-4429-95e7-4a0d6462929b"
        },
        "item": {
          "id": "0aa09405-26e7-415f-9b17-a4f3e4098647",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f6b69841-a6e1-407c-9fac-0eea0f4b2ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37c2b01-9634-489e-972e-2260cf7ca3ca",
        "cursor": {
          "ref": "00b73fc5-d015-4bd3-9758-5c2eb841832a",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5231bf89-f7b4-4c2a-b18d-4e39d8038596"
        },
        "item": {
          "id": "d37c2b01-9634-489e-972e-2260cf7ca3ca",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "10c57a00-b1f9-41c2-8df9-abc6f74bc0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d49dba-4107-47de-a858-387dce8a1035",
        "cursor": {
          "ref": "03ec2ad4-91e6-4d82-8de4-b42a489d03fa",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "68295606-1217-4638-9f29-8838e8171ff8"
        },
        "item": {
          "id": "a7d49dba-4107-47de-a858-387dce8a1035",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c60a6efb-ae89-435c-b0bb-b7dad61a0873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba683896-73ef-41f2-b419-e5c61fd545d0",
        "cursor": {
          "ref": "fe21848b-7a49-458c-b5c0-9da0a2d29def",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7e0b26e0-49e8-4cbc-9f25-2ee24b242724"
        },
        "item": {
          "id": "ba683896-73ef-41f2-b419-e5c61fd545d0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7d6d7f5a-3551-41aa-86ef-57ef9fe453a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb3ec4b-c698-497a-a61b-733e826191f2",
        "cursor": {
          "ref": "c0e6cbdb-5e26-45d6-bde4-a5e9b1c662c5",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9a3dd282-d6f9-4af5-bdc4-e3ff866dc8b4"
        },
        "item": {
          "id": "8bb3ec4b-c698-497a-a61b-733e826191f2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f2b93a8-cb90-4382-a087-27c65365a67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5591fd5-dc57-46a9-9457-63b2ac0ba676",
        "cursor": {
          "ref": "7792bed6-8ec2-4519-9d10-22830d4f0d66",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "538bb3ff-2ff3-4b0e-a198-837654a3f089"
        },
        "item": {
          "id": "b5591fd5-dc57-46a9-9457-63b2ac0ba676",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "13469b3d-35a0-4462-b172-698134d788a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c80178-3d22-42a3-aa43-aab9766c4fb8",
        "cursor": {
          "ref": "955ab3bb-1c00-4a4f-839c-ba43d52b9342",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "29ac40f5-6f1e-47ac-b86e-36ebe3a85c87"
        },
        "item": {
          "id": "91c80178-3d22-42a3-aa43-aab9766c4fb8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d9e3c48d-9839-4490-9a27-c1f3541a7ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67265fb6-8e28-4608-9769-aee8a15fbff4",
        "cursor": {
          "ref": "e7ee0e88-19ca-47b8-89d5-5ed43a5b4c33",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f08d7b1f-ed9a-457e-b0ef-2e9d979f1bdb"
        },
        "item": {
          "id": "67265fb6-8e28-4608-9769-aee8a15fbff4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "845fdab2-c6c7-4f60-af91-0735266ceb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa15d46-bdaf-45dc-8222-14263915a3f1",
        "cursor": {
          "ref": "d1190c8f-ebea-4a54-8eec-59e6316bf3c1",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "907f73d6-63ca-47c1-bf9e-50b3d91ac4f3"
        },
        "item": {
          "id": "6aa15d46-bdaf-45dc-8222-14263915a3f1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "24a4d6c2-447a-4392-9d48-32bd746ae4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1581c05-08f5-4a0f-850c-390aaa6a379e",
        "cursor": {
          "ref": "d29e1188-6a43-4fd9-8a5c-316b86010ace",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "37598be7-175c-4f8c-a52e-f0889030616b"
        },
        "item": {
          "id": "c1581c05-08f5-4a0f-850c-390aaa6a379e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93a06f2f-ef0b-4929-a215-6c87e0df5933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3c059d-11b1-4f10-9390-dbc0c2b4585f",
        "cursor": {
          "ref": "13873c27-a215-4e8d-9b4c-d7222a90e358",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a2ec56e-a4a1-4275-af08-aaf790c741fb"
        },
        "item": {
          "id": "4e3c059d-11b1-4f10-9390-dbc0c2b4585f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8ba55831-62bb-4d29-85c7-a5ffcd1021a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf54554b-1ecf-4faf-9ff5-31bbc6f86d2d",
        "cursor": {
          "ref": "b90da8ad-2443-49df-a913-74bc160f7509",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3aaf0437-6ad7-4b20-85e8-dbac3616be90"
        },
        "item": {
          "id": "cf54554b-1ecf-4faf-9ff5-31bbc6f86d2d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e9d83c6a-7d4f-4713-a47f-4055d85498bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8740637-4f78-49fb-9105-55c94b93d1ea",
        "cursor": {
          "ref": "d8801811-9ddf-4cf7-971d-2e6640f7b611",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "250a4029-3528-415a-ab1f-5f49f00cb6fc"
        },
        "item": {
          "id": "d8740637-4f78-49fb-9105-55c94b93d1ea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3ce692da-7117-4178-865a-6e9c62b8e7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c6f6f-afcc-4867-9095-dd7f5ff60e7e",
        "cursor": {
          "ref": "758cd6d7-2e31-44ff-b13f-e312c428a0ef",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e98614b-4afe-4743-bd25-df1febf49775"
        },
        "item": {
          "id": "c72c6f6f-afcc-4867-9095-dd7f5ff60e7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5c1e79e5-2293-41ba-8ce9-60e3b351de11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479976ed-1a7e-45cd-a562-2dddd99d0940",
        "cursor": {
          "ref": "a9675787-22df-40e4-9eaf-537865a2bfaf",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "143e9eea-7218-4435-ae96-a7ed3420c975"
        },
        "item": {
          "id": "479976ed-1a7e-45cd-a562-2dddd99d0940",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fd0405a3-33d2-4887-98a3-e173182fa1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a5d963-ac22-41ec-bcc6-e5d1d9157f6c",
        "cursor": {
          "ref": "c0990e94-ea6b-443d-bd63-5c428097e4bf",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6de27555-83c0-4a76-9909-600589dd7ab9"
        },
        "item": {
          "id": "89a5d963-ac22-41ec-bcc6-e5d1d9157f6c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9f546916-46a6-43f3-b8fa-8b7c6657343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8ce53-7747-4f3a-948f-2ae2bc492ba6",
        "cursor": {
          "ref": "8bfe8606-687e-4e4d-a97c-70e1b1cf18ec",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8f9174c6-3b24-4fdb-8328-decdd7d6777b"
        },
        "item": {
          "id": "54d8ce53-7747-4f3a-948f-2ae2bc492ba6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5ed5c6fa-55c5-4218-8121-dc04c0d7b6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e45608-f477-4a08-9099-2c41c4cad6d5",
        "cursor": {
          "ref": "5fbfefb3-8060-433c-8026-6af727be1712",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3686e063-d132-4c38-bbc2-88769a798c7e"
        },
        "item": {
          "id": "50e45608-f477-4a08-9099-2c41c4cad6d5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "12f30993-3158-4a98-9b5e-582b82048dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b710d9a-273f-4b57-a67e-aee26b3c1e6e",
        "cursor": {
          "ref": "4180548b-0455-4c17-8e3f-d7a8f61a1e7e",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c328468a-12bb-4d71-883f-19e5bf062777"
        },
        "item": {
          "id": "1b710d9a-273f-4b57-a67e-aee26b3c1e6e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "59684e25-f5f7-42ff-b210-3c26c7a3242d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5a97b-5786-4439-997f-779beea8843f",
        "cursor": {
          "ref": "67351357-c141-4e52-8282-017eb07e9b42",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ad31828b-20c1-4cc8-baea-ba8524eb1834"
        },
        "item": {
          "id": "f6c5a97b-5786-4439-997f-779beea8843f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4c0f52e8-8670-4ce3-a8f0-2a88d7e1033a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280afd37-f768-4a35-89b0-058e96e10f3e",
        "cursor": {
          "ref": "35784333-cc97-4b35-b0af-12efcf277d9a",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b658896-25d2-4c9d-98e7-13b5e730d752"
        },
        "item": {
          "id": "280afd37-f768-4a35-89b0-058e96e10f3e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ed7c7fae-e8ba-4ead-afd1-1660564cccdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a3029e-f4f8-451b-b2e2-7444f76544c9",
        "cursor": {
          "ref": "dd651a27-08eb-4de2-a03d-7c86ef265240",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc9035fb-cad4-4130-bad1-81377a8557f7"
        },
        "item": {
          "id": "98a3029e-f4f8-451b-b2e2-7444f76544c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ae9f1cb8-3acf-4b0a-82c3-cfc72738074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e98c42-ad03-4a8e-9664-d85d18c42b9e",
        "cursor": {
          "ref": "9b476ee2-7cf0-4a15-8528-2098493bdac5",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "408e6899-d464-4b58-902f-c6cbd6ad4a8d"
        },
        "item": {
          "id": "09e98c42-ad03-4a8e-9664-d85d18c42b9e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9fadecef-b121-4026-bcc6-6f57ee017ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00420356-c5c1-4e16-8357-479eda4ebeb6",
        "cursor": {
          "ref": "b354e0b1-3d82-4aaa-987c-e71cd90e63d1",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cfe5f836-c525-442c-a02c-da444d4e2b6e"
        },
        "item": {
          "id": "00420356-c5c1-4e16-8357-479eda4ebeb6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2a63c801-2ec2-486c-8cf3-0ac1dbdf61ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c92ab9b-4503-4e53-8329-142b75a48642",
        "cursor": {
          "ref": "449bcac6-f683-419d-9bc9-058cb8f5798d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f47d1b0e-45f2-4891-8d76-0d2421a35a0a"
        },
        "item": {
          "id": "2c92ab9b-4503-4e53-8329-142b75a48642",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b0577458-c148-46d4-9a05-334711c44907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f518b2-a17b-4cd3-9a02-c80d0b1d6ef4",
        "cursor": {
          "ref": "bddb9244-186a-494a-98a9-23e30b35bdef",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "980cad56-4d15-4c3f-badd-8f8b3b9b4d34"
        },
        "item": {
          "id": "66f518b2-a17b-4cd3-9a02-c80d0b1d6ef4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0cb33e1b-e036-4823-8614-9cc06b9bd11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a6018-de45-420b-ab02-0c8a85f3689f",
        "cursor": {
          "ref": "5850830c-3939-4acd-9af1-ff8d152c7720",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "679dd203-d285-4905-9316-292b5ef37f50"
        },
        "item": {
          "id": "472a6018-de45-420b-ab02-0c8a85f3689f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "83e0b8ed-3aa6-4e04-a5da-eda1fca08d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b811fe-b918-4288-8c3f-1013eb9bd95e",
        "cursor": {
          "ref": "bd112b63-e2f5-4d11-84d7-181d99d4cfe1",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ecce983f-3d84-425c-aed1-ed0618130dde"
        },
        "item": {
          "id": "02b811fe-b918-4288-8c3f-1013eb9bd95e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "aae3ffe1-7f1c-46b1-adf6-8219b337426e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aed8c5-d3ae-43c0-b1d7-430ab008214e",
        "cursor": {
          "ref": "d90e4258-f718-4da2-8134-c7de091d5026",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1a4f939f-b44d-489d-b6f3-90736c1b86fe"
        },
        "item": {
          "id": "a5aed8c5-d3ae-43c0-b1d7-430ab008214e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f57b1f2c-093f-4f20-9094-8a0732120d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6927e098-f6d5-4336-9ad2-1b06782fe7cc",
        "cursor": {
          "ref": "bfda9135-fe7f-43bb-a41b-cc75798c64d7",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5516c979-70ac-4168-b765-caee5754793d"
        },
        "item": {
          "id": "6927e098-f6d5-4336-9ad2-1b06782fe7cc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f39e4762-4284-42d3-9fad-4a83ddc5dd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd08aa3-90df-4052-a257-d647cababbfd",
        "cursor": {
          "ref": "0049179d-dcca-41b6-b8b3-449eca2ab4b8",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f308ab32-401d-4488-b5f0-ba712986d2d1"
        },
        "item": {
          "id": "9bd08aa3-90df-4052-a257-d647cababbfd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "639f67fa-a755-4184-8e53-7693b7c316c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c74ca-69ac-435b-869d-91577db6aed2",
        "cursor": {
          "ref": "2811e75e-10c9-4f88-872d-47452f97d807",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1f76431f-88f1-48d3-aeb8-1fffbd5ac1a5"
        },
        "item": {
          "id": "874c74ca-69ac-435b-869d-91577db6aed2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be7f7f49-2dd5-4fbb-9fd1-d2bdd320e30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f562a6-301e-4b87-a9cb-d4faeda6fa32",
        "cursor": {
          "ref": "506c0ad7-5ce5-4554-a4dc-82bb0e9c49db",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1053a7e3-0d5a-45db-9812-c0a6a6d4080b"
        },
        "item": {
          "id": "04f562a6-301e-4b87-a9cb-d4faeda6fa32",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c8a53be-40c8-403b-a683-663c5028ff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e48b6cb-1dc8-4cb1-94de-f39e92179317",
        "cursor": {
          "ref": "bec77248-996d-4393-9dc3-160fc6128661",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7385be13-9eb0-490c-9cf6-61333fd21da0"
        },
        "item": {
          "id": "7e48b6cb-1dc8-4cb1-94de-f39e92179317",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d5aafc93-d722-4097-a561-7b99557a1b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48339a19-7fb2-4060-b8e1-79fb61639c25",
        "cursor": {
          "ref": "e04520c1-d0ca-4859-bc04-8d5fb8141b9f",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d097dcdc-bae6-461e-aede-4565bb8e6f3d"
        },
        "item": {
          "id": "48339a19-7fb2-4060-b8e1-79fb61639c25",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ddb6455c-209d-4b9e-a6b5-3358ea0ab0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda472c8-4616-481b-b530-cb303632f270",
        "cursor": {
          "ref": "b5bc5f15-e524-445b-ab53-9ef74034a0e8",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a8b75ea6-814c-4f6c-bcf4-34eab785132e"
        },
        "item": {
          "id": "eda472c8-4616-481b-b530-cb303632f270",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "421bc6f4-eb6f-4afc-9390-100e9befcac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af2e3b-6451-4509-b27c-dbaf0dbf893b",
        "cursor": {
          "ref": "f001e07c-26fe-4931-92c3-5690c8b24d01",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "27614452-1d3d-4f64-8b54-044799c5d282"
        },
        "item": {
          "id": "73af2e3b-6451-4509-b27c-dbaf0dbf893b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c34044b8-5812-4344-b836-13e6a13bec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8253d224-b5fe-473b-a888-ba53242b9840",
        "cursor": {
          "ref": "d5d6f096-dfd4-47dc-9981-b4c349f096f2",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e84c1d43-8bfb-44bd-bdd5-12cef8bd0bbc"
        },
        "item": {
          "id": "8253d224-b5fe-473b-a888-ba53242b9840",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d089be68-38a4-4851-9292-700f8dc3aaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d392d8-1513-4947-b57a-7664980411a0",
        "cursor": {
          "ref": "84ff3a17-bdcb-45e2-9be4-135ae4cda478",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fb3a5643-f7a5-49d5-8a72-4e2b99d4c49d"
        },
        "item": {
          "id": "88d392d8-1513-4947-b57a-7664980411a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bf10dc5c-2403-4aa3-8844-c728dbf714c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3480c3b3-7273-440d-b445-2f8b7e84a596",
        "cursor": {
          "ref": "bff6464e-c73b-4711-8cc6-07b439d275ab",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5efcb8e8-38ed-42ab-985d-51ae9803222a"
        },
        "item": {
          "id": "3480c3b3-7273-440d-b445-2f8b7e84a596",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f42aa3eb-0330-409e-a21f-e06bc41a398a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 314,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459d1439-bf35-411c-bde1-079a912f94f5",
        "cursor": {
          "ref": "69cee434-9f42-4b7b-b86a-bbf0f4e59c0b",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9747e6ed-5e84-4336-903f-8cc4bd728eba"
        },
        "item": {
          "id": "459d1439-bf35-411c-bde1-079a912f94f5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bc12761c-f022-4be1-b575-3dce46ef241d",
          "status": "OK",
          "code": 200,
          "responseTime": 386,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "749fa9e0-ce1b-489e-9448-38485973d4b1",
        "cursor": {
          "ref": "9c7cc734-049c-48a1-ba5d-3e6f1cdc9747",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b7ad68a0-f3d6-4953-8b08-bd3aa3338163"
        },
        "item": {
          "id": "749fa9e0-ce1b-489e-9448-38485973d4b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1fd24ed-0e48-47b6-a188-cab0cb0f682a",
          "status": "OK",
          "code": 200,
          "responseTime": 3391,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b935dca1-9bd0-4115-bf39-f662c6d85b4f",
        "cursor": {
          "ref": "ed741366-e0ac-46af-9b00-d79e12a4dc7e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9811c5c-0d97-4554-a145-f9545649bc51"
        },
        "item": {
          "id": "b935dca1-9bd0-4115-bf39-f662c6d85b4f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f75bec3-7924-49cf-859c-6a3dcc6da914",
          "status": "OK",
          "code": 200,
          "responseTime": 3511,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
        "cursor": {
          "ref": "d8aaf919-fb66-4837-931a-9ce8538e0f94",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "972119ba-a88c-4b08-b568-34718d40f9ec"
        },
        "item": {
          "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0763b977-41bb-4189-9f61-dbd81067f157",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
        "cursor": {
          "ref": "d8aaf919-fb66-4837-931a-9ce8538e0f94",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "972119ba-a88c-4b08-b568-34718d40f9ec"
        },
        "item": {
          "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0763b977-41bb-4189-9f61-dbd81067f157",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
        "cursor": {
          "ref": "d8aaf919-fb66-4837-931a-9ce8538e0f94",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "972119ba-a88c-4b08-b568-34718d40f9ec"
        },
        "item": {
          "id": "2d2ccb7d-8368-4083-841d-f5334192325f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0763b977-41bb-4189-9f61-dbd81067f157",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11961e8-2eee-43d0-a56e-a8760b0b5e05",
        "cursor": {
          "ref": "a8b588f6-4bf2-4a69-9bc6-41f19f50db1f",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58937b1a-e126-46fd-845f-c9212856b842"
        },
        "item": {
          "id": "a11961e8-2eee-43d0-a56e-a8760b0b5e05",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "74b22771-6535-4647-a428-36ff7253f17b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d2be9-1d26-4cde-a7c8-9c9038a6cd4d",
        "cursor": {
          "ref": "486eba9d-d632-4e12-a806-e35dc3438bc6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea707bb0-0aa0-465c-bbc2-7191051dc140"
        },
        "item": {
          "id": "d37d2be9-1d26-4cde-a7c8-9c9038a6cd4d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "86035dbd-3f08-46b4-b350-4c3b593c5c5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d2be9-1d26-4cde-a7c8-9c9038a6cd4d",
        "cursor": {
          "ref": "486eba9d-d632-4e12-a806-e35dc3438bc6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea707bb0-0aa0-465c-bbc2-7191051dc140"
        },
        "item": {
          "id": "d37d2be9-1d26-4cde-a7c8-9c9038a6cd4d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "86035dbd-3f08-46b4-b350-4c3b593c5c5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6612bb6c-7f2f-4b37-a53f-8169e0b0ed07",
        "cursor": {
          "ref": "3e3d6eb0-9d1b-4bf2-a1a2-77847c3c6f17",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "84dcf646-88e8-4483-ae4c-a7075a7e340e"
        },
        "item": {
          "id": "6612bb6c-7f2f-4b37-a53f-8169e0b0ed07",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "af8deb9a-622c-4ee7-8d21-599456b29d9f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 549,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef823f9-a39b-43d1-9ed5-2536f81578c9",
        "cursor": {
          "ref": "c91d150a-66fd-4e72-a719-018d79ece349",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "57736794-819d-4882-8492-59096c5df930"
        },
        "item": {
          "id": "8ef823f9-a39b-43d1-9ed5-2536f81578c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e6f60f3-0b23-4a1d-a2a6-bd76767c56a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef823f9-a39b-43d1-9ed5-2536f81578c9",
        "cursor": {
          "ref": "c91d150a-66fd-4e72-a719-018d79ece349",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "57736794-819d-4882-8492-59096c5df930"
        },
        "item": {
          "id": "8ef823f9-a39b-43d1-9ed5-2536f81578c9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e6f60f3-0b23-4a1d-a2a6-bd76767c56a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dea4a6-dd77-4a23-8a26-caec93a90140",
        "cursor": {
          "ref": "ae719061-2544-4f14-a5f4-58258bd1ebdb",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fbc6efa0-ba4d-46d0-88d0-8b3cfe5e05ee"
        },
        "item": {
          "id": "e4dea4a6-dd77-4a23-8a26-caec93a90140",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7b08fefc-87cf-43af-815a-4d2aa1aaa0f6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 564,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}