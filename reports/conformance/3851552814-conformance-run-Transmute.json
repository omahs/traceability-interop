{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "abc9feca-a17c-4167-a66c-630787af5770",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1e37c2f3-c8b9-4a79-a345-0aebb191bdcb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7440bed6-2bbc-4e4f-851a-59b8ca6d0505",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1fdd44a-9268-47d4-9e6b-cc23c15ebca4"
                }
              }
            ]
          },
          {
            "id": "b050b631-34e9-48d5-894e-372af886b548",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1152cc3-2e31-448a-93b0-96316935e511",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ae66b3b-5c35-4f3d-8539-bd4cd45897b5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "482a1ff8-6026-4361-80f7-e9a368217d9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bb961571-d9b7-462a-9288-f35f6eed9aa7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eafe351b-37f3-4f70-a12a-87e5c624eadd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29d7aebe-1773-4b1f-89ac-0c691f72a7a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e26d8e0-b190-4660-99e1-44cca298c520"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bba2511f-07d9-43d0-9eb9-9f74efa28696",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93cbe53b-b931-496c-a205-c123666545bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1a54982-b658-4e20-ba60-9cfea55935f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "344f955f-751e-4339-b067-d65d8515b69e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d1e087-c271-4bcd-af6c-e5f0160f205a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "18a20d82-91e8-4fe3-a9e6-b2de777b0fda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0ef76c3-d9b6-4096-9fda-799c752867c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33f32855-1b39-48fe-92e3-b77b546e9f38"
            }
          }
        ]
      },
      {
        "id": "90a69d46-7c98-4438-b1fe-95e5f2cd7ed4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "260e09f2-1cfb-466c-a03e-d35fe495a00b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e42dd4c6-7400-4dce-8290-42d728d0ad9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cc9d41e5-150c-4e3c-840d-43361cd60059",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15451ee-f77a-458b-a09b-d21e47a0b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0c0e8a1-8514-4b25-8f76-a2349e7c3ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c707d9c0-9252-4bee-ad35-0f1b4f0d370a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6e39f6-ffd3-43f1-b66f-41de09dcd8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f856566-c6fd-457f-96b8-7cd83cf44d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf08d75-5f3b-4728-b45d-649148ace775",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50465be8-a2ba-4f32-bd0c-ccead9008c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88029020-48b5-4b5b-a3d4-e2613d9b89f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db0bb378-21e4-40b5-a1c9-6ed1c3a26824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a815c5e-6369-4ad2-998f-ae0c19a56a2a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b997d1-a9e1-4988-9f58-6c66a61fc9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04fcdf8a-0392-4c04-95dd-83d6ba036628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75369a0a-52e6-4f10-8e6d-35c1aa7be35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e5d1d6-2eca-45da-85c8-13c135fa014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058c25b7-9c6b-4040-bb64-0f52bcdb3c21",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759c8e24-afd3-46b8-aaaf-6c96aedb3966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5a958e1-4448-447b-9996-b51efe6b3c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654644bd-35fe-4336-b8ae-ab006c5442d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d22e3bb5-5747-4e00-9bdb-c2ab1178773c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd553932-7b79-44b3-b5a5-bc0638b4ed8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e3bf802-d152-4208-979b-e032517c475d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3fe9ec1-2b8a-4dd6-939d-a0f5cd398c22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "20fb1e10-aa32-425e-b166-c93734a793c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e12b4066-cce6-4c72-8d44-1438f5fbbda7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "9d7dbbe5-4ae7-4398-a497-c3797dbf810c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7eaf09f-1faa-47dd-89ed-74a7cf314b28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30b8edf4-4fcf-4f8f-936c-ed8b03565769"
            }
          }
        ]
      },
      {
        "id": "486c8431-c9a1-419e-b49e-e214a59d0692",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7141b83b-05a1-4db9-a463-82955236b7cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bb381f5-5263-4ed8-a915-13af12a37d6d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "63edcc72-c7a1-4551-a8c9-fa3bb5305274",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ae12d8-58e3-47a7-b8c5-87481e28fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f74268-5447-4aeb-b84e-1c92a0ba3330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119d0b11-89f1-4045-98a7-918902125f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbc7ae3c-6cb4-4989-bcba-0ec29e069f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9534c5-42a7-4e07-bc8c-f89f9d6d323e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a74e0b-fc7d-47ee-8919-71a5125b5d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab8ba7d-68b4-46f0-8a47-f7d66215b204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ed53bc-3f8d-4291-a2dd-06bf69fbe334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "763468c4-0d0c-4a1c-ac94-2cf0ec4e463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80fcef6-2a62-4298-8e87-67a4105a01ba",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17288297-4f5a-4cb7-ac83-22f2fce45a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3a2a81-9166-46c2-8c11-2392726013d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c42adf0-a846-40dc-ac81-c38b9251973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091cba00-4efe-4d62-a0e1-156af67bf8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3222bdf-9547-4d24-acb2-85c1be7acf09",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8632ea-af4f-4677-ad92-ad62750e6c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa62ddc2-4c39-45f1-afc9-0b9c72163ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df80071d-9b2e-4b02-9ab6-a0efe688c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62091525-d19c-4704-a095-972582c25a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2200dd71-7fb9-4eee-a1aa-e705d6b3191f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5773dd08-a066-44de-966b-4864b52d69fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a044213-ce94-4eae-827f-e774892e9d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eee310b-bcc2-4b22-b0c6-e3d58c025dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "132093db-2340-4a30-9f93-3c67fef52139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a68251-7fd5-4440-97e0-72a8b4d67b40",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf516d87-f846-4ead-9595-3728d2e39756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f763d41-5bf1-42a5-8dcd-9e0c8bd11a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd9923-862a-4d46-a308-88bda7693c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4bc278d-0a05-4384-abcc-3aa56bb210af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448f0ed9-3afe-4310-9d57-ad1ba9ac419f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aefd0d6-673f-496c-bf90-0448ca661564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106a83a8-16ff-4ba2-b4a6-14f5e38e8cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac49acb-c02e-4188-84f8-e09f7e7d80dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2b70a0-68fd-40d2-845c-ff1118fcdbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045cc318-70b9-48ac-9661-bd1f83802ce6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9249de3-686f-4022-843b-93fb7d0a94ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176feed0-ccbe-4c62-95ee-543e947bb4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425b9ac1-a6e9-4197-bd29-c86d4e794fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2889a194-e802-4d90-9360-01c68feaf08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81444432-877e-47e3-93e4-f30de78bbfef",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d27f35b-3dc8-4d51-8efc-f26b588d3f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a027ce-9c1f-452a-90ef-230b1fe9ef1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d542e55-f40b-41c3-916b-89f87ca9650a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03655b87-bb24-4ad7-9c9b-113e94121efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbee296-114f-45a7-a3ee-437ab5d9a3a1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ee462-7c69-4622-8be9-9681ff7efd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed4a64f-0d0e-45e2-9347-eef6a09602c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098d6adf-b3f9-455e-a64e-ba782fa590b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc649e9d-ee06-4692-a6f1-ea5655144254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c1e2bf-af72-488a-a96c-a387a4b76972",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9134b2d-2176-4c08-a5e8-4ff90455587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc41b9e-92c6-42fb-990d-c2af3a3dfd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814289e8-304f-4adf-9359-7da12e0f66ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f0c551-4138-4393-a0f0-62f4e12f3c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0503ad-36df-4de8-ab22-d2309fe83822",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633eb45f-176e-4602-a8c5-0edd9441f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6e9ce9-9fe4-42a4-a301-ecafb2f7490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d10ff8-4f56-47ec-aae9-ed08876c89e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "991d9f5f-6ac0-4468-be09-8885b1f25d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a584c3b-84b6-45b5-9581-d9a55067f7ec",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d9b3ff-186d-4b9a-a5a9-b8c5f810da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c027e3d-e329-4d67-85b5-a509028d1f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc45489-3afb-4020-ad56-e6b2acd15aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b49fe858-26b2-46a0-b796-b0679bbcfa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15624c7-92e2-415b-ba43-f30ea2c4c943",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd992f-bee1-4349-a8e2-0db7cba91ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe28ad8-bab8-4d57-8917-19ed2d8d2f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cdb17e-c160-4905-b060-66f6aa6e7517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "8751c79f-fcad-47cd-bcc1-a7fb591b6853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5245c338-d7ad-4a92-8cc6-5732ca7a30f9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625fe7cb-f9ef-4236-91d2-ddd5cc8a9c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9a86bb-7232-4ff5-baa2-f066cf59c4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f6c544-bcd1-443f-8f62-bb7cd23141fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a364a17b-39ed-4242-86f9-4eb3d4340eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194a4fd9-9690-4e09-ae85-a563340c50c6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273b4c04-678f-4ee2-80d2-ec93a4152f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c115b7d-154e-418b-a58e-3a2b7d4d432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1e1149-dbde-44d0-b938-e5c36571d563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "970670fe-6498-48ec-948d-8d02d56f6882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df1ffa8-84a4-4ed0-8d8b-4428d54d203b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf2cb0b-abdb-4cd0-a309-46614a544b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca375f4-3eb7-42b9-8a50-26013d1803b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae3ec5d-41a5-4919-afc9-1a389c4ad657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50971331-83a6-4592-bb48-7eb973a525fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9be5e44-ce33-4e2e-a129-819d6f71a59a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20036f1-22eb-479b-8896-b1b7fe83b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc01ea22-100e-40b1-b615-ed72cf2a1a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48472e80-fbeb-4102-91ce-30a9296eea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac6c7368-bd4c-4307-a106-6c60fa415500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3f8f66-f43a-4bfe-b82f-653d28fabcf1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c86d3-6886-4d87-b848-bba313d983a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13baadae-71cf-4046-a550-5b88b0a69e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508f292b-68e8-4bd2-9f19-a2d5b7c3695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72940b47-55d1-4976-85bd-3bb7a89d1cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d81b48-0a26-4860-82ec-729d1aca250b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3751c8cf-54ce-43b8-be91-27fc41f021b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4dec5c-1d61-4832-91a6-6d5515463511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42122a2d-887e-467f-a6d2-90da11219d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00273b2-0a03-4958-9ad7-0b25ff551328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc3af38-ed72-49ca-961f-c97cdac246da",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6caac86-66bb-462d-bda6-15ef3f4eb957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e84abc-16e9-44a0-bacc-2f1ae0f4500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f717578-a625-4672-ad82-b4ad4299a8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "532c2579-75fe-4459-9147-a68e01f41c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1884dc6-a421-419a-b92b-d543bcec817c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d9977-04b2-4002-abd1-24ddbe5decb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73b4cbe-78d1-4cc7-961b-afb6c47ca7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f438f4-2831-47f9-b3f8-7f756d1d2533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f61f69-9f02-409e-be91-3943d4b86c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bea1d2-69d1-4122-a4d4-13e249a384a8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e987d-5db2-44c4-bffa-3e5775724664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05730c34-b438-41f5-a117-cc040a3f50c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab9bb5a-0bb6-4993-89aa-833e0234bb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dad3920-4542-4c38-a162-7c2b1d7e855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e60a0e2-6fa6-4561-bdd7-81d0c67cd4e7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91db79-39ca-4f72-91fc-a70a17cff65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88224f5d-2803-4263-a656-0ce4c7d94f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646624d3-30e2-4358-959b-89efbb18ab40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2c4e9e-8648-4692-b68e-d031ec436660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e6b321-e401-4e43-acdf-ff90d820d0bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa1ceb3-5603-413c-88a0-cfe8b7212d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f4ef4e-6edd-4b98-9a4c-40df639dd987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b38a4b8-e58a-4022-9c27-0b859a7ad3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4fc4ca-7269-4493-9ff6-23ce0b5b5777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ae34c7-9282-4ccc-bac9-6d27ace7c589",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc6f9c9-d11f-47f8-9a12-fe41da844bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b10784-0724-4ba3-be48-ef94476788d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9c6016-0575-4e0d-9d0e-d8e9823651dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc9343a-d51c-439d-ad3c-ae93840432a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f22079-636e-4939-b6be-7c33022c1774",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5849e41c-1f97-43d5-add2-dfea3d1d3874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a8e080-d686-4998-ab7b-493afeb72117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e84dd4-7a64-470f-8eb0-738212d4d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43db0581-d429-4454-a16f-d413b936fff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab68dcc3-caf8-4d50-8754-cfc966b76ed3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e503ad-3264-462b-b03d-a79288a2cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56426fef-abe3-4a72-9d49-288fd90a20ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301cb1a1-3f04-46a8-b7f1-02ac3fced83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9313f5b-5661-48e2-be84-d500449aa19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8588925-3194-4740-ab90-142e9c68bbde",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aeba5d-3bc2-40c6-8a36-e3e0a59d8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d49dec-944f-4192-ada0-f3a54a1ccbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c5ef24-0acd-4897-8efd-c95a9ee8fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbb6db4-0d63-4bf7-9f80-8f6fdbfb9efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d56f3e9-b671-4300-bf32-4768e2467e32",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6be84c-4340-4c95-bcdb-657510822af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2963d089-718b-4e4c-96f9-530c6aa4edec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f3444-ecf6-4081-879b-72e95e3ed8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "accda7d0-0705-4ca2-89ed-7f376304cdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dddc6a6-6f17-480f-8b73-e1816e6c57be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e6c601-15b4-4332-b82a-28f37b360216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f7fd1e-e6b5-4484-9df1-623ba9f6bc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce87ce8-efca-4aab-94fe-63b8cefedf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8988cb-482e-4165-a893-a548faccd2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1be8e7-33b4-449b-b689-f151ed6af6d8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eee7bb5-2fa7-4663-9826-8e9e61ea9472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ef52f3-4113-4645-8775-419e16a55a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9766b4-b749-4b7e-a3b0-9de273c5c5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a0b508-42c2-449b-b8f1-cbc3eb62527b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405cd638-7cb9-4ff2-9864-ff350f1286d5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb3e1b6-d56c-407c-98c3-1565b20ede98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878d2ffb-0276-480d-bfc8-8bbd2016d3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502abc02-709b-4027-b111-3d89ed132569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "337420e5-ea7c-468f-b293-9f1990a749e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d1a20b-4460-4ea4-85b0-97223b6e1622",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89180054-5118-4cb5-a170-7dbb009c9609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83ebaa4-80d8-49d7-b8f7-4c1ce461bb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0e45c5-0917-4c38-a533-a0cdf45aa3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd741dc8-0fad-4c47-988e-19efd1cbe7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa90d17-6f07-4d25-bc6f-373bd602ba1a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d61d70-62fd-4e6f-8e75-cbb506ee7947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05265e73-eebb-4d6a-a581-befc6d6db44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297a51ef-61bd-48d3-8157-d4b24d338c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6caa77e-ee30-4ce7-8f60-4e8060c090de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4d4745-3c88-44a9-bea9-b29bdab043b3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed55f3b-25e6-4cea-9c82-87feb61fb0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb21548a-c0a0-41d8-89f1-c83dd2c7a405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8983ed-221b-4eda-bf8d-c9f053118bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95d7fbb-96cb-4381-a897-d015ed56fe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c374354a-f4af-40ab-a47a-7bf925899780",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb55a189-c9c0-4574-aef9-2f499862ada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9df7423-6f8d-4530-8dc1-9fe9b4eb6ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2657eb8f-8df6-4ba2-aa6c-e55f6ca66ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "77c1e2ce-e270-4367-a9e9-1eb284145d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05735584-42ae-4321-9042-9b03b11f41ee",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc57f7d4-6057-4e80-a8ee-6ba0b910a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c640a121-8c85-489c-970d-8d115854c208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4a4cf6-f48d-47de-b8ed-33c522c0a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef500127-13b4-4aee-a92c-cb53808fbd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df87188b-a780-48b8-8e65-3f62260fed21",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527eb711-e7a6-4e87-89a6-5282c43b99aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2324d035-85a3-4f95-9349-644dc92204ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88387a-19fd-4255-aa8e-069af3bac34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00fe475-8203-453d-816b-6551eea1c533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ac5d5b-96f3-4b82-b89b-b674d015aeb4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29e68e3-e7da-4ee6-a61d-9246eb59f631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ee401d-81ad-4a13-a190-9a0e29ee84db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b9c588-8420-4656-afb9-c922e072bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d96665-e38d-4305-b653-3f42ffdd5821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385a65e3-f0cd-467f-9d6f-e3958a1111ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb129af-f7cb-4c8e-9e8c-9c612e657ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b12b0c-cfd5-477d-bf94-df5b638abf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd14d86-ad47-47ac-8e26-076050fa23a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95063d21-42c5-4dfb-a24f-74f0653784b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddd37ea-c792-494c-b27f-362661d60c94",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436bd142-6aad-4391-b9ca-d8948e573d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba06dd5-da00-46fa-a8c6-0738453b627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b37672-2c06-4b3e-b6a3-d7c3a77acf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0831a625-328c-464d-ad53-5358cffee856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f637ef-15dc-426e-863a-c71479d58195",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1336dc33-9b5e-49f4-8680-3f2d066196a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c646ba-c58d-4bce-9c28-da7280adda36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12e8945-928a-4608-93c4-ae5758d81eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "893e2404-8d3a-4d47-a8fc-fa1eb038e05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f1114-7e26-4635-9a07-689a3e29c9bb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a2c7c2-dc32-48f5-84e0-e727311f2230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18ddf47-0332-45e4-90e6-ec17a4a0a9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12e3c90-3f0e-4de0-9562-c60f35abb050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "acacd916-33ba-40a0-9a4a-de5401204d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c4535-1a6c-486b-985f-9d36b6e8f8fb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae90967-ec76-4c7e-a274-2bde072413ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7749f6f-77a5-4568-bc99-bdbf1c6e0114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cda8723-c4af-4416-84b1-a84a4116c229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d0580f-bad9-4d2a-9dd8-8a510cc075f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0598a160-3f64-4fd7-8f64-17f615eadbbb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7679d959-6173-4317-9d52-f34df8243ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa20f4a-102a-4794-8f85-6ec956719b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5a0081-720c-4c6b-bae3-b99cddce293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "644e1836-5c22-441a-b8ba-9ad4d9e0ead1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a4bbfe-578f-4194-8d2b-d19aa88ba2de",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0298177a-7a90-467c-ba46-fa06d69facf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e0b5c-e700-4cbb-aefc-524c264dcc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee792465-431e-40a6-bfbb-93dd0fe9453e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "493e4715-f571-426d-a2f8-50efb6587c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73759f33-fd51-474a-9183-98cdf2a434c5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630ca70f-9ecf-4ef1-a4ae-b4a4cf700043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93f2b4d-c6ac-4f57-a3a9-6909eebef1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6598b21e-f4ab-48ca-8e1a-41d8792ea02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b403493-74b1-412b-92ad-5e07af5ccbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63b811-0b3a-457e-a275-8daffa3b2361",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8201b8-0190-47dc-b05d-50704559ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f085a975-5899-431a-b315-19af9a983f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04092f0-8851-449d-b994-da0a3f61faa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8dccbe-b799-4691-8844-2aa353822ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ecad7c-b851-45ec-a270-37b93922b32d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af662653-b510-45ea-a87b-2b0490d87a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd7f662-0136-4640-83c2-477a7b7fac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7abe7bb-2de7-46fa-8cbe-d5b639982164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4198a43a-e9d0-48f9-a359-e02b53991895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db46d167-265b-420d-8f98-841a2d236b72",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa3d37-8c61-46ce-9aaf-0ca8f7b778ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e827ec6-1bfa-488c-b1ee-7d0f71322667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ffd30a-5b61-489f-8791-9e2ea6ce1014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2b7393-35e3-4404-96c0-4c63cdeac96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417130d1-f5e6-43ae-bdd4-3ecd4e1f13be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0484afa8-432d-40c4-a815-d35d251aaaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e26342-c13b-4542-a1f9-c79abb570d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e61810-ad79-4a24-82ab-13903b0c5dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4bc6f5-4c5a-480e-a9b6-38f7d59c4abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d83238-7a4d-4c2b-ae64-4c50e8393290",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2182b5b-db07-41c6-ab42-45dc3a70c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b766fc-a4db-4881-a772-3c1f11f101c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba9c684-8a57-462a-86cd-fd33c53b8d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6562e111-294f-493d-bb01-cccb50543f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7cf825-733e-4656-aa0d-2d57d6a88530",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d441ef-249a-43b4-98e0-5fa1cd078a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23f77f6-0189-4871-992d-46a22203119d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37688f74-dbda-4397-9923-395f0623d5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c48cc05-f3a6-4785-b551-146116210dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775c0457-8b5b-44cb-8753-5a8b4edfa3c8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1da08d-7290-4f42-a0e4-ca7827a1eb65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a775bcf2-dbce-48c5-a6b6-2d91d11bd2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185fcc6e-6143-477b-a4e7-cbc52ed01ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ad7491-0395-47b9-a9e9-3e534ec23367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b921e947-d8b1-4349-aecf-80d3c3b50d8b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd7674a-a565-452f-855e-9a0993fc8f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22f80f4-e912-4177-be30-8b4ad60b2ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aada0c5-2019-4b3d-a45f-840ebc6afc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46563052-4375-4abd-9c32-9efe5f27f874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17df3fa8-9aca-4851-b05f-3435d54a4811",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac54aaaa-9d50-4cef-9697-875eaa81bac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a99a31-e86c-407d-bb7d-fdb13f1db2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25425774-a648-4931-81dd-96a60d396d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a92edb2f-1a12-48b3-9b8e-7188cc4ab2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282587a7-c433-4866-965d-38549a62314b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b7908c-4a84-4756-9cc9-b9fd5095c3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ba1e14-272a-43f5-b2ef-d695c35f67af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9bc60-cff0-42de-a077-d0ec8ef94e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a943b6da-700a-48ea-8003-7f0fc32f59bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15957aae-6541-48cc-834c-d83d29faedcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6d4320-d131-4917-8af1-61d66205cb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd59f931-eb1a-4c54-8d1b-d3c7d6c443b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86e4498-1bbd-4cdc-baac-d6dc2b6a3a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "629701a7-e96c-4de7-af56-b770f03fb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1698ff-401a-4a27-9cec-1b080cd738f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1aff04-6496-46d6-8f02-e79aed1851f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3f134e-c777-4d65-823b-e52237a47fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de977f71-195c-4be8-a760-4fd2b56f26f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c5c5b7-7479-4427-a98f-073fe676739e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4f5fc8-cb70-47c6-84d5-140db10f22d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073bdf0-609c-45d0-8a6c-866902997a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794c0632-f688-4df8-b9b3-c24cf0f2114c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9f5853-b9dc-4561-9065-72510b523c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5dfb73-d2d8-4ae9-9983-1d7c4eb7f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca93dd28-04a0-449b-b50a-5fccd2d3fca3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d636db-cd1a-4cb9-b8a4-d43c8f0c3d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822eaa43-2176-4f59-ae80-d1cc5f34026b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d674fc5-f412-4f3d-b8c6-23c2c9020840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9fee61-a1cc-47a6-a688-32fe6da548d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c6ae19-f4e1-4739-8a4e-d72dcf0eeaa7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a491765c-74cd-4619-bcb6-649f7bd3de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d58fa3-5fc0-4beb-8bfc-cf5e3d1dc3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706f147c-4fcd-45b7-8151-f16bb2a959cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "494006a6-94e6-489d-af7b-1412c8de17ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad01c47-af6b-4299-a4a7-fd5f842f473e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31c5acf-a2c5-42e6-8a41-6bc35f2221a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf5e08f-9e27-4eb1-ba91-0f14bcb5a0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400e2351-e52d-49ca-a717-765b1d807f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f059d5d4-0954-41b8-9c40-6abefb3e426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8dcaf7-3be7-4f97-afc5-79b43903456e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d93330a-4df3-4ff0-a87a-3ed6457d07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1051f418-c713-4016-a582-af040c0e0dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9416d8e-99a0-4b72-8051-e0fa8e0b1176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68c140e-bb47-4bea-8e86-b9e85503ca5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d52f1b-7acb-4479-ab70-15da88590ed3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8cb3e-ea82-474b-b74a-f572f6b65eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f592cd12-8879-427e-a388-610d6339830e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b84b21-fd46-46de-bc4a-4eb42ba9d163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2617de1a-c690-4a93-8db1-578e681342f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a77e8-fe21-470f-8b30-ba4208b7ac27",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13424c2-ff3f-47e9-a739-0aa7cb934a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536638db-cead-455e-8a2b-57c379e7132b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8040ec07-662c-4d8b-9c89-30957c3aba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b17846-f72a-41f8-9a28-76e289b81802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcdab67-304e-4350-acd6-238c18c7ad1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cd88d4-1ddf-4ccc-a68e-74dc9cff2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5259734a-9eb4-4c12-b2a5-664bfe117c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c72dc5-e06b-4d7d-be07-ce64d10544e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd100ea4-8c96-4879-8b03-11b43e994906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b803d89-3e36-4338-b7f4-d5f462df3a69",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f336c3-c426-457e-a816-17608bfe66c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0391f418-091b-4983-844a-d72c7b028ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120dc8cf-012d-4a86-98d6-4b0db41763ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "754d873f-2dfc-4302-8ae2-444719dd9088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7340c724-bda1-4065-9390-fea8433b8dfc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcc94a2-0146-4e3d-b332-61ae6b5077a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cea678-d2ab-4075-a83c-744e585bc9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdbda76-f963-4a3a-bc52-08e306cba74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9189a0-d275-4e5a-b6c4-f24e1138178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a67acca-6c62-45d9-ba00-cf153ce8f1b3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9b096e-6c23-4baf-91ad-842ed01209a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0060540a-9954-4719-a85b-226d59f3dbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9789bcc0-6f07-4a90-bcca-47211b419cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c8358d-f875-494f-b314-bd048c1db7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b4b57a-a9b5-4019-8e11-d81b93272c63",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c334fab-493b-4e42-bbf7-81143545d76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5599171c-cddb-43d9-b1df-ab19eff4ed93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da7d698-3bd6-4ceb-b771-69b8da977183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ae4cb1-df3b-41cb-a806-82e75bdf0b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecce6f4-f3bd-4dfc-a7ef-9bf68f0a09c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb229b48-43bb-4c7f-b2f6-b8cfc9ec6fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a5b5a8-c49e-43c8-9bbf-e82fdc54541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4aa3f-68d7-46d1-8c92-cb2858bf8cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7772d7b1-7f2f-4e12-af91-3713897b71e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd87ed-5344-42d1-a5c2-145528fec51a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef7404f-4800-4627-8105-f4fad14d7394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936b2b27-15fe-4a47-8f44-ded7367a5beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1326070b-85dd-448a-ac24-77fc59fd1f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2883ed2-c11c-49c4-8ab1-69ff94d13a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2bf2c9-f5eb-4250-b846-9b1906de2068",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a17930-0a75-4a90-8c53-20e4b628fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7df9a0d-9862-494f-a9ae-0e25f880570b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c017bb-a47a-4341-8895-93ec2461ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f6cdb9-62d2-4346-93e4-c230ebd702be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf637b7c-3620-4232-bef7-61307ac8293a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170d5abd-869b-4c01-a4f0-8c4bf6548ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad55fd5-baa1-46f1-beb9-dfe8144d3b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d59413a-3b6f-4170-b656-43ce6fdfaaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5e9a00-fe87-4c2c-b1df-b95ab65f4881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb54373-0f5d-4fec-b6fd-9dee664dc744",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cddac9-7afe-4078-ae2f-79536d8328cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f830805-ec6c-4192-a7e9-18df14590225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b11e09-de16-4a71-9774-d4126a7136dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "707facb6-e645-43ed-b0a6-99bdcb49e5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b6bb2c-2c1a-44c2-8b14-a96b89015e7b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ce5c63-5aca-4e8f-8ca4-ac49f2aef57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afddd2e-e27e-46c2-a0fe-85862b9aa6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc6f712-2f88-4d99-b588-5d33ede7f7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "635dd676-eb84-4577-a07d-2b70ca89eb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1120c09c-4ca2-42f0-af37-1aebdfba216d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c059c9-460d-4e28-983a-1d61b309e5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa40334-ea0a-4b34-a440-e1773aa34bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4663664-91d2-4bf0-ad1f-bca31d018bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced7a5cb-e952-42be-8559-790c12781966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f6a78-1a73-4675-8dda-bda948dee6bf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07c8a83-1aa5-4fd5-8117-f6d39250e4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbd59b7-95ac-4988-bdcd-ca5eaf7b77d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4f3f84-9691-42bc-9315-95f1fbf17b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ae0c6b-8eb0-464e-8b64-65c208460491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de467d17-9485-41c3-9d51-eb515b55d57c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26500647-90d7-44a0-b36a-fa881b879edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff214697-53cc-43cb-91a3-d45c3b90209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe26a25-55dc-455d-9679-512c813dbd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe100b9-48d9-42e9-9c2c-e3a80e61f1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b50b39-678b-4617-8b74-02f6f507f29f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1a9c69-358c-4859-b522-93454fe9f7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4c9cb5-e24e-41f5-9bfc-8cb3b4abdd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5907a-639c-4959-ab0a-a4aa9a404a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d621d058-8788-4adc-a28f-325ba7e25074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9f5103-2b6f-440d-b72e-85303382b674",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fba249-97ff-48e8-8c78-c1f9f29a0144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2047dcc-c935-4ac1-8d33-842991581d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1231f987-0d15-4934-8781-6b73f37e3da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b87bf9be-318a-4755-ad72-d25063e5a045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13bcff0-02ca-4cd1-8be5-4e9d2d5e34cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd07d446-1dd4-4503-b3ff-e39ddfd1405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e14da8-bb22-4683-aa16-e597b9cd9f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1efb0fe-a0be-49f9-8717-59887139675d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6c1057-5e6d-4952-9862-d3fd5bf772bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f37a3b-136e-4683-914b-a723c4785288",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f4f5ef-8558-4372-af08-ed57d40c9184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef755a9-b2c1-4505-8b31-cab5fce191c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6a76dc-d046-4de0-8839-e26442b47993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c517b0c-95d5-4399-a065-a92d7203ea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4843e54-ea55-464e-9294-b43577661c36",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d33a38-23f6-4bfd-9aef-e862d0e0b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68473290-32df-4695-865d-86cf57b27c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a2b166-b269-425e-9f2f-05f75d3f6cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c819f688-1c96-4070-8faa-94193c9ab641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f810fd7f-960f-4947-99ca-7061ccd41b9f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9c98aa-1575-48c2-b250-5a55c0f052ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d06604-fbbe-4f92-8f93-fb8f01799f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb953b93-f847-4824-b512-3b3fb4a14266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3909a650-eeeb-4bc4-bb12-51b29e19d68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dc7971-e9e0-44db-8baf-f476e3358ab8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5330d7a4-e96e-4777-9479-bd1e09b91792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d42e1fe-5c91-4c7c-97dd-cf3739342937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db11b27b-6a15-441d-a35f-b22f944ed198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4be85e3-910c-4f42-b4d3-2c072756d0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe572379-bf48-4196-996e-e7f3d75402d7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59d120b-d58d-4181-8cdb-804fd745b80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd98159-0676-4e95-9000-309af283d5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebea923e-101f-4684-bb06-96833338e754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5d998b-48db-42aa-b8ef-f2aa9336ca84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aae4d3-fe06-4f8b-b451-3ae5dc5544ef",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9c2ac-97c9-4df9-84ac-0f9d050a423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46be5c10-cbf7-4099-8071-9f33ca5b78b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0007a-1510-4b34-911e-65a4e5294ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a731ea8-09d9-4f80-a808-db3eb0cf2092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3b3241-7015-4909-b077-a5e890b88584",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83707da7-76a7-4207-9c9e-ec7e93e492ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25242951-624a-4f87-9aee-84cdd7a1d1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaea322-5d4d-4176-aab9-cdfcdff8f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd953c2-8ccc-41d1-9ce1-5291326d800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd2e15c-174a-4a17-bc3a-420355b7dab3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a051c128-d813-496c-ba01-9d9eb78bd244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e661d9-cfcd-441e-aa7a-e7959575909e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc2f5d-7183-4bca-8470-af0a56013abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7640dae1-d64d-4229-b5d0-eb1d69b54b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f51c4ad-bd5f-4dd1-b2d7-b03986be88ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2754a7d-a707-4c97-82d1-b9d09e1c9cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a330f8c-0698-4fd2-a4a3-74f22ccd9fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b11d372-31b1-4da9-b7ce-fdd1e479c910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a7d8bb-f44a-4317-b925-11be6068715f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93b8ef2-2a2b-42e1-81c8-48ae069a9336",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a65a4c2-c1ea-4da2-9173-e14ff3f467f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f222ad4-59a3-4648-89a9-33c9767529ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bbe089-ea1f-4fbc-808b-cfa5c26dc220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9626520-d69f-4b6a-a63c-f856d23d2ae5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3032581f-fce0-46a7-82b8-de949a959d4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38595b1a-e7aa-46bd-b58b-6046b0ca677f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a52fe4-b734-4f63-9ecc-44575850ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed2291b7-41fe-404a-8fb8-f0c2ad2ae23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c2adf5-3e43-4041-ad05-0160a0c87366",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0ce8e916-bf23-48cc-8651-adcc5d7413f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e90cc5f-adfd-4c30-a292-eb592d8c7f98",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8c7856-c7fe-471c-ae03-d24258eae85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "731aba93-3173-4885-9713-d7aec4ace94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710ec93-5fa2-45dd-8ef6-ad51cff03131",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9f605c69-d788-415f-92ec-64964037b972"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdd2bc79-2f32-4f15-b9dd-8b15c493eea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "727d1728-875d-4ac3-8e92-18b01099f23b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61234d14-f81d-476a-9bb9-5a0d3bf55ccf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96d4f09-6173-4853-870b-565679e31642"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a0f691f-9720-4613-986b-0c55979aa80f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90bcff74-5f5c-4550-8ca1-3e1b54b32b61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5de78b47-f67e-4193-8827-85678dc7e193",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aaed4ac-20d8-4378-9aa1-e273a1ddded9"
                }
              }
            ]
          },
          {
            "id": "52c0767d-b05a-4b5d-9da3-ea82a9f68715",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e98bb70d-6779-4d94-bc15-4448fb7e3b78",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfa7e071-9009-4258-ac5f-27050a4336de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6915d8f2-40cf-4780-81f8-18c603d5a250"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a03b7408-ed28-4345-8913-a7af51b7ea86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cba97f82-06cc-4041-b426-ba366d4d9036"
                    }
                  }
                ]
              },
              {
                "id": "7a203c93-489d-4382-82df-cc709eda35d2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9306301-ee96-41aa-b38f-cb4da050f7d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37d6575-563b-4fde-a7be-5540a82a6865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f203c470-5abb-41ab-b48f-eeb71868e7a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab4bc047-28a0-48dd-b7c4-5d9483dbc728"
                    }
                  }
                ]
              },
              {
                "id": "b808fcc8-ecf4-4e22-9a4c-fde33c03c189",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f261b9-e995-4722-9ff3-ea72f3499d9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c98089ca-8808-40fc-8d2d-5b1fefb26944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de3e1c59-49bc-4b8f-b5c0-dd88b8aa5b48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0ab79161-e0fe-4b49-8264-efba79315092"
                    }
                  }
                ]
              },
              {
                "id": "4a56674b-afed-476f-9461-31f4e0e56ba2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fedd1342-89b1-4bd1-9f9d-377d92c0a122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37512cbd-ddc2-4a13-921f-50da204f5dfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59cebce4-26e7-4a7b-b446-553355bc96b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e6a6bdb-d6bd-4dd6-b064-0b97b6051fd8"
                    }
                  }
                ]
              },
              {
                "id": "676cc849-497d-40b3-8100-f248cae33b87",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ca60dfa-2e2c-4746-8438-89fc8bbc8163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acc61b2b-090e-44d2-a8f6-d6fb012e4eec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e823f170-93bb-49e5-a8a6-449fade51795",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6e1d0b1-7568-46b0-81e7-44329d51ace6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db713a64-2d9f-47e4-95a4-d70e70359c0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5c9e1de-174f-46fb-b4fa-fe9a0cd96242"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b1b7793-7aac-41b6-a8f2-447b5674feb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad0fdd0d-1c40-4f64-8b91-3d688d826a4d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbb2ad38-a3be-4c79-acce-f8f76cc8ad86",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "250baf0b-858b-4f1f-9cc3-b5d0051c93cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e249be4f-5329-44b5-8dc0-266e136634be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38b97334-c0af-4024-bf53-22d28f70fbf0"
            }
          }
        ]
      },
      {
        "id": "045ffa3c-724a-4c4c-bf4d-4ced800e8592",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "657ed91c-3452-4650-90b0-6f3331a39f17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a175073b-c7a0-45b7-980c-555678ee56d7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9132f8ff-c98a-4245-b46a-9166c4f64fcd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85966f51-be35-4972-b582-e5060908ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7cec12-6644-4330-9c3f-ab24e4199398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ed739a-e6c5-4184-a317-943f41e219b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8996197-c7c5-4ce1-b161-dd9e290d7058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6c796a-a89d-4154-931f-cdb177409ebb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c2bd7f-4b64-4eb8-8c62-55a377e1726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a72bc98-a580-4771-bcbb-df9cda4c2380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7d6f64-97fd-4e86-854c-74e41e32e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba79b7f9-24db-41de-9100-7ef7eb9df6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7a9f9d-dfa0-43e8-9ef5-f572e9b70ecf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4321dd0-e36c-4628-a878-ef3afff58ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496c8ba7-a856-4f88-80eb-df8d2abfe34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4463c478-713f-492d-869d-4cfdd4e29983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88552fd3-e682-467b-993e-0035b6e7680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfae499d-a287-45e7-891f-4be61b8ac791",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88545c74-9867-4e44-b562-2e35de6985e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2634352-0873-4bd7-9a42-619f999f3c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cbe3ef-6b11-47c3-9dd3-1de0610828e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87342fc7-1034-4507-b059-68218af06605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2556c530-5701-42fc-8590-6f8d27918434",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8566e8f6-7d60-4761-92a3-5aaa8993c0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340791be-509b-4edc-9c22-b06e48650ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06e151d-2e27-4b31-8912-20e59abeb382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb8e034-e8b7-402e-b799-cbfe2b3a109d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7788cb-e47e-4390-851a-3be1951fd47d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35052b0-7ecc-4b2d-afa6-0e4900f04553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5038720-13c8-42ba-b25b-93036200d388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec456366-f653-4c5f-85ac-bd7615beb75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ed2a7a-2367-4801-aa57-47b72885f27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbd2f5-548b-4268-9dd5-01f787ce537f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cc340a-4477-4db2-814e-3eaa7057e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a64d3f2-a8f7-4d36-a064-e3920acfe472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35240e02-7159-4619-bcf7-9c1e0c9d8aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6c88de-ad0d-47d0-8223-add0e0ecbd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00ed10-7ea9-4894-b2bb-72fa6a0f0fcf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e71d84-dab3-4787-b66a-439393b0dd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6445c2c6-da06-4d9b-8419-bc9346e66624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1517e3-331b-4386-af8f-abac00ac4cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da306c54-7eb8-4dea-9af5-6144874ece43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d90b6e-6b88-47cd-b494-a3c2b4429517",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f47062b-dc7b-4fa8-a1f9-8f3d9f201fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7400ee-d8b4-4fe0-8369-7ec5a8d3ee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afd04d8-b644-456e-824f-63640dbf15a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "546b917e-4d33-4a07-981d-36aed58ce8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2a0d9-2330-4a63-89d8-d9d5166beea9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234c837c-13a1-4843-8f99-e774ca9d1562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d76777-8a67-4d9c-9ea7-a66ba4253cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0869fad-6bc7-470a-845e-0b9fb2d72cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f986a9ed-109c-47fa-8997-85cae96eaffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b67e4e4-70f8-47b5-a868-a6eed43aeba5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1485dafb-97aa-4aaa-aff1-5c87cd7349f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053bb01d-d8a7-4e57-ac91-96567b0db082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70fbfa6-2352-46b7-8ebe-c22fbdb0c0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "908a4f5c-5d67-499a-bde7-1601bd3ae973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a06ae4b-4f11-4cc0-810c-ce047b62a065",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b858c9-bbef-44de-a7ed-89474e5b95fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b79046-81a4-4c9c-95d1-3c1a8adf763b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa38db7-8e61-4e4d-8dfc-dfa8d2a5c59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0285a9a6-d7d9-4833-8cc3-ba0f6eb923cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140d2f05-4a15-401c-bb90-c32f4d9c97eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4535c84f-a267-4e2b-b2dd-f8760804b9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72b99cf-269b-49d0-a096-a3963d4109f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7a0933-fe71-4f71-a002-078ef01fddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a737441b-2e6f-4307-af17-2fb0f784a561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762005f2-a4c3-44c2-af0f-d4c393b649e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd16827e-9799-4d25-9d22-e38080123b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1265b1ee-1268-4366-9fd6-9089a7c82120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a42374-25e7-4a5e-86a6-baff70953e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8108eb29-717a-407b-95c8-74b175ea8a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf875d9-623c-4cb7-a925-8b1b94af5303",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0e4ce4-bef4-42c4-943a-0be876aab0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06823fb-824e-48a0-994a-bf51cc505215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c0c8fd-f35c-4ee2-a19d-6e11abe6f259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a374f21f-c26b-4e60-84fc-5255a96c3f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c49fb6-a760-4194-820c-839240911abf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4094032f-2895-42e5-99f4-85bf87b49d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8990f492-3b1e-448d-b4ed-2f864c9e750d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e43dbf-6e1f-4a2a-9913-64c6091afb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e65213-52c0-4ef9-855d-d5c157b8acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5d223c-5123-4f50-8f63-4d923c822c66",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0efbf88-a30d-4cb4-ae79-1de8652c0894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f692df6-bb30-426c-97bb-a1da88aec4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fb87da-0d9d-4b0d-a7be-0536001dca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f87398-1e71-499e-8595-3c166d0bea19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5402d9-deec-4d35-ad07-b75306b4cd56",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea45a82b-cbf8-4d59-a61a-b403eeafb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b95ec2-4ae9-4b32-bf03-8f52fea382c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1d0bf4-30f7-48f6-9864-e75e3e5f0be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3509c73a-d7d1-4058-baf1-1201ed1851c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39bd5b9-1bfd-40d0-8a50-01f895ad5a8b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49078746-dca7-4402-8d92-4165ab8da1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a06405-f83e-4d74-9c70-f2acc4bceddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f9a03-09c6-4d0b-aa1f-1fa9df45500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0561cc-8b7c-4c3e-b739-a58003af4a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3881832-728b-4ee4-acea-be2ed4866af3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5daa7726-f5f1-40b0-abc0-d84724d5bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418a71fb-e5ff-4660-9303-43b176acf5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f605566-27f6-46d1-9eb1-d2717dad82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b287409-e583-433e-b5cd-ba34631ec685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e584edd-b7a9-4725-8ea8-0e0c7deb03ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557c0d0e-8f1e-407e-a02e-fe59f6ec7790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89dc8d34-c6b4-4200-a885-8d317ad2d1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d64f784-68cb-4f0e-b421-d69f48e61141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "496e6c14-e6b1-45c4-933b-15d0826c86df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856d73dc-0742-442c-90f7-b755e9acc3a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eebecf6-27d6-4da7-a9f1-0f21ad9e3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23beb280-206a-45e9-9a14-ea8de0266979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea862da3-ff40-425d-b45f-13bdbbd086a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c407c3-dae3-426c-bf10-0760aa954837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e4b0ef-1935-44c1-8f86-3f91a36c385a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff48bccb-e1c5-4239-af20-7dc2646b38b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa75116-d851-49f4-97ba-8753e0401e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc275e6-5f23-4280-b435-68f52b799340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d0b52d-53b4-4f63-b82b-7f623a7ce57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4076b7-1b0e-4823-9524-7cf65f89fb02",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c05f9a0-5ae1-45f2-bd1c-b4496af4f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7fc248-b4ce-4faf-82f5-e62a9968d034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a63b84e-751f-4021-8a05-6a3a40353e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86bce3b2-2a88-4b54-b689-b042c0e571fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83770f1-1719-4a81-bba7-a2906506e531",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b078ae7-05fd-4e74-8f14-b1bd6e1d0a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c997fbad-5f11-4e50-9b19-4f5067958f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc51ff47-ec13-44f6-a09d-28748d5e98dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32968d24-1467-44b5-af1b-8c407a2d3323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653b02fc-003b-461f-872a-c8c83506d648",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9792173e-c3d2-428c-8b6c-bee5e95f511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faa000d-fbbe-4552-a6e9-552ba4fb2d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cd3d20-ad57-437e-bd9c-14bacf6f8266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a6beaa-af36-4396-83f1-1ba2ee64d279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3e11b6-0a03-4c7f-8ded-48cc6fc786de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4be8176-6677-48aa-aee0-1a467745448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cc407c-4b9d-4e38-b80d-71fa1056a680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b09f2e-7f37-46f6-a739-acf3c07de017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b72f80f-b8bc-45c0-9288-9aff800d44cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45d6f5-b2b5-4c1d-97d3-13f8206d2d43",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c822d79-fb2e-47e1-ac61-b6efe5a85d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe286621-7fbc-4498-9337-aa6c047a2966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf945c1-86b4-403a-a97a-44d03f37d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c8821a-1903-42f3-8f05-b6ae9a537067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5887df6e-afa4-4cbb-bd97-d16d1a1f1c21",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774660c9-f119-47b7-ab49-d312d3a754fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5f3d8c-8d52-4f4d-af8f-383a4b3bf473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6706de05-7860-49ed-acb4-7679bfb62aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87092ce2-4491-4f2c-ac0e-a7eab183aba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35ac782-61ef-4a4c-95dd-ce165423404b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8badc125-bea2-4849-b653-786429b0834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d1bf7f-7b34-417f-a247-c93409737efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8cea05-bae7-4d1b-9da8-2d0c25f80209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29d2c65-6b37-4ef2-89a7-dcd9d32465c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a6b986-c48f-473c-8f67-126274fd2cdd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae7d38c-6e18-4d60-848b-55460fb6ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a65d4e-b52f-4de6-9c72-031487ff1a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44923c-7fec-4173-93db-95c54c5f02fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d069ac-b560-46e1-80ca-595c60082a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a90f2-cf5c-4f63-a56f-6fc823c52c7f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f448a6-278c-45ff-a57b-d2f845d22ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6363bcdd-e9cb-40ae-8de5-eeccd7558107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83749ac1-93d5-4219-b614-6346391b8db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42120ab-dcc7-456a-9468-207951a5a2d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3390afee-2881-4654-a813-585e44eabd08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e026f8c-c2cf-4081-8c39-baf9076ef256",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff5d610-6622-461b-8d33-eb36a5b94bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0681a6-8a10-4153-a335-710d91dfe10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3455cf32-bfe5-498b-b036-c38a895fb0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2de7f812-e6f2-46a7-8bd2-b89387f58a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e5f793-bd5a-4272-920c-52758345702f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3bec1a-a484-4cda-bcbf-6dd49b3d7e94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "86c96878-d4c7-4121-85cb-7e45baf51025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289442ad-73c4-4834-88d4-f50c04fcda45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e22886ee-a15b-4f10-a0a5-1a62498c5f43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7163ef7d-6ea1-4be0-a0b5-aff95e8fb358",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04ec19f8-5dac-4afb-a604-91871a2fb6e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19dc5d91-71bd-417a-a6cf-634c211183c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2155bde-a48f-4b97-b657-fefc1646fd30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de0a2f4a-075f-458e-a872-060fd222fa78",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b83b696-8180-4581-a057-99a660070421"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0db2e328-0314-45f6-9f85-5d06e92a190b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b5f7b10-d316-4e4f-b712-b22da4c31413"
            }
          }
        ]
      },
      {
        "id": "cd8e4453-1856-4c89-902c-c9c5bca893c8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e8807243-eaa9-40c0-b59c-094a5b8e6eee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16870c5f-8854-40e6-b7c7-7c7a47e81072",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95ae1fdb-315a-49ad-935b-1df94c345931",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab158e5-4ba1-4e0c-80ea-682ad63b6b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5275b9-c874-401d-acf3-3a976b54de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b52ab8-f695-442e-a92d-aea5d87d27a2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8710b8-02b9-4f85-87a4-1c70a9eda9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2949c7f3-fa45-4a3c-8680-09e371e8b504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85084e4-61b0-4d97-99aa-fed615b85dd5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4874306-5d07-4374-b2f6-e2e4da533896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ce1fc6-15f2-4897-a504-3184d27d60f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e326cdd0-8cb6-4cdc-afbe-82d082ca30a3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f23826-7f65-45d3-8a24-4b3d4ae46c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3c0fbc-55e5-4391-8395-2d415e214fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a719dd-6c4f-414f-9a5a-e5165bab7f29",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b155504-c872-4410-a988-ea0673d985cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35f39d4-65f5-44eb-aca9-10dc3a935387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fe58c0-8aa8-4962-823e-a39cdc46395c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4049481-774a-487e-94de-ec2ba7561dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdcb9d5-4854-41b5-8c09-50df51b2c435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1383bbb-66bc-415b-bf4c-2f356f8a1ced",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1265ce0-0ef4-4e97-821e-8714de82806d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16b1de7-35e7-466c-abad-58f8b6167898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa5567e-0962-450c-975c-ba1ab1bddd51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cde5762-347d-408e-a9d3-288326ef6365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e044ae5-5cb9-48fe-8af1-82bc443819d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83a6720-7786-4456-bcca-1384fc22aee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c44ff41b-8f60-410b-b5f6-031daba920bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f87494-e349-4f34-a8fc-5c08287d8a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fe0df8-faa1-43d0-94b1-271623def4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49201c1-4f8a-411b-b3d4-da0261b6a56d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c8c275-5742-44d8-ac36-4268bd326d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b289e7-2266-406b-ac34-f887c8a45d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62e7b7a-b399-4d00-b563-1398818e24d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6895e3a1-a9de-4f01-8989-783697a12fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3161ba86-e919-4370-b5c2-fd77681c52d9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e60e06-d0b7-445d-9235-777082a8d8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac5c045-66fe-48c3-9b35-796a7600f4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e923deb-ccc7-4bee-a1e0-9278a06d6978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d29255-f517-4d7c-aa2e-707b24740f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38a3063-81b5-4178-8e59-06c2bb24134a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b44c696-a89c-4b16-8864-0f1e3921513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938949b0-8fe2-4e69-84c6-bfc283f4ade0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c15c09-59c7-48c9-a4b0-3a73db568d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccd582d-bfa5-40df-b755-6960e67ba68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c4faff-6f2c-4f3f-bc6c-987881d63489",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b045d85-c99c-4682-8f77-1023db1d24ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfb04de-e0ad-4385-8750-62146a48ce36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38865cd-c74c-44be-ab27-fce77d816386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60c68e8-6066-43c0-a7d6-7df0cdc828be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab5c2a0-8384-4627-8470-23766433db79",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb50f4-c436-4ed0-ab83-b8100f65e877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab9f7c5-00cf-49bd-a48d-4cec66db237d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13920705-d0a4-4431-b4eb-b72af40b1648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84419069-a00b-4215-a0b2-9f5ee654093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd03378-ff7c-4821-875b-101ae73f1a7b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d202c867-e225-43da-b36a-0b2104c1b00a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef2c2c1-e084-47de-8977-82ba250f0945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dd4b2a-6d71-44fb-989a-b81ba23d95c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6403ebc4-712f-42ff-b245-285725078ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5988b70-b238-4cc9-b30b-523f9fe2765d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a69a2c1-df56-4a28-9f19-4af9780eddc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afb2c0e-2d4b-4414-a07d-7387dca49b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912c72b6-f70b-4629-be7b-baf2cde3b731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004decaa-3875-41d4-b483-13f8ba5674c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93742794-63a4-40a4-a1eb-aa0bf46532cf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de72fb6b-c257-422d-b116-c56e32954036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37a790d-e833-492b-925c-5aabea075003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8383c998-8c26-49c7-b888-7d93396eafaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ecf26b-a9ff-43cc-8e67-32ce01a11145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded1ae9-4b31-44a1-9ce6-ef7e4b178b74",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a4225-faf5-4085-9066-84fb52740336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36613af-7e38-4fed-91e4-160d9af1d3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386116f1-4dd9-4b00-977d-a3305c83e9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096190f0-5e85-4f44-8865-e0fb18baba2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8cd05f-f77c-4dfd-8c12-0518019d69cd",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3dabf9-2754-4855-b8dd-f731b7b1801c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462743b2-0d2e-420a-b8bf-97450a686335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b727e6-22da-4738-a46d-893371846689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c8998e-e265-4ea0-808b-ebb19a75a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f556b698-9009-42ec-8220-5c18d440ac50",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6cb752-c2fc-4808-b7d7-959462ea32fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49947e63-878c-4156-bcd1-0fe444292856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48e7d63-ec8c-45af-ac02-a0d070ad1dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e96a05-51ef-4a2b-a3db-1146f77e86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec7840d-b116-46d9-9039-fd6414c47883",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43dc790-8a09-476b-8036-c8334cd73fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5e611f-b6ad-4199-9968-e0a4c3da296f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56cb014-43c6-4c5f-bf97-14e061a60422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bf3338-3e72-4e04-9a2e-319f01d04479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56f2ccf-f4e1-493b-b881-b3bd7cdf49df",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5327b6d5-1a2d-4c96-be34-8d4015d846ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9425628-4dc6-4491-96c6-c59b5c7233ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42334de-5b22-4030-8815-0419f5dc677e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb8f7d-5b79-40e0-8960-d326acda8095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef8b3ea-0edb-4ff0-9e3d-edfeef76f698",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afe721f-159f-484b-80cf-85dbfa249381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0febab-bd2a-4302-af4c-72161cd21ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82e2a7c-1a6f-45ed-82fb-b925c754d843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e8b747-46fd-45ec-b7cb-6b95040eb0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96fa26-bd60-4b86-b897-a3702979d6b4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ca2bd6-fdff-49ea-8cbe-9fadbcd79552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f16cd9d-8886-48f5-97ba-aceac17b07d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1328028-853d-4c85-8670-8810cd3bf026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88c37eb-d9b1-4067-b21c-9b4947e3ca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482bcbd6-a11b-4d24-acbf-d27e9318359f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f843ae45-f54d-4ab9-a210-c4e2a3b259b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285b638e-8b4a-4527-bb41-4f2e86e255b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5f2440-c4b3-40b0-818e-387b80ae7c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fd859e-9268-4be9-a06e-135a92e6bf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbfbb91-e541-4d43-9044-c2669bed737f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2701196f-a3dc-4ef7-8d62-61692a87fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ddce3d-8b3f-4cca-8e75-f039ada5e45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ab275a-ea09-4038-a5e3-3445f4b03b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6c5f24-871e-4a42-aca9-155320f0fb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f4558d-2401-443f-83bf-da791e31a637",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372479e4-9d71-4a23-bc72-f84c605eda51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a848704-17de-48c6-93a8-6f3040eec4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e3bc20-2d70-4dfb-8252-f3db920069dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2657a9-5b46-4a0c-bedc-0f01a6ef5411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f7399-b2bc-47d6-a618-64ed1277db42",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504f1854-64e0-4c73-bcf1-3e0f1764383c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be73ee11-34bd-48e4-a20a-e8ae1ac9d02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e18074c-706b-4fea-a981-64b3d21d6a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07829aa0-14cf-49ae-9d08-2590a93ab028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75b34c4-4d23-4fff-a0ed-640aba99557e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd4c587-a7f5-4488-969a-bde213981351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fe1f2e-0f40-4c48-bbfc-39b0569c6c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d4f903-1762-4984-8a54-6c72d265b077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f97134-11be-49f6-8bc5-a2f6a177dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e913ac60-1e76-416a-80db-e192439c57c5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b644f86-2ca0-4929-8f98-f5cf5b37664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505eecc4-c029-4e21-a728-6c863638373f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce82220e-eb86-44a1-8a62-98de3609f473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a63889-dcbd-46c1-8211-5733b46cb2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec45340-321a-40e0-ad57-229d81621de4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab117741-e7d6-4fe0-a834-1bb1bf500f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f379dd-27ff-4329-bbff-528ae555ed32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be77ed65-85dc-4b01-a033-24aa25a67a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074024e9-d66a-4373-ad3b-2138cf725167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711a247a-93df-4ef4-8f24-6c1e3f8dd58e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15806b-7f81-4189-93fa-42ac5293d063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806971a9-0009-4485-bde9-babd2b0c1a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58dbc2a-b4c1-40fd-81f3-f5d895b2c3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a4e966-2444-42be-aefd-4cfda131b77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ea2738-4f56-4046-8644-1257f2fbb78e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36193f7b-2d28-48f9-acc1-585873f4643a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e7429e-3cdd-4a79-87f1-ad03a727455e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2805c39a-7f24-4fdc-9cc9-8554dab7ac29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15929ef-ba7b-4c65-830c-b61d415db251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1cf832-3351-4309-ab87-58d07dd6eca2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7f30c7-b3aa-479a-887e-5258df701fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ae411f-e86d-45af-be67-5cce77dcab86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b776e-7588-48e2-8b67-73daed7d9c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64846783-2b2d-4d38-b5aa-c0d259ff100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e37565-505b-4cfa-88be-749cedfbfa02",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7039a316-b7a6-4c3a-b619-5c6cb4a9d26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50ba460-aea6-4617-bf98-6930ab247fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c2561-bc18-4909-bc8e-878dcd1d57a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192eb819-5c72-4bab-89d2-57e0c6366bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc40aca-8137-42a1-a017-fdbf0cfa937c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa538e7-98d7-4453-9b4c-ed505b445e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf8dc635-43e4-4ff5-b0ea-5973db8a04ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64461921-a2a5-4a15-a2ce-645e1a9a0664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5984a977-53d7-4abf-84e4-e5ff8d2b6364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf10335-74a8-4e2a-b73f-0bd45c842e85",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f86c86e-3fd0-4641-a221-64801cdfbf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638d24da-f63d-423d-8fe5-a25d34374e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6261583-b9ac-4451-9fbc-25ad45be61ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39f006f-f299-4a95-bff6-fc735d168a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efd2f50-e5e5-44fb-b6a0-b6e96ba8f061",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae6fd12-f1f9-4e00-80b7-0fabdf2b8b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4df614-5d94-4f16-bf8f-4f0d59c25a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b381e4-e94e-4a09-b909-3756f389f577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb51da3-7912-40c6-b396-8a454933347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b981e-8507-44fe-821f-1e546edc8a75",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc454faa-c5d9-4362-8a7f-7e1854781bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9d8703-d78e-4c8a-8fcb-608d1f029d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac59965-a031-4efd-8f87-d22d1d88b6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e941f2d-51ae-4004-a461-d6185b53a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63cb833-f422-415f-9761-b9d629034487",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd7525a-8ffc-47cc-9e65-10b9e03f75b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305d264a-2629-4f78-a982-0ef5a459123a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68a557e-9dab-4db7-ad5c-096f537e8793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a40321d-8219-4f40-9030-40a98a745cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b3a7fe-fe74-4d8f-992d-b2d7903267f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9741d2d7-ff23-4268-8577-a177a5ce5527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029c826b-7e16-4042-a34d-5b29fa78ea2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac26a6-b083-4cca-8fd7-f68e6432d839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a19db38-d4fc-4da6-8bcb-f2077ab961b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2866f4bf-bb12-4aeb-8a55-3d60612d4b31",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1182596-e9e8-44df-a791-f5a011c0c100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52cbdf9-4c95-4721-9db5-5f33d43bd2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c42b63-2bea-4948-b86c-a19bd96f4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358e8d09-2dad-45f3-bf92-4ea11ba0d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e869a4c0-3423-4354-a8a6-fc4c9e2eaf40",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804724b6-2f7d-4e91-bc18-1a1b79a25adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5341ddb0-d2ca-4626-93a1-bc696ab94a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd061ee-b22b-4f6f-8aa5-325c8931efda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f181b5b5-786a-46fc-998c-02656823ee28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b1ad1a-64fd-4b7a-ac9d-afd4c41e0c19",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ac2fac-aa2f-49b7-a32c-43a72a88894f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a78542-21c6-41da-98c7-66f72dbb6530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e46e39b-dd50-4df3-aa0b-8f1740ca18b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df1495c-e1c5-485d-934c-e4b09ab9f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9993f1e0-3a87-4596-aa0b-fc9c6c5e2e32",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9f3cd1-b2d1-492b-a20a-3f34a11f2316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705e1318-1e3b-4f46-8374-08682e1ebfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d62a115-66d6-4fa8-a7da-00705062e280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be246dc6-4867-4f03-b7b7-ed8315995e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f30c04-5f50-481f-adcc-228e998463e7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dc1f2f-3a9e-46a2-96cd-bd5ed18e2c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e134f42-ef5c-4b57-aa7e-eaf124c0a9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7895cd6d-3575-4db9-938b-8a8e9c31b51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cbcaac-5867-4782-a560-c478c6893af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b1e74f-953f-45f3-93db-9dc2556ad429",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6388397d-ce36-412f-aa40-ea99846c34df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeefd1e-67b7-4118-83f8-164d87916f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc97109-5e39-4630-ae7f-d0130a0832f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae3e3ca-1026-444a-894e-16667e6ae087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f16b57-7af7-4edb-8728-e00a9b0776fc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fd8efd-ee04-40ae-8fca-0c68464e0485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656ea877-60e3-420f-be5f-ffc2bc8b4ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6330fe4e-42c6-45d0-b29d-adc3e4b47baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6022f77-f4a6-4c7d-a186-11d4876e2fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086ff295-d29f-43da-86a7-5d557f810168",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee65a93a-e17d-41d7-a8d5-707dfd5abbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79883af-33f7-4609-bb42-112bc5cf4d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf40094-a954-47e1-ab5b-10e84112c169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cced2a-b58c-4d64-91b9-17adbadc99a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29972b-9d6a-4d2e-98fa-c883111435d1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e19e5e8-27de-4578-ba0a-7bfd17552add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c4fdc7-8cf6-4bb8-b6eb-91ba15036a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55744079-873a-4c6f-bd7c-0dbfb9dd40a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b15a6de-5fa4-4bf4-8c98-ee5ad7f97073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e73d4-8b5b-4aa8-bbeb-44d0fe2fdc6e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589ee557-b6b4-4ae4-b9a6-e09a68a92b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44393a3c-96ae-41ab-863a-1cbb57ef5a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013fc972-e180-4949-978d-13e738e305b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452a7098-882a-421c-8b50-943336806a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0948e3-4781-453a-9317-0d023c7ef85f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f82d04-203f-4262-87b2-2977f3635353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9088684b-db7b-42d0-a674-0991ebd70c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090278ab-6056-4b52-b65e-15b0f3db95c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efab4d16-53b7-4698-b433-51120fa20d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95ba3a9-014a-45d0-9317-526bc92084ed",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c8a4e7-2abd-4168-a65a-a6e9cf895b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a06de0-4127-4837-b524-bfcb7c0bb305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ad6928-462c-450d-b85c-6ab90c30f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a0816c-65d5-4453-a463-8825db9e2aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc113d7-1c75-4475-b753-c0b61076ed28",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc0b821-c6b9-4df8-bc2c-6bb4244dfce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23171dc7-4ece-4b28-a2e3-0b4e16b89444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2813bee8-5530-425e-9c3a-85e2040bf223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3655a3-ebf6-458d-ab32-e32f2a3f8a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87230805-ea46-49c0-afef-19028efee276",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b97c81-bd7b-4e41-8a59-2a07ac3a9c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd294fa-1f2a-4dd3-bc99-a9385419aadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b950311e-db2b-43f2-b343-58c800abd1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdec5247-a1d5-4a4d-827b-2152be9f0261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90888cf-d41c-400d-ac87-71932e4ff1ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84b2007-8f41-4fa3-aa6d-83af17a6b4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f552e1-5c50-4227-96e3-4cf20b197702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed89cc8-4d81-49c8-9163-188a72729105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0fe1b6-761e-49fd-a3e2-6482aef1313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502eac0d-2910-4dea-9c0d-6269b7d8181b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ce2c36-47cd-4051-a1be-44beb02295eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbeae4b4-e366-41d8-9b02-8e1ef40ed03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766478f9-63c0-42ed-92fd-7954b96aef69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1485250-5364-4f11-af10-75fb8f0bdaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db510d05-5d6f-43a3-8620-594cf1681682",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1f28ae-8ec4-479e-a66e-5bc5823375aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62938340-9f3b-4b02-8b57-f18005babae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2879a20a-6788-4ce8-9a15-a64bd2960934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085d2d85-edb4-441d-96a0-56289dd4ff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8160bc5-ddb9-4c49-837a-2417f94f2946",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d4638-1f80-4d7d-a518-2f851f95a742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b428d8f3-562c-4f30-a708-46b9abde0be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d702d524-53bf-4def-86be-a46194db0058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061fbe11-d503-4803-a629-343765dd56b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d85d5-b48a-4c38-a74d-5ef51545c992",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e09956-c6a2-4b0d-a633-1652b60ffb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385e6a5e-bc78-4842-8622-f6e165f39c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06086e9f-609e-4e3f-bf16-5b4b3a6cb64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a0547f-fccb-4523-9894-b454e17e21f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf06b8ab-1a96-42cf-b351-6d6658b2a560",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ea6412-20f4-40b8-9f33-029128bb842c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbf0e23-fa24-4363-a293-4201c83f29c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5931fd50-50f2-45c3-afdb-64826523bcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801d52ae-5257-496e-a7ed-371e88a67733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15009e6-db50-4d8f-a2c1-ddbe92c8cfcb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb6c2a2-efa7-4f87-98de-6f7a5e6f0809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e48fe7-6430-4d14-8395-4fe4b7cc0096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7e1c2b-e989-4b9b-ad98-ac03ab9e4b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666fd18e-ca9b-40f4-846e-ec6478eed6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b14f1-1f19-4d70-8ad4-c64987f13400",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b59769-38f5-4caf-ab36-ec6c1f727562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fd3111-f2eb-46c6-945c-7bea6a1b6ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c94169-0da1-4616-884c-f74d7fbaa0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a01a3a-8ee0-4e12-bdc9-e76159d60904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc403906-80b3-4374-920b-abb022ef4446",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb0b532-d6a1-488e-8f53-7e2100b05c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceec728b-30a0-483e-a792-044f1084662f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4cfe2d-960f-477d-8983-7aabd0131dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ab3da0-8338-438b-b093-8d1c275eb1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4e80bc-bfd2-4216-b098-6e7bf6532270",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a0b8ea-3afe-48bf-a886-733e26fff141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7938921-680f-4a5b-b8f9-2a57ec0c54d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d003aaa-6231-4bc0-ab77-67dc3acc17a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c623c5-8658-46b4-a8c1-6051d35675d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50bcd58-0258-4e72-bf04-c00727ff1412",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0fbcc6-26e4-400c-90fa-7c394754cf49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0de9ec9-df04-4c11-af4f-a6aac85de3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6348059b-eeed-4397-a2fe-52d00228a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e53b0e-1d2a-43c9-a052-020d3173fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8cb82f-35e7-4dff-92d9-858da4729c15",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90e18e9-48c6-48a1-a869-1362ecebb70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7757c1-8b8d-4252-9592-7142d829d19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7163cbc5-718e-45f1-9b4d-2c70bf03795a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c0c741-7444-413b-a8ef-540f0891f469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd36a7c-a5ea-4813-9b40-23404db50084",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d3f67-57ac-43f9-895f-d447a57d68b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cb2d8a-6d32-4fa1-8614-06ca00ec735d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd2cc1-7dbe-4071-9949-599d847a05f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e7b1ce-7bdb-42fa-a5db-a4a5060cd4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be48d6b0-23e2-4e10-b200-23892a6d5e86",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce512e3-5512-4927-a712-6ec69d55b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa828b4-0cf4-41e3-847a-0fbcff9fabd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a95d596-eae2-4421-916d-52137e3836d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8858a64a-5771-4e44-bbe8-77342caa2cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50720eb-5182-4857-9470-2859ec444a0b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47475a1f-f74b-4205-9019-f1cdf64666ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bff2d7c-fd0b-4a4f-8df4-f0d0a2a07524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eafe9e-bd0f-477d-a7c6-0dfa0653e7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73cf230-8be8-46e7-a9fa-b6bea97265af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6453b32-babf-432a-acaf-c732a73ef814",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6084ee-0508-471a-862b-7c0ca06b09f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8840c15e-0318-4fe0-a220-4d989318383f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29feac8-3730-4ef6-bb44-edc70983e207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1eb206-c96d-4caf-8fe3-0f7a2794b2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bd12fd-00b6-4516-8d1d-9701b375b7d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a48d18-ba1f-4ffe-bbb5-f37bef5ade70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23dcbe9-1fc5-4da4-94d1-3166ab2d672d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd45d51-bfab-462b-9c2d-06687ac384fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d27a1b1-6b4b-439a-9bac-9b6c2910bec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d43a7-0d46-428b-b5e4-0100636ed54f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04df76f4-cfc8-4e02-959c-40e91cdab165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97dfd46c-16dc-4dee-be35-6972f27d558a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b768ecf-98a9-4860-8fd7-39da372d3336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea0681d-19bb-4a5d-a5b5-43f00efa4767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b96154-2721-43fa-94fc-a69a9def7c4e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38751ec6-4e90-4a14-9bb5-b61041e97293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89940e18-94a5-445f-9af6-4eedaceaf56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9194311b-ede9-4826-be88-aa130dbb3bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e42519-c501-44a9-bbcf-7fdb9a4d21a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2147823-4f84-4998-b1d8-fcd4556a04fd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d4373b-7bef-4de4-af52-5314d27f0b79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66129a9-06db-404a-9897-4035c0ea6343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838b5c9d-1ca0-46cf-82df-e2d45b7d4916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19f3e21-ebdb-4e77-9c5d-7d0f302ce77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72141513-e45b-4857-867f-958458f0e4d9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e176c46-cd36-475b-8462-73ea8223ec99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cfcccb-383d-45ea-9347-06edc011eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251250f-32d6-46f4-b8a0-4ec2ef184134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6d9d4b-47a0-4c03-8c70-5731ff4f6294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f516bfaf-729c-4f6e-a3e6-f4933fc79b8f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae7b612-6f2c-408c-bd22-a481b29a0342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ac1fec-6770-4fe1-ab6a-f3711b9fdfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b48868-894b-46c2-98a5-cde5f358c032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8455fb2c-6ebe-4450-89b8-f30248838da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af0056a-0319-4e40-8ea5-cae269114765",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666baf0-be91-4da5-badb-d5a0809226ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134e60d6-4a00-4d1a-9095-83ca4f854711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63c4574-78c7-45ea-9253-5b0132544fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd635fc2-c490-49ba-9151-5c5d7d11d062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f03434d-a11c-4ace-adc4-0b094a264065",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4290ac82-424c-4510-8c2b-ee8cd73d8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86933c8a-903f-41d7-ae29-043304ddd12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98262fd0-e05d-47ec-8071-fa28dcc1a9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25154303-cbe7-44d8-88d3-6cf2b11e9a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e5c64f-e2df-4cd3-8590-02c07bf88ccc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599c8268-3dcd-47b0-9151-e9fe06b476d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c412d4-0b8d-484b-98d2-46cca0c23de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43fbfe-42b0-4dfd-b9e5-281d6f2e8da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562057e5-31bf-4b51-87eb-9b2cba36fff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60d7f7f-da13-4b09-bce5-9d73f71f6e6c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b4ee18-99a9-4f16-b091-5f7335c563c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a13691-d907-4698-b52a-8b32453ad2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffceecad-3432-4e9f-babd-cbb8ea98915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc7f498-8d71-4ec7-8944-c8856af205c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852db69b-bb37-42de-8a8c-a3d046773869",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d12414-c035-4cf7-99ac-73879a5a4c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86c9e92f-6cf9-4d92-a9d6-0a3ecd53a548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f05caf-2a74-42f6-8f09-a8dbf7a6ef9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f20f642-56be-4fe3-bbd7-7e516295f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc09e07a-d7e9-4624-81ab-40857a09d7b9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44021486-9078-41f9-971b-affe00cfb7f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa3895a-940a-4f87-8277-9c522beaca03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca05540-9ff2-4711-8878-932e57390434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d7e573-f69f-4a19-bbce-d8ff87941d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d20fc1a-f6af-462d-bfb8-a94764fae257",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55501d02-10dc-4cd4-81a3-9c34cdffd988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a89378-c717-4874-b4df-1eb61ab8ef3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e0a55-dfcc-42fa-9d1f-8d430d947d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f05a843-b0de-4fd0-8ac3-c8633c995d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495856e6-7525-4e54-b254-d45866e2458f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b232976-729d-47db-9871-4f70b4ca6b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef41f3e1-5323-4caf-9e59-8715faca97c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656f3977-536d-45c9-932a-894df0d67a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9eb91d-b4a5-4397-a01a-7d3ba930f340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cd7cc6-07a9-4c13-b61a-ca97a90252a2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3897eb87-7e23-43ce-a73e-80b3f2aaa956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f545228-de89-4a8a-a7f0-8b846e2e6be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddbe6b3-103e-48ed-a365-fdbb055d63cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27e52d5-23b1-4eea-ac3b-c6016037b3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2d3ac3-1bd5-41ed-8c74-07725fbdb19c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95694b3-4ee0-4a71-9003-a0529af269bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d419c87d-45dd-4a17-93ac-7b7e882c5b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab6c5be-9133-4f69-b9c1-ac4f697d71b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5384051-6f49-46ce-a928-ae0f27ff4736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb2f0b-0e2f-4e86-9a87-7effd1809e37",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29fbcaa-865b-4e90-aead-3350acd6a652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeedb42f-74de-4cc8-9bfd-094ccfad8465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89264ba-a6df-47e3-b893-3e404f631149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171c9f4e-f23b-4175-9ab9-d0989a943a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cd6b8f-f301-4d34-9f36-fe6bdf61cdc7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddaf252-ab74-42bc-8af3-860f44565ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e195ff32-4e65-402f-83ff-56640dda8254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dc0eda-4666-425c-8189-0b485915ece6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03eaa40-1dd9-450d-8b6b-772bb53461fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffe5da7-8f56-4b57-84b5-8cd2e85f49f4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0a2832-c81a-4e8c-b073-f3f4a43af5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2756ec-3e86-4683-9155-b8bb6435b450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8872b7b-9eda-4a9b-ba4f-4f6cd967feaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4dbf8f-d016-479b-be41-5a20f10bd5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2365dfb0-fa42-4393-8033-fef4b42115fe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d397ba10-a5a0-4c97-87ef-b0d4219c979d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68af93a6-e3fb-4a7f-8a9e-543f058fda35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72d7585-2074-4f1d-94b6-ec1bbf367590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fcc477-8608-440c-bb52-fe050e1aeb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9445cafb-57c4-4ffc-a2e9-6da56ca21924",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372e99b9-f04f-4b8b-9d53-6861195a9557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4d043d-666f-4a2b-8654-1bd3ec1683c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd1589-fa54-4772-a804-d30be6e152b6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e259c0-7ff2-432a-a2d1-26e20e941cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8c7190-d3dc-4284-a856-b2ffaf68f677",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0d4166-7c1f-4025-b57c-2edfcab908d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695ec416-55d6-4fa3-89b6-e7e3f02a4543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c204c7-14b6-4d4e-8a74-14f74ff16490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0610a3b7-193b-44e5-aa32-2561d553244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ed0f4-73dd-4b53-8176-0658064bde87",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f5b9a6-0667-46e5-90fa-4860390b58f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849ae495-2642-4561-b51a-0674fc0e8461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd66c95-b1f5-450a-b49c-f8c857e2bca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752f7629-4e5f-4d00-94ff-a37a3ecd101e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15682bba-96a1-4a9c-b945-84f2cb203abf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ef90f6-18f4-4702-9216-ec89bf25da9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1392649-37f4-4ddd-88af-00df5bde4862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8d47a9-2ae3-4a6a-8295-14e4de7f52a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1b51b4-23d2-45ce-b798-6d99661b6db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7877895c-2f1b-4bdd-bedc-fa39688fe501",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af263fc1-7154-49ca-84e6-ceed958c7872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026966b6-1eb8-49fa-b009-000597335efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3757aa2-3c88-4481-bd94-f05276403aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362d5b1b-c92a-4789-a413-bcb30ddbeb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f175f0fb-4251-424a-8efe-f735de4949de",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f8f645-0e00-40fd-8833-79c714f97cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30fd13c3-eda2-4dea-937c-9c2bb7dbeedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db42f7ff-8ad9-486b-a0fd-a138fa86c8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319b0f6a-9d33-4905-adb7-ce0bde398723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7c5c2-a0f3-4080-bbf9-fd578d605184",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d3c8a4-dcbc-4694-8322-b6759b04626d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e93e89f6-cb6e-44ef-a1ce-290c85de6307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafbbb19-6ec1-40b1-b929-f08c04626fa1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2df07e3-e3f4-4375-9bb4-3da7d7a1ca4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1c0723-2b02-4bda-bb42-1eb18d43b7ec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2234537f-f198-4f13-84fc-c3bddf9357c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273ebd5a-e8b7-4dce-97db-70bb75aad091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986a863e-ff75-408e-9912-e53b35645eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589d20db-e001-4b01-983c-27f6314a2dd5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da53c135-14cc-47d2-8b2a-88f99fff6756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "054e65e9-542a-4e9e-b313-73f2ab758a84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dba7e7f-a4df-4b2a-adb3-c7d844bfc463",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d6621bf-9d8b-40ac-aad5-2953cd72bcd3"
                    }
                  }
                ]
              },
              {
                "id": "559f576d-966c-4650-932d-4432ee1655d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cf1cb82-4f60-45f9-a2b7-36cbeba8f712",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea6ca1e-0cb0-4a30-b54f-0078e8235979",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4e325c9e-3cdc-4f45-80bf-1fd6c5d30a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f3e3e5-8245-484e-b472-c4120f80561b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57126177-c49d-4d99-96d4-378256417307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8048192-4727-4fcb-8e50-febfcb451e25",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ced276-6c0d-45e8-85b2-31ed532a90bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f6326505-206f-4e4d-82cf-b0a7baf5f53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6d3afe-754e-43a5-8629-440112033e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2785002-0fdf-4bf0-b97d-3ed9f36aaa81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adcbf9b4-5044-4c63-8670-b0acf0ee60a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b8372cb-c1f7-47fc-8bed-40eb0fb00cc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc68bff0-7c65-4b43-b308-fe5ea13411bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2685e88d-e9b1-48ca-998c-e567fdfc1075"
                    }
                  }
                ]
              },
              {
                "id": "bc020c00-49b7-4b84-87ee-3bfe06f85f74",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3e845831-2bb0-447f-85cd-e64b377902e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bd8cc4-d658-485c-8a9b-aced715dc903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "26b6ff2e-02d3-4ea9-9c24-eef12eb3a258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee55d92f-4020-4fe5-a5b1-fa8fd287405d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c884b3-701f-47cb-92e8-e2f69336a395"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49e78b04-5fa2-4c32-bcbe-89903ae14828",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3a70abe-5c70-4209-819a-e2b926ad23ab",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a160c96-0146-42ea-94bd-7f939e9d34ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b075452f-915c-48d4-8e40-fa5e6978e8d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1562ffa-51e2-493f-a210-260dbb2c2f74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c0b2f48-c9ec-40f8-8a44-7c0df3978579"
                    }
                  }
                ]
              },
              {
                "id": "00577e84-32bf-4fc9-b579-27e1c334bc50",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfca8285-9430-4163-ac7e-6960f01c3f22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2393ebf3-1a06-4070-aec8-1cd4848fa24b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "753db035-cf76-4b27-ba14-90325018fc98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "550a5a4d-0688-4939-b9a1-57c95ac2d890"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abf5396f-7db4-43ab-b641-e550e8acc8a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8faee76e-61f4-46d6-8144-af672471b893"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40da3eda-460a-43e9-986a-043fc83d5561",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7ea1e59-c2f4-4ea6-900a-39401141ecdb"
            }
          }
        ]
      },
      {
        "id": "3be111aa-b367-4e7d-a948-3334d15346ed",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "087865f5-81a9-4e8b-aa1e-651b2721f1ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7977362c-de60-4a69-a442-b053bb092490",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2dff20-2988-4b57-8451-5d75d6869b0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "41b0e6ff-242f-4ee4-b028-24c70a7af2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2881ea5-eb56-4034-ba9f-83b89ac2511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85a52404-3a9e-4b41-804b-3325872a3304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7daa2e1-35dd-4df7-9fe1-bc15f15977b3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0f737c-0652-4e6e-9fda-c48bde8c425d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "835e6776-4782-4cbf-ae05-b03bcdd7d503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4f1a83-2183-4903-94f5-d1fe0200eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea44b713-7647-49c5-879f-b143f09111d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d3a24d-f44e-4565-8580-0b7b77732c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a4742b3-d231-408b-87c5-48126eb702d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5086163-4dbe-486f-ba13-343a21560374",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2046e177-9382-4368-985d-99bd8fceae63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed92a04d-c052-4bd4-8152-24f2d40449b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1961b232-c384-4ba7-8b7a-cad0cbdcfeb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d17db02c-5dd7-47ec-b920-6cdb05c71e68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12a4f991-27e3-47ee-ac7b-aff68eaf90ff"
            }
          }
        ]
      },
      {
        "id": "1da4c6d4-bfad-4bbb-b6a0-02ed713d9883",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c47ca0fa-ac67-4aea-98b8-3496d599ac9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42515bd1-5a77-48e2-a463-4d403ec9c67e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49f30efa-692f-473c-8a3e-ff233d175b33",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de74507c-b9db-402c-84fd-e7471d0b9852",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "821fdba7-95c6-4c16-b353-015fe19955e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c69c12f-a2cc-4f7a-b300-606f14688a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "249ee61a-9f99-4719-86c4-e724daebc2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f96a2-98ff-4d91-a48c-966a0f3f786d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f233e62-36b5-49c8-b6b2-3702eabad91b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c6b813f4-4371-42c1-a331-4568cb85782e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8bd3a6-b293-4cc1-b8cd-d5d179bb8e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d134f00-8235-4863-95d0-4044f79877b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8619a76a-8af9-4e4b-8737-e217edf04176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39a065d9-b643-452f-87dc-641ccafe37ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9341108a-87a7-4f89-97d4-eae21117f4d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50a73d62-a045-49d4-8ed0-512340892b42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9125c6a-a7d5-45a8-b1f8-aa1da489b9bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "33e0e8cd-89f6-4df0-995b-4c1121a314b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed77f78e-281e-4b0a-b8cc-4418b25509ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10c97114-1bf6-46d7-b893-2cd059df165d"
            }
          }
        ]
      },
      {
        "id": "b2879677-6014-4a8d-8aea-e358c85efa9b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd42b7be-3aaf-4f69-a8e3-e87a3e4ec25f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce3ae97c-4f20-49f1-8f44-3af63120ca6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77362614-960d-40da-b2dc-0d8d8da2f47e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae6475c-a008-4dc5-a405-23dc47575e83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "852019a8-1b00-4459-b45b-839a234f82f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129191c4-e34e-4477-a399-bfad724bee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2146b003-9932-4607-b48f-7f394c3e4fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2b02ed-c715-4c47-8614-2b624e316e1a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454d26ad-2df8-416b-a5ec-d6540413f17e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4a137027-a0db-499d-b568-84faacbfa47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0ca46-0e89-4eb7-ab36-16ba2b346d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "facd1241-027f-4ba0-8b56-ea545456756d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a09335d1-c27a-4d04-8758-5cf5eb69e704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32912d3b-6869-4133-b532-ccde54779c21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cb6150f-2250-4292-b377-9659cb4cc0bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5f8053d-e91e-447b-ab66-f6000495334a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb99b112-e4ae-4b86-ac3a-067f17ae160c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "be5f39fb-ee03-46bd-9f3b-a2b602cb71a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bae3464b-8213-4057-b7f6-f7cbea50c6bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7446cf0b-688e-47f1-a245-175d7d85a69f"
            }
          }
        ]
      },
      {
        "id": "69e194a4-0056-4afa-a88d-f38a1f9ce81b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41017611-c308-4c8a-9f6d-47cc534711cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b8ef8a-7aa9-41d7-bf1e-bcb605be1691",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "775b32c5-03ea-4ff0-a9c6-8a4e835c5c19",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31d08a25-fca3-4189-8167-ab6eee0b13a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a28aefe4-ac63-45b3-a604-bc521b44ab68",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 652.0305343511449,
      "responseMin": 10,
      "responseMax": 5322,
      "responseSd": 704.0966378300151,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672965583314,
      "completed": 1672965764748
    },
    "executions": [
      {
        "id": "1e37c2f3-c8b9-4a79-a345-0aebb191bdcb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "93d518fa-d237-4f6d-aa62-d8db19d19bb8",
          "httpRequestId": "0dd05700-c171-44a0-8147-6669ddf4ee69"
        },
        "item": {
          "id": "1e37c2f3-c8b9-4a79-a345-0aebb191bdcb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a5b260a2-fa9e-4b49-b0c0-031cd9039cd2",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "b050b631-34e9-48d5-894e-372af886b548",
        "cursor": {
          "ref": "e137eefc-4d9a-4a7e-be3e-a4f22a9c76a7",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a61610a6-3e9f-40da-94ce-e28019116a16"
        },
        "item": {
          "id": "b050b631-34e9-48d5-894e-372af886b548",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3ea01963-5dd2-4bd1-8d8c-34a202d1b048",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "eafe351b-37f3-4f70-a12a-87e5c624eadd",
        "cursor": {
          "ref": "4fe59ae7-692b-44e9-822e-6db71b26f213",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79db57e8-35ba-4c00-b0a2-8e80043bcbe8"
        },
        "item": {
          "id": "eafe351b-37f3-4f70-a12a-87e5c624eadd",
          "name": "did_json"
        },
        "response": {
          "id": "3af9417c-bfa9-4180-8eca-d3f27801fec3",
          "status": "OK",
          "code": 200,
          "responseTime": 879,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9d41e5-150c-4e3c-840d-43361cd60059",
        "cursor": {
          "ref": "42eb6021-9564-4371-bf32-8eb0dd9c03b0",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57e392ac-858c-419d-9dab-0286da409554"
        },
        "item": {
          "id": "cc9d41e5-150c-4e3c-840d-43361cd60059",
          "name": "did:invalid"
        },
        "response": {
          "id": "14fa728f-53da-44b8-af75-f18e1f9d0480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9d41e5-150c-4e3c-840d-43361cd60059",
        "cursor": {
          "ref": "42eb6021-9564-4371-bf32-8eb0dd9c03b0",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57e392ac-858c-419d-9dab-0286da409554"
        },
        "item": {
          "id": "cc9d41e5-150c-4e3c-840d-43361cd60059",
          "name": "did:invalid"
        },
        "response": {
          "id": "14fa728f-53da-44b8-af75-f18e1f9d0480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c707d9c0-9252-4bee-ad35-0f1b4f0d370a",
        "cursor": {
          "ref": "cfbd1055-3d01-4df5-9aab-669caecbcaf4",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3aaedd21-96cf-4dc8-8ba9-b627c644576c"
        },
        "item": {
          "id": "c707d9c0-9252-4bee-ad35-0f1b4f0d370a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3658c657-41bc-4b25-a493-f214daa7be19",
          "status": "Not Found",
          "code": 404,
          "responseTime": 819,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf08d75-5f3b-4728-b45d-649148ace775",
        "cursor": {
          "ref": "c957788f-0d10-47de-9d68-b04abcf46614",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5b7ccec8-3888-49a5-8d27-5895d7960807"
        },
        "item": {
          "id": "acf08d75-5f3b-4728-b45d-649148ace775",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cab8bcfe-4e41-45db-b8ee-7d0e0f8b825f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 864,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a815c5e-6369-4ad2-998f-ae0c19a56a2a",
        "cursor": {
          "ref": "0434e2d9-59aa-4999-91a7-eed4b3d4d648",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1d9805da-f7c2-4f77-8add-8369e2260d83"
        },
        "item": {
          "id": "5a815c5e-6369-4ad2-998f-ae0c19a56a2a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1fc2712-9982-48ba-8af8-16fa321cbd93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058c25b7-9c6b-4040-bb64-0f52bcdb3c21",
        "cursor": {
          "ref": "231b55d1-12fe-4f62-8dad-f7c601386a3a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e1b2714-afd8-4f16-9247-cc38360a025c"
        },
        "item": {
          "id": "058c25b7-9c6b-4040-bb64-0f52bcdb3c21",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8bff5168-b44b-4431-9921-a0a18246b402",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 650,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058c25b7-9c6b-4040-bb64-0f52bcdb3c21",
        "cursor": {
          "ref": "231b55d1-12fe-4f62-8dad-f7c601386a3a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e1b2714-afd8-4f16-9247-cc38360a025c"
        },
        "item": {
          "id": "058c25b7-9c6b-4040-bb64-0f52bcdb3c21",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8bff5168-b44b-4431-9921-a0a18246b402",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 650,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3bf802-d152-4208-979b-e032517c475d",
        "cursor": {
          "ref": "b8d3ef52-16f4-4605-9b28-add509a491fb",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "59178316-7ae7-4b65-b268-7959df1cb908"
        },
        "item": {
          "id": "4e3bf802-d152-4208-979b-e032517c475d",
          "name": "identifiers"
        },
        "response": {
          "id": "3176a20b-8aac-43cd-8f6d-cce610a2abc4",
          "status": "OK",
          "code": 200,
          "responseTime": 979,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63edcc72-c7a1-4551-a8c9-fa3bb5305274",
        "cursor": {
          "ref": "ccfdc1bb-d147-4a9f-803f-193c73942bc7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "672f577f-6e69-44a3-9aea-7c2dc24f3fc2"
        },
        "item": {
          "id": "63edcc72-c7a1-4551-a8c9-fa3bb5305274",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a396ee5-b7b6-4300-80b4-06885282b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63edcc72-c7a1-4551-a8c9-fa3bb5305274",
        "cursor": {
          "ref": "ccfdc1bb-d147-4a9f-803f-193c73942bc7",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "672f577f-6e69-44a3-9aea-7c2dc24f3fc2"
        },
        "item": {
          "id": "63edcc72-c7a1-4551-a8c9-fa3bb5305274",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a396ee5-b7b6-4300-80b4-06885282b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9534c5-42a7-4e07-bc8c-f89f9d6d323e",
        "cursor": {
          "ref": "295ffe48-07d3-4dc9-8219-91d58b57bbf1",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46ab5589-3700-43b4-aec0-b51aa17c1e8a"
        },
        "item": {
          "id": "6e9534c5-42a7-4e07-bc8c-f89f9d6d323e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aa1a5a89-be97-4159-a14b-863b0e1ed996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80fcef6-2a62-4298-8e87-67a4105a01ba",
        "cursor": {
          "ref": "423f161a-2504-4b50-b933-e06888b11307",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "111494c9-9c50-41c4-84c3-c4177ca171c0"
        },
        "item": {
          "id": "b80fcef6-2a62-4298-8e87-67a4105a01ba",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "ed0006e1-6c86-4ed9-8419-454be48ad6c3",
          "status": "Created",
          "code": 201,
          "responseTime": 2750,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "c3222bdf-9547-4d24-acb2-85c1be7acf09",
        "cursor": {
          "ref": "dd3d4c81-4668-4f59-ba13-b3e0d396e272",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "70f2fa57-7109-4d04-b983-cfe7aae08788"
        },
        "item": {
          "id": "c3222bdf-9547-4d24-acb2-85c1be7acf09",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d3923cfb-7309-40e3-abb8-ca43898fbe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2200dd71-7fb9-4eee-a1aa-e705d6b3191f",
        "cursor": {
          "ref": "b84906ae-241c-4667-9063-fc917ed3fe54",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e39795a7-cdf1-4814-a010-28ab213d6136"
        },
        "item": {
          "id": "2200dd71-7fb9-4eee-a1aa-e705d6b3191f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "28160045-fb72-4d1b-b808-c50373fa6bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a68251-7fd5-4440-97e0-72a8b4d67b40",
        "cursor": {
          "ref": "10322e98-78a4-462f-b613-d3ea9103d9fd",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ccb22fc3-34cd-483d-b36e-958d62467b58"
        },
        "item": {
          "id": "14a68251-7fd5-4440-97e0-72a8b4d67b40",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bf6ec389-2f8d-4806-a87f-22c9f67ecd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448f0ed9-3afe-4310-9d57-ad1ba9ac419f",
        "cursor": {
          "ref": "829fb91e-0252-4cfe-915a-1ea4a8671f04",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "790c4fe9-82dc-4520-b3fa-d9621f4cad3e"
        },
        "item": {
          "id": "448f0ed9-3afe-4310-9d57-ad1ba9ac419f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bd2e6b80-c7c0-4b1e-b887-7099cb2ff11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045cc318-70b9-48ac-9661-bd1f83802ce6",
        "cursor": {
          "ref": "a039f567-3630-4508-8717-c7788b2f6fc8",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ca91f02-8827-46d4-87e6-b9c092aa4e9b"
        },
        "item": {
          "id": "045cc318-70b9-48ac-9661-bd1f83802ce6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dec4354a-5b3b-483a-bcd7-055099396e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81444432-877e-47e3-93e4-f30de78bbfef",
        "cursor": {
          "ref": "af103748-5fcd-41f4-a488-de9186eca2b6",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "62268bb6-09b3-404d-8848-27051d2914ec"
        },
        "item": {
          "id": "81444432-877e-47e3-93e4-f30de78bbfef",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3f1f8a8f-36eb-4408-b4a5-538507e5a87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbee296-114f-45a7-a3ee-437ab5d9a3a1",
        "cursor": {
          "ref": "3e0dd867-ba1f-48bc-9f91-76a4ae4b3494",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cc58499c-17f0-4bb6-857e-b6129beaabf7"
        },
        "item": {
          "id": "acbee296-114f-45a7-a3ee-437ab5d9a3a1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6284a520-2a7a-41bc-9b3b-cbd6e405e451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c1e2bf-af72-488a-a96c-a387a4b76972",
        "cursor": {
          "ref": "8cc750d2-d7de-4122-a0a9-e489bb878988",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7d8a537-4c4e-477c-a52e-bcac9b558876"
        },
        "item": {
          "id": "85c1e2bf-af72-488a-a96c-a387a4b76972",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "318aac6c-5597-4871-9e3c-2739a6f16778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0503ad-36df-4de8-ab22-d2309fe83822",
        "cursor": {
          "ref": "c6ca387c-2790-4220-befd-1faea639117a",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "328e3058-b833-40ee-a18c-4236b938fef8"
        },
        "item": {
          "id": "ce0503ad-36df-4de8-ab22-d2309fe83822",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "189823a0-6c3c-4297-ba88-f6654617ceab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a584c3b-84b6-45b5-9581-d9a55067f7ec",
        "cursor": {
          "ref": "d7ecfd18-7f32-422b-902c-12ecb0d40edd",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4223f542-4fab-4219-86ae-5c8a579dd032"
        },
        "item": {
          "id": "7a584c3b-84b6-45b5-9581-d9a55067f7ec",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "19ea3feb-3c3b-40a5-baa8-6903c8872546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15624c7-92e2-415b-ba43-f30ea2c4c943",
        "cursor": {
          "ref": "8e0882ee-40f7-4c4b-a0e8-5c8d82740904",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6292f055-446a-48f2-8ddc-a6f4139f31dc"
        },
        "item": {
          "id": "d15624c7-92e2-415b-ba43-f30ea2c4c943",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "672903fc-0df8-402a-92ee-69cc0837da8c",
          "status": "Created",
          "code": 201,
          "responseTime": 5160,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "5245c338-d7ad-4a92-8cc6-5732ca7a30f9",
        "cursor": {
          "ref": "024a4655-d66c-40f0-b4fe-ffc8ceafd15f",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e6d6a4eb-35e7-4879-b3c1-669548c6267e"
        },
        "item": {
          "id": "5245c338-d7ad-4a92-8cc6-5732ca7a30f9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "73a578d4-4c3c-44af-8d77-9b935114b67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194a4fd9-9690-4e09-ae85-a563340c50c6",
        "cursor": {
          "ref": "73e870ac-3d70-43e8-8b1d-4c6b65312b95",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "60d0e8ee-be62-4c80-9a30-794110abc492"
        },
        "item": {
          "id": "194a4fd9-9690-4e09-ae85-a563340c50c6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "024ef973-7742-4135-9163-eb5f8376cd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df1ffa8-84a4-4ed0-8d8b-4428d54d203b",
        "cursor": {
          "ref": "6663b5f6-b939-40cc-b620-3b1be0d06378",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4cff35b9-8864-4578-b610-99597512b86a"
        },
        "item": {
          "id": "4df1ffa8-84a4-4ed0-8d8b-4428d54d203b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fbddfb2c-24e2-4d22-bde7-d5b3b88ba62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be5e44-ce33-4e2e-a129-819d6f71a59a",
        "cursor": {
          "ref": "a57ea1cb-336c-4f56-9da4-2358c4c82102",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "533cde17-0c96-4d29-b042-48d9de961ed5"
        },
        "item": {
          "id": "d9be5e44-ce33-4e2e-a129-819d6f71a59a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "82ae10f3-386f-425c-ba7a-cb9cf3e66d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3f8f66-f43a-4bfe-b82f-653d28fabcf1",
        "cursor": {
          "ref": "539ce687-0e29-4e0a-9767-f77b67ce273c",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3c8b1b1-58ba-4519-ac54-32db887679d6"
        },
        "item": {
          "id": "ff3f8f66-f43a-4bfe-b82f-653d28fabcf1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1b948ca-efc6-4a96-851a-8906418076a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d81b48-0a26-4860-82ec-729d1aca250b",
        "cursor": {
          "ref": "18872534-6e54-41be-a0c3-09cc6cc91dc5",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "37c0e08e-ed0c-41a8-a246-0f3d64ffd341"
        },
        "item": {
          "id": "38d81b48-0a26-4860-82ec-729d1aca250b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0f9aff54-f426-44b6-9058-0ed2affd4425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc3af38-ed72-49ca-961f-c97cdac246da",
        "cursor": {
          "ref": "ee3615ac-cc87-4386-a824-8238a681285f",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c7e5e1ca-9fd5-4a46-bfb9-af407a354d00"
        },
        "item": {
          "id": "1fc3af38-ed72-49ca-961f-c97cdac246da",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d15d8936-ad8b-48be-a6c0-b0921bcc0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1884dc6-a421-419a-b92b-d543bcec817c",
        "cursor": {
          "ref": "81e15e7d-4896-48a2-ba96-1004f52abce7",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "25c2ccd3-c9a0-4c25-91ba-62752d5df56d"
        },
        "item": {
          "id": "f1884dc6-a421-419a-b92b-d543bcec817c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8e97199-c3c8-4a59-ac8b-94445ee048d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bea1d2-69d1-4122-a4d4-13e249a384a8",
        "cursor": {
          "ref": "ac0bad97-0996-430d-a107-59478059bc3e",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e531446-c4be-40b1-9bea-f4f65b46ba5e"
        },
        "item": {
          "id": "f1bea1d2-69d1-4122-a4d4-13e249a384a8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6e76b821-e538-478f-9403-225a82655caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e60a0e2-6fa6-4561-bdd7-81d0c67cd4e7",
        "cursor": {
          "ref": "cdc6e849-b31d-4843-a736-0935d12f70a6",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0425e4cd-2d7e-437e-8e81-00d97236f5ec"
        },
        "item": {
          "id": "5e60a0e2-6fa6-4561-bdd7-81d0c67cd4e7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ffa488fe-c990-4b98-b559-924c28e7dc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e6b321-e401-4e43-acdf-ff90d820d0bd",
        "cursor": {
          "ref": "9e0be8e6-8812-458c-9fdb-b02bdde2a77e",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "01f2be94-35f7-4bad-80e7-3553d42f2eba"
        },
        "item": {
          "id": "46e6b321-e401-4e43-acdf-ff90d820d0bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f2153c7d-bb4c-4c37-b5f6-01c4bed7725f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae34c7-9282-4ccc-bac9-6d27ace7c589",
        "cursor": {
          "ref": "21d6840f-3fe2-4196-81f6-94747d4de4c3",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7c346279-982d-4a65-a551-90350904306a"
        },
        "item": {
          "id": "50ae34c7-9282-4ccc-bac9-6d27ace7c589",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "44a7a0c9-3c2b-4e07-a070-2882ac8874b9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1982,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "55f22079-636e-4939-b6be-7c33022c1774",
        "cursor": {
          "ref": "2880c62b-0773-4b9a-b7f3-f84974a1e4ae",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1fe18535-f51e-4c45-a040-3a87c6594103"
        },
        "item": {
          "id": "55f22079-636e-4939-b6be-7c33022c1774",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5ac5fc73-2d26-4e25-b005-511b237db756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab68dcc3-caf8-4d50-8754-cfc966b76ed3",
        "cursor": {
          "ref": "3b77b6bd-62de-4f91-b528-17fac1698e60",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3c00c64c-3d82-44ff-a4d5-997b64e8e8ed"
        },
        "item": {
          "id": "ab68dcc3-caf8-4d50-8754-cfc966b76ed3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b12bff12-a533-4271-a882-8ed65e050abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8588925-3194-4740-ab90-142e9c68bbde",
        "cursor": {
          "ref": "b41db532-309a-4bf3-ae69-1d297b8e2f31",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1d94feb4-7cf7-4028-9287-1f38a765f716"
        },
        "item": {
          "id": "a8588925-3194-4740-ab90-142e9c68bbde",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc1f5b6d-d9d4-47b6-9d61-9014db73f20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d56f3e9-b671-4300-bf32-4768e2467e32",
        "cursor": {
          "ref": "ef6a6e86-f03d-483e-8823-d11dec98d86c",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0a172662-5ca4-4acc-9f84-bbf2094a85a3"
        },
        "item": {
          "id": "8d56f3e9-b671-4300-bf32-4768e2467e32",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5897e92a-13f6-467b-a35f-ff0a097c6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dddc6a6-6f17-480f-8b73-e1816e6c57be",
        "cursor": {
          "ref": "ce05cccf-3aa9-4cfd-82e8-67228dadbc43",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1d5e1a40-516d-4b8c-a497-f17a85c81cea"
        },
        "item": {
          "id": "6dddc6a6-6f17-480f-8b73-e1816e6c57be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83853bfc-2aba-4e6c-aa69-d92dfe8243b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1be8e7-33b4-449b-b689-f151ed6af6d8",
        "cursor": {
          "ref": "e44ed2ba-bcef-4db7-823d-6c9da13116a0",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3b5c3403-3c81-43e6-8a7d-cff2b021fa3b"
        },
        "item": {
          "id": "ca1be8e7-33b4-449b-b689-f151ed6af6d8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e1b9f4f3-bace-4c21-98ef-ed6e3b529c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405cd638-7cb9-4ff2-9864-ff350f1286d5",
        "cursor": {
          "ref": "3eef3df8-0d5c-493e-89f5-ec3a86b7148b",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "64818cf6-cecb-4f9b-bb20-90e952cab732"
        },
        "item": {
          "id": "405cd638-7cb9-4ff2-9864-ff350f1286d5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e7a3dc63-b73d-46bb-b0b5-00ac770c5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d1a20b-4460-4ea4-85b0-97223b6e1622",
        "cursor": {
          "ref": "044746d4-7172-417b-be6c-8b69c9695026",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "324b42c4-66a0-47f0-8f97-6a61a2ab9d15"
        },
        "item": {
          "id": "71d1a20b-4460-4ea4-85b0-97223b6e1622",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bcc07452-cea5-47df-8a36-75cba7699283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa90d17-6f07-4d25-bc6f-373bd602ba1a",
        "cursor": {
          "ref": "66aff84e-5c18-4086-91d7-a4df03f3d014",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5bd2df63-9445-46a9-8cca-edb9b716e451"
        },
        "item": {
          "id": "4fa90d17-6f07-4d25-bc6f-373bd602ba1a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e104c90a-62c9-4e6e-b9ab-0c558c797bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4d4745-3c88-44a9-bea9-b29bdab043b3",
        "cursor": {
          "ref": "105f2a36-f49f-41e0-8d47-c53151900184",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "943d5e01-529a-4f4c-b93f-e57b8222824b"
        },
        "item": {
          "id": "4a4d4745-3c88-44a9-bea9-b29bdab043b3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f086b413-9db5-4f10-b253-f9df3dc2d9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c374354a-f4af-40ab-a47a-7bf925899780",
        "cursor": {
          "ref": "a4adeeb8-1dc4-41c5-b4cb-e365824cd438",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ba411a34-831a-479e-9806-a8fcdd8dcc8b"
        },
        "item": {
          "id": "c374354a-f4af-40ab-a47a-7bf925899780",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6d7d4a48-6c46-4f04-b275-fca1532182ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05735584-42ae-4321-9042-9b03b11f41ee",
        "cursor": {
          "ref": "2ec89899-1962-4d4e-a6f9-1e86cb82a0b9",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d57c4f52-882e-47c3-b296-82cd43274a0b"
        },
        "item": {
          "id": "05735584-42ae-4321-9042-9b03b11f41ee",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f7c6321c-b9f0-4678-87ba-aa5b4ad1210c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 732,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df87188b-a780-48b8-8e65-3f62260fed21",
        "cursor": {
          "ref": "7c4d62ea-6c58-4220-b13b-f7f56fb72200",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e980c26e-3848-425e-95ca-44c046b8ab60"
        },
        "item": {
          "id": "df87188b-a780-48b8-8e65-3f62260fed21",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2fac3ec7-100d-4614-bb10-47c01f2e281b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 569,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "c3ac5d5b-96f3-4b82-b89b-b674d015aeb4",
        "cursor": {
          "ref": "9f8f81bc-2c97-4782-8a46-61e955260d1b",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc34759c-6198-44d6-b022-a961f5a9f0ad"
        },
        "item": {
          "id": "c3ac5d5b-96f3-4b82-b89b-b674d015aeb4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e8bafbe7-6353-4b72-965b-99b0172877e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385a65e3-f0cd-467f-9d6f-e3958a1111ab",
        "cursor": {
          "ref": "0b4cc3f9-9639-4f09-bc4f-20abca412d42",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dde92df1-f8df-4749-97b5-18c3ae588778"
        },
        "item": {
          "id": "385a65e3-f0cd-467f-9d6f-e3958a1111ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "acf6e014-8723-4cbc-a6f2-e6131616478b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddd37ea-c792-494c-b27f-362661d60c94",
        "cursor": {
          "ref": "a1f62441-cc6b-40cd-8319-ba2ee376d997",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "74ad56e6-648b-449f-add5-10544880ed6d"
        },
        "item": {
          "id": "1ddd37ea-c792-494c-b27f-362661d60c94",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f735b0fb-2862-4df1-9c27-352e2585854a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f637ef-15dc-426e-863a-c71479d58195",
        "cursor": {
          "ref": "6373062f-1ccf-4f53-98a7-d526ee57803a",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1de1cfbc-b893-454f-bb5b-d98633e769c8"
        },
        "item": {
          "id": "40f637ef-15dc-426e-863a-c71479d58195",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1049bfb3-acfa-4992-8d4d-3a5f2d6746ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f1114-7e26-4635-9a07-689a3e29c9bb",
        "cursor": {
          "ref": "42c618e4-e627-4a38-8f0d-804f4c040630",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "40660e2a-9dd5-40e1-a19b-2f60c393154c"
        },
        "item": {
          "id": "224f1114-7e26-4635-9a07-689a3e29c9bb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba688b61-9810-4153-b3c1-578d5636b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c4535-1a6c-486b-985f-9d36b6e8f8fb",
        "cursor": {
          "ref": "224bc7dd-cae1-4a7b-8e8d-992e4e73401f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e08aa708-791d-4062-a25d-807022392024"
        },
        "item": {
          "id": "1c9c4535-1a6c-486b-985f-9d36b6e8f8fb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2d45c273-7048-4d52-8193-43834e89aa8f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 945,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0598a160-3f64-4fd7-8f64-17f615eadbbb",
        "cursor": {
          "ref": "4a20fe72-f236-4d5a-aa44-4d1e42cf6de8",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f328ca76-2b0d-4c0d-bdd6-d21f9fc8d7bd"
        },
        "item": {
          "id": "0598a160-3f64-4fd7-8f64-17f615eadbbb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d7e32f12-ec26-47ca-abbd-3da75d65263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a4bbfe-578f-4194-8d2b-d19aa88ba2de",
        "cursor": {
          "ref": "0c4188d1-d821-42ab-9953-b6329bc7ea89",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c1f267f-e167-4bcf-bda5-c969961a1dbf"
        },
        "item": {
          "id": "04a4bbfe-578f-4194-8d2b-d19aa88ba2de",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e1309432-7cad-4526-b6c2-12b3f87f0b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73759f33-fd51-474a-9183-98cdf2a434c5",
        "cursor": {
          "ref": "b5d109dc-de47-40d2-a496-aae740c163e5",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aacc4658-29db-4300-b98e-ea47af0c8d01"
        },
        "item": {
          "id": "73759f33-fd51-474a-9183-98cdf2a434c5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "777dd106-b715-44bc-a7c2-4eedab24087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63b811-0b3a-457e-a275-8daffa3b2361",
        "cursor": {
          "ref": "ab3b72a1-3c4f-4df6-ba83-dae763904268",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "004a7170-1661-42f2-98b8-37cab9074cb6"
        },
        "item": {
          "id": "3f63b811-0b3a-457e-a275-8daffa3b2361",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "241460c7-5829-491b-87cf-e5261ddf3d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ecad7c-b851-45ec-a270-37b93922b32d",
        "cursor": {
          "ref": "44090b9e-6d56-4557-b0e9-671e4bee421b",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e434b925-3746-4ca2-bf3a-fd04a2543a31"
        },
        "item": {
          "id": "84ecad7c-b851-45ec-a270-37b93922b32d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ae83de12-28da-42be-9d2d-1df542e5f386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db46d167-265b-420d-8f98-841a2d236b72",
        "cursor": {
          "ref": "a6830967-76fd-4c28-9c3e-8079ccaae84c",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2afd0ec7-c9cc-4c82-9ea4-c41766f44a3b"
        },
        "item": {
          "id": "db46d167-265b-420d-8f98-841a2d236b72",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "afb67084-9b14-4a13-a846-d93380f36a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417130d1-f5e6-43ae-bdd4-3ecd4e1f13be",
        "cursor": {
          "ref": "14601cbe-8c84-4a2b-b6b4-f33d672db02e",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dee3723e-c0e4-4f51-b037-123d13d8eb90"
        },
        "item": {
          "id": "417130d1-f5e6-43ae-bdd4-3ecd4e1f13be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cf3c68bb-ae16-4cbc-9792-b5c0a9f62723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d83238-7a4d-4c2b-ae64-4c50e8393290",
        "cursor": {
          "ref": "132d6b72-ae52-43e2-ab94-88afbec23125",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "169a1e3b-b3ea-45b2-97f7-a99c86a79622"
        },
        "item": {
          "id": "07d83238-7a4d-4c2b-ae64-4c50e8393290",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f003b07d-473a-4319-b5c5-9ad8516c6674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7cf825-733e-4656-aa0d-2d57d6a88530",
        "cursor": {
          "ref": "0abcefd1-530c-4e39-bd61-821cec81b903",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ecec486-189f-44f3-b90f-30205aa0cacb"
        },
        "item": {
          "id": "7a7cf825-733e-4656-aa0d-2d57d6a88530",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4fd8a68a-cb7a-41a5-97e0-aad080f8256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775c0457-8b5b-44cb-8753-5a8b4edfa3c8",
        "cursor": {
          "ref": "bfd18aab-f14e-493d-898d-af444f196301",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5576b482-6dd2-4d66-9329-3e58924300a4"
        },
        "item": {
          "id": "775c0457-8b5b-44cb-8753-5a8b4edfa3c8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "69e397db-7cd5-455d-a766-0f2d63e3c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b921e947-d8b1-4349-aecf-80d3c3b50d8b",
        "cursor": {
          "ref": "d5191670-d2ed-422d-ae8c-bd577a348778",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bd74b422-362b-481a-b597-ee623112e0e8"
        },
        "item": {
          "id": "b921e947-d8b1-4349-aecf-80d3c3b50d8b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d37a00f4-d611-49b9-b980-a94c3031476f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17df3fa8-9aca-4851-b05f-3435d54a4811",
        "cursor": {
          "ref": "a3975f52-7aed-4e31-8820-04bbc3af816d",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "59c82149-9e7d-4413-a372-aa4dadb5180b"
        },
        "item": {
          "id": "17df3fa8-9aca-4851-b05f-3435d54a4811",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93d72e9a-60fa-4504-b690-2233a787d3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282587a7-c433-4866-965d-38549a62314b",
        "cursor": {
          "ref": "df33628c-fc0a-4178-923e-0d5e65f98e1d",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90eb865d-cc02-4fdd-8e37-188bfc3d91cc"
        },
        "item": {
          "id": "282587a7-c433-4866-965d-38549a62314b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2ce56571-dd24-49d1-a649-f05800b313e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15957aae-6541-48cc-834c-d83d29faedcb",
        "cursor": {
          "ref": "693e4c22-aa54-470b-8c90-18c1e260b831",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f1a90644-dfbb-4550-a5d8-61818b609471"
        },
        "item": {
          "id": "15957aae-6541-48cc-834c-d83d29faedcb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "443fcbad-3d30-4b9c-ba38-0a74139e5d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1698ff-401a-4a27-9cec-1b080cd738f3",
        "cursor": {
          "ref": "f303b9fe-cccd-43e9-a518-abd516edcb76",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "598fc09f-d3fa-4412-909e-39636d418b6d"
        },
        "item": {
          "id": "9b1698ff-401a-4a27-9cec-1b080cd738f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4cf40cf-dbd6-4c98-82f7-70de43ab452e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4f5fc8-cb70-47c6-84d5-140db10f22d6",
        "cursor": {
          "ref": "ed0d10ab-fff3-40ab-8080-8f7baf35de66",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0a471105-86f3-4517-934e-fbb9f6743be4"
        },
        "item": {
          "id": "7b4f5fc8-cb70-47c6-84d5-140db10f22d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3ed761f8-69e8-4d26-965d-6d03197c2396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca93dd28-04a0-449b-b50a-5fccd2d3fca3",
        "cursor": {
          "ref": "72f2eee1-3661-4785-9fae-2711e887fc4f",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e4b8c0b8-9d11-4219-ba05-6842e8615878"
        },
        "item": {
          "id": "ca93dd28-04a0-449b-b50a-5fccd2d3fca3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4dede115-436c-4ca0-a99b-91f35bd1115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c6ae19-f4e1-4739-8a4e-d72dcf0eeaa7",
        "cursor": {
          "ref": "a9a3b386-4321-44ae-91c1-6945995bbbf6",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1e7a3e45-ae18-45f0-b8a0-e5e5dcccd54f"
        },
        "item": {
          "id": "66c6ae19-f4e1-4739-8a4e-d72dcf0eeaa7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0afdc237-cf4e-4970-a795-4beff2fa6800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad01c47-af6b-4299-a4a7-fd5f842f473e",
        "cursor": {
          "ref": "06010f5f-2e04-4ac9-8ceb-6032b079eaf9",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a7d76bba-c9ca-4844-8e51-734bc91d64d1"
        },
        "item": {
          "id": "4ad01c47-af6b-4299-a4a7-fd5f842f473e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "59b7d28d-be7f-4e2d-932d-ba0dc239e8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8dcaf7-3be7-4f97-afc5-79b43903456e",
        "cursor": {
          "ref": "d8de91da-a076-40d2-8155-5796ee5100ae",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "826df48b-923b-44d8-9f3c-44c04d17b2ce"
        },
        "item": {
          "id": "3c8dcaf7-3be7-4f97-afc5-79b43903456e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "83144070-287d-4a5f-9373-01039d0ce368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d52f1b-7acb-4479-ab70-15da88590ed3",
        "cursor": {
          "ref": "67d10a61-d0b3-4436-b407-fc515d16cf80",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "862b32f4-04c8-495b-9d57-a99b1bf8f8d7"
        },
        "item": {
          "id": "97d52f1b-7acb-4479-ab70-15da88590ed3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0a292e87-0507-4c15-b6af-3bf4b0d9dec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a77e8-fe21-470f-8b30-ba4208b7ac27",
        "cursor": {
          "ref": "fdbe1dbf-dc5a-47f0-aa23-9967fc1352ab",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7df4742f-2d34-4fed-97e4-e9bf6fa88474"
        },
        "item": {
          "id": "765a77e8-fe21-470f-8b30-ba4208b7ac27",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9ab8c5d-6f95-4a0b-8226-87dc0efa2f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcdab67-304e-4350-acd6-238c18c7ad1e",
        "cursor": {
          "ref": "b5bf9686-a452-41dc-b121-5bd93c2534b8",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9b931284-3e0d-4d4e-9dde-93f548d7ef48"
        },
        "item": {
          "id": "2fcdab67-304e-4350-acd6-238c18c7ad1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec661a1a-1e4b-4ed6-9877-a6250bfc5298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b803d89-3e36-4338-b7f4-d5f462df3a69",
        "cursor": {
          "ref": "3fc767fe-68e0-410b-a506-4e3007d6b1da",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "699322f4-c63c-4dd4-8d8c-652298565582"
        },
        "item": {
          "id": "7b803d89-3e36-4338-b7f4-d5f462df3a69",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "97327de1-a56f-4b5a-89ea-5416b6e5a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7340c724-bda1-4065-9390-fea8433b8dfc",
        "cursor": {
          "ref": "ba28925d-6803-4927-95fe-c41ee069dfe3",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73cd93c4-9cea-4a85-a91a-200b928cf8b4"
        },
        "item": {
          "id": "7340c724-bda1-4065-9390-fea8433b8dfc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "867ff80a-d993-4ba3-9ab3-a18c305e11ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a67acca-6c62-45d9-ba00-cf153ce8f1b3",
        "cursor": {
          "ref": "47971861-4c6e-4bb4-8184-6ae4745f9d83",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aa26a2ea-2f74-443d-bfcc-2f7a55bd514a"
        },
        "item": {
          "id": "2a67acca-6c62-45d9-ba00-cf153ce8f1b3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fb969927-5f0c-4659-bf5c-658dd20ca506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b4b57a-a9b5-4019-8e11-d81b93272c63",
        "cursor": {
          "ref": "d6efb6a6-9ebf-40fc-8b51-5922802bcfc8",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f3bd4cb3-2cf1-4808-a779-630d5f9bba5e"
        },
        "item": {
          "id": "33b4b57a-a9b5-4019-8e11-d81b93272c63",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dd09f979-8d1d-4d68-a17d-520eddf48555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecce6f4-f3bd-4dfc-a7ef-9bf68f0a09c3",
        "cursor": {
          "ref": "373cb8b3-b904-4726-8c4c-3ab09302d7c6",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b5d91b0d-76c8-4d69-84d1-9cd955aae656"
        },
        "item": {
          "id": "8ecce6f4-f3bd-4dfc-a7ef-9bf68f0a09c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b117e81e-01af-451c-96e3-01f69b29e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd87ed-5344-42d1-a5c2-145528fec51a",
        "cursor": {
          "ref": "e572feed-c2fb-44a2-bcb1-86b2fb84f3e0",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e3f1bbb-ab91-4c26-8b29-45c4a5f09073"
        },
        "item": {
          "id": "abfd87ed-5344-42d1-a5c2-145528fec51a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "befec5b2-27b5-41fb-95ed-7bea51c8ed04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2bf2c9-f5eb-4250-b846-9b1906de2068",
        "cursor": {
          "ref": "8be56a26-5077-4909-8e6b-9a7b8256d4dd",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bcc0048e-4020-48da-a125-bca86ab3e007"
        },
        "item": {
          "id": "8e2bf2c9-f5eb-4250-b846-9b1906de2068",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "02b19ac9-10cf-48c1-af07-0ed138b570cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf637b7c-3620-4232-bef7-61307ac8293a",
        "cursor": {
          "ref": "aefd588f-26e8-4ac7-b25a-6e505637fa29",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c363169c-326c-4fb5-9f9d-fde0c6062cbb"
        },
        "item": {
          "id": "cf637b7c-3620-4232-bef7-61307ac8293a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c0f0e6ff-c58b-4839-b537-6309371eb40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb54373-0f5d-4fec-b6fd-9dee664dc744",
        "cursor": {
          "ref": "afc04a95-3fd4-4c74-97a5-30eeceaf3732",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bf75ab8a-3d87-4776-88ca-5dff1fdb5b7e"
        },
        "item": {
          "id": "cbb54373-0f5d-4fec-b6fd-9dee664dc744",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "99cc6958-062e-4ceb-bf54-8ab12f7cf532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b6bb2c-2c1a-44c2-8b14-a96b89015e7b",
        "cursor": {
          "ref": "c5696e51-15af-4e3b-a491-ce7b84c5c3b8",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0809361f-ce3c-43e2-8b43-cc947cb2c6cf"
        },
        "item": {
          "id": "82b6bb2c-2c1a-44c2-8b14-a96b89015e7b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7d29f025-5542-43d9-85b8-8f22f39de6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1120c09c-4ca2-42f0-af37-1aebdfba216d",
        "cursor": {
          "ref": "e3f46bf7-2193-4129-88d8-4593a7d13883",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f006bcf-9376-49ee-a37e-3001e89a2220"
        },
        "item": {
          "id": "1120c09c-4ca2-42f0-af37-1aebdfba216d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "33fb1807-7c5c-41e9-b40c-bb2ea5182e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f6a78-1a73-4675-8dda-bda948dee6bf",
        "cursor": {
          "ref": "b84eb4c7-0591-4b29-a5dc-90ebb226cb38",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6ec7971-9dcd-4048-bc88-7dccaedffaac"
        },
        "item": {
          "id": "4e7f6a78-1a73-4675-8dda-bda948dee6bf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b2ab0376-1d64-4746-9a47-d9773b81f2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de467d17-9485-41c3-9d51-eb515b55d57c",
        "cursor": {
          "ref": "627c511a-b85d-4d4b-b0ef-deb17ca932f4",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "56cbaeef-dc18-4f99-b47a-b77491c3f31b"
        },
        "item": {
          "id": "de467d17-9485-41c3-9d51-eb515b55d57c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7047141e-d43d-430c-b22a-850c6e6fef57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b50b39-678b-4617-8b74-02f6f507f29f",
        "cursor": {
          "ref": "88544356-868b-47b8-8237-7e2d58345473",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c29a6cff-0265-4277-a9ea-94f0c486b591"
        },
        "item": {
          "id": "90b50b39-678b-4617-8b74-02f6f507f29f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3878bd1-d7ff-4485-8a80-8ec1030ccbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9f5103-2b6f-440d-b72e-85303382b674",
        "cursor": {
          "ref": "fab308b7-1805-4682-8111-7c6eaf815e1e",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2a60f60f-88d1-4388-bdfa-8f80c671e453"
        },
        "item": {
          "id": "2f9f5103-2b6f-440d-b72e-85303382b674",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3e43c785-d4b6-4788-9e28-85549586cac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13bcff0-02ca-4cd1-8be5-4e9d2d5e34cb",
        "cursor": {
          "ref": "40f0195c-155c-46d1-bce8-d31860699b34",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0e998940-a73e-4418-ab7b-699395339745"
        },
        "item": {
          "id": "d13bcff0-02ca-4cd1-8be5-4e9d2d5e34cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1e03ce12-770b-4205-b898-71996169fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f37a3b-136e-4683-914b-a723c4785288",
        "cursor": {
          "ref": "11d1a36d-19a2-49fd-91e2-d73904deef0d",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bb3f5294-ce73-4fb0-95d5-1d8669e92b60"
        },
        "item": {
          "id": "29f37a3b-136e-4683-914b-a723c4785288",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "83e0bc57-93f2-430e-b70e-3d2723b9a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4843e54-ea55-464e-9294-b43577661c36",
        "cursor": {
          "ref": "b7ecaae0-8ff9-4c20-a2b6-7fb39fea439b",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "13421b79-b29e-427e-9817-481ffcc4ad6c"
        },
        "item": {
          "id": "f4843e54-ea55-464e-9294-b43577661c36",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7105d79b-62c0-4c87-9c38-3e5a23d70b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f810fd7f-960f-4947-99ca-7061ccd41b9f",
        "cursor": {
          "ref": "4178a0a9-9bdc-4cab-9695-edd05315b012",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3f8d15fd-453f-4224-96fc-ca0554a04751"
        },
        "item": {
          "id": "f810fd7f-960f-4947-99ca-7061ccd41b9f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4e16b54-22c4-460f-b452-eb81d6cdf725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dc7971-e9e0-44db-8baf-f476e3358ab8",
        "cursor": {
          "ref": "eb3537ca-3d29-4cdb-8872-5f11b71a5baa",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f68ae281-f232-4b1c-ab85-1cb3cf7e8f03"
        },
        "item": {
          "id": "94dc7971-e9e0-44db-8baf-f476e3358ab8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5f36b912-e24a-48b4-adad-f0023f985e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe572379-bf48-4196-996e-e7f3d75402d7",
        "cursor": {
          "ref": "09e8b45d-1f38-499e-8afb-f08a0898e773",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "479b052e-fa72-4f23-ae60-43cd80860d8c"
        },
        "item": {
          "id": "fe572379-bf48-4196-996e-e7f3d75402d7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d7828e84-3c1e-453e-b6a3-12bc85674d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aae4d3-fe06-4f8b-b451-3ae5dc5544ef",
        "cursor": {
          "ref": "f5299e79-ef2a-4044-98e6-950bd6eacd32",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9c7b445e-6ca8-44cd-9bfd-f234e3c4cddd"
        },
        "item": {
          "id": "85aae4d3-fe06-4f8b-b451-3ae5dc5544ef",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c1fea098-fdf8-4e3e-bd15-2de377d0f034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3b3241-7015-4909-b077-a5e890b88584",
        "cursor": {
          "ref": "79d74ff6-936d-4825-abf8-39addaeddcee",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "53beeeae-dab2-44fd-9616-c31111fc9e48"
        },
        "item": {
          "id": "be3b3241-7015-4909-b077-a5e890b88584",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e92a8d4c-2eae-43db-b311-16f54d3cd7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd2e15c-174a-4a17-bc3a-420355b7dab3",
        "cursor": {
          "ref": "1e98033a-3012-46be-9481-482390ed1516",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "70515787-ad1d-4f47-96ee-c9c1e551cd19"
        },
        "item": {
          "id": "fdd2e15c-174a-4a17-bc3a-420355b7dab3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b4419db9-bccb-4d9f-8927-de2cc57e8317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f51c4ad-bd5f-4dd1-b2d7-b03986be88ad",
        "cursor": {
          "ref": "0c8e31e9-9a3b-400b-9f2a-0fd0cac0b8a7",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a53546f3-769f-429a-a405-6eab563d0d8d"
        },
        "item": {
          "id": "4f51c4ad-bd5f-4dd1-b2d7-b03986be88ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f780d6fc-eef7-43e4-94fe-b5447d9014b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93b8ef2-2a2b-42e1-81c8-48ae069a9336",
        "cursor": {
          "ref": "d83df053-8a4d-461a-bdf8-d2d4c200535e",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a42b78fe-4707-422c-921f-7cdefbfa4ae1"
        },
        "item": {
          "id": "d93b8ef2-2a2b-42e1-81c8-48ae069a9336",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "da129c91-5c80-46ac-9764-94c3e026a5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38595b1a-e7aa-46bd-b58b-6046b0ca677f",
        "cursor": {
          "ref": "fd5e548c-d2f4-4387-ad98-344a5e29f357",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9157cf91-a062-4978-a553-99ecd0156418"
        },
        "item": {
          "id": "38595b1a-e7aa-46bd-b58b-6046b0ca677f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "44b46385-c875-44fb-b523-62b5c9124dd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e90cc5f-adfd-4c30-a292-eb592d8c7f98",
        "cursor": {
          "ref": "a26a2aa8-7ec4-41f9-98a7-cdfe54089832",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "818f7197-66c4-4534-b7c4-e12795baf214"
        },
        "item": {
          "id": "6e90cc5f-adfd-4c30-a292-eb592d8c7f98",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "dc27a44d-bbb5-4251-8a70-0b5df6950102",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98bb70d-6779-4d94-bc15-4448fb7e3b78",
        "cursor": {
          "ref": "a4e11feb-17ab-4658-a6a0-83a9c13165ff",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8eec0a27-ccce-4c81-a7a0-28c5072e165e"
        },
        "item": {
          "id": "e98bb70d-6779-4d94-bc15-4448fb7e3b78",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e5e60224-d3a4-4cd8-a752-6639dc159a74",
          "status": "Created",
          "code": 201,
          "responseTime": 4830,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "7a203c93-489d-4382-82df-cc709eda35d2",
        "cursor": {
          "ref": "08346048-4701-4a76-a017-a06ca213a79b",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "25148f1b-3070-45d2-b90c-3da17bd7b88f"
        },
        "item": {
          "id": "7a203c93-489d-4382-82df-cc709eda35d2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b52c3ffa-5b4e-413b-930e-9d5e714c3bde",
          "status": "Created",
          "code": 201,
          "responseTime": 5005,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "b808fcc8-ecf4-4e22-9a4c-fde33c03c189",
        "cursor": {
          "ref": "efa7e09b-b0b8-4aff-96eb-f60356cfc7da",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c0206e61-1ed1-400c-8f5a-444a5704a99c"
        },
        "item": {
          "id": "b808fcc8-ecf4-4e22-9a4c-fde33c03c189",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e7435cad-0472-479d-babf-d77ac6b965c9",
          "status": "Created",
          "code": 201,
          "responseTime": 4271,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "4a56674b-afed-476f-9461-31f4e0e56ba2",
        "cursor": {
          "ref": "0cf9c29b-d7e5-49ee-8f9a-17c76c75505c",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "524ee980-c6bb-49e0-bb75-d9b8307bd887"
        },
        "item": {
          "id": "4a56674b-afed-476f-9461-31f4e0e56ba2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "acf82f96-767e-45dd-936b-b722ce256f95",
          "status": "Created",
          "code": 201,
          "responseTime": 4338,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "676cc849-497d-40b3-8100-f248cae33b87",
        "cursor": {
          "ref": "4b323e75-a0c3-4c40-a9c8-db6cc687569c",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "369412eb-b59b-482d-b703-e832efe9e01d"
        },
        "item": {
          "id": "676cc849-497d-40b3-8100-f248cae33b87",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "09297540-e41f-4682-9b1b-5c34a5b3a3da",
          "status": "Created",
          "code": 201,
          "responseTime": 5322,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "9132f8ff-c98a-4245-b46a-9166c4f64fcd",
        "cursor": {
          "ref": "f05104b4-f942-44c3-8709-8672cf5f1e8b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bd2f13c7-800e-4de7-aa62-28b371e365a5"
        },
        "item": {
          "id": "9132f8ff-c98a-4245-b46a-9166c4f64fcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d003a598-b07f-4800-980c-7e8c8298486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9132f8ff-c98a-4245-b46a-9166c4f64fcd",
        "cursor": {
          "ref": "f05104b4-f942-44c3-8709-8672cf5f1e8b",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bd2f13c7-800e-4de7-aa62-28b371e365a5"
        },
        "item": {
          "id": "9132f8ff-c98a-4245-b46a-9166c4f64fcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d003a598-b07f-4800-980c-7e8c8298486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6c796a-a89d-4154-931f-cdb177409ebb",
        "cursor": {
          "ref": "b724587c-3440-4923-bf51-b3ebbf979346",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ff97c07f-27b6-4a41-9b7d-e1e01f074608"
        },
        "item": {
          "id": "2c6c796a-a89d-4154-931f-cdb177409ebb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a1b49197-1f96-4d05-bb77-8544f64bf526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7a9f9d-dfa0-43e8-9ef5-f572e9b70ecf",
        "cursor": {
          "ref": "3f5c87dd-fd8d-42bc-9743-89c6cc03b7b5",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f74b5196-2cc5-4aaf-87f1-1fa4ac71058d"
        },
        "item": {
          "id": "1f7a9f9d-dfa0-43e8-9ef5-f572e9b70ecf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "062729c6-ba1a-4f3f-8e54-d1df493c71d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfae499d-a287-45e7-891f-4be61b8ac791",
        "cursor": {
          "ref": "b7a17921-38ef-473a-80ac-4e1884d23362",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e7e41608-9a43-4022-8447-1b37f8afcecc"
        },
        "item": {
          "id": "dfae499d-a287-45e7-891f-4be61b8ac791",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa915e3b-4063-4b27-9016-08324d1cf230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2556c530-5701-42fc-8590-6f8d27918434",
        "cursor": {
          "ref": "8ab349ac-6498-476b-8ce6-8ce652ed730d",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3033d915-4e5c-45fe-a41e-f303c914dcbf"
        },
        "item": {
          "id": "2556c530-5701-42fc-8590-6f8d27918434",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "89a974e1-0edd-41a9-8adf-8c05eb379dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7788cb-e47e-4390-851a-3be1951fd47d",
        "cursor": {
          "ref": "5cc4667a-393f-4acb-b26a-6ed1267b1dff",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d782f27-846a-476c-8666-9ece5572643e"
        },
        "item": {
          "id": "6c7788cb-e47e-4390-851a-3be1951fd47d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "273423db-63f4-4b70-8c3f-621b632aaef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbd2f5-548b-4268-9dd5-01f787ce537f",
        "cursor": {
          "ref": "16719a9d-1c0e-4953-b816-1a8dfed8f801",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3a198078-d978-4b50-ae39-b9f85e0615f5"
        },
        "item": {
          "id": "b2bbd2f5-548b-4268-9dd5-01f787ce537f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d219784c-8f26-409b-a378-a61cafe688c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00ed10-7ea9-4894-b2bb-72fa6a0f0fcf",
        "cursor": {
          "ref": "04de2117-661f-404e-beb9-2981586db27b",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c2f08989-36ea-4601-adf6-5b1730c0e662"
        },
        "item": {
          "id": "3a00ed10-7ea9-4894-b2bb-72fa6a0f0fcf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "29737136-cc98-48aa-b51c-2e650c652a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d90b6e-6b88-47cd-b494-a3c2b4429517",
        "cursor": {
          "ref": "f2cb09ce-715a-41b4-ba63-2331f5c66013",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5e410961-33e8-4488-b4eb-a708fed2c080"
        },
        "item": {
          "id": "70d90b6e-6b88-47cd-b494-a3c2b4429517",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e256fd54-2b51-4629-afe7-d889108c9c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2a0d9-2330-4a63-89d8-d9d5166beea9",
        "cursor": {
          "ref": "8aeb6cfa-d444-42c1-8004-ac3066c5c457",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "80ec0729-5f0a-4890-af90-ef522060fa21"
        },
        "item": {
          "id": "21c2a0d9-2330-4a63-89d8-d9d5166beea9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "38477244-9f4c-41ac-a192-0f73bf277c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b67e4e4-70f8-47b5-a868-a6eed43aeba5",
        "cursor": {
          "ref": "02934ff5-88df-4164-9508-75a6070dd309",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3bbf5315-cdae-492c-81f6-e2175b4cc713"
        },
        "item": {
          "id": "0b67e4e4-70f8-47b5-a868-a6eed43aeba5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b6144a1-01cf-4116-9dc4-ef36cc1d64d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a06ae4b-4f11-4cc0-810c-ce047b62a065",
        "cursor": {
          "ref": "8b91e3d6-e6ee-40d3-a366-ef5860cf5352",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1b356659-b3a5-4ab3-b738-3b35531d1631"
        },
        "item": {
          "id": "5a06ae4b-4f11-4cc0-810c-ce047b62a065",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7f0fda62-1dcc-4873-86b9-6f5f49324cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140d2f05-4a15-401c-bb90-c32f4d9c97eb",
        "cursor": {
          "ref": "63db0758-fca6-4566-b292-d5a39dcf799d",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "79f09df6-86db-42e0-98d8-f4effbd5c834"
        },
        "item": {
          "id": "140d2f05-4a15-401c-bb90-c32f4d9c97eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb956c1d-0e24-4bad-aee1-08bf134367fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762005f2-a4c3-44c2-af0f-d4c393b649e8",
        "cursor": {
          "ref": "fd61b932-e23e-40aa-bdb6-6e732a4abee0",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d71afd74-29c5-486e-baed-3f0260af0ead"
        },
        "item": {
          "id": "762005f2-a4c3-44c2-af0f-d4c393b649e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "133da443-d692-475b-9d9e-1b4c7c9509ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf875d9-623c-4cb7-a925-8b1b94af5303",
        "cursor": {
          "ref": "2ebff180-552a-4b52-9856-c4080e3617c6",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "123a8ab4-ed2d-4541-8093-0f2866d60dcc"
        },
        "item": {
          "id": "5bf875d9-623c-4cb7-a925-8b1b94af5303",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3793fd40-0d36-42f5-b542-74cda35eb19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c49fb6-a760-4194-820c-839240911abf",
        "cursor": {
          "ref": "e727484d-f376-4d3f-887a-73ed8664df11",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38c5bfc2-a497-4c75-8966-3d927345e5bf"
        },
        "item": {
          "id": "c4c49fb6-a760-4194-820c-839240911abf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db411d2c-2081-4cb9-94a5-053b1e701544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d223c-5123-4f50-8f63-4d923c822c66",
        "cursor": {
          "ref": "b095e5ed-41a7-4ed0-92e3-8800ea2129ff",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "15badc34-eee2-46d9-b895-afdaeb06f1db"
        },
        "item": {
          "id": "0d5d223c-5123-4f50-8f63-4d923c822c66",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4d2abb1-81b8-4735-b79e-2ce16fdd9959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5402d9-deec-4d35-ad07-b75306b4cd56",
        "cursor": {
          "ref": "8424cc65-dc29-45ef-8f03-d0b26fa0c2a1",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73e22302-b2fe-46f2-9f43-be5bf6ef3d80"
        },
        "item": {
          "id": "1c5402d9-deec-4d35-ad07-b75306b4cd56",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f74ff234-827a-4a33-855b-07934c7f9d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39bd5b9-1bfd-40d0-8a50-01f895ad5a8b",
        "cursor": {
          "ref": "f9948e0b-45eb-4f8a-96bf-6cb687bf4fef",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a003dfdb-0478-4565-8b2b-6df7e68bccf5"
        },
        "item": {
          "id": "f39bd5b9-1bfd-40d0-8a50-01f895ad5a8b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a574037-b4f4-40e4-ba2c-87ab10ef20ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3881832-728b-4ee4-acea-be2ed4866af3",
        "cursor": {
          "ref": "c59792e4-1778-4dd4-aa3f-63bfbb915c5f",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e610d735-89e1-475d-a423-aee76223b777"
        },
        "item": {
          "id": "b3881832-728b-4ee4-acea-be2ed4866af3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a9788863-e2e4-47df-bad8-c04ad2a4f7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e584edd-b7a9-4725-8ea8-0e0c7deb03ee",
        "cursor": {
          "ref": "b40c79b6-650d-472f-85fe-959ed9cfe9e9",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "49494c95-1f1a-4a93-b651-08b5fdad534e"
        },
        "item": {
          "id": "9e584edd-b7a9-4725-8ea8-0e0c7deb03ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4719117c-847b-48c6-9d6b-5c88ea31bad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856d73dc-0742-442c-90f7-b755e9acc3a6",
        "cursor": {
          "ref": "6d6d0a7d-d0b0-4606-a348-a8ead632d482",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b73db157-13a0-4d16-a42f-3b20dc6a891c"
        },
        "item": {
          "id": "856d73dc-0742-442c-90f7-b755e9acc3a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9a52e0a0-0c71-42ae-9bb9-664269feeec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e4b0ef-1935-44c1-8f86-3f91a36c385a",
        "cursor": {
          "ref": "249186ef-89ec-4705-a3cd-d1f93a588591",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "746f7c25-822d-4cd6-a589-bbe8dac6bc5e"
        },
        "item": {
          "id": "13e4b0ef-1935-44c1-8f86-3f91a36c385a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c28b3aa3-aa49-425c-bd23-1db06d516cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4076b7-1b0e-4823-9524-7cf65f89fb02",
        "cursor": {
          "ref": "38633982-d450-4dc8-96f4-821ea1d11137",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d770249f-79b5-49b7-b859-067b77d87b46"
        },
        "item": {
          "id": "8a4076b7-1b0e-4823-9524-7cf65f89fb02",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "06c9838d-64ec-4f53-95c0-8dd05ea9a644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83770f1-1719-4a81-bba7-a2906506e531",
        "cursor": {
          "ref": "b565275d-0c5e-4e89-875a-ace9788dfbdf",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6268815a-555c-4804-8060-94a25ad81889"
        },
        "item": {
          "id": "b83770f1-1719-4a81-bba7-a2906506e531",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7874fbee-c217-4fdf-a287-2c13e14b79b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653b02fc-003b-461f-872a-c8c83506d648",
        "cursor": {
          "ref": "dc457374-c2c8-4289-8e7a-385d9002d81b",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d0b5dbd1-ecc8-43e5-a25c-837845f282a1"
        },
        "item": {
          "id": "653b02fc-003b-461f-872a-c8c83506d648",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "345a0a26-33fc-496c-9e49-5ed0e02112bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3e11b6-0a03-4c7f-8ded-48cc6fc786de",
        "cursor": {
          "ref": "a67eeaa3-8c73-4853-ad24-a70402ebb771",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e713960e-b093-4482-a188-4316578a42fb"
        },
        "item": {
          "id": "ac3e11b6-0a03-4c7f-8ded-48cc6fc786de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11db4135-5873-4c48-b3c9-dfcb45ac1e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45d6f5-b2b5-4c1d-97d3-13f8206d2d43",
        "cursor": {
          "ref": "dcb30250-6cb2-45bf-85c7-47739204e94f",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8885ec85-882b-4afe-b5ee-2e7561bd407d"
        },
        "item": {
          "id": "7d45d6f5-b2b5-4c1d-97d3-13f8206d2d43",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f650798-881e-4eda-9c1c-1bd3dee1bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5887df6e-afa4-4cbb-bd97-d16d1a1f1c21",
        "cursor": {
          "ref": "c077cde6-7aa6-49b8-ba8c-4c9320b90e6e",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e847a6c6-275c-4d65-823f-78dbf4929df7"
        },
        "item": {
          "id": "5887df6e-afa4-4cbb-bd97-d16d1a1f1c21",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a9501736-3356-4c7a-9d6b-2d5c5373e860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35ac782-61ef-4a4c-95dd-ce165423404b",
        "cursor": {
          "ref": "5cd8a416-f624-4200-b0e5-4317c72b2afb",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bcb68da7-0f0b-4cad-8f72-4c6bb5095cc2"
        },
        "item": {
          "id": "a35ac782-61ef-4a4c-95dd-ce165423404b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa67e428-cd81-4bb6-bb7d-f326740ae1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a6b986-c48f-473c-8f67-126274fd2cdd",
        "cursor": {
          "ref": "80ca02ff-3375-43b6-b803-9403665116ee",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "49855085-e439-440e-a65c-ad60bbbdd194"
        },
        "item": {
          "id": "64a6b986-c48f-473c-8f67-126274fd2cdd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "004b0197-13ff-4417-9e6d-4633c135539b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a90f2-cf5c-4f63-a56f-6fc823c52c7f",
        "cursor": {
          "ref": "b5f356da-4a71-4e17-b0a7-ae621b9fa093",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3c18293b-5faf-442f-8ba6-18d401985675"
        },
        "item": {
          "id": "9a0a90f2-cf5c-4f63-a56f-6fc823c52c7f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b4be5061-82e1-46dc-aa26-f7b1bff16957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e026f8c-c2cf-4081-8c39-baf9076ef256",
        "cursor": {
          "ref": "8e1a4974-f5bb-40d4-8ec6-b170d433433b",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8cb8bac3-6bca-434f-8162-f480215b9d8e"
        },
        "item": {
          "id": "2e026f8c-c2cf-4081-8c39-baf9076ef256",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "01d626eb-4a79-4c03-b3b6-0a730bf2a08d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e5f793-bd5a-4272-920c-52758345702f",
        "cursor": {
          "ref": "55af7bfb-263f-49f0-8879-16b60eca7e45",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b536afca-a077-42b3-958d-e2205791c894"
        },
        "item": {
          "id": "74e5f793-bd5a-4272-920c-52758345702f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d7baffff-b45d-4295-8a49-1b076cff3ea2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 590,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae1fdb-315a-49ad-935b-1df94c345931",
        "cursor": {
          "ref": "f2f638c1-7fde-482a-865a-bbb30d16486b",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a54516f4-16c3-4631-9772-dfb98084787c"
        },
        "item": {
          "id": "95ae1fdb-315a-49ad-935b-1df94c345931",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c826dbd0-5c52-4a97-a40e-9ed3542ee743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae1fdb-315a-49ad-935b-1df94c345931",
        "cursor": {
          "ref": "f2f638c1-7fde-482a-865a-bbb30d16486b",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a54516f4-16c3-4631-9772-dfb98084787c"
        },
        "item": {
          "id": "95ae1fdb-315a-49ad-935b-1df94c345931",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c826dbd0-5c52-4a97-a40e-9ed3542ee743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b52ab8-f695-442e-a92d-aea5d87d27a2",
        "cursor": {
          "ref": "4fa30782-ca1c-4691-9758-abd9610561db",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "abea3873-7e50-47d7-98ae-f73c77ebe6dd"
        },
        "item": {
          "id": "63b52ab8-f695-442e-a92d-aea5d87d27a2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30abbdd4-f736-49ae-b2f6-798a03b38161",
          "status": "OK",
          "code": 200,
          "responseTime": 377,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "a85084e4-61b0-4d97-99aa-fed615b85dd5",
        "cursor": {
          "ref": "e1750cd4-7453-4654-bfb6-536a4a4bd596",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "682ae229-11f1-4935-9611-4970ca338267"
        },
        "item": {
          "id": "a85084e4-61b0-4d97-99aa-fed615b85dd5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "51a29b34-7f8c-4cff-a422-222c23394cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e326cdd0-8cb6-4cdc-afbe-82d082ca30a3",
        "cursor": {
          "ref": "c1b4e3e9-1652-41aa-bf02-615f3cdf0e61",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "35008a74-519e-4551-83eb-75021963ef7f"
        },
        "item": {
          "id": "e326cdd0-8cb6-4cdc-afbe-82d082ca30a3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ab5e7c5-ac79-4935-8031-873922c10443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a719dd-6c4f-414f-9a5a-e5165bab7f29",
        "cursor": {
          "ref": "80e598d3-19f9-4e74-b3bb-32f766a1ca89",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5f3c463c-2bbb-4633-b3b1-d4d720857cbd"
        },
        "item": {
          "id": "b5a719dd-6c4f-414f-9a5a-e5165bab7f29",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9cc0783d-3613-4ff4-ad8a-11461e5a3f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fe58c0-8aa8-4962-823e-a39cdc46395c",
        "cursor": {
          "ref": "b65d7c9d-1eb6-4887-86f0-4136274420dc",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "28dd66d4-b8e9-45f7-b5b8-798e72f822de"
        },
        "item": {
          "id": "58fe58c0-8aa8-4962-823e-a39cdc46395c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4448d8a2-9f5a-4ad1-8b02-ae9e933748e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1383bbb-66bc-415b-bf4c-2f356f8a1ced",
        "cursor": {
          "ref": "d7a46cef-80d6-4d8f-93ae-9c3836fd3ec1",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eacb4993-85e3-474f-8a1f-74ccaf7d7178"
        },
        "item": {
          "id": "a1383bbb-66bc-415b-bf4c-2f356f8a1ced",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "29a3b25d-8d1b-4f29-8b68-fc97d49b1559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e044ae5-5cb9-48fe-8af1-82bc443819d8",
        "cursor": {
          "ref": "1990dacf-e4f7-4762-9b44-8cbbe3084c63",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d7518bc1-dcf4-4783-b2a6-c6a05af6a998"
        },
        "item": {
          "id": "6e044ae5-5cb9-48fe-8af1-82bc443819d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25301c31-87a2-452d-b230-7a35ebe2a983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49201c1-4f8a-411b-b3d4-da0261b6a56d",
        "cursor": {
          "ref": "7e1eca88-c432-4997-b835-e4be997de5b1",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a17e6660-6dfc-4b36-ac82-e0eda20ddd69"
        },
        "item": {
          "id": "c49201c1-4f8a-411b-b3d4-da0261b6a56d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0de14c2d-9d9e-4282-867a-b027c9ffb6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3161ba86-e919-4370-b5c2-fd77681c52d9",
        "cursor": {
          "ref": "12eacc21-ce3d-4ac2-806b-f951f2a22b52",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d0260e04-6679-4487-b421-0bad3f9b974d"
        },
        "item": {
          "id": "3161ba86-e919-4370-b5c2-fd77681c52d9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "153c0849-8cfd-4427-ba02-6d3baf845d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a3063-81b5-4178-8e59-06c2bb24134a",
        "cursor": {
          "ref": "7604c414-3057-4343-bd1d-bbe3ab8d9537",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d0729d34-d569-41e7-8d7a-3378a11d36b8"
        },
        "item": {
          "id": "f38a3063-81b5-4178-8e59-06c2bb24134a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4775f242-e4ba-4776-922e-af13897cf25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c4faff-6f2c-4f3f-bc6c-987881d63489",
        "cursor": {
          "ref": "afcc0490-ebd8-4820-a258-5e825d32e1ca",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ab64cf1-a659-4756-bc63-eb289c91de22"
        },
        "item": {
          "id": "c1c4faff-6f2c-4f3f-bc6c-987881d63489",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "51b1d220-4e1d-49db-ba47-f81415eff9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab5c2a0-8384-4627-8470-23766433db79",
        "cursor": {
          "ref": "f0c8b9fd-9fc2-4346-b4a4-ef534544ed4b",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2591f4c4-35e7-42ed-bf39-7b86b841a84d"
        },
        "item": {
          "id": "6ab5c2a0-8384-4627-8470-23766433db79",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4654ed1-dfab-4078-be28-fb5d7c203d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd03378-ff7c-4821-875b-101ae73f1a7b",
        "cursor": {
          "ref": "36a71dba-13bd-446b-b406-c77762cfaec8",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3be5760f-5fbb-4826-a6ed-1d838323edb4"
        },
        "item": {
          "id": "2fd03378-ff7c-4821-875b-101ae73f1a7b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f153d00f-f7c2-4461-93e7-62f0a6b8c726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5988b70-b238-4cc9-b30b-523f9fe2765d",
        "cursor": {
          "ref": "daf883a3-f83d-42fd-8d0d-319d01d62fd3",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b9a9d267-e3fb-43c7-97f4-8f4241f65e50"
        },
        "item": {
          "id": "a5988b70-b238-4cc9-b30b-523f9fe2765d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b3e2158a-3835-473a-8b66-c429f6dd8f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93742794-63a4-40a4-a1eb-aa0bf46532cf",
        "cursor": {
          "ref": "ca430968-76c1-49d3-a120-d38e27c41970",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5e8233e8-236c-4fb2-860d-905e800e9343"
        },
        "item": {
          "id": "93742794-63a4-40a4-a1eb-aa0bf46532cf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bf432d15-38cf-43fe-a926-d2deb28c35ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded1ae9-4b31-44a1-9ce6-ef7e4b178b74",
        "cursor": {
          "ref": "b808852a-0266-4400-a2eb-f405e450742a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "043f1316-f63b-4ebb-a268-6d5c7ade99b4"
        },
        "item": {
          "id": "8ded1ae9-4b31-44a1-9ce6-ef7e4b178b74",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f5dd0a51-2a2f-4d2b-b611-89120af96823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8cd05f-f77c-4dfd-8c12-0518019d69cd",
        "cursor": {
          "ref": "1168410b-a7ac-4870-b7f5-6a041138daa8",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f50e2e4-cc93-46b1-9ab0-b5d3009f49b8"
        },
        "item": {
          "id": "2a8cd05f-f77c-4dfd-8c12-0518019d69cd",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "302bb4c4-929d-49cf-b568-bbcd6c7146f7",
          "status": "OK",
          "code": 200,
          "responseTime": 2065,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "f556b698-9009-42ec-8220-5c18d440ac50",
        "cursor": {
          "ref": "cc1db002-1939-4518-979f-2138d30a31a6",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9b4e105d-a8d2-4508-9b26-f649f596acbb"
        },
        "item": {
          "id": "f556b698-9009-42ec-8220-5c18d440ac50",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "384741a0-678b-4923-9e57-dc1b20a18ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec7840d-b116-46d9-9039-fd6414c47883",
        "cursor": {
          "ref": "e96afbd1-8bc5-4370-817f-76f10e49537e",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "82a01192-75e3-4c7c-95db-c618e787be76"
        },
        "item": {
          "id": "dec7840d-b116-46d9-9039-fd6414c47883",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "86279404-eafa-43da-b80e-4a327c84c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56f2ccf-f4e1-493b-b881-b3bd7cdf49df",
        "cursor": {
          "ref": "c3de026d-ede7-40aa-8718-d61721182686",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8897316d-75c0-4ff8-8911-bc9365169d8f"
        },
        "item": {
          "id": "c56f2ccf-f4e1-493b-b881-b3bd7cdf49df",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bf4472ef-e8ee-477b-a122-89c106597648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef8b3ea-0edb-4ff0-9e3d-edfeef76f698",
        "cursor": {
          "ref": "c9b79b34-e517-4d1f-8f65-cd20bc2d9959",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d0581210-30dc-4488-ac98-d552cb19f0a5"
        },
        "item": {
          "id": "1ef8b3ea-0edb-4ff0-9e3d-edfeef76f698",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6aedf3cf-7f12-4bf5-97ac-f5775f333637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96fa26-bd60-4b86-b897-a3702979d6b4",
        "cursor": {
          "ref": "3d88e372-ee64-4a3d-9bb5-215e82a8a27e",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1afd6384-8009-477f-96d4-91defa2b5a91"
        },
        "item": {
          "id": "1f96fa26-bd60-4b86-b897-a3702979d6b4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7e025239-f83d-41c4-bbe9-c92096d946c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482bcbd6-a11b-4d24-acbf-d27e9318359f",
        "cursor": {
          "ref": "610451a8-cbb6-439a-96ea-4149b50e1fbe",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "138fa907-dec6-4c32-b028-409344a1f51c"
        },
        "item": {
          "id": "482bcbd6-a11b-4d24-acbf-d27e9318359f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6fb8f263-ee43-4b36-b9a9-92ba260fc950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbfbb91-e541-4d43-9044-c2669bed737f",
        "cursor": {
          "ref": "0deaf65f-5539-4c69-a0b2-558bc31bdd72",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60b58c98-2270-43e2-9dc1-d4f565b7341d"
        },
        "item": {
          "id": "acbfbb91-e541-4d43-9044-c2669bed737f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4930fca0-6546-440f-8334-e04bbffb998f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f4558d-2401-443f-83bf-da791e31a637",
        "cursor": {
          "ref": "78948dc5-21f4-4977-be66-3730ba28b1ed",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "91c8ff36-de95-4c22-9ad2-35e30bf28431"
        },
        "item": {
          "id": "44f4558d-2401-443f-83bf-da791e31a637",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4f1004d6-1cf1-4dc7-924c-6817a8ba5115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f7399-b2bc-47d6-a618-64ed1277db42",
        "cursor": {
          "ref": "e66d5ec6-8d13-4762-abb8-252f3566f3e1",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2dc00a28-1efc-4292-9cde-be545b7c9e4b"
        },
        "item": {
          "id": "b33f7399-b2bc-47d6-a618-64ed1277db42",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e70f5265-0c0e-470c-afc9-ebee044659e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75b34c4-4d23-4fff-a0ed-640aba99557e",
        "cursor": {
          "ref": "7417f786-b46c-4574-85e8-177b6c05ef0a",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a31d1dca-72c4-479f-b6c3-df0df782e353"
        },
        "item": {
          "id": "b75b34c4-4d23-4fff-a0ed-640aba99557e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "47445e6c-142a-44ad-a1d7-cc18fa1df339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e913ac60-1e76-416a-80db-e192439c57c5",
        "cursor": {
          "ref": "a78f9c83-9a07-4c10-9480-db84330c5eb7",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f753bdf6-2064-4a5e-90c8-550ea8a7a6c9"
        },
        "item": {
          "id": "e913ac60-1e76-416a-80db-e192439c57c5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eeb8b25e-a5a2-4037-b70b-0e366480d791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec45340-321a-40e0-ad57-229d81621de4",
        "cursor": {
          "ref": "7ea2eba6-fdfb-4653-866a-c3139ba2686b",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "828695dc-d1af-429b-88e3-b9f826930805"
        },
        "item": {
          "id": "1ec45340-321a-40e0-ad57-229d81621de4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f865cfba-0b49-4510-9ddd-8452c3373a04",
          "status": "OK",
          "code": 200,
          "responseTime": 602,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "711a247a-93df-4ef4-8f24-6c1e3f8dd58e",
        "cursor": {
          "ref": "122774e2-9fe8-4fb8-975c-e965d5ff2f9d",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a6832690-1200-4938-aca8-3c829f0f6675"
        },
        "item": {
          "id": "711a247a-93df-4ef4-8f24-6c1e3f8dd58e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6c23aab-c0ef-4f3e-9e07-b29a0b4efd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ea2738-4f56-4046-8644-1257f2fbb78e",
        "cursor": {
          "ref": "c1e11e9b-607c-483f-9796-b0998bd6d49c",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3ffa720f-8d07-41da-967c-879de23f38b3"
        },
        "item": {
          "id": "62ea2738-4f56-4046-8644-1257f2fbb78e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c711f193-ea0a-4f75-8976-5a862c641c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1cf832-3351-4309-ab87-58d07dd6eca2",
        "cursor": {
          "ref": "41574511-35c1-4cb4-8a5c-4abf30e3da9a",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0dcace66-2ee4-4ca5-abae-6a6a902ee53a"
        },
        "item": {
          "id": "ea1cf832-3351-4309-ab87-58d07dd6eca2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0fe896e7-0a93-498f-a901-9720fbdda828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e37565-505b-4cfa-88be-749cedfbfa02",
        "cursor": {
          "ref": "edf0453d-45c4-494d-86bf-fc10cb7603e2",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68793881-1c2f-4537-b32f-1e3b98db26ae"
        },
        "item": {
          "id": "b6e37565-505b-4cfa-88be-749cedfbfa02",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "915f18b5-f87f-4175-b735-6b29139ae530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc40aca-8137-42a1-a017-fdbf0cfa937c",
        "cursor": {
          "ref": "8ea03c5d-342c-44e0-85d4-ec8119068e98",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d19c49a8-c85b-462a-a551-ebd058c76e3d"
        },
        "item": {
          "id": "1cc40aca-8137-42a1-a017-fdbf0cfa937c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "74abe405-89da-451b-9944-093365f792c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf10335-74a8-4e2a-b73f-0bd45c842e85",
        "cursor": {
          "ref": "d7cefe3f-7b15-43d9-8d89-2d8e8f8a7583",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f343af83-f60a-4c1d-8755-2f63f9fa0b99"
        },
        "item": {
          "id": "8cf10335-74a8-4e2a-b73f-0bd45c842e85",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3d1a9236-91cf-44a5-80ad-b19cb12efae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efd2f50-e5e5-44fb-b6a0-b6e96ba8f061",
        "cursor": {
          "ref": "4024222e-cb4e-4025-9a4a-e122e71829c5",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4149d4b4-f979-4a48-9053-aeb1bba6f060"
        },
        "item": {
          "id": "6efd2f50-e5e5-44fb-b6a0-b6e96ba8f061",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37048988-f1b5-4873-b57e-849ed5aa7dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b981e-8507-44fe-821f-1e546edc8a75",
        "cursor": {
          "ref": "d8a1da78-98a2-4078-a564-31a5d6b89092",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ad7bcbd0-c2fd-4354-818b-32936c446d3a"
        },
        "item": {
          "id": "933b981e-8507-44fe-821f-1e546edc8a75",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "31438b99-5519-4c7f-88ab-3737419be95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63cb833-f422-415f-9761-b9d629034487",
        "cursor": {
          "ref": "cb2fea82-09fd-437a-96da-397e49aa2ace",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a9a99cbb-b104-4aa2-9e9b-e61b30193617"
        },
        "item": {
          "id": "f63cb833-f422-415f-9761-b9d629034487",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "468453dc-21b1-45e2-b915-4aecd73edc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b3a7fe-fe74-4d8f-992d-b2d7903267f1",
        "cursor": {
          "ref": "9f1badb7-9704-4379-be81-342b8989836e",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bbaf43a1-33c8-4a73-a56c-80dac66c1eca"
        },
        "item": {
          "id": "47b3a7fe-fe74-4d8f-992d-b2d7903267f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e89a014b-a21a-4c15-a4b4-3a79170fe4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2866f4bf-bb12-4aeb-8a55-3d60612d4b31",
        "cursor": {
          "ref": "8191b88f-5668-494a-a950-fceba4fb693e",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a3503dda-429e-4176-b36f-b4c3833da57c"
        },
        "item": {
          "id": "2866f4bf-bb12-4aeb-8a55-3d60612d4b31",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "81485033-ae14-4138-bd23-4ff513cba09c",
          "status": "OK",
          "code": 200,
          "responseTime": 394,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "e869a4c0-3423-4354-a8a6-fc4c9e2eaf40",
        "cursor": {
          "ref": "4605bd19-adc8-4f22-b3ab-7d0099f30d22",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2c9055f3-d4e1-4c64-a8ef-ae7e7609d5be"
        },
        "item": {
          "id": "e869a4c0-3423-4354-a8a6-fc4c9e2eaf40",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "179128e6-2000-429d-9281-b3e55be29673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b1ad1a-64fd-4b7a-ac9d-afd4c41e0c19",
        "cursor": {
          "ref": "d98c2903-d599-49ba-bbfe-1eeb149d23ea",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "71af2564-9155-46d7-89bb-c2f08fa61e53"
        },
        "item": {
          "id": "53b1ad1a-64fd-4b7a-ac9d-afd4c41e0c19",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f5f3f437-79f5-4860-aa10-7a69b73867b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9993f1e0-3a87-4596-aa0b-fc9c6c5e2e32",
        "cursor": {
          "ref": "b5ba2935-9eb7-4d20-9b94-988de3349805",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "78e3e243-26d3-4fa1-a598-13e1ee21429d"
        },
        "item": {
          "id": "9993f1e0-3a87-4596-aa0b-fc9c6c5e2e32",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3ffffb96-5f37-4f3d-ae13-9d8a8ad33533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f30c04-5f50-481f-adcc-228e998463e7",
        "cursor": {
          "ref": "7fff5b2a-e246-4492-af05-94889e28a285",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "438c400e-c4ce-405c-acf1-1c351f5a589c"
        },
        "item": {
          "id": "72f30c04-5f50-481f-adcc-228e998463e7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c7c34797-f09f-496b-ad97-d8df985319bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b1e74f-953f-45f3-93db-9dc2556ad429",
        "cursor": {
          "ref": "40a40d46-1cd3-4732-b4c2-3d7fd4ca312e",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "42002321-a934-4bc9-913a-63fba04feba5"
        },
        "item": {
          "id": "52b1e74f-953f-45f3-93db-9dc2556ad429",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "63a6868d-c519-45b3-a2de-9c99e31c7e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f16b57-7af7-4edb-8728-e00a9b0776fc",
        "cursor": {
          "ref": "9c9cf260-9867-448c-8ad3-cd1c5b05c58a",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e6d72ff0-a1d6-44cd-82d9-1b4b0d466dee"
        },
        "item": {
          "id": "89f16b57-7af7-4edb-8728-e00a9b0776fc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "898f4217-7547-4140-8a0e-d348c3760772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086ff295-d29f-43da-86a7-5d557f810168",
        "cursor": {
          "ref": "1924f054-c983-4d44-a827-b6f7919a31b0",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "32638344-c5a9-4868-9912-745f5903daa1"
        },
        "item": {
          "id": "086ff295-d29f-43da-86a7-5d557f810168",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02d525d9-e97d-46a9-9308-b93b8e59bbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29972b-9d6a-4d2e-98fa-c883111435d1",
        "cursor": {
          "ref": "6ec84a0f-320a-40f0-b048-edc47459156c",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a65cdc95-e9d0-4a96-8eb7-be1c2adb29ae"
        },
        "item": {
          "id": "fe29972b-9d6a-4d2e-98fa-c883111435d1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d7530e9a-a89c-4e2d-bd65-2eabc492fa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e73d4-8b5b-4aa8-bbeb-44d0fe2fdc6e",
        "cursor": {
          "ref": "8a1c7a29-2d5a-4d5d-9b38-5521f2677f28",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c8ad8cb1-6603-40ac-8059-f97eb44de332"
        },
        "item": {
          "id": "6d7e73d4-8b5b-4aa8-bbeb-44d0fe2fdc6e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "54584fb9-e827-4085-92f6-af8228acc24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0948e3-4781-453a-9317-0d023c7ef85f",
        "cursor": {
          "ref": "869b3563-392b-43ef-b4b7-574e943e9e22",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "89e1fde1-13c2-4be5-9b58-21eca86022d0"
        },
        "item": {
          "id": "5b0948e3-4781-453a-9317-0d023c7ef85f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "be984fec-0bcd-467d-be09-580350b87b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95ba3a9-014a-45d0-9317-526bc92084ed",
        "cursor": {
          "ref": "8877a1c6-7120-40ac-913e-31be30bef25d",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aa1a56de-98d6-4200-8167-d385bca1e944"
        },
        "item": {
          "id": "c95ba3a9-014a-45d0-9317-526bc92084ed",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "246d8314-4f53-4649-8000-78553bcb4125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc113d7-1c75-4475-b753-c0b61076ed28",
        "cursor": {
          "ref": "c9998844-160f-4c2f-a07f-c637e28ff56f",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4788159e-5a2e-4dc3-9649-045b5f4def4b"
        },
        "item": {
          "id": "2bc113d7-1c75-4475-b753-c0b61076ed28",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d3717535-6e16-4f2b-b0e5-009011ffe91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87230805-ea46-49c0-afef-19028efee276",
        "cursor": {
          "ref": "c32a85fc-5301-47d2-b235-7f7371617c9e",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c5269d8-5e7c-4a0f-b1ff-134b194c0d74"
        },
        "item": {
          "id": "87230805-ea46-49c0-afef-19028efee276",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ee03cac7-6ccb-44f0-a171-d2e6a9dfb883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90888cf-d41c-400d-ac87-71932e4ff1ba",
        "cursor": {
          "ref": "c420e5a9-8ab6-45e7-9a9a-95e32e71b772",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "95d832c9-6c2d-4e33-92e5-578481a5ef44"
        },
        "item": {
          "id": "b90888cf-d41c-400d-ac87-71932e4ff1ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7b74bfb6-4acd-4265-8319-c834d2bc3835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502eac0d-2910-4dea-9c0d-6269b7d8181b",
        "cursor": {
          "ref": "c6474023-1486-497e-97b5-b88653a469fc",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "66154e61-5356-40d0-9cdf-8b9241960513"
        },
        "item": {
          "id": "502eac0d-2910-4dea-9c0d-6269b7d8181b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8fb0b41c-1e69-4410-af52-037b07f744ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db510d05-5d6f-43a3-8620-594cf1681682",
        "cursor": {
          "ref": "ec69d754-1f51-4736-ba7d-8aa3b1056735",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ba9b584b-f79d-4387-9e28-ea3ab4ea9c9c"
        },
        "item": {
          "id": "db510d05-5d6f-43a3-8620-594cf1681682",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "48299a7f-0852-4e44-a490-cb00ae222dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8160bc5-ddb9-4c49-837a-2417f94f2946",
        "cursor": {
          "ref": "80b72db5-68fb-4be8-810d-fcaf3613d6f7",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9f234264-013c-4dfa-9671-d756af18252e"
        },
        "item": {
          "id": "f8160bc5-ddb9-4c49-837a-2417f94f2946",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "968b9206-81d3-4d9f-b42c-540eae22b481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d85d5-b48a-4c38-a74d-5ef51545c992",
        "cursor": {
          "ref": "197a9011-4685-45eb-a766-eab993e2d3c5",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7277c885-257a-4558-a83b-10afa5322998"
        },
        "item": {
          "id": "e11d85d5-b48a-4c38-a74d-5ef51545c992",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0ab0a5ad-2bde-405d-9295-f28ac3ac5520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf06b8ab-1a96-42cf-b351-6d6658b2a560",
        "cursor": {
          "ref": "80d648ba-6a38-4d14-9ffe-33fba1c6a8af",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4a416848-b8d2-4714-a6e8-fd7f2178d920"
        },
        "item": {
          "id": "cf06b8ab-1a96-42cf-b351-6d6658b2a560",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1e93b931-977b-478e-aed5-65a2715bc2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15009e6-db50-4d8f-a2c1-ddbe92c8cfcb",
        "cursor": {
          "ref": "b58c16a4-ea9f-4014-97e5-f627989e4d4c",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "db77467e-5e03-421b-84d5-f9f2bc42e50e"
        },
        "item": {
          "id": "f15009e6-db50-4d8f-a2c1-ddbe92c8cfcb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5b622fed-c222-4ce1-b721-c352a3c60b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b14f1-1f19-4d70-8ad4-c64987f13400",
        "cursor": {
          "ref": "d71f6fda-03cc-44a1-8e5d-5233e19d549a",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f8792bd4-ebf4-4db5-8a1b-19754a4fc4ce"
        },
        "item": {
          "id": "383b14f1-1f19-4d70-8ad4-c64987f13400",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e0b2cc7d-34bb-4d76-b784-b53b43086c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc403906-80b3-4374-920b-abb022ef4446",
        "cursor": {
          "ref": "e6a51a6d-936f-40bc-9bd2-52fbb9511748",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b354d803-45dd-4ad9-a169-9e54cba2b161"
        },
        "item": {
          "id": "fc403906-80b3-4374-920b-abb022ef4446",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5d657346-8f3c-4a27-a4eb-b20e42e80561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4e80bc-bfd2-4216-b098-6e7bf6532270",
        "cursor": {
          "ref": "46c99b9c-f838-4fdf-b841-41f4558fae95",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "19f2b82a-f6fc-4194-8cc1-5940b59b8ef9"
        },
        "item": {
          "id": "1a4e80bc-bfd2-4216-b098-6e7bf6532270",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7253ba2f-ae2e-4dbe-84b3-fbe4f370e503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50bcd58-0258-4e72-bf04-c00727ff1412",
        "cursor": {
          "ref": "5a1a8308-973c-4704-99f0-89778f50419d",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1046c173-4620-4422-928a-68e96744067d"
        },
        "item": {
          "id": "d50bcd58-0258-4e72-bf04-c00727ff1412",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5455a669-6995-4b45-aa0e-589f9b6b480a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8cb82f-35e7-4dff-92d9-858da4729c15",
        "cursor": {
          "ref": "94c3bcab-3a7f-4c82-8e56-8ec68e3479d7",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c705b609-c894-4790-8f0e-4fcd7a7383c4"
        },
        "item": {
          "id": "1f8cb82f-35e7-4dff-92d9-858da4729c15",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "783dfec5-3035-4cd7-aaed-06f7e1692308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd36a7c-a5ea-4813-9b40-23404db50084",
        "cursor": {
          "ref": "48525176-14d0-451b-bfd4-8df5a97a19f0",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38523cb0-3ba4-4995-afe8-190d44780e5d"
        },
        "item": {
          "id": "3fd36a7c-a5ea-4813-9b40-23404db50084",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "449124ab-7335-4a08-930e-6fdac558787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be48d6b0-23e2-4e10-b200-23892a6d5e86",
        "cursor": {
          "ref": "b7f56390-3567-4975-9eaf-14a8dbb6bdc2",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e1b59951-af99-4eee-b982-11c6b9bb6bde"
        },
        "item": {
          "id": "be48d6b0-23e2-4e10-b200-23892a6d5e86",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6322e190-8839-4a26-bcb5-bc0bba24824c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50720eb-5182-4857-9470-2859ec444a0b",
        "cursor": {
          "ref": "39a54ac6-ccc3-432c-aa39-f0fc84af4a11",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5673b8dc-0433-4dd3-9093-b617527bbe0c"
        },
        "item": {
          "id": "b50720eb-5182-4857-9470-2859ec444a0b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3b5a4b5f-a488-4f8f-a217-b814f899bf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6453b32-babf-432a-acaf-c732a73ef814",
        "cursor": {
          "ref": "2490d155-eae8-466f-aeef-0253f694a0ce",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29a14514-6323-4c79-94bb-f63f19fe4327"
        },
        "item": {
          "id": "d6453b32-babf-432a-acaf-c732a73ef814",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "85045b18-6e72-4a0f-aa32-e24f830c1f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bd12fd-00b6-4516-8d1d-9701b375b7d9",
        "cursor": {
          "ref": "fc84d438-6b11-47f2-8f94-3e20666b2452",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "390789dc-a928-4978-9731-23d1d7821a7e"
        },
        "item": {
          "id": "13bd12fd-00b6-4516-8d1d-9701b375b7d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c69d898f-1246-4e7a-b1fb-4ae17afcbca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d43a7-0d46-428b-b5e4-0100636ed54f",
        "cursor": {
          "ref": "8fb98569-c65c-461c-b6a4-f78f06f4ed86",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9ada8d2a-3d66-4a3a-9c52-27ce918b4240"
        },
        "item": {
          "id": "b43d43a7-0d46-428b-b5e4-0100636ed54f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "12e2173a-6dc2-4c30-b929-cf6e898e7591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b96154-2721-43fa-94fc-a69a9def7c4e",
        "cursor": {
          "ref": "1c93f5af-baf9-4f03-b9a0-de289f80db52",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "814c8d8e-5c90-4601-be11-04df30db3fbe"
        },
        "item": {
          "id": "42b96154-2721-43fa-94fc-a69a9def7c4e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b4a191f6-1c0a-4d9d-a885-cfc6609ef236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2147823-4f84-4998-b1d8-fcd4556a04fd",
        "cursor": {
          "ref": "3d738e41-14c6-4111-b88a-5036822c70cf",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a72d8eda-b2e2-4ed0-9a01-0eae1f1bc09d"
        },
        "item": {
          "id": "e2147823-4f84-4998-b1d8-fcd4556a04fd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b44dd291-99f0-4b2e-8450-6c403a971075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72141513-e45b-4857-867f-958458f0e4d9",
        "cursor": {
          "ref": "fd7c6b7f-78e9-4df0-b531-b4f6a5831d83",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3ed8af0a-918f-4618-b940-f5a27bd5bbda"
        },
        "item": {
          "id": "72141513-e45b-4857-867f-958458f0e4d9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dc53e9ac-f8b8-4561-99d5-27566189ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f516bfaf-729c-4f6e-a3e6-f4933fc79b8f",
        "cursor": {
          "ref": "5ac60c02-69df-40b4-b29d-174ffe690644",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6d8d473d-3122-4e80-a648-bc884f22a77b"
        },
        "item": {
          "id": "f516bfaf-729c-4f6e-a3e6-f4933fc79b8f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c646aac4-5bb8-4c9d-b4a6-d133790705c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af0056a-0319-4e40-8ea5-cae269114765",
        "cursor": {
          "ref": "4af87453-b580-4629-8113-399f25069ec4",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b0053297-609f-4e72-b7b4-9bba6f91376a"
        },
        "item": {
          "id": "1af0056a-0319-4e40-8ea5-cae269114765",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ae5a8d2d-3910-41fe-852d-16ff7844eb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f03434d-a11c-4ace-adc4-0b094a264065",
        "cursor": {
          "ref": "9a90a501-279d-4c0b-80a9-e594aefd7e72",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ce458c60-0863-464e-b4eb-6d353e857a94"
        },
        "item": {
          "id": "7f03434d-a11c-4ace-adc4-0b094a264065",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d7b4c62-15ec-4e05-912e-9de0ef8c3fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e5c64f-e2df-4cd3-8590-02c07bf88ccc",
        "cursor": {
          "ref": "42e0c7e2-a002-4ae0-9281-4f3ab1d26138",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "31267e77-a251-49b7-ab82-13e999843266"
        },
        "item": {
          "id": "d0e5c64f-e2df-4cd3-8590-02c07bf88ccc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eaba1c0e-a017-4996-933b-b117f63d996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60d7f7f-da13-4b09-bce5-9d73f71f6e6c",
        "cursor": {
          "ref": "b9afb6c1-2260-4b6b-9a93-dfa28d8331bb",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fd574592-7758-4f1e-b3d4-2f8d5404fc78"
        },
        "item": {
          "id": "a60d7f7f-da13-4b09-bce5-9d73f71f6e6c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00dec743-debf-4f3f-a071-bc4e00caf37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852db69b-bb37-42de-8a8c-a3d046773869",
        "cursor": {
          "ref": "47f2e81e-07f2-495e-bf6e-80ae430f7bf8",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c9f90e9d-9dc8-48de-befe-3f244c0f3a29"
        },
        "item": {
          "id": "852db69b-bb37-42de-8a8c-a3d046773869",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ce837d8d-3038-4452-974c-7900de30196c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc09e07a-d7e9-4624-81ab-40857a09d7b9",
        "cursor": {
          "ref": "258979a7-b56d-4b73-8628-d662f66fc4cc",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "69167929-0634-442d-9230-56eb4f2486d3"
        },
        "item": {
          "id": "fc09e07a-d7e9-4624-81ab-40857a09d7b9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d23d84e4-ff36-435f-9e75-a935b57e146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d20fc1a-f6af-462d-bfb8-a94764fae257",
        "cursor": {
          "ref": "74e05e72-bd59-4e21-83ca-40f9c024d623",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dddf3e4a-7f01-40c5-82a7-d44959d9dba9"
        },
        "item": {
          "id": "6d20fc1a-f6af-462d-bfb8-a94764fae257",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b01603c-6de3-4a09-9b0a-af39af61b628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495856e6-7525-4e54-b254-d45866e2458f",
        "cursor": {
          "ref": "5bc19a75-e676-4707-838d-24b3596e961c",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f379820a-f95e-4771-ad0e-b652ea5a89f1"
        },
        "item": {
          "id": "495856e6-7525-4e54-b254-d45866e2458f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0302e3b9-924d-4c79-8754-3a49a48f9ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cd7cc6-07a9-4c13-b61a-ca97a90252a2",
        "cursor": {
          "ref": "671253a4-2060-4eea-90b6-247d643b178b",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0649f4d6-59c2-4f4a-8a17-3926cb4493df"
        },
        "item": {
          "id": "55cd7cc6-07a9-4c13-b61a-ca97a90252a2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "561a35cf-d11c-415c-bc0e-3aa201f2d395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2d3ac3-1bd5-41ed-8c74-07725fbdb19c",
        "cursor": {
          "ref": "3716c198-05e5-4b50-af8c-4540e64ef0c1",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6858e76b-5cbf-43d1-944c-40a2079a6f24"
        },
        "item": {
          "id": "4c2d3ac3-1bd5-41ed-8c74-07725fbdb19c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1d768a1f-868c-4ebc-a2e2-97951c9920a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb2f0b-0e2f-4e86-9a87-7effd1809e37",
        "cursor": {
          "ref": "6e9c3fff-4143-4c8c-bfd8-d7a882fc4b4e",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f20846d9-28d6-48d0-b1db-bd2e933af1af"
        },
        "item": {
          "id": "c3eb2f0b-0e2f-4e86-9a87-7effd1809e37",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9a649d56-8ab4-4165-bcdd-fda9a9615daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cd6b8f-f301-4d34-9f36-fe6bdf61cdc7",
        "cursor": {
          "ref": "27c5e91b-5ed1-453c-a912-05cd0a68c4da",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "544cdccf-f4c5-495d-b0ba-4a8ba7069bbf"
        },
        "item": {
          "id": "55cd6b8f-f301-4d34-9f36-fe6bdf61cdc7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ad95b3e0-f5db-444c-9c30-f8ed719f5a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffe5da7-8f56-4b57-84b5-8cd2e85f49f4",
        "cursor": {
          "ref": "92dd08a8-6d63-4b5c-9206-627e9d715d81",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2d71de36-2d19-4abc-b1a6-7dc82b57417b"
        },
        "item": {
          "id": "cffe5da7-8f56-4b57-84b5-8cd2e85f49f4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "31fc0e19-cc35-40b4-95ea-c13563482c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2365dfb0-fa42-4393-8033-fef4b42115fe",
        "cursor": {
          "ref": "ec7ba753-d442-4069-81ce-9b4e62ee3c98",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "57d5b5ad-cffe-48ad-a68e-b4d8c8e9a9ae"
        },
        "item": {
          "id": "2365dfb0-fa42-4393-8033-fef4b42115fe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "043c3dcb-4c57-41af-98b6-1fc2dddebd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9445cafb-57c4-4ffc-a2e9-6da56ca21924",
        "cursor": {
          "ref": "2a97eda3-095e-4d81-92a1-932acbfaa41b",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e117a238-9789-473d-8394-2f4c6b16a67b"
        },
        "item": {
          "id": "9445cafb-57c4-4ffc-a2e9-6da56ca21924",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f42e2a2c-3227-4383-9e5b-6f6692e7dc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8c7190-d3dc-4284-a856-b2ffaf68f677",
        "cursor": {
          "ref": "3ec97e1f-3a5c-4f8d-9448-2683c750bbd0",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9fb89e70-1f21-4e9c-afd9-9a979eb36c0f"
        },
        "item": {
          "id": "ed8c7190-d3dc-4284-a856-b2ffaf68f677",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "badd2a65-b013-45cd-ba84-f2fd929c8973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ed0f4-73dd-4b53-8176-0658064bde87",
        "cursor": {
          "ref": "b887ae7c-e5ac-44d6-8320-1f635120c2db",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3e0dfb4-d2a8-4219-9986-11e31c061680"
        },
        "item": {
          "id": "6c4ed0f4-73dd-4b53-8176-0658064bde87",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1038e7d3-811e-4a04-985c-7761b8d2ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15682bba-96a1-4a9c-b945-84f2cb203abf",
        "cursor": {
          "ref": "4e7d6032-7a9b-4f50-8bd0-da5bfae66365",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ff00286c-9b64-4c11-80de-5693ace4d507"
        },
        "item": {
          "id": "15682bba-96a1-4a9c-b945-84f2cb203abf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c9637cf8-9023-419d-a0b3-31e763a24b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7877895c-2f1b-4bdd-bedc-fa39688fe501",
        "cursor": {
          "ref": "24b18bdb-f6b7-4f99-924f-90cc173685de",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "043cc366-4b54-46dc-8e34-524ad13f69b9"
        },
        "item": {
          "id": "7877895c-2f1b-4bdd-bedc-fa39688fe501",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "48c0bc9b-6b0a-443b-9122-bb2a3fd02d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f175f0fb-4251-424a-8efe-f735de4949de",
        "cursor": {
          "ref": "22b2a04f-2767-41b0-a038-160911a0fa12",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1c69928c-06b5-473f-9340-0554fb2f4082"
        },
        "item": {
          "id": "f175f0fb-4251-424a-8efe-f735de4949de",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "30252118-8483-4c04-95a3-3505c51ce6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7c5c2-a0f3-4080-bbf9-fd578d605184",
        "cursor": {
          "ref": "173d1e09-2f73-49fb-8774-9515bcaa9abc",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29350ea9-429c-43df-9471-8f209f7755ef"
        },
        "item": {
          "id": "e9c7c5c2-a0f3-4080-bbf9-fd578d605184",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e01fc166-d1e7-4e78-88a5-c5e8e557c689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1c0723-2b02-4bda-bb42-1eb18d43b7ec",
        "cursor": {
          "ref": "f99af458-1fa4-472a-af37-4ed68550c7ca",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b721acfb-be18-4230-bde8-937b15c62112"
        },
        "item": {
          "id": "db1c0723-2b02-4bda-bb42-1eb18d43b7ec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ee722b4d-e664-457a-bb07-b398e3ed2f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1cb82-4f60-45f9-a2b7-36cbeba8f712",
        "cursor": {
          "ref": "d16158ab-9a78-4363-a081-d3b9ad4b6ec8",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bc344968-448a-43a4-a596-42e387a6005e"
        },
        "item": {
          "id": "8cf1cb82-4f60-45f9-a2b7-36cbeba8f712",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "852c7c91-3e22-482c-b398-32d7ba9f0e95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8048192-4727-4fcb-8e50-febfcb451e25",
        "cursor": {
          "ref": "66657349-b255-44ca-be1b-10406793ec5e",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b04e2db7-e0ed-4959-b262-942678d80ee6"
        },
        "item": {
          "id": "d8048192-4727-4fcb-8e50-febfcb451e25",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "878e8f7c-3645-4698-8717-5b2d98c9ea53",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 350,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e845831-2bb0-447f-85cd-e64b377902e0",
        "cursor": {
          "ref": "eb7a5e69-6932-423e-8755-72b2185f1f6e",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "026076d0-bb1c-4e25-9336-59dce79b5331"
        },
        "item": {
          "id": "3e845831-2bb0-447f-85cd-e64b377902e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "044cd928-5674-4518-b501-4f1ab3078b7f",
          "status": "OK",
          "code": 200,
          "responseTime": 458,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a70abe-5c70-4209-819a-e2b926ad23ab",
        "cursor": {
          "ref": "055125f7-3b2c-4b35-9a12-9bff5c4a466a",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20a43be6-1c76-46a5-aad5-b7d85d08b92a"
        },
        "item": {
          "id": "d3a70abe-5c70-4209-819a-e2b926ad23ab",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e3c50d02-1f78-431b-b8c1-24d27124581e",
          "status": "OK",
          "code": 200,
          "responseTime": 1943,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00577e84-32bf-4fc9-b579-27e1c334bc50",
        "cursor": {
          "ref": "2c1727a4-577a-4f88-b820-9679d0519eac",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "55b1ddbf-a72d-4dd6-af7a-9277198828d1"
        },
        "item": {
          "id": "00577e84-32bf-4fc9-b579-27e1c334bc50",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a6680554-48c5-4048-9087-68d4d1de7a8b",
          "status": "OK",
          "code": 200,
          "responseTime": 1839,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
        "cursor": {
          "ref": "e51760b1-4298-49ee-8ae9-a683e9b0cc0c",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4cccfc48-eea8-419d-85e2-9236bd595b85"
        },
        "item": {
          "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb3a667c-344d-42fe-9dc6-c502b29eb635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
        "cursor": {
          "ref": "e51760b1-4298-49ee-8ae9-a683e9b0cc0c",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4cccfc48-eea8-419d-85e2-9236bd595b85"
        },
        "item": {
          "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb3a667c-344d-42fe-9dc6-c502b29eb635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
        "cursor": {
          "ref": "e51760b1-4298-49ee-8ae9-a683e9b0cc0c",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4cccfc48-eea8-419d-85e2-9236bd595b85"
        },
        "item": {
          "id": "f1e43a83-1c56-4ddf-9938-b498cb7a4271",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb3a667c-344d-42fe-9dc6-c502b29eb635",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7daa2e1-35dd-4df7-9fe1-bc15f15977b3",
        "cursor": {
          "ref": "48bae9ac-940f-461c-95a2-1bccb678d57c",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ff56bfad-3472-4fe2-b0cb-02ef6c55d10a"
        },
        "item": {
          "id": "c7daa2e1-35dd-4df7-9fe1-bc15f15977b3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "06476837-4f15-4262-9689-ed6480ed7a2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 384,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f30efa-692f-473c-8a3e-ff233d175b33",
        "cursor": {
          "ref": "2f07f832-8e82-47d2-be6d-3bfcfb1f67b0",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "deb29dae-da33-479a-8ec0-d55fcc800a67"
        },
        "item": {
          "id": "49f30efa-692f-473c-8a3e-ff233d175b33",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa158001-6227-4e42-b2b8-3c5af1b6be0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f30efa-692f-473c-8a3e-ff233d175b33",
        "cursor": {
          "ref": "2f07f832-8e82-47d2-be6d-3bfcfb1f67b0",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "deb29dae-da33-479a-8ec0-d55fcc800a67"
        },
        "item": {
          "id": "49f30efa-692f-473c-8a3e-ff233d175b33",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa158001-6227-4e42-b2b8-3c5af1b6be0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f96a2-98ff-4d91-a48c-966a0f3f786d",
        "cursor": {
          "ref": "b3f885aa-af81-4baa-89aa-98dcab02332b",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "54e90c9b-439a-43d1-ac3a-75d9ddec9174"
        },
        "item": {
          "id": "f58f96a2-98ff-4d91-a48c-966a0f3f786d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1b6cd423-5aaa-48be-aee9-867a350cd744",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 608,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77362614-960d-40da-b2dc-0d8d8da2f47e",
        "cursor": {
          "ref": "8029e8b1-aaff-4104-8558-df6e8b15ced6",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "93ab044e-a72e-4ea0-8622-0d2b03c0640f"
        },
        "item": {
          "id": "77362614-960d-40da-b2dc-0d8d8da2f47e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b74c844f-236d-40e1-946e-4937604670bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77362614-960d-40da-b2dc-0d8d8da2f47e",
        "cursor": {
          "ref": "8029e8b1-aaff-4104-8558-df6e8b15ced6",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "93ab044e-a72e-4ea0-8622-0d2b03c0640f"
        },
        "item": {
          "id": "77362614-960d-40da-b2dc-0d8d8da2f47e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b74c844f-236d-40e1-946e-4937604670bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2b02ed-c715-4c47-8614-2b624e316e1a",
        "cursor": {
          "ref": "3b93616d-c500-4ee2-a5e7-e830b1da210e",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "894136cb-346d-4dd1-8d63-89690b0f4d28"
        },
        "item": {
          "id": "9d2b02ed-c715-4c47-8614-2b624e316e1a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8da3ebcf-1433-46e4-94bb-00b1c6ed19f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 572,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}