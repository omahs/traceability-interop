{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6310037d-8bf4-4b24-b7ce-08f7b2aae1ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ca46f47-f191-4408-aa3d-f40924a9be32",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "739a56ed-a419-4abd-8bd4-bca37a350e79",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9dd6a2c-8e8f-45bb-9851-4f498b5f3c15"
                }
              }
            ]
          },
          {
            "id": "ef3eee98-9e3d-471e-8d81-39d6fb9420f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6983312-13fb-4407-8b76-6c872e6cbf96",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "072f7212-e891-4612-b193-41cc9a7ce88c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e8d799c1-e2cc-4258-81e2-85c1a2bc205a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "178723c9-1e2f-4cd2-9fec-b329fb35f829",
            "name": "Positive Testing",
            "item": [
              {
                "id": "994c61e1-866d-4245-bcbf-cfa3675536f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "461f9211-a1af-4f3f-8d7e-a9645ea4b4ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4b57cc0-ad72-4755-893c-cdc94eb74c8c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3cb46dd-7879-4afb-a9a3-6aeac3b7cd4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c46d6952-939b-4a85-b3ce-e282be392566"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38534d6d-05d0-435a-bbf7-f9e39cfba23f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97f7e29c-bbc7-44d6-aa83-de6f20b369e3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ad933c6-d74e-44a4-bde1-c73e41fe754a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce8168e3-e73f-41d9-a69b-8e1208816e56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e9be453-9399-41f7-8cd1-b4d8a67c1646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45469034-3e33-4ffc-a8c0-3f6bbd5256c5"
            }
          }
        ]
      },
      {
        "id": "730cf862-96dd-4881-98a0-6ea2c163f530",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6f07158d-89df-4d41-ae5a-0f25c4cc33a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c51aef8-ee5c-4526-829b-df4d00ff6ad5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b975a8ac-70c3-4f79-9cb2-8c2feac3b637",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52005015-6894-43d0-bcd0-738aec089d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80091030-0d4b-4f8d-b6f9-5792433512c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6754b191-df27-4ada-97de-eb17ae13d97f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6ad2d2-9f9c-4d4d-b8af-d0731b4b981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8dc790d-c2c7-405e-b923-5aa1bc79b74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3e8ee7-99f8-4eae-9c2a-1d5cecbd2e0c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501740c2-5702-4de4-ba06-b79230ecfcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "034dc26b-c2ac-4217-b24f-318543662b01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfdca384-4ea1-4c9f-877d-44a5fd40e0b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95f27305-d9a1-4762-b5ed-e7b3dc986096",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddb0c69-da36-4174-a950-34d4d8b24d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca320868-4265-4356-aee6-1a059fca91ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28668c98-9034-4a04-945a-8acae275cfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affc0a85-0378-469b-9b86-91015eee7906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d14a01-372a-4554-a43f-05a053bfd056",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836226c2-9e55-4ca0-b626-c709b8a3a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6a1fbd0-8e2e-4130-ac00-3386c6449f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f56ca0-15b2-494c-80df-d443268afcf4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1a663530-d1b3-4272-89d4-98d04ed8e05f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90dc6381-430d-481a-b6b1-6903ae1db58b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9bbc1d9-9e61-4981-a5d6-330950da9dad",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5fc6180-d021-4a76-b89e-926ed9732dca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f718f9de-379d-4954-9dfb-d9721d6c48b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3638e5f1-8543-4d80-ad0e-8d02b2b83354",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "224aa57e-4ae0-415f-a09c-022af85f8d56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c75b2ea-10e4-4df0-a161-6dfc31187aec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52ec5232-c3ac-49e2-aaff-ec3e31b4af21"
            }
          }
        ]
      },
      {
        "id": "fc7857ac-9456-4e8d-9ccc-782b86435222",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b8f4e2a4-b146-4bdb-a797-e85c0fc81cc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4e1137b-4d9d-43cc-8d8c-6a9966f448e1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "584bc709-c223-4adb-b85e-753675305127",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc54e03-1168-4aba-881d-a6460b5b79cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88016535-76d3-4fe9-ac71-976a4354a6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f24dc72-ad89-4aa6-b400-73bcbe652fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc19ef4d-f767-474e-9bff-a84e1f5f8dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d313ece-25e6-46ab-b11b-dfdb736c0f7e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadf963d-7be3-493a-8635-e132652fedb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32df9e24-4cec-4c97-8660-43d20f0ac599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc090114-017a-430e-984f-623576029cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a6293f8-53bc-4c09-a787-dc989f32ca87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea675eb-2bcc-4995-a579-4a97c6cc68a7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedf3248-30a0-4da3-b5ce-8b922a3dad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c187b6-86f0-474f-bb76-ce4d9821becc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c59e0-41e9-4f20-9636-688f4d093d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4bab86-d008-49af-ba8c-4579edafb67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5f3c58-a2a6-436a-835c-f4a2cf53ae34",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abc1abb-4897-4cd8-b681-75e76d2e9d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea998ccd-fa78-429f-aa04-2aed4ba28772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c3ec2b-3786-4fb5-a1cf-fa879c9ebda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "044ee504-ba00-4608-851f-4494a6595487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d566d87-4e63-47a3-9eb1-cf9ff8f3ed97",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee8cc1a-cc7b-48c1-80e7-940d893e9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4385372-6ae3-43cb-80e5-2e2138aa71c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4805df83-cb21-48d9-9ebe-6cd3bcfe1f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f94222d6-e02f-4b87-b64c-bcd578daf8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bd89aa-7d50-4384-bdec-255c487353ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458a3d92-f461-4659-b243-0a5563341bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f89fad-33a8-4bd4-b4b5-5d572323fc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393c1a1-00d2-4f9b-a7aa-3fc6d5645cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a88f4855-e511-4627-8401-cf501cd516c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8722b69-896e-45f6-9648-f18741ea1092",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827177b5-4ab3-43f3-8e6c-a9c347899043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b5a037-9a53-43c2-ae81-0fb62da64a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80b1058-c2aa-433b-9537-1e90210809b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32d9252f-aaa5-4f81-b837-82f547b207ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db636606-b842-4b7f-b7ce-ccfbef756c9b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a48931-aa5a-4663-b6b0-27ae6c19c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8492a1a6-3189-443e-93f0-2a28be7e04fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f5f524-fdc2-4c90-a750-a37b672bf4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23e77f9a-8a5b-48c9-bb00-1c530940b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ea4d34-bdb6-44a8-b902-6df3f0ae5386",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068bdd66-c364-403c-a27e-f1bd5d0b973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfddaa75-3843-4ecf-9d60-bd4af06191e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a99ed5-9879-4ff7-a672-b1d977fc2f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "007a0aad-9db1-43f9-a3ea-8738afedefe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6ac55-673b-439d-9a23-7998c4fc3930",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f635b603-9103-41ff-9099-ee3851ab090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b469d1-f0a4-4cef-a90e-83dd735383f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd2c077-d606-4705-8042-87e758f9ef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91886c8d-81de-4772-a99c-7c5f452acb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502d2f9d-8d9c-4500-a53c-5c619b00e7fb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf0b2b-92d0-4a78-bfab-5756cab8b473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e646f563-c5bc-4d3c-a215-4411eced0ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eb1b15-9e6b-4820-bdbf-406f88a22a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8491799c-116b-4a2b-8866-297b1c88093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea90fc1-c217-408b-9aed-626f7d427b4e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cdd90d-f4b2-475a-b936-ac30e8b99538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32597b4f-d6d6-440e-8ad6-8daa93dcad7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4968bd-f03d-4db4-85e0-08cd92255637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3575433-bf19-4404-a436-82e519dc2ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b171e4c-0c93-4d6d-af1a-0b688e796bb9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb57a1-aa38-4163-a5af-976fef1a41a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d32d9d-da39-4e29-8588-bdd1f62bfa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f9d24e-16b3-4fb9-8ada-7750c430a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98b6fa6b-7b9f-4719-ba27-a832a914e1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cae0056-2086-4708-8842-7aef55d07d29",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06acaa8d-908c-4e1b-b67a-b201fda79fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088a61dc-c337-472b-83a3-a6a1e381eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab16a0-7ece-48e0-a03a-a8866e40c0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77facb3a-e626-4cb5-b788-5ec97cb3cd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014e26c7-c09d-4d4d-8980-9ae44a698fc0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33db934c-be65-4e82-9539-360da2041d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71fb065-d1ce-4466-8ac1-81fa0e2f12dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cf08fc-89b4-48de-9848-8a5f736dc3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e200444-3ffe-46ad-bf02-fc0bfc0eb86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c81d6d1-5e22-4de0-8f60-cb524d0d9d66",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4e8d22-2efd-40c0-89fa-9f53e0706d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26008b8b-2e23-4a97-9b3f-9bd4adbe8d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0501d8c0-7efc-4c67-829c-8d5efd668c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930e28ba-bc91-4fa3-a74e-491f039a713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f542a1b0-c32f-46f3-b11a-431a9b9afb26",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5545d86a-a47b-4ffb-9ead-fa284dd6a594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6070a11f-1b4f-4066-821b-cb59d5c463eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de423e-aa10-4b4f-9cd5-36f70054d31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab81c2f1-55f9-4522-b582-ba7c8e89cbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69a8cc-8058-432a-a5c1-c58710929e40",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdd231b-725b-4233-9163-e898c7ea61c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4721ba-9b9d-4574-8b05-77c5adbd9bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fe565a-b265-4669-8f34-9e25c03f261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "930e34e9-dd8e-4456-a7dc-142ee6280b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e084829c-5ca6-4ffd-9b02-2cf270211689",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d067b2-b21e-44c9-b6c2-1f35c7eab893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0aa505-09fd-4ebf-89bc-e063a1a0d780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a8f474-b910-4911-8933-0877a762b702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "365d2e50-fe60-4fdf-8a34-b79eee749055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc589501-0f92-4da9-bfc8-f0cf74002df6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9afb05-9cd0-422b-b932-260154a5d8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e965c53-a757-4f0c-a03a-d7449b83da03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a820481-7978-49b4-b5a3-78f404733917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "896d5165-d503-482c-8cb4-4de8afde0d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea09763-66df-4c4e-8605-2a8eb5674e76",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24faa43-ac53-43bc-bb08-50d4884d400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99a3dd0-8d64-4f90-8c9b-9bc2f528d0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03834f28-8dc0-4262-8ab0-c982cb8a9872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c203d4-4dbc-4acc-8b08-7c6b536ad36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb7d045-016f-4669-9be4-6e1542d5b666",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71a249d-604e-49a3-82ae-867b4e3f9418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec60d61-a9f4-4684-b4e9-fc30deb34233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc52449f-ede5-40e8-ac40-fffd845b47d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e38b5ec-dcde-46f0-86f4-b66912be72fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bead7db7-5df1-4b77-b8fe-f3a25309e2f8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd417c21-01c9-4739-a0d4-060c2f4f6ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e5dbca-9552-4bda-806e-262f2e41e3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6d27cf-635b-46c6-9f01-70c5c1052c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e906ce60-c06d-4728-a274-a82155b3685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a13a883-0764-488d-bb12-8ba98ca4507b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b21891a-9b90-4404-bd69-90670918a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd14ac3-df2a-4f2d-98c4-5f4ee9eec4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae02fa59-76f8-4bda-bb05-5b9aa0e2e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fab545-c6c9-459b-bd91-9b431204e4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927660b4-ef7f-4889-a8b5-fe596578d325",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98c7b10-edc2-4cb7-a63e-a06ce132af8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bd3b4c-6937-419e-9199-5c99af2edb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a595a5f8-9a3c-44d5-899e-68d98b251fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e436ba7-bb5c-4b2b-807e-04c4a06b57c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ebad58-9d5a-43f0-8ec0-6ec156785ebe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c75bb4b-96fd-4bb5-9e16-1da633252ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c955bca-3a56-4250-b823-8e4266ae6bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adedf97e-7386-4692-a2ec-cecc8d3ed12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a449cb0-234c-4c82-9fa6-4e47547ed4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898c3a17-9f05-4245-8143-deec4daf07bf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56a4422-56a3-4a47-b389-8e4767ce085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22052055-b545-4b8d-96e0-cc404251cbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf20f89c-2cac-49f6-beb2-615afe26e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0259682a-76fc-41af-93c3-af2983877cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6532699d-7deb-4c1c-ad43-d21492c232fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a34274-1970-4a5a-98f4-ed10ee07d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405aaa92-6fb7-4b10-b0ca-2e90bb22b0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801e11af-ac8e-4914-8396-5539cbb52ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf1d6ff-fc5c-4e3e-902a-d890df8921c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2a4f4f-ebff-45d5-8aee-c388d54d4ff6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d5f513-ebdb-4353-9bae-0921f8edbe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdb821e-0e49-4c34-a406-1e473694ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7807e621-53d3-43da-9a89-14e7da792089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e5ebc5-d287-428e-9b60-f9115f5c1361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a83e27-9d7f-4035-8cc5-e4c13698e339",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052ad9fb-af56-447e-be4f-d17a48eb947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1bf7c5-2664-4728-acb6-151f58627bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a141526-9542-47e6-be7e-1c25c9e7747b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9465fd6b-90bf-4e83-8312-70a79e1ff979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95121599-6a40-46ca-bc16-95d524a68024",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e76d3fc-5d79-4ed6-a146-3798f21ced69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461a3c39-68ff-4da2-976c-54e3747081fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a5caad-d378-477d-a224-99557667c6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09776688-776a-4e2f-8b39-1927c48f6f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8b165-c0d2-40f1-b9c7-c7043ae55fd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ded5704-2d32-49d5-a739-4a01f35b2bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97690392-e7ca-461d-b275-b7b5a8264bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2fbad1-491a-410a-ac20-94b24309b607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4dc5e4-4eaf-41d5-8193-de7b23cf1c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af407235-131d-4cb3-bc25-7b4d4ce111c7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee1815c-c3d5-41b9-81ab-61551ac97893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624ed728-70fd-4d98-bb72-e54aff1c05e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8980ea-65de-4dff-a3a9-cf40a36372c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb5bd22-e9e5-4608-ab9d-5d3be0ecf5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f4e4d7-8ef6-4534-a2c1-d50eb76e023c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbee18c-4d69-43ba-bc77-b9535eec2dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7bae01-2076-4d20-8e9b-df7ddc35410c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c873d67-836e-4566-bdaa-88b3d43ac041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4efd8be-ee47-4964-a9b5-6a63992af4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814d8a2a-fe20-45b4-b5c2-0f0bd7884cf6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dec34c-463b-4fa5-a552-bf1311b13939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f3d932-1eae-4708-83d2-ab2d9b64f4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e0547b-2936-4f0f-a83c-9770019bd073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0687f205-0317-4633-b487-8cc5be16b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109eabde-c97d-4e51-935c-f978f38afa7c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185503a-7bf5-4155-bf14-d2d7536f9555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f882b3d-fc7d-4ae5-87c2-2cce82d35269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad0a553-d57e-4959-8598-565a88ebcd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25ad47bc-4473-4993-a749-d6a477616702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df79f1-30a0-47cc-9d01-b9f2c9cf05a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00c3528-058a-4525-99be-081d3a81e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808a83c2-6e82-49df-8262-d3b89be72025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0591d7-38be-40d0-a307-781182b9dac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c3169f-2c21-4e80-a366-880045669ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be649f9-c20a-4e2e-ade4-5b61ec5496f8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac4d69e-d64d-401a-8423-f30aaa3d7671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf5ee5-dfec-4e4d-8b03-9f14aa4b3563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de6e490-656f-4456-a028-38b9086edc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1035399-8ae6-44e5-803f-1f7e37bebac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da06e5e9-f654-4160-bca6-c8f802be3389",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5044e25f-cd2e-42e3-83d5-f2336809af20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abde08e6-6b86-4518-9cba-98583f91ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6dd0a7-aec5-4fc1-b718-c8155c7d11b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a71fdfb-1cb1-4a01-b378-76adc8aeaf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37968c28-f554-4e09-9a56-fc1db07dc8be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef224a1c-7352-441f-af35-7934ed112613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e365713-85dc-4c46-8925-875bf8cb280d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbe4f43-2d83-428e-91be-6f07738793f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8e957a-f8cf-462f-a0c5-fb3871e140ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7caca09-576d-48fa-a61f-3a633fd5dd3d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d28e4e-a7d7-4699-9e63-9b3f586d5cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef26e9c-44de-4581-8d16-8e340bc202f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfd9908-ed07-426d-b53a-5c403383d0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebed8ac-9abe-4ca3-a79e-1b438aeaa3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594feaad-8713-4175-984a-b41ba98b6c3d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d9242b-4fd2-48a0-bc58-e0ca7c4a26a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6467ef1-d8b4-4cc9-a6d2-d62ff6044d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bf69d5-acd2-48f9-9f20-a2eec533f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7120bf0a-ed3a-481a-9262-443919c7e3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a314041-3676-4440-b374-9403407fb31a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1445abe-7aeb-4da9-a670-a5011a861ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0046e93-d9f8-4d72-9c23-6671ea9ea0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701ba283-dc81-4a6f-ab6f-8cc096b30630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "693b1cc5-3dac-4e7b-a572-7c5514396a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea4655-1a14-471c-b627-b0c1fb668d13",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134afa3-5f89-4362-ae20-514d2a26bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be22b4f-9725-4556-aa7e-d49add02d170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17324ca5-34d5-4189-bdde-c34aec0276c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76868bc7-f467-4d9d-9765-9539e5807dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b7a0df-4cec-4334-a12d-cdf6b504dc7c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71aec58-f374-4e63-bd69-f967e24e6d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabeb2bf-d826-4600-a753-5de33a4b9a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0f9a3-a455-4e20-bf2d-db2fbeab38fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e5abe3-2bb1-4ce5-a1f7-5015404e9e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf1a615-71a0-4048-9279-4902fb1932b6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde31b17-1208-40ca-8d5f-49a1461c21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88dd18a-f223-4678-850f-87e1650adb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1f633b-dcce-44a2-aae6-b37c229c9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc74daff-f0f4-4b27-b0c6-63109e27a5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d7361-daa8-4ab7-97b4-9a6805080bb7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2b6959-2809-4aa9-b203-b76501726f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5bbb50-df73-4e5c-b7a7-a1b4ab2fbfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11627cf-19ae-481d-a306-f1340d0da673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "336d2433-3a01-444e-99dd-0c96a7c64303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960d396b-3918-432a-86b4-955c60e06b72",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102eb739-6c5f-4a10-91d7-c9d3b08334d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd95307-1373-40a8-a494-eb5152a237eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a71a036-2488-4136-bb47-ca9e52bc1d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27c38333-861e-4068-be8d-a331a4e8cec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed23ad9-5759-4eff-acc0-e37fe035c912",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b6f90-037b-49a6-8eea-09237535717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc884a7-f479-4505-b3cd-2fdbc6a7d2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3819c-45e1-436b-8f42-7e161a45d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0f8e22-911b-4b92-9bc2-1ff2ada23012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ff73f-acea-4f04-83b2-ea3b8672b1f3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4de852-6ed0-4032-94f1-0dbe2ebc4b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e88447-3a2f-4b9e-96bb-06d0ef4003f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba6063c-d3c0-47c9-9f54-e932510b5e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d05ad30d-35d3-4f76-a4a0-a2bb09f84bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0883408d-eed7-4749-91c1-6a0db0fa36c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5679344f-952f-419f-a950-a480086269ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b6d85e-c611-4403-940c-e1475c4890f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f844994e-228c-4a71-944a-0be7fdc77d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "264b24d4-ec6e-42e9-b88f-014314ea783c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3976f6dd-e0b7-4168-a566-ba878d6cac43",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be17e44-129f-4c29-86fc-f419f5ebaadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839ccfd4-5bd1-44ca-957f-d963fcff8dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e497c884-7fc6-43ae-a3ae-3617e48941c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef4ca75-d837-4eae-8bf5-e1f492cbc927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e560e836-be9c-43e7-b3df-b6fd61c66fab",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c332ee76-7d3a-4edf-b02e-557518a08d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b2c4b1-d4eb-4708-aeac-1045ac8c565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982bc912-5c43-4441-85e8-a196d92fd8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "447cdbd5-6e26-43bb-8190-e7a3bb259bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae72dc0-024b-4dc0-bea6-8118a9d1cc52",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f39169-45a9-49df-a5a7-69ae8164598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aff35e-ac5b-41e3-9777-9410ccc93de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc7710e-46c0-4360-96d1-f12fd2cf636e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa324a9d-3c9f-4961-a006-c21fbcea3314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1003dd-4994-4b7f-9979-9fa6e9f81ce6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda4d8d-827d-486e-8cef-aa88468cfe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3296b418-dbce-4aa6-9efb-90d8352def61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c7fcb-e96d-4873-bf46-a2cb1eab17b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7108c3-cdaa-454f-a048-3440b0b74fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09069bf3-0cea-43df-88f1-0a568f2eb7b9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fcfd3f-6f91-4406-af5f-1a6613c42a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2308bb-7382-4cc5-a046-9ab4920d7e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79570d14-5a89-4250-8422-26b4a2e919f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc4e14d-70f9-400c-a960-afbefb260103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fafd30f-dc1d-455a-86a2-01ca981edd43",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992bfa7-148c-4daa-b5ad-10cf59f5bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ff5d7-45b3-429e-88cd-6f867c84a214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9aacfc-337d-4299-9e40-953eb1a98dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5eba7cc-8a01-4e19-9bbe-04570c0bd8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208f54ff-d491-4f79-a604-21142c175cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e3227-f65b-4e11-8edc-4881c9cdaa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02968ed-4cdc-4774-a69d-db671e65bde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73b8639-924d-4f3c-a843-6ae6bbb2c2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "958f6138-7835-4f13-a4b7-415e1eb802ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b906df1-4b15-4012-bb38-e11670477f8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbde5a69-8dd3-46c2-8ffd-26098062e369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2715b7d1-c7fa-463e-9a95-dcafb57d6e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7111201-0fd0-4739-baef-6e4746b74b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fd8cd5-296b-4afc-bded-5a5bf842e192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de176c-74d1-4ec6-bbcf-2016859eb63a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f0134b-34ec-48c9-992c-9e6860029be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5094919-ceef-4c4d-b06d-7ee714f92209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea3ebe1-25d7-493d-8805-ad8da77a2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a8adc3-917d-44cb-8af2-d10239bf260d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5c7926-66a1-4a78-8238-bf126567d6ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6d5863-9d16-456c-94af-2f747a54ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55817fe1-fb57-44bd-a02a-cfe798559355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7b518d-5aa1-43d7-86b0-d836796ad633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb7a973-e83b-4e8f-9ee4-48ca25858973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0291a030-87ca-45b5-a5ee-54ed0764cb61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978e6c57-bc97-4733-a84a-49c00a633a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d17ca0-92e5-43ef-9ab2-c79232afe545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059d7e27-8289-458a-9a75-95d76f92a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f263344e-6eb2-4b91-8a3d-7da8fd62b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c590e6-2d2b-4866-93e5-e4006461fd74",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe500e4-c0ac-4d85-b85e-1635d4920253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1dedf4-ce72-4693-b614-6da936123163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed44f4e-35ba-4055-b1cc-55d26bd060d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2762f00-01bd-4eff-974c-4f8cc358175c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae47aef-6ef9-4951-8018-69e0ca773cbe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081e4557-2952-4f80-b3fa-f6642622e432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bb2fbe-e1be-4479-a4e2-4e7232dbdc46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9966ace-2482-40d6-9a60-f99ffd5735c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cb852e-4324-46bc-8899-9a2cd907f363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094ae2f-f068-4411-9b36-8e448bc55cc5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc085f-2b52-4414-9109-cb8a7be41b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d876f0-4c3b-4662-a028-a0d8f1c5a5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0a9141-e396-43de-a4bd-171af6fb80cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3677a72a-f782-43b6-9faa-eafe65ac6aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8c2bad-fc89-42cb-9f8c-8611cad91197",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6888d9b3-1ac0-4fd1-833d-5450401785c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb45c7b-db4d-4251-b635-ed81c9d98e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6be841-8f8f-44ff-8170-c83294280868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ead3a60-5a93-412b-bac4-31c3be58ef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ffa54b-b253-4b11-bc85-c5727af52cdd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28da2d17-ef83-4813-ba6e-7e879f35695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8d51d9-04a2-4620-95a2-26e38a035897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8220e283-ba40-4834-a095-447c36fdd717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0978f62e-5f8f-47e2-96b1-73707be28482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d98e81f-a8db-44d0-99af-357f73a84fd9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666db357-df1a-4cd0-9631-63b1f7a061ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ee1a75-dfc4-459f-81d1-d79a053e0122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c241a499-3307-4602-bc8e-7ad424ecdd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "793929b6-03b7-414d-877c-3528b045efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d4bd81-5a6a-4cf0-8db5-43f3f28b3bfd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bde8fd-52ff-45b2-b5d5-465e3222ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a387591c-74da-4a76-9cee-3c853c86184c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28c0a9e-e2c5-4d28-b82d-1bf345482944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0d4ffb-df75-4cd7-87c1-6c357dec63cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e564da-89a3-469a-a8f9-dca61c1dac90",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdfd39d-83f0-4ce2-b228-081a0fcc41a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0420080a-31db-459f-ba42-04bf62fcf71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19988df8-3913-4811-b943-475acabfed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "590b3347-cbf2-470b-8cf0-6f1f6bfe0428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b64cbbf-bab9-4491-9dc5-cfb567639422",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091e9134-d26f-472b-98b0-1a63e9ea2f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c9ce9c-c1ad-4cd0-97a0-ec2922d24ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e94f9e-f087-49f5-9c16-6d8f6a8985b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af82905-6db6-489f-8c72-ca8194a93486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d0d0f7-32ec-4bf9-9ae0-0ae1253c065c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25b5636-6093-4f1b-9794-1968b4d3acf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6a3d7c-af8a-497b-8aad-0fb57131801d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1a60ff-82f6-4b50-a029-cad50b222ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "991cced4-6c28-47a8-a94c-22bb3c6d3835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814adc9c-26f8-4161-9242-54a27d28f812",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d007afa5-1960-4ac1-9b31-a79c7c9fec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3f14c4-0617-410d-9613-9e7ccd11e208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df4c146-e8dc-43fc-a85c-03082990d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53cb1a44-11fc-47c7-bfa6-43e507d967b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8f247f-a89a-465e-991b-f39eb0c0c4e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72da24a7-8ddc-40c4-a6aa-a1d86dc3da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b262cf6-081a-48b6-839f-4dbb5eb7baa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1def411-a7f2-4ff0-b7fc-26a949308577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f11bf082-ea20-495e-9043-52afa79572a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2636bb-074b-47e2-ba25-464aec83ccd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ba9d50-4918-46e7-a4ef-19588d30281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad9aad5-4c8d-4be8-a36e-46a254fead77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ac616b-f230-4bbf-ad87-c06915e7cee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17942b6-3bd1-426c-a0eb-1ce79a2053bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1a46c4-ecd0-4971-b3ba-16c8ae7be20a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a3619b-8174-44d0-98d3-2ba75799b7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dfd4fc-dbe5-4e57-a927-d602b3dfaaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098ead4e-5332-48c9-8c77-4163143cba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c833b28-242d-4256-a0fa-67b72a0d907b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec5e315-365f-4d31-9960-20710ca8f353",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1a7998-3b5a-43ad-a490-5dbb120b997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09689183-fd93-4b89-8b3f-bb778c0929b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97358149-5175-4b01-a6eb-474966873a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa91ad7-50ee-4255-a995-e52241e5d19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d07b8f6-1b21-4bcf-b578-d2498e0dbd89",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f03b5f-2e79-4c2e-b518-6b20bd3c2a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e8458c-27cd-4bfe-ba76-7f5d93c1f94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85fb565-0939-4dab-890f-7f341b7ddfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "628b82c0-dfed-426a-bfbf-23bdfacae2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69632148-eecf-4bf9-acc4-9d083919c96e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c2f845-4c20-495e-916c-9e034f24a881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740133f9-2a14-4936-ae1d-30e47ee99d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4114bf-cf9b-4db6-a021-71aebd138928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac23ce56-697d-4241-910d-5fccfb5b3716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ada53d-bf11-44a6-853b-cc0ae96771bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e27d2d4-49c1-4074-83c8-c45c39c3c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7b67b8-d480-4d3d-8d20-45ac273e5700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad32d433-beb0-4261-92f7-14d255c93345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd811c52-f99b-40e0-bda8-44a2c2017987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6024bbbc-dd3f-48e1-9274-944bcd9f6fbd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8146a7-eb99-4c98-9779-6653d7e9346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c4ed1d-6386-4b52-823a-3a8b89be313d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a324674f-6699-463d-99a9-370f6cdda6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe306c08-7bae-41e9-981c-7a96ef80c17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9857042c-5e92-4f4b-87f2-a2801e8dc47b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705de985-d677-4163-b20f-fbf713bd04a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788b8cfa-ab64-40ff-be60-d56cb2a75de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53295b6b-4a38-4ff0-b40a-ac3895e5efc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2070267f-3e8e-421b-9a05-1e2ad984b2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ccb8e5-afc0-48c7-92d4-9a364b4627c2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae9b0a-7423-4eca-9866-566fb0f8e393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e835ee3-fc5c-4396-84cd-b49f21c372f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcecd4f-8095-4875-9091-4c662542499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "232adaee-cdf2-4df2-8c27-d5aecbd72069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5b484b-8f88-4c4f-88c1-2edb220d0bb9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c26c1-d2ca-46a2-9efc-c0938596af6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2444c145-74f2-4cd6-b917-3645f3d36fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761293c-30cf-410b-8ebc-62634072430c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4dc362-4ea7-4fc8-ad46-732153ff7091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc5430c-e1fb-4af4-9e4c-735f4c3a6e7a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a14047-1390-4f6a-aeda-659050b47ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3c942f-1563-4cba-9a46-26299f4608d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c757f62-7d54-4709-81a4-ab8f3bbc6712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de3eb9b2-5bb6-4ac4-82be-b0f8a6486be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b424a461-ac3d-4237-998b-ae424b49a061",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64007e58-4d08-4013-962d-9e392e1401e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4a8ef3-80fd-4176-b8c7-852f52a19026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca4a9e-e549-4425-acef-9c3384d0b98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf421ddd-ce25-4a99-a8b0-0a4514f347db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8430db-f9ef-4f56-80c1-eb16230f4d60",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b08496c-245d-41e8-a26f-59d23366b704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fef76c-c795-4063-a672-cc8e679247ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b09fc11-a2db-4795-92c7-0bb319fbc990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97cc61ac-c276-4714-8eb7-d3775861b066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cdbf6d-275e-4104-8ccb-2eb13e3c9507",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6203b44d-c5c9-49c4-9e91-3f968392523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab63fcd8-97ef-4136-ab31-34dbeb3d8270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ab76b7-f703-47a7-9582-eea4d574f597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4d43d4-063c-4554-ba79-10481da778c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348bf19b-36be-468a-abd8-52d42a002b89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09480961-b734-4955-ad1b-66fe2775e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4440b2e0-f79a-46f7-9944-c7b2d1edaa53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b160f87c-97cd-4fe0-92cc-51753ae02397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb52080-c9a9-4e48-aadf-4cbb20d4486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d81b39f-4458-4a66-9fda-ceb9b0cffa36",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99400e48-d370-48fa-a140-4c75b1fdc4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfd76e0-546b-48a9-9909-4b766efb318d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc26ce2-4af4-41d6-a3f3-47bcae252cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "935c5ae3-912c-445f-9a42-6a98e86ffb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c491a82-ffa3-4804-9633-1c1b99d86b03",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722a122c-aa2c-427d-a196-e1c33d5da8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70410a13-57d0-43a6-b39e-75a4ae59785d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d1ed1d-6185-45af-8990-e10e81e2c007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ccebfe-092a-4c4f-b41b-6524be4c9859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b54a67-1b16-46a7-befb-f3498c823363",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c8310e-619a-41bc-b5e1-7b0a2865c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "14e102e2-9840-4699-9e97-91e8caaaf075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426007a1-71d8-43d7-b29f-8ee3070e5479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e892d74-4996-40ef-8273-c3a7ef414d2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10f82065-00f5-474e-a6de-6a530d550abe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "867cca69-536b-4349-8411-d94f3cb71801",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84c21f-dd42-44a1-b9fd-9e812ce64fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78e1f72e-4c16-4401-910d-320a35ee74b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6c246-d62f-48ff-ad0b-a4643cb2bb51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "60b003a5-6db4-4a22-ba52-104409c83119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8e4073-90f3-4c80-ad4c-7f05d18c0a0d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de059ae9-3d57-4bb0-94ac-a277f93c0e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bab24637-2661-4ba6-bb9c-d762c18f021e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5688918-1c08-4245-b963-9991a4b1c6ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e5cf1d28-f265-4030-9f24-761ba838edfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1604ff89-f1a6-4b74-9b5b-ef85a6e1f701",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a413cf0d-2751-4d68-a2a7-bd0038251a6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02436638-c096-4e10-a0cd-33663e308b48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b69ff22-1649-41a5-bda4-372458b21e20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a887449e-0f49-4271-8712-85a41bc29531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1501cf5b-1597-4a54-b02f-22a4b8454857"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "967f7d92-f578-485f-b0cc-c8877bf75b8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea4af650-5587-4047-a4d7-3698bf008f17"
                }
              }
            ]
          },
          {
            "id": "ad74ead0-1c4a-475c-b1d9-5bd649782458",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20ab6bd0-dba0-4c58-8c02-ebdf65385d42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f1f38e9-4bfe-4b38-94fc-f17b62da0278",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f16f35f-4342-4711-869d-9142359fd839"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f713530a-8490-41a2-a9f1-1e948c56e04f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f10a83f9-3dac-4aad-91d6-ed5b48a0eca9"
                    }
                  }
                ]
              },
              {
                "id": "31866312-5ad6-4423-b10a-3b0502aca66b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c628f9e9-05de-44e4-9f4f-76792a038b13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce90cb5b-c021-443c-a89c-c01b2266c55c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1705686e-395c-440f-9709-6d7545ed970d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "815226e5-649a-4896-be11-8a0efdcd6e0f"
                    }
                  }
                ]
              },
              {
                "id": "13dee2f1-fb2d-477c-a4e5-9de99762191b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4469459a-db37-4bab-b405-66268f3803c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1635d204-f1c2-4954-8b24-662325099666"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3349ccbe-69f9-489a-8122-98fb45e5035f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f80cf19-a50b-4213-96f2-fa7d5ef6e162"
                    }
                  }
                ]
              },
              {
                "id": "9693e89a-50ea-474f-8126-c2426ee3d9dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43985dfb-e196-41f6-a58c-6e4697925fc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1daa49de-5f37-49a0-97bc-3a4d1b0e2baf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e338e6b2-9801-4448-ab91-32e7e992218e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e1961a5e-9580-45b6-a8fd-2103cbb8f158"
                    }
                  }
                ]
              },
              {
                "id": "95843e48-84c3-4b0b-b311-9676feb3d847",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd42125a-ebb7-4abc-9c23-6b138fabb7c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "834262a3-ea5b-4f0f-8bd9-b01e5d8ecc80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d4a10eb-ab48-43b5-95ca-80fce478db40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4fe8e609-648b-44b5-94b0-d54362226efd"
                    }
                  }
                ]
              },
              {
                "id": "7238b62f-ec06-400e-b0e3-5cb94ba3ece4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1df08d6-f583-485f-a04a-cc6ea398f76b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0110becf-a7d1-46bc-9089-f42314863ad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85f2d9ea-f2f1-4ae1-a3ff-45ec0c02c602",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57613d37-d4f4-40dc-a0d1-8abc929bf06a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e9ec934-fffa-4c41-9d04-b9c5d5673d00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74b56055-83de-4ef8-9d32-5b5a4b9a73ff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ba22a90-aa0f-4a3a-bd0f-c10db5039134",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "077b69da-6d54-4695-b5c6-f02355cef1ec"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec7924e7-04da-4b27-8250-19a8c977e0fc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e115570-00f0-4ce1-b480-949f74d66918"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e49948e4-32f1-4215-9b77-575d75198858",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16e3a4bb-ad8e-4530-97ee-c594b4e8b297"
            }
          }
        ]
      },
      {
        "id": "a833ef54-75df-4fb1-8443-8a66315fe05e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "966ea0a8-c310-4a31-b62d-6c50d56a6121",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afb40ce4-07ef-4d9d-9319-3c1386ca92ca",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3a1733e-a32a-4066-8769-f7927719507b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd63b6c3-02f4-4cff-af03-e66d0becef8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300e7742-be4a-453a-b9f9-277b70f3ce8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0a0bf1-da17-49af-a8bb-41d9a0839829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "388d8b77-143d-4233-8fff-77f496dbb72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b72987-0db0-4a77-8e83-a0589b53508c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b576dc-2ea0-4b8b-b349-44d065a6c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d30043c-d785-4d9d-bdb8-2eeb8c6acafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0052dd2-b0ad-4680-a666-fd8e4ed380d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7f5322-ff55-4a49-a105-046b5eb2c9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d903b8-f411-47c8-896f-58c48b3ad09c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650e7a40-3a9c-4e0f-9c90-a11bd8485868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5345b7a9-f3eb-4abd-8580-47d6d3bd738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c6311b-14ed-4050-9b51-97322a3f7341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "184c6a6b-1aef-47b9-9572-08e8358b560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d456346-48f4-483f-bb83-57c7783796b8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07995a4b-dd23-445e-924d-30c294ba0282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84b9d41-c194-4a1d-b180-3b5397e77b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514e791c-90ba-40a7-99bd-b8e04fcfb482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a72d4e9-1d21-47a6-b4dc-6b7cabee5d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5573e5-9b1b-4714-8858-c73ae7baf86f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf33274-bdb8-42ca-aa83-86d4d1180a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ac2e8c-5978-4ddf-aa84-662fa1ea7fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bf62c7-9435-4751-8728-b68eb69aee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a63f0be-d6fc-446a-9e91-7ef6fc0bc1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc252743-78fd-444a-8e0d-b4961236ee42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05b010f-a5b6-4ef2-9a4c-c71765706678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b50183-7a2f-478f-b215-92df3d4badde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7155f-4fe3-4a61-b4ca-73893acce437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cf1cc4-71dd-4382-b877-ba9e570c07dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff29f98-2ea0-45bf-9b0b-8f0cfa7f46b0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb019ce-7ba6-44a4-82a7-324ae39f452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d754e7a-903e-4300-878c-029c44b598cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f7920c-60e4-4e1b-b831-f85893cd0510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c0c495-c5fd-46e3-b310-41aec70cab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0866cb-7443-4af6-88cf-4990b731d686",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370c9503-cf57-4052-a281-6226f48563ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f64bae-1f4b-4b79-963d-5a279dee53c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe529aa-e13f-4324-9914-53ac3d10b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd6c0b1-5c54-4712-bd11-0902935dfbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65aea34-186a-428d-89c9-3c362a9e3d12",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5511e6d0-8352-4437-84ca-fbfb35ad3dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810a17e2-1904-4999-9108-51207553f63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd9c614-0adb-4bf6-ae33-1ca82a37aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff667fb-3efd-4492-aecf-019c92184627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3182140-3393-4dc3-9aff-02a71b7a2190",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6ada25-b649-441a-915d-bd01a32d24dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f268a737-f123-4e9e-816f-1bf5eebca2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc27aaf7-a55c-4e87-8d12-ae62f588e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8772e8-ccdf-413d-8472-de211b1b8a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89206217-deca-4b06-9e22-93dea6f66ce1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e24894-84fa-4038-9318-742b30478b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278aaeb9-948a-43ab-8449-79433a94376c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db06be8-db07-468e-9c9a-6eec338b13f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0c793281-8614-4fed-aa63-22f93d076498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576706c8-fd84-4342-8af6-ca882ee5a160",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91862543-1285-47cb-b1bf-96716327afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d102aa-cb8f-4905-bf08-67b8b45082ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0276c29-e3de-4f9f-bedf-a1de601e1fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4ce794-7c2a-4b6f-8938-bdea2938f0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fc0cb2-d4b3-40ab-87da-e5e7b7fffec0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1d338c-e018-40f1-bd20-224c65ed047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a80ded-0224-4929-8015-769172ff1566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7eb4e3-c72b-49b8-bed4-65274199ba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1befa59a-9056-4c3f-a1fc-0085aa054c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02387b1f-7881-440a-9bdc-8b6c9b8bc34e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dffe0a-6ce8-4fe4-9392-98671ce07b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a73fa42-35ef-4e7a-af08-b826bae70ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb197be-94c9-4f74-a4d0-faf7a8299d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7390d1d7-1577-4e35-913b-8e0489dffd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd35668-a948-4784-ba4f-ed510645e5b8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6f22f9-bd5f-4f75-b34a-7c2105e135af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfe56c9-1a20-4815-9355-3788d0ce83b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5352af58-9d4f-46b5-90f1-61841adfbde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da041bb-f5e8-4ffd-8da6-c238a65b8e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b2c79c-c5b3-4ba6-9e24-200f0b041d7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbadab2-a516-4d59-9d19-4abe1ebb37c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506e385b-e08c-46d8-9a39-cff05ee2f934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf82caa-9999-4008-86cf-25a19f75164b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfa56bb-6721-4ff2-9ebc-a23f5081cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65321fcd-7dfc-4598-9ebb-e89957366203",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6fa477-4221-4ea0-a4aa-2a2e21d596fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ce254e-a7ce-4130-ad06-d7743064aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa4284e-7d68-4689-b4dd-3d26d299d454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "00991a33-2c31-41bb-a431-179e5de4d1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3216628c-c50a-49c5-bc51-7010233e3088",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2610d7c-d5d9-4f1a-8084-3a3e561b9132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da117270-bef3-432f-87b3-fe959a289845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a28636-0a4c-42fb-8baa-64b037bd0782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c8db66-9cde-4fd6-b248-dd711fdf70bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6623bb4-b08b-4136-b480-96c51a5e0bdc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cec8f8-7842-4caa-8fc9-8faeb2e0b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d6090d-3a56-4e14-baff-6cd652fe9cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6b3e77-e973-4578-b106-bb921cb02a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25afb1f-1c6d-4f6e-992b-55e9f707f330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6e857e-31f5-4a2b-94a1-05ce6c2aad86",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80af976f-e5e6-4475-8e49-c11e3566c7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795bf6bf-4ef5-490f-a1d0-4e1906bece18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea9df06-2a66-49e8-ab0d-d91183773a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b09f652-82c2-4ba6-8925-85097fce5663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31f2bd1-549b-4474-9327-293eb0094000",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae49b82-88e3-4302-bf33-82b97e24c5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3405fb-b269-414b-91b4-40a5fcee0d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15fbf86-9b25-44c3-9516-9a8c76bead9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb3d3f4-ee69-41fd-a3d2-ab075e5e925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cf7566-c5ca-4b51-83d0-3ef07266d83a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18a7bab-f9bb-4ded-83d4-603e5dc559c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6be5e0f-ceaa-4217-af5a-0eab6cc00a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f46882-83d5-4104-83e4-ca221dcd78ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecde50ce-ebb5-47f5-a7dc-77fac627e3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5de027-b0af-40d2-bc90-e7180d43f736",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1164cefb-5f11-46a7-8c40-d852abf0b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3895e431-076b-4c0a-80b0-5bfe928f96df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61a0473-f7b5-45ed-a2d1-59696208b33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a504356f-085c-4e7b-a35e-016f44da17af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eaae0e-d3af-489c-9961-c02397b7a939",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb68f8-8929-4de4-a2f3-4acfe1a876b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb3ef40-ebc9-43b0-883d-16504bf2f5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f86e29-5e04-4ebb-a353-c80821d115bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d35f1b1-54bd-411f-bb12-59b4128e00f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2039dd4-77f8-4e63-a46f-a6c1632bb11c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7dc236-b5c7-4271-a469-9ff09779bdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b81db0-ab09-43ca-b9e5-91931db51a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb57f5b-2622-46d0-862a-4f6508ea4e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8224e6-b171-4223-b96a-2d0f966ce3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aeac85-d5a7-47db-90dd-f56029dc9880",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a862054f-1140-472f-b5ec-43837f7ba540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b301a20-85eb-4aa2-beb2-908be0245795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57127e3a-c914-4ec1-bb29-7fce2abe6d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134f5c7d-fc42-4cca-9d8e-0b554cb71342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9e400-8dbf-4a14-9a27-1e9534681b5f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d657a923-e123-42a9-a04f-b1387c0c1d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0e3bbd-e225-4d2e-89f1-39cfdf44ccfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fb8b37-664f-4f32-899c-ffae5b6ed7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67530d5f-8add-4065-b84a-ea919738ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2564d4ad-7eda-459e-a190-4132470a1eca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9247fc-8f03-44e9-9969-98a98ca8c4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df60a70f-9fc0-4904-96ee-691008bf7920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648593f-2a3e-4e83-a378-6f99bc185ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "721054db-545d-4361-b252-9c3c5b0b7f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53058072-e7d4-4aef-ae01-80fc745b04eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c7052d-3d40-427d-9b09-44721208446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff07d13f-095f-42af-b366-92674a1dc8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8720f5d4-1408-4568-8918-9702aa9bc043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09718937-4753-43d7-b8d2-506691c15091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c1fd4a-4ad5-42b5-841e-8686fc4800f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f743930-03a3-4cfc-9188-fd374c67b241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d04e42-c53f-47f7-963f-60712208e7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678168db-d3f0-4630-8ec6-caef01050dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e1fe06-475f-44ae-b187-e08af3735991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100deb81-9acf-4bf7-bdaf-a42dc30eabae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f18aa2-3765-4c2e-8e12-6da1060fe7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd705ab-561d-4a62-896a-5218408c196b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3933bb-657a-4565-95c8-9f33d4631cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d6fbbc-d21d-44f1-9bbd-6acfd5f758a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc807a7-35b3-4ad1-95f6-3afafa149cf0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68efe84b-df3b-463a-a228-c6a8c29250fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67c9e41-fd20-470e-8a3e-24c8f137d715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60313df8-0d8c-4bd6-8b1f-8c6918df8f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29cf68e3-393e-4ac8-9059-a92bd7c4715d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6481e7e4-e6de-455f-a8cd-1ef658fff4c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4491d3f-2e3e-4530-b4be-1973b676ff0a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb9529-3475-4492-a971-d8835daf0638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cd26ed-98ac-4f96-964c-a24489e0e521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c37d94-9a25-4a7a-877d-67bb62b36f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd8a9102-32d3-4619-8372-c17ea94c0498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee841a9-ade0-46d2-b163-1a9f169cdd90",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f18b3c1-de03-4c50-959a-ef9bed4f02fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f986d760-344b-47bd-ae51-c696bfdea487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e31187c-e935-48a6-8ce7-6616822e1718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76da2ff2-40f9-410c-994c-f263422dd17c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7c3076e-cf26-4e34-96ca-a1aeb9dd7876",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70157e57-1e9e-4679-a8f9-4624d79b8ce4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3db7b7c-a743-4b99-a242-233d426830ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14a67ae9-7d6c-4921-a834-2180f9c47839"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5f7970d-5dab-4267-a3e4-8c15a43fae3d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f358f17-c28e-4339-8836-6583896017b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6809236e-30bd-4859-9e52-65529275308b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be0a43c1-f3b7-494e-a8e1-6f8acd1e38a7"
            }
          }
        ]
      },
      {
        "id": "70044e21-09ea-45d7-88af-1e95e048848b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "68c8a60f-c7ef-42ad-b423-f620ac4d1843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cb566a7-53ae-4f39-bc20-c5d31648fc16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd1a124b-5996-4b30-aee2-145ebf9f524e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e25bd-7ab0-437e-a93f-a9f7b27c4e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25989822-ed31-4fc0-9353-58a028161d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2079cd00-0c68-4a34-831f-f4ebaef6b7f0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f935258e-bb52-4e6c-b859-c34f87872399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a287ff2-c7dd-4f75-8692-42c6abd31247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d329e49-30e5-4b59-9bbb-cbd1b9ac313e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e14568-c2b9-4044-87ea-f1d53e0ff8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffd9fdd-448f-457f-b210-006533d01a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc8c185-3a37-45ef-9d08-89fda435b8dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eceb318-bef7-4814-bee2-ef14bce009bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e25954-94b8-414e-a5bf-40c01dbca6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44c8af-89cd-4fc6-9cb9-affc1a521eb9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7ea2e6-5b88-4737-aba0-7923470d2c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fe9932-e7ac-4f6f-a45c-ce5201a6c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71a0372-9c28-46bf-bf3e-0c9f419a01de",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d9c712-8bb0-4126-b864-001b612698ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f1dff8-3bf1-4b8e-bd6f-4fdcfd1a2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73412eb3-0098-481a-9b8c-fbd750fdd63b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba50d63-d52f-4997-9fb0-f8dcf724fc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0aa0eaf-99f1-4e50-acf0-cc7f98620ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9678394-f59d-4729-9bfd-2a33fb78d65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9934c70c-5c0d-4735-9375-530fd68eeb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecf920c-93be-4f2a-848d-5bc5fbfa619b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e2d62d-7666-4a85-b8ef-71e8636b454b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b8409e-f263-405f-bc47-31cfcfdac603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e8611-cf76-44ef-b334-dbe76e8ca2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0ae9fb-ac48-4afd-bd73-99d5fc00eda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c643a57c-3ad2-4674-9ee9-496aaff0cc84",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1be0bf-dd30-4b78-b1cf-303a34ee1fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5224cb3f-d254-4120-8701-4c7d24b28e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c63b4-7b1c-4994-a938-fb2515fcddcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725e70c0-dab9-4369-8593-1b74309f35a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a15e90-d946-48f6-b896-8b8888e4aa66",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb7ca8d-f0cd-4838-8c65-413cf592abe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a299c41-f438-4282-978f-4ebc51eeaa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b425c45-842e-4f40-bb95-a25c51e17f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dc169a-8b93-49e6-bf53-a485164642a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139f4979-5dd7-48b5-936a-6c7f7bb330ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e0860-6f2a-4cdd-8ca5-91467212819e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff623c1-db78-4ba0-9311-e9681ee12282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bc936d-1073-409d-9d76-dab733b3860b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33cb5d5-b129-4f93-92c9-88d98dfc7fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5804d5-488b-47a7-9a7e-d467e8e2a2a2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6719924f-2d52-482f-97d8-f4f6b86f4fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba21ce9-e76a-459c-b34a-67fd5f573e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a826649f-5d89-4ac0-8477-fde6317c905e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166c0362-c800-48b0-bc0d-f8b8f6deef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb6000-9549-4f17-bc9f-f1d800883b5e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e902d45-9b1f-49e4-8c07-2dcad13b3ef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4a7ace-8876-4c30-9452-7afb90ad8e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272dbe1f-916b-466b-b5e9-0a726d2474d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63185263-1b42-4134-b440-5a59f4614b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fe738e-5200-4eef-a240-270781b0ac5e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdca094-6f35-4323-87a6-4f091de7eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf18e81-011e-4af4-ba26-3179ca8d9dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e35180b-b654-497e-bb37-c21a063580c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2614fff0-8823-43df-8351-734916b3b0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc578065-aa7e-4c19-9310-ddc592486a4c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e49f2e-9b70-418b-b096-77ea1af3b156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78743f01-7bef-4185-9d10-c9a4cc614de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c44305-e231-4ed8-ba02-9a634f392987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb110dc-2775-43af-b770-03a2bc19cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5db5c6-e1ae-422b-b0d4-689696cb56f1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661a4825-998a-4e94-a5a8-83d81d6c66a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05a1dac-491c-40db-9c00-0c20bddea20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22de1597-5023-4c0a-8098-917e268b43b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcd62be-6fd2-4c84-9fd5-f9d09a962234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaaadb0-60e3-40ea-8a05-23a36fceaba5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85202274-447c-4e2e-8e84-b8bef971273b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fdeded-c926-43df-a2db-b920b7b624c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f7b4a2-ed87-456b-bb9e-a10c70b2ad23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b907c5d9-bcb2-4275-b8d0-1c37adf2d967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4767f865-0de7-4105-a013-b7b388770915",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c928a2-cdbd-4efc-b18f-235344dcd863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c1a045-b68a-46dc-94eb-ec37579f4cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3351764-db21-42a2-be65-1a93b86c697d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991e9d77-22cd-4d05-94bd-b83a6e526d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff40ff0-d884-468f-b952-86314b428f92",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b2848-8aa2-4358-85ba-b8a23ca43259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e04b244-915c-4f37-800e-27b54442f992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9cdf18-516c-4060-ab1b-89c5ab77edff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f20eec-944c-49b1-9162-6dbae8dcbf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fafc4e-dd8a-4ca5-8bea-eb2c9151719b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb82cc5b-91bb-456f-8846-9ddfb1d87ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb4ae0e-1472-459f-a8e2-2c33118e8f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9943bd16-8f72-46bb-80b8-09450b0c2cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b71a99-f7b8-4459-8b9b-e6404a3cc45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdd715a-9552-49db-b954-5ac8bbd5c715",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26625503-f312-423f-a139-6c3cb64afe25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126cf19e-1353-4c1f-84b9-1a0f040c0090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce78896-c570-4ac5-89c4-3d253848027f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9f7f58-6ff3-4265-b349-5ba786d4397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e047d1-c13f-4462-88df-0b446d2321ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb891268-3d55-49d2-b7f0-5156d05c9876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cad013-ede1-4017-82fd-4d6088817f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec9e43d-b5a1-4985-86cd-e20dbf3914f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373b89d4-1a14-41cf-ad02-142fedb77f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b33198-ca9e-41e6-a123-09f86b509b39",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79f989c-6e7b-4680-997e-cf08beb38c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92326424-dc09-4c2a-a04e-aff6a7f66689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482f0d19-6293-4478-8ed6-603c4a8514c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffca79fd-bbea-4434-8099-1bbdc6cdd8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1b1253-1009-461a-839f-3019af562523",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708dbf57-ef80-4b3b-b802-0efe1c832136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0625ab4-9a4d-4a9d-a451-03010b5b9e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aec004-43f0-49a3-bec9-0a8185f60054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a6af2f-f4bc-4b01-bb90-7b8de54b6a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110e93a6-d1d9-41a4-9b9b-1ea39ac09aa3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed002fd-b46d-4217-8c42-db4870fe0edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88b69da-6032-4ff3-9da5-f5092fe29d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d561ab2-8d9b-4ff2-91f6-fe7f019905cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3033ffb0-6a70-43d0-a4a8-a44ad1dc1025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232d18ca-5ad6-4c7e-b72d-a11b2fa9b781",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7777bfb1-a3f8-4e36-8c81-56b3f8bea09c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f217f89-7f42-4528-82e8-aeea3173d11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcea3f53-1759-4492-9806-e46ec466845a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433d2930-afcc-4106-98ba-0cc6b41833d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dd4aea-79d4-4b4e-879c-81d08b4c35c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2486045c-3ccc-481a-afb7-3497e7136d09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8153bd8-ce09-4b7e-828c-455a190eb8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3857809-3013-4a25-a9f8-45bfed48bb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757b885e-3a12-4a9b-9546-558c1624df16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0103ed-a52e-466b-986b-1c493c6b977f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef32e6b-a4f2-4e6f-9793-8d871dbb60ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b0a0fc-af48-494c-90a2-61b018758a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2613527-bd90-4319-9174-f0012fd18209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb4d8f6-ad04-431d-bd40-e1215e365f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096c9d8a-cf40-4edc-8bd4-156fece0b2ad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505873b2-c5fc-4d84-8636-27a5251c818a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b679ca-8c9f-4111-a91e-b5b89310e597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64b253b-4899-4e4a-9598-188a711f9af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c281ebc-802a-42ff-8fdf-9377e6d961f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602976ae-2449-4763-af6d-dd2d6a9bf310",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90e019d-3a13-4588-b7d0-a2c45a500031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b47f4153-5549-49a0-8348-a4cadb46a356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a9581b-a4df-4aa4-95ea-c237c880885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72da4ee0-9de5-4f29-921e-4da096f4b739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf70c697-b028-485c-86b0-eaa2659bb9a3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb0b1dd-f976-44b7-b2ad-643e1bca791a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4ee603-ffa9-46aa-b1c4-e2aaf939502f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c7eda1-8e94-4f82-947c-607eddd5692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a017a1a-1ac4-4524-8126-9249b7595ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a98f901-55e2-4c5b-911d-63cb1fced858",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a816d5-0669-4e9a-8a03-1389dcc7b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1886b7e0-be33-4b4e-a970-d372d32ccd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e73f0f5-e1cb-4e3b-bafa-5ca1dc783dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafb1da6-31a4-484e-beab-31fe987595ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de898f8-8a92-4bd1-ad35-cc9b737bf82d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8610cf-b787-4827-b5de-71be75a3bd69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fafa5c0-8f3d-499f-90e4-8f7076703b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae8853d-325e-41ec-9f72-53dfacb75235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db4c623-a9a4-46bf-b96e-7f9eec130c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249fc6f6-4530-4927-b524-575a2ee23d70",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40a331a-3a07-4e4b-b996-c30045cbd497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af09b499-a0aa-4864-b185-11c26f9f57df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621ec0b-e4a6-4cf1-972f-de59821dd25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5fe5115-64c4-4f8d-b4d9-4806c66d185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b362816c-3e90-4803-96db-afef1c8914ad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901643f4-4f9b-4c34-b34c-ef451da93042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3ebeb4-1059-4e34-8f22-154c810e4639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd00fc-5079-4721-9ba1-0d6efaa07300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e47f912-cf9a-4c8a-a6b8-ace649b452de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237545e6-0feb-45e0-8c5a-2dcea0e19f84",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99dc936-968d-4865-9181-14bdc98a3939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f240d574-1678-4ef0-892f-280493330cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6777cf4-c0b7-4159-9bec-97504e22be03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae9355e-bc95-47b0-a90f-789b4bb3b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803978a8-8c7b-4566-9d0a-00bd2358b8b0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada769bd-887a-4eac-8494-e5e9142ccf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d497917-a459-4f61-bbab-c5e2480d0b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ee1665-5830-41d9-a3c7-9f919fc11ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2c1efd-143f-4f05-aa71-1c4ed884e2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d591f7-295b-403e-a79a-dc5d8ae8bb54",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e067ad2b-5cbc-4824-953e-209cb1a58e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e004a2-fc92-4b18-9cfc-5b04108388a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db047118-53b4-44c3-a03b-8839c1b0db60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17579bb9-6a06-47ed-ae59-4650b9c03a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fdb0a6-8c58-4b3d-8c48-55ccb7aa7f3c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dd81c1-6a7d-4d59-9774-444e62478cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc702e46-7115-459c-9cfd-1f6e506ad4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ebd0ae-d61b-4e57-bc0b-671d55283e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc719a3d-2bf4-4394-8ba9-f39538ef2be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8018b988-9701-46cf-8c0c-31da8d69d51e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f6a135-912a-4c09-90f2-ee626c877338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9623c4-448d-4326-8879-7ebc48821575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ae4f3f-4b31-4a85-99ba-dd53f3992197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7079e20d-5927-4ba0-9f86-af93684ddac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cda0b0-6df7-43f4-98e6-526374aa0ee9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f681db-f459-495a-8ccb-a80fe2ac7b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e43cf8-b44e-45e1-9fdb-6a61bb8c7670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c2058d-8754-4230-89e8-3a09521fbd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f15441-7c46-416b-b1b0-7663e529e3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db8817-f208-4d1b-8790-204fb723122d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fca12a-7833-4ad6-847d-9e9c41880be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03117c36-0b45-49ce-baf8-60f15359895c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c87b296-6d24-428d-8c7a-81d57c1be662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5101df24-cdef-4d5e-8dca-728995b3950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9158fff4-a4d3-4833-b272-93a6c28439ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d135c616-0b3f-4626-8275-1b4f333a5c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387f1d8a-9f2b-46dd-b34c-0fde3973faac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66339ada-2671-4df2-a1f1-ffadd0d0284b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71074933-0fa8-4bef-8678-846aaf98132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd2fd8e-15b9-4032-af7c-2b96f3fc5e2e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f4657a-eb50-4e2d-8fad-c5ac1b052dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1503f97-985b-41d2-8503-5c044a427bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2288ca9b-abca-4030-b167-57a9bcefa368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d311d9d-e461-4652-a1de-3f589abb52e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b44def-c1eb-4b40-9bfb-67b20936b678",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f561c4-40cd-4a12-b93d-3534a1aed285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30fbe61-2b1b-464e-acc6-f1a9069626c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c9d2ec-4f08-4ac7-aa83-cdbe67270435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a4117d-add5-4c1f-b03e-946af8613d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95152ab6-17e9-40a6-b344-5c5013b1c919",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a812e-e39c-4c05-8e23-47f598be506b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39381f30-eb9e-436e-8067-9996aebf5060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9f9901-d30c-4d67-900b-7c5acd335f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9a6bbb-5055-4656-a269-f13554b83ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a147f9-e35a-43bb-8c27-4ff41e937d14",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf6b1a6-f31a-4797-bf6f-92c19b586820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aa1bb6-d387-45d7-9732-e8f0ca70ee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0ac223-9b6c-462e-9c24-03d31670d5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0400c32f-d25c-42bc-84cd-697a6bb39e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13b8cc2-b973-4f65-9357-0869874a513b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6660235-c394-4aa6-9a23-f955ee2b0149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b643985d-26e6-45f0-8e6f-ec9f66734be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9229235-d864-4a99-aedb-2f3901ac5bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3894deff-9427-48aa-afba-f2b883d2d160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e9a36-b93f-40cc-9ad8-952353f34219",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d2d8e2-103c-4434-bb03-13844288c24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0347c2e6-9192-4866-8775-5c63fb2e9f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a0a5e6-307a-42bc-a569-36b10324c64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004a8d57-fdb8-4d88-9a9d-9384c471f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960effe7-1233-4247-a371-a6382de71a3f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2037013-a252-4fcf-bc15-569a6ac7b7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0c2148-b78c-43b1-9c6c-86622039b0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9319bde1-11a6-4435-8cb8-f8550906bd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb5746-0ea6-4fb0-a397-f50e4ee5186e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd730ab5-4f50-414f-85a8-28de9980971c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de68e0b8-311f-4d5d-a037-a7f18de175b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af7c94b-65e6-4d17-bd39-a7fccf131cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016d881a-3a57-4f08-9b1d-00f515ea8bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa8c955-d7b6-40c0-828c-991474cc2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe5412f-22fe-434f-8066-7a2e23cfad28",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df4ad09-92da-432f-b25c-968e52da6731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29122be-2b8e-4aff-8cd3-21a15e922f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54106c54-d8dc-4d28-81e8-8cc647f025a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5396475e-7b13-44ef-aa2f-0211f2f5cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b83a4ce-eb41-4204-8a25-85666d02700e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2047b6d5-6a82-4e41-b8ad-2273b7b77f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e787f4-d9a9-49d5-ac19-09d08874bd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55db9c42-7579-4540-914f-ce9e62f32c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98273242-b91e-47dd-8b04-3f9c90c5feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01d1b57-156b-4a7a-9514-05cabb51c5e0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba86d554-7799-44af-bd94-cbd6cd2870a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1788139e-3d35-4bc3-bb38-cdf29faacf32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4f1167-d7e7-4e14-abd1-91e75a09e501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bed5c4-795d-4177-ae60-c4a972d40301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2917a0c3-3776-4e95-a39f-fbf4bcf0b42e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6942fbd5-1282-4340-b436-d0850e1aa985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74342d9-92a8-44d5-8e35-a0ff018b7b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff9c14e-2e4d-498a-bb29-674f71f49fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2186928b-fb62-4306-bbbf-bdfdfe0932bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0d9ebd-763f-45d0-9dc6-7b0503b65547",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cc5ce3-41ea-4298-8884-e13754b08a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1409985-9fb6-401c-84b8-f1cfaafce3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a3a31-c13b-49d0-8a32-0e87a634bf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6a07da-97e5-46df-b2fa-0aec0b3a33f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5364492d-bd11-4e90-ac43-2534329ef329",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326b8f75-b03d-4d44-8242-f7ece9a647d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1350528-1fa6-4650-bd2d-f273c042fadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997f2368-5ca9-461b-9cca-a3f2519845cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfec0bd4-8353-4c44-889a-ec24dac81599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b68141-8184-4085-b8f7-8d86c12b5b53",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea59287-f677-4c0b-93f2-2c291f8d9d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b4d122-525f-4029-99e2-5c510c20b358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3df1769-4e68-4ced-84b3-6fff2cfd1549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553d2a50-5504-44fc-9601-abd3c634e8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7b693d-ac73-4829-8ec6-3824d1a78d8c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467072d3-90f8-4817-a076-390150ebda63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c34474-7afc-4fda-b080-12b5a776cf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5fd9fb-5400-4f98-bdba-c1b002081238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40c5e48-42e4-41a4-bcf3-9403134c82fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92048ef8-2e5a-4350-9df9-1f597780b93d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cac6f00-d3f9-4473-bde3-f4a97f488d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b17acfa-25cb-4243-be1f-4df3e5505c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219eb751-da27-41a1-b3c4-9f84bbe7169c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bfb8ab-9c5c-4281-b8d0-5936361e94be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaa8e3d-201c-4249-8e87-5f63fac8247a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18f9324-af91-489f-9585-f8acd746ac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29dbf02-6ab6-4e6f-bfee-bbf883eaae45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7626a96-9868-4d67-988c-1954fe7d2a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0b0666-5ab2-497f-a9f6-f7e1367edb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d4d383-3dc5-4f36-9e58-11b7a8c266b6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4069309-4f28-4113-8589-e8a570bda945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b5a566-5d6e-4ca3-8728-abef354cff76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd369f17-08d7-4ff8-9721-c301489e90c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c50de70-0a41-4fd6-8a16-9c911fdc630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe1897-6ac2-4b48-9195-57c30c5050b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b83bdc-1125-40e3-a5b1-6ac5252bbfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7535101-0100-4fa1-8cfa-e6b3a8ed5b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14afcb2-ee2f-46bd-b234-878f80a295e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea6b7d4-fd2f-4541-ae5d-2fc56143284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccf9ef3-8617-444f-a782-c6bb6b5663bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e7a639-bb94-444f-bd01-36d6730f1326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ceba3d-7047-4072-a913-6c573570b9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abc9e48-498b-4b41-b027-41bda8f10a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ce2f3b-ce2b-49d7-8613-b2355468f8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00e52a7-2974-42e5-9efe-579eebe998c1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923fb6be-f544-4781-93da-cd40c6e56f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d2fe4a-2720-4557-9e97-0ebcbc3005af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfef850e-e65b-4343-83f2-f37799a80b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fbdc49-1664-4cb4-b7f0-b8dbcbeb4e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93afc34-3863-4037-8d71-d62604aded24",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7806308-bc5c-4ec1-9b63-643be0fc81fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d55ad6-3101-4dd3-8b57-c5032dceae78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32b2aed-c270-42d6-bdfe-e68b94aba2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f4420a-293b-45c2-9bf3-4f29cce7d495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf6d398-5594-4315-babd-c0efd3a41d6d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcce9cb-6448-4c12-8ea1-57f579e11ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d8658f-18f1-4a25-b74d-b0bf833777e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f80d2c9-8116-43f0-bb9e-6ebf6272cebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3577528c-87ed-43f6-89d3-d5a8c6cb25f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6210b30-575e-4636-8a8b-d8608f3b693f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbb8652-474f-41a5-b7b6-80f1562ffe8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6684e1d-1bc7-4014-94a4-df05452aa198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba9e73-83a2-40d9-8b7e-f88b399dcb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db40132-669a-4576-bce3-46aacc5850ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d9e633-a84d-4567-a0ad-72312779b1f8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9825152-860a-467b-bf8f-14f327b80f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e1aff5-672e-4c99-b8f3-9adf1bfae4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51a5763-12a5-4a90-869a-a0ac59204bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606814eb-d589-4baf-941e-2385b0fff5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6c0d8d-88e2-4161-a9f4-94f0b63120d0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614d6a22-c5b3-4095-89f6-6c7a1d81a985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4c94d6-9a93-433b-94a6-3dc74eec6fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d4591-3fbf-4931-add5-31cf88450258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e22a95-00ed-4fc4-b779-ef06101eb43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a3441d-08ac-4309-b6b8-4a7bfe326e36",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73d63a3-1210-403d-9c41-22c6f74ddcb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ae5ac7-d30c-4b5e-803c-edccaa9082f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f106b318-b865-415c-a0d0-7a3d5644a022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768057e5-4252-43f4-a689-986ce995cf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9c4c17-d74b-4e0c-9bb6-02bab32f959d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874a5e95-674b-4fab-be12-c0cfaabeb053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e3f3606-7d43-435e-95e4-b92955b3cd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5aa12c-6502-417b-8eef-05c4efe4821e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22533e48-5b9a-4173-a21c-f81c0a033fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebc4fa7-b1a5-4f33-9aca-a411a75b56e1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9397d41f-2e9c-4198-88b8-35e6e59a7f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b3107e-8800-479e-bbfe-c59f57a35d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc2ffbe-89e0-45d7-a4cc-5d0511bf994a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154fa7b7-c5c8-43a0-ae7d-506e5c0ab99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1a594-efce-450c-bb0f-6baef64c96ed",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55c0068-611f-45b0-9ad4-c0121894958e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28baf8f4-5605-4d46-98ea-68307bc1cf8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460cd86c-f9af-4245-b091-e53ec6e17120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73080933-1f09-4267-a53f-9e31cea5af36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ccec16-0bfc-4a70-bb62-db02ce491d4a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f02e9f-ad22-49ac-bf54-1946a0fcba56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39706a16-6822-490c-ae09-24e65483399d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc745b7e-155e-458d-b25c-6adfe3783cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48f3810-0986-4633-bd76-26a364e4cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eee097a-20ac-4c69-bc52-8153cd7926cc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8992f0-7e49-40c7-a54c-9ce61bfff315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69c22c3-4ccc-423e-a479-d42f06085cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c3f0ed-16ae-4c1c-ba6f-dff7987b51b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794250cc-963f-4540-845d-9aabf7b6468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a57c3-8a36-4309-a5ce-6cdee3e1ad82",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c31a2-5d93-4484-9021-9e5a328f3ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2f5682-b203-4660-b1e7-da98cc0d48b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d696fd9-33eb-4b67-9ef6-fe5de8b06656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07134001-6b42-4db3-8fe8-0ef8da0dcf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66c8fa3-6628-4c42-98a8-cfa8d8c5666b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed804dd-1e1f-401e-ad36-063c59db4440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78c80ae-63e0-4e22-a814-e4a69429b21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3777eb-94ec-4a1a-866c-93f1fa1df663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fbe03b-5883-43e7-807a-024577491dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e94d472-5db7-4817-98c7-810e60764fb2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3365ce7e-31d2-4201-ae4c-4796e7852dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cefa274-5ce4-43b1-8b4c-5f1ff269863c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6fe9d9-1dda-47e0-8cb4-5af8f64cf7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd58ba4a-2fba-4ef5-806e-3fee1a86ecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b7b281-591a-4ded-931b-0a6c30836433",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2955b3af-9038-4aac-a714-33f7be38009f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5171b7-6130-4c57-a0e7-943867e93d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5253317-8bfa-4a7f-b743-870b5a534e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e250ad0e-b113-4f15-99fa-13a15b287c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef201e2e-2cbb-40de-8748-3527c8da684a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97e36ea-9aa5-4dc2-8b41-be4eb421e8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9e9e30-5038-40bc-aa79-0c6df9c41b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bfc1d-4caa-4302-893a-cd998541ddd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24b1509-4f79-48d6-a7a4-66569f66a44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c4e439-b026-4a14-9d60-b4bcd616bae1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dcb590-51b3-4a5b-a754-d2b320d9d49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e0fe78-f382-4a93-b84d-05bfe82f4b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d734fdd-c94c-4ba5-841a-d1d265b075b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7d61c8-9a69-4cdf-bb91-4e7a319e32b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ecf9b3-3703-4e93-ae9a-76bc392cc54d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a4d71e-be77-4596-87d0-caf51af9b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53630e8-d746-4a95-9ca5-18c74e75beea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424af3f-f5c5-4899-a95d-842e1d7e7820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbb3921-e5d0-434a-8c59-4f7df966a3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbe574f-2378-45e0-80a1-791f859c0efe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598c667d-7a9a-441c-bfd8-83faa8e8212e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae230eb-f470-4a52-9eca-0218601756ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03ad570-ab84-4b04-bad3-cc08472fd108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312c2815-42b1-4142-b6b4-9e9ebac376ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3664722-8239-438d-ba0c-fedd0ccc88ee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8636f3-e20c-4b33-891e-4f8c4a4fc83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17f2dda-a6d9-4e74-9675-6cd1906abf9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749b0600-b3a8-485b-980f-622c4ab0a94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b999b33d-4c3e-4747-81ef-341a79b72f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1044fe9c-c3e3-44c7-9197-c8be651f2287",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8bd92e-a359-4ea3-87a3-f563bf771d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d029225f-e3b0-4ad0-86ac-8ea6198e0464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9156f38-77ff-4cd8-be58-00624e817496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd08d2b-9d58-473b-a91d-5c673aaebeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dd27d6-b027-467e-b5a6-0aaa9aa0762f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0309c2-d6a2-47de-bf1f-7d77335ffe89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb80ec50-76b8-4652-bdff-905396f3e186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01684942-bbf3-4366-944f-e67c3a27e8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68633150-60df-4ed1-8fec-fc96e7cdfc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a67c52-b03a-4523-8d3e-8cdee40b86c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252756a4-b0fb-443b-b863-6cdafa70ad28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d01f77-dd12-427d-9661-eab9be40d8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e272015-76da-4560-b5a9-49484264183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbe7825-622c-4c54-9a68-9474846bebe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb1ec93-cca9-4db3-89bb-003dbdb30621",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147a4155-60a9-4473-81ee-da6bc8a5e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2612de9-e214-469d-b691-ddca346e3956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b662fab-82f2-4b0a-9a8c-9356c136df43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b57454-4cc5-4a7c-8726-5313de839929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021439e1-763a-4822-bd62-822802317b00",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0fd544-99f3-417c-8528-1390ce1494ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3aa529-638b-4e79-bfa9-6d084ca049e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb0ee0d-1c89-45f4-95c3-49b4d3d00905",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5482df0e-294e-4ff8-aa12-544951a7835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa2fc84-5240-4a64-b101-1f210d815e66",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0fe75a-5403-4cbe-82dd-69314f859c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fef5ed7-ed74-4e15-a35a-b18c4f22069a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded0dea9-698a-4f0a-980a-61117d3b450e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f027b6b-2412-4c3e-9ae1-d66175982fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9753d3c8-4a91-45f6-a65e-40ffd74e3168",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa0a12-2231-4b21-be56-dc0aa32a1469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d85a4a4-0d06-44bb-bd96-7c805f31c659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f1a4dc-7e89-4eb9-9874-e23fa26e5509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077ab80e-4012-4722-932b-f664364a4c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e032583-c994-4f55-a132-e66c4f48d479",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c391f8cf-789b-4ac3-a57d-f8ce6a245e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ac6747-316d-4aeb-9b86-a1ca74c200ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1730c514-b2f8-4a9f-b057-fe36a45f24e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8218191c-08fb-46b0-bf4b-dd7d36804faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23de1c3-7efe-428e-bf33-108e24cc218c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380ef48e-f3ff-4dc5-bb82-d5c53d3935b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7da49c-6ffe-49ec-92a8-beed05fbf905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa606a7e-eaef-4c8d-bf7f-cd839ea1e562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a192c5-0b26-429f-a0f7-89ed43cbc8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbb1d40-0920-42d7-baff-a54421fe12e8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebf2eda-eacd-4e8a-8c71-3d1d6d4313d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ffc8ae-7fe4-4e44-badc-fa9f09d7c2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271551af-4151-42ec-93fb-b1849e698be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d790fe-72f0-42b4-941a-510b016584e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb562da-0acb-4a99-be6c-de90d3be3ecf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df1ab4a-7c7c-48ea-9b7a-a4cf82276bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a4f3b6-feb1-4c09-bcf1-65b9d30ddbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e41e95-87a7-41e6-8a16-a91a681e3c61",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ea6f65-67f0-4065-a546-bf68c93d434a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d620283-becc-486c-b88a-ea53285fc218",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7a1910-90f5-4dad-9af8-956938a4c5f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156289db-973a-4d62-8d06-d86face92c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7030acc-e736-48b4-b9c1-eb82f7198f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cca1b63-cad9-4a84-b258-69d0fabd1fef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27c2be52-2e81-42e4-9117-d628911b018a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58879e84-ec24-4349-bdef-18111023bbb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "847bdd95-fd61-480a-9d60-bda9f93b9384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc7ec6dd-a101-4c3c-a07b-67ef057361a3"
                    }
                  }
                ]
              },
              {
                "id": "bd01f060-8c5f-4d86-9abb-1911189f4bae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "733a83a0-50f6-41a6-919e-ccbc419627ed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e5c782-b9ca-46bf-9069-5a3652d9ee11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0519e0ee-f6ca-460f-afb7-63e9ee59a0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0631f9d-5dab-43e0-814b-a95c00ec5b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be81b543-775a-49c7-ba39-afb7ad25498d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac25e4-b5a0-4661-90f6-6daf643784fc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6941831a-f097-4f62-aad4-4176c4a70cf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b7df7d8-3d6c-4d12-88ca-0abe9ab33c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5424cb62-1c2d-404d-9b2c-69a763894106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b03db4b7-7dfe-46a4-a367-24aef2d10412"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69039695-3b44-480e-b8fd-ecbeb6165b19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a00e38-906e-4a19-89d6-412c3c726499"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62f242ea-450f-42d1-a8db-c1c1c7e7d901",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4641324d-e0ba-414a-a7b1-5f7c81b42331"
                    }
                  }
                ]
              },
              {
                "id": "502fea3d-3abd-4b28-a01a-6ef65eb2d684",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b38702a2-f18d-48dd-bf32-5e58514771ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb0af64-4640-4d8e-a067-e0c9ed8072be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bcf136ce-496f-4c69-be61-88e2f36237d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b7bc9-ce75-4489-96a5-ed67ef52471c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad517875-0639-4028-815f-8ab6f0c7c4dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2276bf4-0975-4c7b-a872-fc2a4ebd81eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a154e23b-4e4a-4cc6-81b2-de52110b4f96",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d065886-7b4c-471b-af02-5974650d8ea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9864dd3-61ce-4783-bd5f-ca9fc9b40eb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2673344-936e-4434-9e89-5595aecf8e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08830531-f7a3-47d9-9369-c280aa635b44"
                    }
                  }
                ]
              },
              {
                "id": "5c6c3714-2a1f-4edd-bd57-2d15847a4c8d",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76bb9feb-9ee6-4bc6-9bc2-ad374d2b7c77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61b1e01c-e794-4e28-b107-4eca9a3afa65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbad139f-73a5-4dd9-a492-1c452f64f975",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5fda7c7c-11ba-4225-b842-3f7ebdc2cc41"
                    }
                  }
                ]
              },
              {
                "id": "20346cc2-5569-410f-a6a9-1d8765f9ea48",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "858f3b58-3970-4a44-bef0-4ecdf6f0a3bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bddd777-4dd9-4e36-bad5-4da618d9f58a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa26f42c-6281-4cfb-b462-42456b35e21d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a3762ae-17c9-4629-b174-ceacdba745fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c27bd50e-223d-4dfd-a0c3-f15b2df4f0be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "be874309-bb71-4051-8394-971b9f60ff1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3302231a-35c4-4be2-8fa2-12928c3812cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21684d75-0b7d-40bd-aa37-c9a9d3505b8e"
            }
          }
        ]
      },
      {
        "id": "df18e104-e74d-4de8-8c17-433846dba598",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c8675cb-a08a-42af-be0c-33547ddd94b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a6da85d-3c40-44cd-89c6-34455c4c6b8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b471003d-865f-4cd0-9622-b770aaa1600d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cbc1e2ae-578a-4ba2-9569-6a0ab24007c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f7d60a-fbb0-4bb4-b1af-5ca0037d5219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9e2132d-c9ef-40be-a3b6-72d29c493bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717623dc-3dbc-4bb9-b30a-a2157f32d2d8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01447b6-c3de-4563-ac60-358f36dea6d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "efabc64e-abe8-49f5-b1fc-34534e13d942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83742e6-db05-471f-a0a4-925d4e69c3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86c7039c-a8d6-4e39-80f6-531921834bf4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61094e3c-f32d-482e-aba0-36da81ebaaa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b692f098-9154-47da-9843-16c80003cb4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9545523-6596-4904-98f0-a5f238d8c6d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "811bcfc0-65fe-47c4-aa4d-aa0809aa4f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e854e9c-d21d-4cd5-8a87-9753994eb46d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bf63cd9e-b7cd-42c2-904c-cb060f8b041d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c5b957-35f6-447c-85b6-d6eb64784bf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "946f8fbd-720c-45ab-a484-aaec29d46e70"
            }
          }
        ]
      },
      {
        "id": "f2e61ab9-ac53-4205-9251-208795c91b18",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0172ee17-821b-45c9-89ab-8561aecfe17b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6faf1569-dd6e-4420-81ae-205f6a97b8a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe41781d-946e-4d1e-8a22-9a6006e65a55",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0ab413-93dd-4fb7-a97e-d909f4808280",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "edc1fa85-fc03-4467-a2a7-2d8299c7f36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae5bf94-55b3-4e5d-a337-27733632ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce559809-87fd-4b63-874f-bc19c3557845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca16b31-3b49-4c14-8d24-ff92071128c5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177a02c2-3971-441c-8d2e-0641aafb5a99",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9a27623d-645e-4c6b-a2b2-ca91ddb845e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d262bb0-077e-443e-a738-5fc830bb89bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bd40724-0f2c-4105-99ec-c15a266a2213"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15c88aaf-69b0-472e-acb6-7acd59782462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cb60cf2-2785-485e-90a8-b87d41e200a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bba360-ebf7-447d-9c99-27127aee18a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87e8c54a-3e8f-4d95-a48a-860313757524"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ee8e5d6-d9a3-4193-8b1c-a7f169a58861",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f5d10ccd-9cd2-4b61-ba0c-0c36ff03a6f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cae8b9-4689-4986-a6bd-6ecbd6e8bd0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af676b56-a7e3-4bae-9d50-5576a08fe7b0"
            }
          }
        ]
      },
      {
        "id": "2ff24065-f1eb-4675-8687-bb0fb4f8ceb2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "56ab7f48-d564-4f87-90fe-3796ebf1abf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b488fdf-c0d4-4594-b6a9-c2c7c31f066d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9064e975-194d-4c52-8bc4-7c22672e6c23",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb262ec-d486-4c26-afc1-0e064a50164d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "18114428-5c3f-4872-a724-0f2ea567163d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec946d80-fed7-471e-ae59-9a5b8fc887e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3158f04-1b14-431d-be97-ff0086ecfa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a2d111-5b5a-40b4-accf-2442941c0baf",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28485d4f-f150-4198-9ea1-c3ca1db5bc77",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "212eaa3a-c90d-4362-8821-884fb6707259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c95d1f-62a2-445d-b0b2-e670d4d0e419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "732992f4-0399-45f3-9e53-90db45463f63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79fed663-8d84-47e8-acbc-242925c43967",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1175680b-3373-47be-90dc-7d473b32e1fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a8d073f-a079-40f4-ba4e-d760a496d153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e0c37a5-1928-499c-a544-e0e3e49c548a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b7215d1-e090-46fa-98b4-a62daf58173f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "61e42148-5233-4292-845a-ea79c5bd5c49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3baba453-23ed-4aa9-a277-17d1a4f33ccb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "626b74c4-4ccc-4569-8ffc-8e7864e9d1df"
            }
          }
        ]
      },
      {
        "id": "819a4204-5be4-48f5-80c6-d3f897f6b8e1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "151459de-e71b-4054-b1e6-8f0e38161d8d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef2e56dc-8a73-4611-9e2f-f5d6586ef36b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4aa22965-cddf-47e1-bae6-e4e66eeba0b8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5030a7d-4cc1-4902-82e4-3b492e5c14d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ec1341b-8669-4cf9-bc82-f6858bf0d659",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 540.9003831417624,
      "responseMin": 7,
      "responseMax": 3833,
      "responseSd": 447.8340098979858,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669250684860,
      "completed": 1669250838464
    },
    "executions": [
      {
        "id": "5ca46f47-f191-4408-aa3d-f40924a9be32",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16c3067d-98d0-494d-9d04-143f2dccc1f9",
          "httpRequestId": "84c31222-1402-4aa9-9ff7-6998823f5f08"
        },
        "item": {
          "id": "5ca46f47-f191-4408-aa3d-f40924a9be32",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7b6c8c91-7b03-4b1f-9a70-8e38b041422c",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "ef3eee98-9e3d-471e-8d81-39d6fb9420f9",
        "cursor": {
          "ref": "bf362f0e-3443-4ff7-b722-ee5f488d5368",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e0b42aa9-512a-4ac6-b2d1-5bb619c3aa70"
        },
        "item": {
          "id": "ef3eee98-9e3d-471e-8d81-39d6fb9420f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "03f21d16-8fda-401d-8523-670c1292e90d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "994c61e1-866d-4245-bcbf-cfa3675536f7",
        "cursor": {
          "ref": "6f02dcc2-1e5a-43d5-ace0-8fb861f5baa0",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c4260e41-71c4-4044-bb93-dc31c261a46f"
        },
        "item": {
          "id": "994c61e1-866d-4245-bcbf-cfa3675536f7",
          "name": "did_json"
        },
        "response": {
          "id": "fcc30f77-3ae4-4eee-980b-07320d5e7196",
          "status": "OK",
          "code": 200,
          "responseTime": 923,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b975a8ac-70c3-4f79-9cb2-8c2feac3b637",
        "cursor": {
          "ref": "ee6155c5-431c-4a80-93a0-c01b1d64030e",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a03642a1-b432-4124-baff-dcebb585757f"
        },
        "item": {
          "id": "b975a8ac-70c3-4f79-9cb2-8c2feac3b637",
          "name": "did:invalid"
        },
        "response": {
          "id": "e3d643e9-c3ac-4541-aab1-7920fea25595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b975a8ac-70c3-4f79-9cb2-8c2feac3b637",
        "cursor": {
          "ref": "ee6155c5-431c-4a80-93a0-c01b1d64030e",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a03642a1-b432-4124-baff-dcebb585757f"
        },
        "item": {
          "id": "b975a8ac-70c3-4f79-9cb2-8c2feac3b637",
          "name": "did:invalid"
        },
        "response": {
          "id": "e3d643e9-c3ac-4541-aab1-7920fea25595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6754b191-df27-4ada-97de-eb17ae13d97f",
        "cursor": {
          "ref": "a851711f-e44b-4007-a682-75f45bd55a40",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "63c3d5fe-ab7e-47f3-8fbd-66698c81e753"
        },
        "item": {
          "id": "6754b191-df27-4ada-97de-eb17ae13d97f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5243f357-9ec0-45b6-aabc-01743e784c72",
          "status": "Not Found",
          "code": 404,
          "responseTime": 648,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3e8ee7-99f8-4eae-9c2a-1d5cecbd2e0c",
        "cursor": {
          "ref": "ebc6700d-67e7-44a9-93a2-8a22a0fdc182",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "89a7a2bb-2184-44be-9922-4b2cbd172dcd"
        },
        "item": {
          "id": "6b3e8ee7-99f8-4eae-9c2a-1d5cecbd2e0c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ee584701-1eb7-4ad3-9838-15ce63812860",
          "status": "Not Found",
          "code": 404,
          "responseTime": 557,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f27305-d9a1-4762-b5ed-e7b3dc986096",
        "cursor": {
          "ref": "90db84fb-3bb8-4a75-84bb-1ff39edf6abe",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2de95727-3e72-4e08-a314-248263c90f82"
        },
        "item": {
          "id": "95f27305-d9a1-4762-b5ed-e7b3dc986096",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4786c437-8578-4623-9a2d-ad6dba343535",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d14a01-372a-4554-a43f-05a053bfd056",
        "cursor": {
          "ref": "f1a588ef-d08a-4d47-9541-e7713493020e",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed5f4115-8568-4ff5-bbcf-2dad54e227c6"
        },
        "item": {
          "id": "b3d14a01-372a-4554-a43f-05a053bfd056",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "728f4d25-6ec9-4050-ab91-10b84cf86237",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d14a01-372a-4554-a43f-05a053bfd056",
        "cursor": {
          "ref": "f1a588ef-d08a-4d47-9541-e7713493020e",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed5f4115-8568-4ff5-bbcf-2dad54e227c6"
        },
        "item": {
          "id": "b3d14a01-372a-4554-a43f-05a053bfd056",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "728f4d25-6ec9-4050-ab91-10b84cf86237",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bbc1d9-9e61-4981-a5d6-330950da9dad",
        "cursor": {
          "ref": "71075f7a-87d5-4d39-afc9-324a4fa3aed3",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c311039a-fc98-4ead-b7fe-e1b1f89ed748"
        },
        "item": {
          "id": "e9bbc1d9-9e61-4981-a5d6-330950da9dad",
          "name": "identifiers"
        },
        "response": {
          "id": "3288cb3d-77b9-4d71-9bcd-4d15c4b2999c",
          "status": "OK",
          "code": 200,
          "responseTime": 891,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584bc709-c223-4adb-b85e-753675305127",
        "cursor": {
          "ref": "6d7d5fc0-9051-40dc-8589-a79f9eae0a77",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "addcc9d2-e218-4001-aa25-1377d3bb9351"
        },
        "item": {
          "id": "584bc709-c223-4adb-b85e-753675305127",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "18ee7afd-5ec9-431d-ab02-a7bd9c640692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584bc709-c223-4adb-b85e-753675305127",
        "cursor": {
          "ref": "6d7d5fc0-9051-40dc-8589-a79f9eae0a77",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "addcc9d2-e218-4001-aa25-1377d3bb9351"
        },
        "item": {
          "id": "584bc709-c223-4adb-b85e-753675305127",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "18ee7afd-5ec9-431d-ab02-a7bd9c640692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d313ece-25e6-46ab-b11b-dfdb736c0f7e",
        "cursor": {
          "ref": "15e87a7f-e013-4fcc-ba00-9a9bd93058ab",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "627d2381-e8bc-4963-bea8-eebb11ceb226"
        },
        "item": {
          "id": "7d313ece-25e6-46ab-b11b-dfdb736c0f7e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f0df6b79-496e-4271-bc06-84c94513d39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea675eb-2bcc-4995-a579-4a97c6cc68a7",
        "cursor": {
          "ref": "f070171e-e71a-41d4-aebc-a21d8578f846",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1d359e31-bbe9-494c-b481-ea2ae1a555bb"
        },
        "item": {
          "id": "9ea675eb-2bcc-4995-a579-4a97c6cc68a7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99326f52-17d0-46bf-8176-c9035dc3744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5f3c58-a2a6-436a-835c-f4a2cf53ae34",
        "cursor": {
          "ref": "34f30581-a726-43ad-8cdf-fa6284dcee0e",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "696152e1-d916-4f9d-8985-728ae4cd5d5d"
        },
        "item": {
          "id": "ea5f3c58-a2a6-436a-835c-f4a2cf53ae34",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "beb44480-870a-44f6-9fe9-e0c64fd23cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d566d87-4e63-47a3-9eb1-cf9ff8f3ed97",
        "cursor": {
          "ref": "73a74b36-bd11-4fda-8091-d066ad5cc567",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3d875459-d2ba-42ae-acfb-e8097c8c37f6"
        },
        "item": {
          "id": "4d566d87-4e63-47a3-9eb1-cf9ff8f3ed97",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5fe55a6f-759b-44d5-82fc-e05b55112b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bd89aa-7d50-4384-bdec-255c487353ed",
        "cursor": {
          "ref": "66a3ae23-9638-4948-a1ab-61ddbd138507",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b8271053-5330-4cab-89f1-0e492fa19f6f"
        },
        "item": {
          "id": "85bd89aa-7d50-4384-bdec-255c487353ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b72e5436-2276-47d4-a5b7-62d711a1d945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8722b69-896e-45f6-9648-f18741ea1092",
        "cursor": {
          "ref": "eb00f436-fe9f-4725-85a5-afdfb9ca74a0",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "464e9af0-2c39-4e63-a3fc-89342a5d3286"
        },
        "item": {
          "id": "a8722b69-896e-45f6-9648-f18741ea1092",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "faa3a76a-19e1-41b2-b11f-2fca2561af9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db636606-b842-4b7f-b7ce-ccfbef756c9b",
        "cursor": {
          "ref": "41e2d7ad-b8e6-4b69-828d-3fb6fe1a2763",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ce68896c-c229-4ff8-bd1d-3b77d6afb325"
        },
        "item": {
          "id": "db636606-b842-4b7f-b7ce-ccfbef756c9b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ec9ddd69-1d1b-451c-b725-6e6f7032e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ea4d34-bdb6-44a8-b902-6df3f0ae5386",
        "cursor": {
          "ref": "dabe64ac-a0fe-4775-9a3f-6b93b7ffe88f",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fed5d858-5acd-48ec-ab41-8df76cad3470"
        },
        "item": {
          "id": "a4ea4d34-bdb6-44a8-b902-6df3f0ae5386",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "22c71cb7-bb29-4a35-bd12-cbf5db3e195d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6ac55-673b-439d-9a23-7998c4fc3930",
        "cursor": {
          "ref": "71c2a778-f398-45a1-bb48-5d7cffaf8d1e",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b550a379-3dd2-4d40-ab1f-e9342a0e458e"
        },
        "item": {
          "id": "18a6ac55-673b-439d-9a23-7998c4fc3930",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "301c473f-7c36-4a69-b579-34b53f00f384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502d2f9d-8d9c-4500-a53c-5c619b00e7fb",
        "cursor": {
          "ref": "f98674b1-f0ce-475d-ba16-17957d27a08a",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bf6bb184-1b19-49c6-b603-3539a9bf90f3"
        },
        "item": {
          "id": "502d2f9d-8d9c-4500-a53c-5c619b00e7fb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "34c18a14-1992-4f0e-82ad-ebfbef189201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea90fc1-c217-408b-9aed-626f7d427b4e",
        "cursor": {
          "ref": "97b5ce48-ee36-4b89-8235-aff1326da001",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a4c51bfe-37e2-4e58-a7ad-7e0f8f505f81"
        },
        "item": {
          "id": "0ea90fc1-c217-408b-9aed-626f7d427b4e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4afa8c36-5b28-44ad-88c5-6e62fcc3361e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b171e4c-0c93-4d6d-af1a-0b688e796bb9",
        "cursor": {
          "ref": "d488c24a-4b7a-48e4-8d43-394eb959a720",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "47ee4833-429a-45ec-b33a-083c2b97162a"
        },
        "item": {
          "id": "0b171e4c-0c93-4d6d-af1a-0b688e796bb9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a769f76a-8f28-4556-ab6d-ad841845e7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cae0056-2086-4708-8842-7aef55d07d29",
        "cursor": {
          "ref": "d71fcab1-fcdb-4fbb-b936-3d39dfa40414",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "00202103-be9a-4999-833d-b5582bc3da69"
        },
        "item": {
          "id": "3cae0056-2086-4708-8842-7aef55d07d29",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "626af62c-b222-4e42-ba38-ec1578113d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014e26c7-c09d-4d4d-8980-9ae44a698fc0",
        "cursor": {
          "ref": "4f78bb64-2331-4bd0-afbb-3f240e2b61de",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d714e2df-da09-4c86-9ddc-1bf7a026d58b"
        },
        "item": {
          "id": "014e26c7-c09d-4d4d-8980-9ae44a698fc0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2efc8977-13e9-4e24-b6d7-e862298fc1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c81d6d1-5e22-4de0-8f60-cb524d0d9d66",
        "cursor": {
          "ref": "e5b417fa-48bf-452a-b66c-d3f70dfe00b3",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8b082b43-81da-45f7-b226-737d21acf44f"
        },
        "item": {
          "id": "9c81d6d1-5e22-4de0-8f60-cb524d0d9d66",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5df18ae8-640d-4495-ba57-4f1b2f164417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f542a1b0-c32f-46f3-b11a-431a9b9afb26",
        "cursor": {
          "ref": "3a495f33-b754-4617-a072-be102aecb03e",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "57e5b492-eba0-44f4-83f1-d2ca574b0be3"
        },
        "item": {
          "id": "f542a1b0-c32f-46f3-b11a-431a9b9afb26",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8bac597f-0933-4152-a231-e6d0b34cf64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69a8cc-8058-432a-a5c1-c58710929e40",
        "cursor": {
          "ref": "42a2c5c3-adbe-43b4-a49e-a5cc05e627bf",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6da342a8-b684-4952-b6c7-7c026e72f36d"
        },
        "item": {
          "id": "1d69a8cc-8058-432a-a5c1-c58710929e40",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "17307432-2f45-42c4-b89f-a9aa42762bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e084829c-5ca6-4ffd-9b02-2cf270211689",
        "cursor": {
          "ref": "548e03f2-b43f-4154-907b-b02a3b5a317d",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d54cc8c6-067d-4eee-aae6-859608f7b666"
        },
        "item": {
          "id": "e084829c-5ca6-4ffd-9b02-2cf270211689",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "efcc62c7-b244-4ead-bde2-986e2a46f047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc589501-0f92-4da9-bfc8-f0cf74002df6",
        "cursor": {
          "ref": "25479df3-eb27-4b9e-96ef-941bbc2a3ec7",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "58c59555-63af-49aa-a325-e569d1ba95e1"
        },
        "item": {
          "id": "bc589501-0f92-4da9-bfc8-f0cf74002df6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8047b271-1867-414d-86f0-eb8620246c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea09763-66df-4c4e-8605-2a8eb5674e76",
        "cursor": {
          "ref": "5b32adf7-b368-4c38-85dc-5d872cf9ecf9",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87f2b18e-40e7-4fed-aae2-ee34335f1bf5"
        },
        "item": {
          "id": "3ea09763-66df-4c4e-8605-2a8eb5674e76",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "20b7a353-f6ba-4a0a-858a-42c37d370b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb7d045-016f-4669-9be4-6e1542d5b666",
        "cursor": {
          "ref": "c6d0379c-d06b-4575-a29f-958f31d530e8",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "23a00a3d-9a76-4cd5-9048-d3bbc3cebc76"
        },
        "item": {
          "id": "fcb7d045-016f-4669-9be4-6e1542d5b666",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9ba7e66-89bc-46ca-93d9-bc73d419188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bead7db7-5df1-4b77-b8fe-f3a25309e2f8",
        "cursor": {
          "ref": "7e45a160-72df-48cb-9916-9f94dbcd4bb3",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8a283621-0e4c-4f18-b397-5ae36b971470"
        },
        "item": {
          "id": "bead7db7-5df1-4b77-b8fe-f3a25309e2f8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "40b2fd64-cfb6-4764-86de-2a9bda699b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a13a883-0764-488d-bb12-8ba98ca4507b",
        "cursor": {
          "ref": "ef77165b-ffc9-4da9-9a18-7e357d88b1cf",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dc93ddda-0079-4a69-8b4e-34cf9d6f2fe3"
        },
        "item": {
          "id": "8a13a883-0764-488d-bb12-8ba98ca4507b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd7c0ab6-9e67-4485-bb38-a4b09f2cab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927660b4-ef7f-4889-a8b5-fe596578d325",
        "cursor": {
          "ref": "0b813f83-0a6b-4ee3-9e12-b8e90c9623c0",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1454365-44b7-42ba-9323-4f2641e5f1b2"
        },
        "item": {
          "id": "927660b4-ef7f-4889-a8b5-fe596578d325",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2d239403-a964-41a3-8715-d8cb28ec9c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ebad58-9d5a-43f0-8ec0-6ec156785ebe",
        "cursor": {
          "ref": "5ed7d896-3c1a-4e21-bd61-cc836f7a81d3",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "202d7bcb-7d15-41fb-ad66-041999e0db64"
        },
        "item": {
          "id": "41ebad58-9d5a-43f0-8ec0-6ec156785ebe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "44a034d7-aa11-4646-a7bc-d86c73168177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898c3a17-9f05-4245-8143-deec4daf07bf",
        "cursor": {
          "ref": "2f369a6b-d0f2-4fde-8ed9-f71a3545c97b",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e9a11cbe-52fa-407f-9a94-cf5413abd6f5"
        },
        "item": {
          "id": "898c3a17-9f05-4245-8143-deec4daf07bf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "85924a35-5f0a-4c81-853b-48169cb5a847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6532699d-7deb-4c1c-ad43-d21492c232fd",
        "cursor": {
          "ref": "7b6d9f91-152e-42c0-8058-16c15696bfaf",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1152ea8b-ec93-4a90-9dc6-6c9ac8ddd3bf"
        },
        "item": {
          "id": "6532699d-7deb-4c1c-ad43-d21492c232fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d334eb23-9b6a-4f28-aa81-bda8b4fc4077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2a4f4f-ebff-45d5-8aee-c388d54d4ff6",
        "cursor": {
          "ref": "07fc11d1-3ddc-407a-8f1a-adfcc47b097d",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cae81362-2325-403c-bd78-1a6e9512e44f"
        },
        "item": {
          "id": "7f2a4f4f-ebff-45d5-8aee-c388d54d4ff6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24d838de-e9ab-4e1d-a0fe-b89ab012d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a83e27-9d7f-4035-8cc5-e4c13698e339",
        "cursor": {
          "ref": "0adbfe4f-c3c7-4c49-b972-82dcb5212a1b",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f0077080-b58e-4b3c-932f-c93499b910cc"
        },
        "item": {
          "id": "38a83e27-9d7f-4035-8cc5-e4c13698e339",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "315c938e-4437-4aee-b989-bf381175c1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95121599-6a40-46ca-bc16-95d524a68024",
        "cursor": {
          "ref": "e3b522d8-55e0-44c6-a24d-e6014934cbe9",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5d4ac75f-7fb7-4546-bbb5-f7f011ae2a50"
        },
        "item": {
          "id": "95121599-6a40-46ca-bc16-95d524a68024",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "948a8422-e6dc-4376-82db-41fd2eca92b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8b165-c0d2-40f1-b9c7-c7043ae55fd2",
        "cursor": {
          "ref": "71e17cc5-47dd-49a8-914d-fb242fa0bfea",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8a45987a-2b8f-42ae-aa76-c5844decb306"
        },
        "item": {
          "id": "42d8b165-c0d2-40f1-b9c7-c7043ae55fd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e58010cb-6bf2-443e-a015-1ad132c39b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af407235-131d-4cb3-bc25-7b4d4ce111c7",
        "cursor": {
          "ref": "ee08d73a-298d-48b9-b0de-2efea7244bbd",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "72abfdba-619a-43d6-9ac4-6a20e11ed29c"
        },
        "item": {
          "id": "af407235-131d-4cb3-bc25-7b4d4ce111c7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fedf6335-7d51-4f30-9fcb-14749b82b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f4e4d7-8ef6-4534-a2c1-d50eb76e023c",
        "cursor": {
          "ref": "a5759a31-ab59-443c-9431-e856a60edfd2",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2c7d74fa-8a1b-49e5-af23-507b3f39738b"
        },
        "item": {
          "id": "86f4e4d7-8ef6-4534-a2c1-d50eb76e023c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "53261a52-2473-4296-a818-37543829bc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d8a2a-fe20-45b4-b5c2-0f0bd7884cf6",
        "cursor": {
          "ref": "9f6eb20e-ba6b-429d-9e30-ff5ea366279d",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6b04867b-6b36-419e-99fc-2d7323d5a5d1"
        },
        "item": {
          "id": "814d8a2a-fe20-45b4-b5c2-0f0bd7884cf6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5b58b9f5-0f81-49b5-a301-877c34f5a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109eabde-c97d-4e51-935c-f978f38afa7c",
        "cursor": {
          "ref": "4532f0fc-e815-4006-b326-62b24be0c555",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "08a70082-d313-43e1-8e4e-d4d715acaee5"
        },
        "item": {
          "id": "109eabde-c97d-4e51-935c-f978f38afa7c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ef97d6aa-20e1-4f06-91b2-c752b0c7b346",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 704,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df79f1-30a0-47cc-9d01-b9f2c9cf05a7",
        "cursor": {
          "ref": "9598f8cd-c2f7-4b5a-9e54-6b205225ebaa",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0244cf26-b8f4-4097-8aa5-84a3c5cda417"
        },
        "item": {
          "id": "31df79f1-30a0-47cc-9d01-b9f2c9cf05a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ed06dcf8-8b3e-4555-866d-e4631c520367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be649f9-c20a-4e2e-ade4-5b61ec5496f8",
        "cursor": {
          "ref": "234d0219-0858-4237-b8c7-49b873712c0d",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d01c42d8-b3e7-4b86-ab2e-4f3a8944c49c"
        },
        "item": {
          "id": "6be649f9-c20a-4e2e-ade4-5b61ec5496f8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "55edc494-62c6-46e7-aed0-4e19526acdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da06e5e9-f654-4160-bca6-c8f802be3389",
        "cursor": {
          "ref": "dba0ad36-887d-476b-a8dc-23b46e813564",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d05e14cd-5a48-497d-b810-e3bb33140e28"
        },
        "item": {
          "id": "da06e5e9-f654-4160-bca6-c8f802be3389",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "02009300-04db-45dc-8483-1377d92d37da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37968c28-f554-4e09-9a56-fc1db07dc8be",
        "cursor": {
          "ref": "d2ed6758-1e93-4fbe-9a97-563faa60a0f9",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6c8bcf99-5b29-4194-9f5d-ff9f27df8131"
        },
        "item": {
          "id": "37968c28-f554-4e09-9a56-fc1db07dc8be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "afea9b6d-64f3-44fe-8e8e-b5c7bd934640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7caca09-576d-48fa-a61f-3a633fd5dd3d",
        "cursor": {
          "ref": "ebf27ab0-a7a2-42cc-9b5c-2e5abb7c6373",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2fddbc6f-25bf-48ca-a698-e45c5a82497e"
        },
        "item": {
          "id": "f7caca09-576d-48fa-a61f-3a633fd5dd3d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0e77339-85a2-47da-ad7b-94dfb63d2426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594feaad-8713-4175-984a-b41ba98b6c3d",
        "cursor": {
          "ref": "85c3ea50-475a-495b-9a95-d42e9a606591",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "27fa6daf-ed04-49f3-a97a-4c35e4f1e5db"
        },
        "item": {
          "id": "594feaad-8713-4175-984a-b41ba98b6c3d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1a34f4a-e755-4363-aa14-53a22781fb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a314041-3676-4440-b374-9403407fb31a",
        "cursor": {
          "ref": "5613c88f-fab6-4337-877e-4a2de861d6eb",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "680e7fbf-c393-46bc-baec-245921d31f33"
        },
        "item": {
          "id": "2a314041-3676-4440-b374-9403407fb31a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2f799a5e-1640-4543-ba80-4872f44b7497",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 655,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea4655-1a14-471c-b627-b0c1fb668d13",
        "cursor": {
          "ref": "8f0552b1-5bf6-4577-8b94-7276dec1c809",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "26ce9a40-c765-4cc5-b230-d32b482ad2ae"
        },
        "item": {
          "id": "eaea4655-1a14-471c-b627-b0c1fb668d13",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "695a1021-378e-4b6a-9cdc-51faf3f6f45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b7a0df-4cec-4334-a12d-cdf6b504dc7c",
        "cursor": {
          "ref": "2d8a1585-c17c-4a1c-95da-054a8b19c9b6",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b6dfac33-ae6c-499a-a0f4-810a34771ab7"
        },
        "item": {
          "id": "f6b7a0df-4cec-4334-a12d-cdf6b504dc7c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a2073bac-a2df-43be-9701-e8512bdc0cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf1a615-71a0-4048-9279-4902fb1932b6",
        "cursor": {
          "ref": "383fcfc5-b7c6-4ea8-9fc5-9ddafd3c1dba",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c210f101-58a9-43f5-bf6d-74e1782c4935"
        },
        "item": {
          "id": "8bf1a615-71a0-4048-9279-4902fb1932b6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "71b2d45e-5a90-46c2-aaa1-1490e3f7d1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d7361-daa8-4ab7-97b4-9a6805080bb7",
        "cursor": {
          "ref": "fa0e99f2-fd15-45b6-a91d-b627cb057cc1",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0868fb71-eaee-4ac6-ad2d-8edd0c4d0a8c"
        },
        "item": {
          "id": "748d7361-daa8-4ab7-97b4-9a6805080bb7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e7a8794c-1b83-44e9-9736-d1680149dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960d396b-3918-432a-86b4-955c60e06b72",
        "cursor": {
          "ref": "9094817e-4d45-462b-9fbc-ae37861f316d",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "41d9d1af-9a42-4a1e-a678-f0dddb75bc03"
        },
        "item": {
          "id": "960d396b-3918-432a-86b4-955c60e06b72",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fb7bb5ee-f242-4b80-95b1-db9d1b0748b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed23ad9-5759-4eff-acc0-e37fe035c912",
        "cursor": {
          "ref": "211f66c5-26bd-49fe-9227-1599640cc48f",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6646a255-83ab-4117-89ad-2fa41c1f8903"
        },
        "item": {
          "id": "6ed23ad9-5759-4eff-acc0-e37fe035c912",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "11a86b49-ac4d-4465-8cdb-032f408e158a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ff73f-acea-4f04-83b2-ea3b8672b1f3",
        "cursor": {
          "ref": "8436fd16-f9aa-463b-8ae1-3f381d4d3581",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5dece758-c183-487c-a64c-2c629f011a47"
        },
        "item": {
          "id": "152ff73f-acea-4f04-83b2-ea3b8672b1f3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "42268716-4db3-4711-9d59-a0443da3a16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0883408d-eed7-4749-91c1-6a0db0fa36c1",
        "cursor": {
          "ref": "fb3bbdc4-ab4e-4625-b04d-c6fa2a77ae89",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d97e32c2-2f11-4cd3-a4a4-5898e185ba11"
        },
        "item": {
          "id": "0883408d-eed7-4749-91c1-6a0db0fa36c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b41dc07-b5b3-449f-acfa-7beb7fc25439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3976f6dd-e0b7-4168-a566-ba878d6cac43",
        "cursor": {
          "ref": "4d5c7e82-0a3c-49c2-88e8-663b8831b222",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aa0fad16-329d-40b3-b4d1-ab4dde718b73"
        },
        "item": {
          "id": "3976f6dd-e0b7-4168-a566-ba878d6cac43",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d715b17-5459-482b-b381-967472351433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e560e836-be9c-43e7-b3df-b6fd61c66fab",
        "cursor": {
          "ref": "2e9fbda9-1aa5-4fd2-af37-7aba139064e2",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a38a6601-d278-4a2a-ba06-671da3718238"
        },
        "item": {
          "id": "e560e836-be9c-43e7-b3df-b6fd61c66fab",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7f4fb5a5-92e8-47a3-bc19-86b05194fbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae72dc0-024b-4dc0-bea6-8118a9d1cc52",
        "cursor": {
          "ref": "7abd395e-0712-4452-be2d-6db056c2db7d",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9fa53ff3-57d0-4a81-b540-e6a71393d677"
        },
        "item": {
          "id": "8ae72dc0-024b-4dc0-bea6-8118a9d1cc52",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61e47944-0972-4252-89a3-b577035a86d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1003dd-4994-4b7f-9979-9fa6e9f81ce6",
        "cursor": {
          "ref": "2d7a9493-ecbb-44b6-be85-29745d0539bb",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "211961d9-f0b3-4f01-a59e-d16da9a90dda"
        },
        "item": {
          "id": "ed1003dd-4994-4b7f-9979-9fa6e9f81ce6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93c91e13-9359-4670-a49c-9b2d1ba50e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09069bf3-0cea-43df-88f1-0a568f2eb7b9",
        "cursor": {
          "ref": "0b410533-66bf-4662-8c6d-e10ae12fb345",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "25946055-297d-44c8-93f1-79df7e940546"
        },
        "item": {
          "id": "09069bf3-0cea-43df-88f1-0a568f2eb7b9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3d38c1c1-0ebb-4f73-87ce-02c0f73968f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fafd30f-dc1d-455a-86a2-01ca981edd43",
        "cursor": {
          "ref": "78d85632-2cd6-480b-acfb-244810a8ccfc",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a3d30b46-75ae-4d8e-bad4-b656420d04cc"
        },
        "item": {
          "id": "1fafd30f-dc1d-455a-86a2-01ca981edd43",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "89802326-dc5b-4be7-9ea8-869bf592a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208f54ff-d491-4f79-a604-21142c175cc8",
        "cursor": {
          "ref": "2bdc94f5-fc8b-4d64-baf5-d8b67b98d588",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e558b3fd-83ce-42e9-bab2-7a4a8f8ed0ba"
        },
        "item": {
          "id": "208f54ff-d491-4f79-a604-21142c175cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b4e7b1a0-eccd-4ff6-96eb-783dd0c9d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b906df1-4b15-4012-bb38-e11670477f8c",
        "cursor": {
          "ref": "f3c8f4d5-7769-4983-a412-33759bd41404",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d567bded-47ae-4577-9c1b-e1fb8271f93f"
        },
        "item": {
          "id": "1b906df1-4b15-4012-bb38-e11670477f8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cdba6c6c-7f5b-441b-a5be-6b19f5d19f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de176c-74d1-4ec6-bbcf-2016859eb63a",
        "cursor": {
          "ref": "e0564cb4-288c-4804-91e7-70602c342929",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8fce64a5-c536-49a6-bde7-957ea286b66b"
        },
        "item": {
          "id": "57de176c-74d1-4ec6-bbcf-2016859eb63a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "be05cfdf-6fff-45b6-82be-2af15958602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5c7926-66a1-4a78-8238-bf126567d6ad",
        "cursor": {
          "ref": "a1073552-495e-47d8-9a26-1fefb9f40173",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b691495d-4f12-472e-96ba-466f48d89fbe"
        },
        "item": {
          "id": "2d5c7926-66a1-4a78-8238-bf126567d6ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4278d70b-3a91-4a7e-a5fd-a11d0c8d6bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0291a030-87ca-45b5-a5ee-54ed0764cb61",
        "cursor": {
          "ref": "bd789d13-a341-409d-952c-9cea1fe2513e",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e7244a09-e885-48cd-9c84-b809663cf11f"
        },
        "item": {
          "id": "0291a030-87ca-45b5-a5ee-54ed0764cb61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ae818d9-cbcf-4c3b-b904-da73410cfeef",
          "status": "Created",
          "code": 201,
          "responseTime": 2460,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "66c590e6-2d2b-4866-93e5-e4006461fd74",
        "cursor": {
          "ref": "0e5ae64e-7476-4e0c-b989-5852f4b88576",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "009385c2-f7e9-415c-97e3-699aedc8e19d"
        },
        "item": {
          "id": "66c590e6-2d2b-4866-93e5-e4006461fd74",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "80de6782-d624-4a84-bc82-f2e2b0e11b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae47aef-6ef9-4951-8018-69e0ca773cbe",
        "cursor": {
          "ref": "f142220c-4d54-4487-bd43-87696bd644b4",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dda39d7e-522e-45f6-b365-63d525fafd85"
        },
        "item": {
          "id": "eae47aef-6ef9-4951-8018-69e0ca773cbe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "829dd46b-4e02-4327-836b-d2782d483ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094ae2f-f068-4411-9b36-8e448bc55cc5",
        "cursor": {
          "ref": "8f71b6aa-2a1c-4833-811e-cdf4a3d3410c",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c5b8b97a-2d8f-4e3a-8683-41ee23000655"
        },
        "item": {
          "id": "a094ae2f-f068-4411-9b36-8e448bc55cc5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8f09f505-3cec-4193-8cf3-b97870b4a739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8c2bad-fc89-42cb-9f8c-8611cad91197",
        "cursor": {
          "ref": "0e024a77-7864-41ae-b6e1-b1ef51d93b7e",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a2e54a48-1d3e-477c-bd59-c488cd7db435"
        },
        "item": {
          "id": "0c8c2bad-fc89-42cb-9f8c-8611cad91197",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dd65e92c-14a2-4f45-a44c-8531b01b2ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ffa54b-b253-4b11-bc85-c5727af52cdd",
        "cursor": {
          "ref": "7e0c3f52-fed3-4335-8486-672d2786ade8",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4987984e-d3eb-4e8e-8a4e-9f424ba79775"
        },
        "item": {
          "id": "69ffa54b-b253-4b11-bc85-c5727af52cdd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ebd2000c-4114-473e-b294-f231a4981a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d98e81f-a8db-44d0-99af-357f73a84fd9",
        "cursor": {
          "ref": "b7a1e8c6-3657-4afd-98e1-1360a6cb1cae",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4b9f5d17-1189-4e44-b1b1-07e6899cb07a"
        },
        "item": {
          "id": "0d98e81f-a8db-44d0-99af-357f73a84fd9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5e5b7e85-a74a-4929-a316-0c09933cb8dd",
          "status": "Created",
          "code": 201,
          "responseTime": 2428,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "d3d4bd81-5a6a-4cf0-8db5-43f3f28b3bfd",
        "cursor": {
          "ref": "241ca6c4-f291-4615-83cb-5cbeb8ee082c",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7714d8ec-22f9-4fcb-bcc2-245c5410bd5a"
        },
        "item": {
          "id": "d3d4bd81-5a6a-4cf0-8db5-43f3f28b3bfd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "09b28194-e352-4c3f-a9ce-d0bf48922843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e564da-89a3-469a-a8f9-dca61c1dac90",
        "cursor": {
          "ref": "a604b2e4-0d0a-497c-908f-8f5a63bf22f3",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f955b176-5bcf-47ba-8152-6de20dd8a642"
        },
        "item": {
          "id": "43e564da-89a3-469a-a8f9-dca61c1dac90",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41aeeed6-ef21-4ec3-a3d4-3246f3aef04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b64cbbf-bab9-4491-9dc5-cfb567639422",
        "cursor": {
          "ref": "ce890aaa-22c7-4d21-8952-c0df5fb30f2c",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e23b0a4e-a63d-4ad7-aa4d-f8987df124fd"
        },
        "item": {
          "id": "5b64cbbf-bab9-4491-9dc5-cfb567639422",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "721ef10b-a766-4586-ac49-45faff8e5f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d0d0f7-32ec-4bf9-9ae0-0ae1253c065c",
        "cursor": {
          "ref": "9e27570a-f5e2-4a18-b1e1-629e99cf2f61",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9e905076-bbca-49af-a7d8-80b13a9632df"
        },
        "item": {
          "id": "49d0d0f7-32ec-4bf9-9ae0-0ae1253c065c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8bef9e00-9c39-4941-9a81-1d16763cde05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814adc9c-26f8-4161-9242-54a27d28f812",
        "cursor": {
          "ref": "beff97e1-a392-41f5-9794-9e937a67fe9e",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ec97e74d-792b-4282-8a41-5872f939e5fd"
        },
        "item": {
          "id": "814adc9c-26f8-4161-9242-54a27d28f812",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8ae50d20-4d2d-4dbf-9d44-71dea44a6aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8f247f-a89a-465e-991b-f39eb0c0c4e2",
        "cursor": {
          "ref": "00c879da-540b-4350-8719-5eb369f1ff6a",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2fdfc413-0b7d-44b1-9177-af23b4bddcd6"
        },
        "item": {
          "id": "8c8f247f-a89a-465e-991b-f39eb0c0c4e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cb4dd928-31e4-4ef1-a1d3-7acc4f1b915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2636bb-074b-47e2-ba25-464aec83ccd1",
        "cursor": {
          "ref": "2262b2a2-8cd5-498b-8fd2-8663150c815f",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e7bacaa9-5445-4fca-9b7d-8d63563934f0"
        },
        "item": {
          "id": "7e2636bb-074b-47e2-ba25-464aec83ccd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6bb0aac5-7346-4730-916c-b02abb06263a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1a46c4-ecd0-4971-b3ba-16c8ae7be20a",
        "cursor": {
          "ref": "51f12358-d3c0-40bd-a78f-0686d2708552",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4b1a2f8b-a123-429f-b64d-0a7446b2a866"
        },
        "item": {
          "id": "6b1a46c4-ecd0-4971-b3ba-16c8ae7be20a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "32e542c6-4d20-4906-b1ff-350aac959c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec5e315-365f-4d31-9960-20710ca8f353",
        "cursor": {
          "ref": "f9b2116a-e759-4598-9e81-e5b955b6d98b",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e336f9ed-b36a-4b18-b9a5-0917bd24129e"
        },
        "item": {
          "id": "6ec5e315-365f-4d31-9960-20710ca8f353",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "550ea8ff-b321-4df9-9748-ac76969ae054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d07b8f6-1b21-4bcf-b578-d2498e0dbd89",
        "cursor": {
          "ref": "cd3ee310-87e0-4644-b181-8e6b0eceba5a",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e2e17e59-8877-40a5-95a1-affd903a9c5d"
        },
        "item": {
          "id": "4d07b8f6-1b21-4bcf-b578-d2498e0dbd89",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "364325d0-92a8-4132-842d-9d27079ecab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69632148-eecf-4bf9-acc4-9d083919c96e",
        "cursor": {
          "ref": "6f9099e5-7111-4578-823d-1bfe403e79bc",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d4ad3415-ddb0-43b1-ac83-155c483c05a9"
        },
        "item": {
          "id": "69632148-eecf-4bf9-acc4-9d083919c96e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2659d18c-74bd-4dd4-a655-ce9dfb5c0975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ada53d-bf11-44a6-853b-cc0ae96771bd",
        "cursor": {
          "ref": "de502c78-34a4-4411-9df0-50c2897484dd",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "77dabcad-cbf5-4cdf-bc28-843d38a49e7c"
        },
        "item": {
          "id": "e8ada53d-bf11-44a6-853b-cc0ae96771bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "06935bc5-ee07-422a-aa39-3456d9178036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6024bbbc-dd3f-48e1-9274-944bcd9f6fbd",
        "cursor": {
          "ref": "922b47e5-1816-461e-8b34-913c3894321c",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e0ad0711-1063-4512-9352-6571fabe59b9"
        },
        "item": {
          "id": "6024bbbc-dd3f-48e1-9274-944bcd9f6fbd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a8f6f5e-78dc-4d0b-9a96-4eff739818a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9857042c-5e92-4f4b-87f2-a2801e8dc47b",
        "cursor": {
          "ref": "8f01101e-b122-46d4-b200-66c762ff9a04",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "87f1cf18-a5e6-4ed9-9449-39570cea1837"
        },
        "item": {
          "id": "9857042c-5e92-4f4b-87f2-a2801e8dc47b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6d368b7a-f998-40e6-b1ba-d88652cdb53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ccb8e5-afc0-48c7-92d4-9a364b4627c2",
        "cursor": {
          "ref": "6ac8dd98-55a1-41c4-9503-d84ab5326d87",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4376be8f-c359-486e-8f7a-b73fb432bb70"
        },
        "item": {
          "id": "48ccb8e5-afc0-48c7-92d4-9a364b4627c2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "40b0cdc2-d14d-499f-ac31-3fbcf3d71fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5b484b-8f88-4c4f-88c1-2edb220d0bb9",
        "cursor": {
          "ref": "bca5cbc6-9e1d-4929-a22d-4a8b08936afb",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5400bab6-8430-4563-a424-6f6f75475752"
        },
        "item": {
          "id": "ce5b484b-8f88-4c4f-88c1-2edb220d0bb9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef1a3a9a-11da-4d42-8604-50dae0bc8d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc5430c-e1fb-4af4-9e4c-735f4c3a6e7a",
        "cursor": {
          "ref": "4fb29b37-dcb0-422b-9ebc-3aaa9345e61c",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7cfe1e24-d7c7-4998-a7c5-8702358c8d8f"
        },
        "item": {
          "id": "bcc5430c-e1fb-4af4-9e4c-735f4c3a6e7a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e171367-39e5-4789-8d72-0bbd737d84b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b424a461-ac3d-4237-998b-ae424b49a061",
        "cursor": {
          "ref": "3041635a-08ce-473c-a4c7-a4519dd04e54",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a31f7da-0c28-48e6-bb71-b6d7b9b36c2d"
        },
        "item": {
          "id": "b424a461-ac3d-4237-998b-ae424b49a061",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22ce59c1-885b-48f8-a2a7-6cd1aca54ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8430db-f9ef-4f56-80c1-eb16230f4d60",
        "cursor": {
          "ref": "b5c04f75-691d-4b60-8455-fbb5efc07024",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e462f8f5-fd78-4248-95b3-ba64a52006ca"
        },
        "item": {
          "id": "fa8430db-f9ef-4f56-80c1-eb16230f4d60",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0359d458-0678-4bd5-85ef-1ff27f5e12c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cdbf6d-275e-4104-8ccb-2eb13e3c9507",
        "cursor": {
          "ref": "fd155534-285a-4a20-a4ce-a6cd7e942909",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38874999-acbc-476f-813a-c26584fb8500"
        },
        "item": {
          "id": "70cdbf6d-275e-4104-8ccb-2eb13e3c9507",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "894223df-b074-41bc-a7e2-d56ba563c37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348bf19b-36be-468a-abd8-52d42a002b89",
        "cursor": {
          "ref": "f5a8e37b-c956-44fe-9882-3036c1e814b4",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5d5b52a-cc94-4353-a2df-1a43c9122740"
        },
        "item": {
          "id": "348bf19b-36be-468a-abd8-52d42a002b89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "19f50056-9cbe-49d4-8766-1cbfe6dd5a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d81b39f-4458-4a66-9fda-ceb9b0cffa36",
        "cursor": {
          "ref": "b483f622-39b8-4913-be18-bc2f9c65eb66",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d80605f7-cd3a-4ee1-b7e4-d83eab8e6816"
        },
        "item": {
          "id": "3d81b39f-4458-4a66-9fda-ceb9b0cffa36",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a419335-715c-454f-8fa3-7a2b03386cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c491a82-ffa3-4804-9633-1c1b99d86b03",
        "cursor": {
          "ref": "c36d74fa-96d3-4452-8b33-0c070062fd63",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8f965f85-3b26-4f11-9296-b64858ba5ef3"
        },
        "item": {
          "id": "7c491a82-ffa3-4804-9633-1c1b99d86b03",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "03ed84e8-9bac-41d2-8eb7-ad52e267d1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b54a67-1b16-46a7-befb-f3498c823363",
        "cursor": {
          "ref": "2f4a39fc-c8cd-4d80-ab9f-aeeeb19ed5ee",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f78f4267-eae1-4a15-a806-9880d32e4fe1"
        },
        "item": {
          "id": "e3b54a67-1b16-46a7-befb-f3498c823363",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a1873990-3fe4-4c96-a875-38403dbe6a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867cca69-536b-4349-8411-d94f3cb71801",
        "cursor": {
          "ref": "d7bd9e93-81cc-4ae4-8ba3-8ec0414768a2",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "84087dcb-98f6-42d1-9fa6-523eb5edd4e1"
        },
        "item": {
          "id": "867cca69-536b-4349-8411-d94f3cb71801",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "38eaa489-597f-4098-9aff-1bf4658aa9ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8e4073-90f3-4c80-ad4c-7f05d18c0a0d",
        "cursor": {
          "ref": "d3da91f9-a70d-407e-9b08-754e48a13bd1",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cae2b75e-aa6f-4c32-beb4-4dc647da5a57"
        },
        "item": {
          "id": "df8e4073-90f3-4c80-ad4c-7f05d18c0a0d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cf73b681-2f4d-47c6-81ba-00d695523eb5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab6bd0-dba0-4c58-8c02-ebdf65385d42",
        "cursor": {
          "ref": "397c7876-49c5-4a2c-9428-475c0c686ba7",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d2933738-25b3-4dac-9c76-1c857de3448d"
        },
        "item": {
          "id": "20ab6bd0-dba0-4c58-8c02-ebdf65385d42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b80a8613-8d78-4483-b202-1de782fee181",
          "status": "Created",
          "code": 201,
          "responseTime": 2364,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "31866312-5ad6-4423-b10a-3b0502aca66b",
        "cursor": {
          "ref": "f09eea3d-55c4-426a-bcf4-474c686718f2",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ae2b6a23-4864-486a-b302-49df7e267efe"
        },
        "item": {
          "id": "31866312-5ad6-4423-b10a-3b0502aca66b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "10e9eaff-0eb6-48e6-b052-1ee92594a573",
          "status": "Created",
          "code": 201,
          "responseTime": 2387,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "13dee2f1-fb2d-477c-a4e5-9de99762191b",
        "cursor": {
          "ref": "f16794eb-a0e4-4078-8719-77cd804b4f72",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2e559a07-e430-4136-902c-f39a12a2cdd9"
        },
        "item": {
          "id": "13dee2f1-fb2d-477c-a4e5-9de99762191b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "766b2616-91da-45e8-a52b-ec70b9c9a93f",
          "status": "Created",
          "code": 201,
          "responseTime": 2414,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9693e89a-50ea-474f-8126-c2426ee3d9dd",
        "cursor": {
          "ref": "62641ba3-aa54-465c-8791-f109766f4155",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1718e1bd-f2dc-4a84-8670-d18733e3d69b"
        },
        "item": {
          "id": "9693e89a-50ea-474f-8126-c2426ee3d9dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd30b47f-e855-4185-9ed3-9dde26540982",
          "status": "Created",
          "code": 201,
          "responseTime": 3833,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "95843e48-84c3-4b0b-b311-9676feb3d847",
        "cursor": {
          "ref": "23cd1536-87f2-4412-ac05-c7d4a1d23c3c",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "92d3024a-bac2-46a0-b138-a0b844a20621"
        },
        "item": {
          "id": "95843e48-84c3-4b0b-b311-9676feb3d847",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "66b11caa-2034-4e88-a6f8-ae3c2df7f5b7",
          "status": "Created",
          "code": 201,
          "responseTime": 2929,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "7238b62f-ec06-400e-b0e3-5cb94ba3ece4",
        "cursor": {
          "ref": "c7f530c6-a6c9-4846-83ce-4e0dbb5a1a0a",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d7021627-ada3-4227-b5fa-fcca1c901846"
        },
        "item": {
          "id": "7238b62f-ec06-400e-b0e3-5cb94ba3ece4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aac24df8-00f5-4051-9d96-a5ace04ec1e6",
          "status": "Created",
          "code": 201,
          "responseTime": 3551,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "d3a1733e-a32a-4066-8769-f7927719507b",
        "cursor": {
          "ref": "16b9323f-24a7-4714-9db7-1c84209f95fa",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58004abc-64c3-4efe-abf0-16cdc1c7fd6b"
        },
        "item": {
          "id": "d3a1733e-a32a-4066-8769-f7927719507b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94512d82-fb34-4e48-832f-85bacf3efb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a1733e-a32a-4066-8769-f7927719507b",
        "cursor": {
          "ref": "16b9323f-24a7-4714-9db7-1c84209f95fa",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58004abc-64c3-4efe-abf0-16cdc1c7fd6b"
        },
        "item": {
          "id": "d3a1733e-a32a-4066-8769-f7927719507b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94512d82-fb34-4e48-832f-85bacf3efb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b72987-0db0-4a77-8e83-a0589b53508c",
        "cursor": {
          "ref": "27a29b5b-6d53-4035-95ac-892ad534a9eb",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9080a617-ecb0-43c3-82b2-0729017e1aed"
        },
        "item": {
          "id": "55b72987-0db0-4a77-8e83-a0589b53508c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fe9e282-ab13-4aad-ba74-3dde65ee04f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d903b8-f411-47c8-896f-58c48b3ad09c",
        "cursor": {
          "ref": "372b70c8-df69-4cec-869c-abcaeee8f2f5",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "37ff565b-b6bf-4179-ae47-91f34254b692"
        },
        "item": {
          "id": "60d903b8-f411-47c8-896f-58c48b3ad09c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13e1d716-169a-4541-ba99-bdfd844b1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d456346-48f4-483f-bb83-57c7783796b8",
        "cursor": {
          "ref": "18f893c0-3dc4-443c-867a-62d2cb4c7e9e",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "52f00d03-f464-4a37-8a3c-733dd8e9fe9a"
        },
        "item": {
          "id": "4d456346-48f4-483f-bb83-57c7783796b8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ec9b530-74d9-4250-8797-734ae23a72e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5573e5-9b1b-4714-8858-c73ae7baf86f",
        "cursor": {
          "ref": "7a85c2c3-186b-4f5c-bd93-fdee2e746aae",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "db0076ac-ea48-464d-b8a3-addf533250a1"
        },
        "item": {
          "id": "4c5573e5-9b1b-4714-8858-c73ae7baf86f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5dbb8fe3-92b0-454b-beb1-393578248c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc252743-78fd-444a-8e0d-b4961236ee42",
        "cursor": {
          "ref": "eff0f79d-7c04-4fd6-8b12-f28828fa466d",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "91187bad-6acc-42cf-9b51-be68de237e63"
        },
        "item": {
          "id": "bc252743-78fd-444a-8e0d-b4961236ee42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86564863-35d3-4906-af69-87f093cb2653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff29f98-2ea0-45bf-9b0b-8f0cfa7f46b0",
        "cursor": {
          "ref": "e7c6fc2d-9259-4a28-b837-275927f3c499",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "131a6a18-5070-414c-9eff-7aa76b432713"
        },
        "item": {
          "id": "3ff29f98-2ea0-45bf-9b0b-8f0cfa7f46b0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a703e28b-32b6-47be-81de-4fbe2ee1d14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0866cb-7443-4af6-88cf-4990b731d686",
        "cursor": {
          "ref": "7c865332-2076-41e6-853b-0fc7b661ab40",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "56551cc0-4c5d-49b1-9899-b58e0a17303d"
        },
        "item": {
          "id": "0e0866cb-7443-4af6-88cf-4990b731d686",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "549a6f45-8da9-4754-8256-76f0251d4270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65aea34-186a-428d-89c9-3c362a9e3d12",
        "cursor": {
          "ref": "b24857d0-d2fd-4a72-80bf-c9061c484b8e",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "12f808f2-c180-4c31-b112-3428db712a3d"
        },
        "item": {
          "id": "b65aea34-186a-428d-89c9-3c362a9e3d12",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3fa327fc-a3df-4c0a-9000-0f773a2c2d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3182140-3393-4dc3-9aff-02a71b7a2190",
        "cursor": {
          "ref": "3718c340-bdbf-40e7-8c42-6c56e423027a",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b8d8b0fc-a3f5-4ad2-b58c-08a5f94aabbe"
        },
        "item": {
          "id": "f3182140-3393-4dc3-9aff-02a71b7a2190",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6b75005-9306-4277-b952-8852b7b782b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89206217-deca-4b06-9e22-93dea6f66ce1",
        "cursor": {
          "ref": "e230bf8b-23ce-42c1-a468-ff45e27d7100",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a3a039f6-048d-4291-b5ae-216a848726bb"
        },
        "item": {
          "id": "89206217-deca-4b06-9e22-93dea6f66ce1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "07277eed-70ac-4d74-a3ab-a13d854d0f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576706c8-fd84-4342-8af6-ca882ee5a160",
        "cursor": {
          "ref": "e0a4f42e-b387-49ce-8370-e37d1137dd98",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "333efe36-b6ef-4ff0-a652-207f1c708305"
        },
        "item": {
          "id": "576706c8-fd84-4342-8af6-ca882ee5a160",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3e12c72-a3e6-40a1-b283-640caaa786c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fc0cb2-d4b3-40ab-87da-e5e7b7fffec0",
        "cursor": {
          "ref": "093dcaa5-63f1-431e-993f-cb213d83e2b4",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "22fc5a35-8f73-40d6-8452-6753cd134fbd"
        },
        "item": {
          "id": "27fc0cb2-d4b3-40ab-87da-e5e7b7fffec0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85c31a04-ae44-4afa-9539-3ac8eec587fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02387b1f-7881-440a-9bdc-8b6c9b8bc34e",
        "cursor": {
          "ref": "6d14f37d-b75f-49b0-b392-b8fa77fe84d2",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8f017da1-aee7-40db-8aab-1e1b2b3cb8bb"
        },
        "item": {
          "id": "02387b1f-7881-440a-9bdc-8b6c9b8bc34e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3ab638cf-6b96-48e0-8c04-e345a4f8515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd35668-a948-4784-ba4f-ed510645e5b8",
        "cursor": {
          "ref": "a401e04e-2e79-4273-9266-2536a6dcf78f",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1adb45b1-aa71-489c-a831-6a69340366c9"
        },
        "item": {
          "id": "9cd35668-a948-4784-ba4f-ed510645e5b8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b04ade50-f3cd-49a1-9172-d518b17d79bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b2c79c-c5b3-4ba6-9e24-200f0b041d7c",
        "cursor": {
          "ref": "7dfa0053-3a12-4642-8c6d-13e773e32a61",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c271a71-dcb7-4db4-ade5-d384d80ef28f"
        },
        "item": {
          "id": "f6b2c79c-c5b3-4ba6-9e24-200f0b041d7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d8cdba1a-f6b6-43bb-b450-663c6684bad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65321fcd-7dfc-4598-9ebb-e89957366203",
        "cursor": {
          "ref": "558cd473-93aa-4fcc-a47c-04b6f7184e67",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e5d23df-1eff-4ec7-a00e-fdfcca17df0a"
        },
        "item": {
          "id": "65321fcd-7dfc-4598-9ebb-e89957366203",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "33df9e84-9c81-4e93-80a8-f66228d2a040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3216628c-c50a-49c5-bc51-7010233e3088",
        "cursor": {
          "ref": "3520ff07-a14b-4fa4-ad74-86c1635ad573",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a99b20fa-f53a-4ae4-bbee-22d6f6d142b0"
        },
        "item": {
          "id": "3216628c-c50a-49c5-bc51-7010233e3088",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2281ed0c-abd0-4a6a-b1a1-562f5968406a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6623bb4-b08b-4136-b480-96c51a5e0bdc",
        "cursor": {
          "ref": "ae3698df-1705-40f8-ae97-f984628a56e4",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54eea30a-756e-4002-a850-b126d376ff05"
        },
        "item": {
          "id": "a6623bb4-b08b-4136-b480-96c51a5e0bdc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "58ac004d-7598-4424-879b-7d20ee210c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6e857e-31f5-4a2b-94a1-05ce6c2aad86",
        "cursor": {
          "ref": "8a3986de-287b-4847-b6c6-ab3c584de120",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4fa4b7c8-a0a4-433f-b24d-c88804751a8b"
        },
        "item": {
          "id": "da6e857e-31f5-4a2b-94a1-05ce6c2aad86",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e6b8744c-9211-48cd-8459-ed4399d6bdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31f2bd1-549b-4474-9327-293eb0094000",
        "cursor": {
          "ref": "0e2b4da8-2651-4c98-b62e-2daac46e1fcf",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8106ea87-c586-44bc-b9d9-1de1275de35f"
        },
        "item": {
          "id": "f31f2bd1-549b-4474-9327-293eb0094000",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6396b1d-840f-4989-a845-03744a43778f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cf7566-c5ca-4b51-83d0-3ef07266d83a",
        "cursor": {
          "ref": "a80895c0-fc34-49d9-a6bd-1499853dda0f",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1a079222-6132-4676-abeb-16f51a7754fb"
        },
        "item": {
          "id": "d4cf7566-c5ca-4b51-83d0-3ef07266d83a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "29ef29b3-7770-40a1-865e-c9de7b0b1c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5de027-b0af-40d2-bc90-e7180d43f736",
        "cursor": {
          "ref": "44e5d939-6ce5-4c44-a451-3a6d6121b9ff",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b6fd24bb-933e-49ff-a217-0b59a97b0b6a"
        },
        "item": {
          "id": "5d5de027-b0af-40d2-bc90-e7180d43f736",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1a93eb69-f215-4983-925d-49c780250c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eaae0e-d3af-489c-9961-c02397b7a939",
        "cursor": {
          "ref": "a43bb374-ce79-470e-8173-f3173a1043fb",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4e975c90-2669-4188-a69c-c327d4b94944"
        },
        "item": {
          "id": "78eaae0e-d3af-489c-9961-c02397b7a939",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "01e9f831-7517-48be-9fed-b789bca8b537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2039dd4-77f8-4e63-a46f-a6c1632bb11c",
        "cursor": {
          "ref": "e5cb6c8a-4ccf-4973-90fb-d86c8a17161b",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1b0882ba-e325-45f9-85b4-5afa62ffe940"
        },
        "item": {
          "id": "b2039dd4-77f8-4e63-a46f-a6c1632bb11c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c1d25925-f5f4-450c-956b-2ec1069cbe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aeac85-d5a7-47db-90dd-f56029dc9880",
        "cursor": {
          "ref": "a142e858-10d9-4bec-ae39-a1beb79a2751",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e02a6457-571e-4aed-800d-3bdca13f9b0f"
        },
        "item": {
          "id": "40aeac85-d5a7-47db-90dd-f56029dc9880",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7590cf4d-ba9c-4acb-8771-f3b42a122850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9e400-8dbf-4a14-9a27-1e9534681b5f",
        "cursor": {
          "ref": "647c16c3-6431-4f26-a2c3-8e46c32c9f9f",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2f57f186-9061-4d25-9a09-401e830624eb"
        },
        "item": {
          "id": "82c9e400-8dbf-4a14-9a27-1e9534681b5f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "af004719-4d5b-45fe-ae7f-b3cef0cdf57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2564d4ad-7eda-459e-a190-4132470a1eca",
        "cursor": {
          "ref": "98f2e383-5539-48e1-83d9-39efa68e5122",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ba5ae426-fe12-4a28-a6fa-42c108cfd7a1"
        },
        "item": {
          "id": "2564d4ad-7eda-459e-a190-4132470a1eca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba76ab6d-7c74-4d9c-88cb-90a70d6b06f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53058072-e7d4-4aef-ae01-80fc745b04eb",
        "cursor": {
          "ref": "21eeeeff-b9b8-47b3-ad82-002cb51c696b",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "98ca9b63-3fa7-4053-b5b5-5cd033b1dd43"
        },
        "item": {
          "id": "53058072-e7d4-4aef-ae01-80fc745b04eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3bbff3a3-de22-4f5b-bb72-63b626e00b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c1fd4a-4ad5-42b5-841e-8686fc4800f2",
        "cursor": {
          "ref": "168935c8-ad8e-49d7-a9d9-ab904109e408",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05059ef4-0071-4db9-8748-7b8984be1c3e"
        },
        "item": {
          "id": "10c1fd4a-4ad5-42b5-841e-8686fc4800f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d713ebf-5451-4c47-8614-f5a597114f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100deb81-9acf-4bf7-bdaf-a42dc30eabae",
        "cursor": {
          "ref": "6180e2c6-b91e-41ba-9937-2ce4be94d190",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cfbddbca-4f1c-4110-b3a9-330f53b481d3"
        },
        "item": {
          "id": "100deb81-9acf-4bf7-bdaf-a42dc30eabae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "427483c5-5513-4138-a546-273c4803b7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc807a7-35b3-4ad1-95f6-3afafa149cf0",
        "cursor": {
          "ref": "f1260aef-59c5-4213-822f-3f30f83bfe59",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "354652e2-94a2-4480-a9d3-db93ed91e73c"
        },
        "item": {
          "id": "fdc807a7-35b3-4ad1-95f6-3afafa149cf0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13065357-af93-4254-80f1-73877412d08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4491d3f-2e3e-4530-b4be-1973b676ff0a",
        "cursor": {
          "ref": "d3e016f4-5d66-48be-b1da-c64b0a54a46d",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "277f66c5-eb92-4de6-b84f-86cb75fbf96b"
        },
        "item": {
          "id": "f4491d3f-2e3e-4530-b4be-1973b676ff0a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0e73729c-aaa0-4184-a040-ebce00e292a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee841a9-ade0-46d2-b163-1a9f169cdd90",
        "cursor": {
          "ref": "98c20954-eddd-4057-8903-9217441dd32c",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "927ad3e3-4aaf-4be4-bf36-b4caff9caff0"
        },
        "item": {
          "id": "eee841a9-ade0-46d2-b163-1a9f169cdd90",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "96c0008f-0e67-4bec-93f1-7f15a0c6cce4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 555,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1a124b-5996-4b30-aee2-145ebf9f524e",
        "cursor": {
          "ref": "7a285ad0-a48e-4f7f-bcd8-6e16fd2163b2",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a74ceda8-a27f-42db-82c9-f0bf82e86754"
        },
        "item": {
          "id": "fd1a124b-5996-4b30-aee2-145ebf9f524e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2f62527c-0231-4944-bd47-e1e27fc6c4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1a124b-5996-4b30-aee2-145ebf9f524e",
        "cursor": {
          "ref": "7a285ad0-a48e-4f7f-bcd8-6e16fd2163b2",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a74ceda8-a27f-42db-82c9-f0bf82e86754"
        },
        "item": {
          "id": "fd1a124b-5996-4b30-aee2-145ebf9f524e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2f62527c-0231-4944-bd47-e1e27fc6c4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2079cd00-0c68-4a34-831f-f4ebaef6b7f0",
        "cursor": {
          "ref": "bfe6d80a-6f20-4334-b151-396eea248844",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "efe36bc3-ad7d-42a1-8132-48112ad82d3d"
        },
        "item": {
          "id": "2079cd00-0c68-4a34-831f-f4ebaef6b7f0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b8850c90-a1be-40c9-bb9e-bcb5fba4bcc6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 294,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9d329e49-30e5-4b59-9bbb-cbd1b9ac313e",
        "cursor": {
          "ref": "a9df04c4-d239-4bd6-846a-4b8e79dd2688",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "357368e6-bee3-479e-a283-c3b756de02b7"
        },
        "item": {
          "id": "9d329e49-30e5-4b59-9bbb-cbd1b9ac313e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4b4cca0c-9c49-4bb5-ab7f-89ecc9f05cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc8c185-3a37-45ef-9d08-89fda435b8dc",
        "cursor": {
          "ref": "cabd72f6-c804-4c28-9b72-6d287ee7c424",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7064d5f-c4b3-47ae-9711-a1d06b5d3acc"
        },
        "item": {
          "id": "5bc8c185-3a37-45ef-9d08-89fda435b8dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d61b5300-aad4-409c-a3de-ff168b4d8aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44c8af-89cd-4fc6-9cb9-affc1a521eb9",
        "cursor": {
          "ref": "8eb14948-57f7-46b4-a1fb-5e6128a0d493",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "93ab1780-4a89-405d-8907-1059273e3578"
        },
        "item": {
          "id": "bd44c8af-89cd-4fc6-9cb9-affc1a521eb9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13fdaf07-7254-407a-bc6d-fed5cddbc660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71a0372-9c28-46bf-bf3e-0c9f419a01de",
        "cursor": {
          "ref": "32d9a59f-7fd6-4708-be48-871f994b7323",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f9e041d-4ddc-4145-b034-46f4e567046f"
        },
        "item": {
          "id": "c71a0372-9c28-46bf-bf3e-0c9f419a01de",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "746c10f4-cc00-4c8b-b3bb-d0c659319c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73412eb3-0098-481a-9b8c-fbd750fdd63b",
        "cursor": {
          "ref": "6d551b79-f7a9-4d57-bac0-4998f361fabb",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7782343f-7993-4e7b-99ca-627bfd027fc6"
        },
        "item": {
          "id": "73412eb3-0098-481a-9b8c-fbd750fdd63b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c31c22b0-7117-40ef-8ff1-6a3cc20792fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecf920c-93be-4f2a-848d-5bc5fbfa619b",
        "cursor": {
          "ref": "0b872b1b-e8f9-4dba-a387-a4ffc2c40770",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7a24478e-73ba-4551-a4cf-e0ebf62b944f"
        },
        "item": {
          "id": "5ecf920c-93be-4f2a-848d-5bc5fbfa619b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2c93d883-4143-443d-8a77-bc0169b596c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643a57c-3ad2-4674-9ee9-496aaff0cc84",
        "cursor": {
          "ref": "17e1b17f-9333-40b1-bd45-8e826134461e",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "66671846-9d25-4697-b4c1-7bd0fc3abc6f"
        },
        "item": {
          "id": "c643a57c-3ad2-4674-9ee9-496aaff0cc84",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "27d22e7b-9c9c-486b-8735-cd466f5fcf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a15e90-d946-48f6-b896-8b8888e4aa66",
        "cursor": {
          "ref": "55da0191-9415-49a1-82dd-c50f78e9f152",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fc5bdb1b-c9ca-4376-a3fd-d83e757e7c9c"
        },
        "item": {
          "id": "b5a15e90-d946-48f6-b896-8b8888e4aa66",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e5bd6efc-7573-4838-984d-ba787954c1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139f4979-5dd7-48b5-936a-6c7f7bb330ec",
        "cursor": {
          "ref": "c3cdcb92-e4ad-40aa-ba20-e34a71b5e751",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b6c2d52f-f727-4f63-a194-6d52accdcb4d"
        },
        "item": {
          "id": "139f4979-5dd7-48b5-936a-6c7f7bb330ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b5a41b00-ce18-429c-8549-18bbb2014bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5804d5-488b-47a7-9a7e-d467e8e2a2a2",
        "cursor": {
          "ref": "4eb7c5a9-42c3-4128-b744-8f8bf0fd0bf1",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ddebd5d2-5ddd-40be-813e-3ec0a84c9456"
        },
        "item": {
          "id": "7c5804d5-488b-47a7-9a7e-d467e8e2a2a2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "677ed716-9062-465a-8933-2aebc078b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb6000-9549-4f17-bc9f-f1d800883b5e",
        "cursor": {
          "ref": "37cf6dc6-1c0e-45ff-be7f-5fd709165af1",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "15d32173-2444-42eb-be81-40d1986e1f13"
        },
        "item": {
          "id": "b7bb6000-9549-4f17-bc9f-f1d800883b5e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c34efcda-189d-44ae-b4d2-68ea9db2fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fe738e-5200-4eef-a240-270781b0ac5e",
        "cursor": {
          "ref": "b308b224-e995-414a-80cf-9883585e5402",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f2906013-1205-4c5d-a104-61a1b44e3195"
        },
        "item": {
          "id": "74fe738e-5200-4eef-a240-270781b0ac5e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cf86738e-f776-492c-9961-26e45e100d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc578065-aa7e-4c19-9310-ddc592486a4c",
        "cursor": {
          "ref": "3261cace-fb55-45c3-a7ef-375bb95f8476",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c3dff635-a0dd-4b52-b078-b7edb5740e0b"
        },
        "item": {
          "id": "bc578065-aa7e-4c19-9310-ddc592486a4c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5da57eac-0d0e-4776-9674-580da149b9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5db5c6-e1ae-422b-b0d4-689696cb56f1",
        "cursor": {
          "ref": "cd7cbd7b-df2e-4740-a664-d3c403353cd3",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2def1df1-7e0b-4726-9bb4-70228cfa6ff1"
        },
        "item": {
          "id": "7b5db5c6-e1ae-422b-b0d4-689696cb56f1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5f8f1a1d-096a-4a43-ab46-55c98e7f794f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaaadb0-60e3-40ea-8a05-23a36fceaba5",
        "cursor": {
          "ref": "cd01a6b2-6809-4861-89b8-c46392fedf94",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0cf54a50-9831-4f54-8b72-9fd510fab389"
        },
        "item": {
          "id": "5aaaadb0-60e3-40ea-8a05-23a36fceaba5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "192410d8-aeaa-4c79-880d-22aa8e3ff5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4767f865-0de7-4105-a013-b7b388770915",
        "cursor": {
          "ref": "7e5cd840-8925-4fb4-a600-1d65f51b0cce",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4c04e45e-79ef-4035-8240-8d9764a1209a"
        },
        "item": {
          "id": "4767f865-0de7-4105-a013-b7b388770915",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "112b2ab3-5073-4e4d-a29f-a7b9c57515fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff40ff0-d884-468f-b952-86314b428f92",
        "cursor": {
          "ref": "0e51f2f7-a790-4283-b620-e6d26fd0bd3b",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "55f717d2-8b1f-407c-9b97-ead20d9a2866"
        },
        "item": {
          "id": "1ff40ff0-d884-468f-b952-86314b428f92",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1e20e800-e180-4aa5-ab81-fd4e54fd5b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fafc4e-dd8a-4ca5-8bea-eb2c9151719b",
        "cursor": {
          "ref": "5abe3a19-6e57-4c6d-9c71-cd4f06a60d9e",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "17714030-9c09-4bcd-8a3d-7a7520a9aab9"
        },
        "item": {
          "id": "c3fafc4e-dd8a-4ca5-8bea-eb2c9151719b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "65bdc702-c9cc-41cb-9389-56ea7e7514b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdd715a-9552-49db-b954-5ac8bbd5c715",
        "cursor": {
          "ref": "1b3d2eec-7dc3-42f0-95c0-9a115e30bab8",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9f82df5e-e6f5-4132-854a-79fef8d14284"
        },
        "item": {
          "id": "abdd715a-9552-49db-b954-5ac8bbd5c715",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b85e2379-86b4-4b09-894c-a578569fd2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e047d1-c13f-4462-88df-0b446d2321ae",
        "cursor": {
          "ref": "9999e197-93d0-4e22-ab44-6ef6d4720b39",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d3a4ddce-2d9e-4297-a74d-b524cdf98ba6"
        },
        "item": {
          "id": "09e047d1-c13f-4462-88df-0b446d2321ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9f48442f-8940-4b20-9959-0a190e036c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b33198-ca9e-41e6-a123-09f86b509b39",
        "cursor": {
          "ref": "424e3f6b-2fa7-44e0-9d7f-6925163b662b",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "200c916c-e34e-4b7b-8aff-d94862cdd1d5"
        },
        "item": {
          "id": "66b33198-ca9e-41e6-a123-09f86b509b39",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2738e623-008d-46c2-81f5-b2ec39224b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1b1253-1009-461a-839f-3019af562523",
        "cursor": {
          "ref": "3a385600-3bd4-46af-9539-a8dd360d60a1",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f36dc8c1-b541-43e2-9491-7e3da87d33b0"
        },
        "item": {
          "id": "ff1b1253-1009-461a-839f-3019af562523",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "18d140ce-d522-43d0-8a35-cccacc580354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110e93a6-d1d9-41a4-9b9b-1ea39ac09aa3",
        "cursor": {
          "ref": "a8dc56ed-3998-40e5-a5b1-9b06655f4771",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5f127ab8-02e5-4e87-a712-5700d1244772"
        },
        "item": {
          "id": "110e93a6-d1d9-41a4-9b9b-1ea39ac09aa3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bc70cbae-384a-4f97-b53f-2df14f2ef332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232d18ca-5ad6-4c7e-b72d-a11b2fa9b781",
        "cursor": {
          "ref": "aafe2c9b-832e-438b-9bf8-abb6f12ef9df",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "da1b2eec-62f6-4023-a013-9cfc8c37e209"
        },
        "item": {
          "id": "232d18ca-5ad6-4c7e-b72d-a11b2fa9b781",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e175cfac-bef3-4695-a885-97a711887304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dd4aea-79d4-4b4e-879c-81d08b4c35c5",
        "cursor": {
          "ref": "9a4622f0-50c3-402f-9c2a-6ff44e3ccd92",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "69724012-2987-495c-a84c-e3bc43295a2c"
        },
        "item": {
          "id": "b9dd4aea-79d4-4b4e-879c-81d08b4c35c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a18b64a8-ba49-44cb-a230-d25e27d977e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0103ed-a52e-466b-986b-1c493c6b977f",
        "cursor": {
          "ref": "cc1f932b-e696-47f8-b2ac-a5a82ad036c8",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e0997a41-3047-4caf-adb8-3f0e73857431"
        },
        "item": {
          "id": "1e0103ed-a52e-466b-986b-1c493c6b977f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "41976dd4-1aa1-42c2-af1b-7700e92d90ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096c9d8a-cf40-4edc-8bd4-156fece0b2ad",
        "cursor": {
          "ref": "b07ecb2b-fd1d-4358-afb7-53da70d6ec15",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d9b9fd29-1050-4c99-adb4-f76c183eca08"
        },
        "item": {
          "id": "096c9d8a-cf40-4edc-8bd4-156fece0b2ad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "544a80bd-c30c-40d7-8fc4-f2e0cb0596b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602976ae-2449-4763-af6d-dd2d6a9bf310",
        "cursor": {
          "ref": "4274921b-62eb-4c4a-b400-fe02524160ef",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d4651372-aeb0-4112-b7ad-d0fe77cf7691"
        },
        "item": {
          "id": "602976ae-2449-4763-af6d-dd2d6a9bf310",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5047639b-6d59-4641-8eac-adf80bb32de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf70c697-b028-485c-86b0-eaa2659bb9a3",
        "cursor": {
          "ref": "0e0183b9-c436-4819-95f3-9e191b5b675c",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "043aaef9-b8da-4cfb-9c05-e2ee01d99bd7"
        },
        "item": {
          "id": "cf70c697-b028-485c-86b0-eaa2659bb9a3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a5bd86d2-4c7b-4093-957f-5085e9b4bf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a98f901-55e2-4c5b-911d-63cb1fced858",
        "cursor": {
          "ref": "9060f1ac-01d6-48cd-a7c3-23350a8ff5f9",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cda86be1-f9c9-497a-97dd-b88fd53189ce"
        },
        "item": {
          "id": "6a98f901-55e2-4c5b-911d-63cb1fced858",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "72769173-f2b3-402f-af18-2b17a6b3a453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de898f8-8a92-4bd1-ad35-cc9b737bf82d",
        "cursor": {
          "ref": "a1d0bc46-a4b0-4972-a69f-0ac7bb72363f",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b483b3a2-2397-41b4-b268-f45e90303326"
        },
        "item": {
          "id": "3de898f8-8a92-4bd1-ad35-cc9b737bf82d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c549dcd2-a548-40f0-8db9-3d8ba2886299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249fc6f6-4530-4927-b524-575a2ee23d70",
        "cursor": {
          "ref": "dc1505c5-6cae-47d2-872c-69f9cd35c4d3",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4eae396b-4893-474c-8d2d-362c3f577d7e"
        },
        "item": {
          "id": "249fc6f6-4530-4927-b524-575a2ee23d70",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7eaec00b-b527-4950-9fc9-09bbe0e9a8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b362816c-3e90-4803-96db-afef1c8914ad",
        "cursor": {
          "ref": "ee39454a-6e07-4cec-8406-b8487790e1bc",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2b2ca832-8409-44a9-bd2f-37f25bc944ac"
        },
        "item": {
          "id": "b362816c-3e90-4803-96db-afef1c8914ad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "637db256-225d-468d-949e-edcd69e59231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237545e6-0feb-45e0-8c5a-2dcea0e19f84",
        "cursor": {
          "ref": "a1052414-df90-4011-bb4f-c835d2bcaf17",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "26179ce4-1667-4c24-808e-0a4086139563"
        },
        "item": {
          "id": "237545e6-0feb-45e0-8c5a-2dcea0e19f84",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "961d8d90-aa23-41c5-b1c9-dc0602bd05fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803978a8-8c7b-4566-9d0a-00bd2358b8b0",
        "cursor": {
          "ref": "0be014c8-7001-4069-8302-a860eb679327",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f79178b4-34de-4a9c-9a84-fa6b9c782a1e"
        },
        "item": {
          "id": "803978a8-8c7b-4566-9d0a-00bd2358b8b0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "200054ec-45b6-4b1b-a5e4-4495db494d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d591f7-295b-403e-a79a-dc5d8ae8bb54",
        "cursor": {
          "ref": "48773b3c-c780-4a12-95f6-cfb572cc2b80",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "97bbeb60-0cc5-46bb-be39-52f45b4f5bdf"
        },
        "item": {
          "id": "d4d591f7-295b-403e-a79a-dc5d8ae8bb54",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "10eca8bd-ed20-41b9-a806-896a8b33dc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fdb0a6-8c58-4b3d-8c48-55ccb7aa7f3c",
        "cursor": {
          "ref": "29493597-8338-4aba-a88b-bacc8cf70564",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aa5ec49a-2a17-4f21-b168-43e13879cd0b"
        },
        "item": {
          "id": "04fdb0a6-8c58-4b3d-8c48-55ccb7aa7f3c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7fdf9bb4-ee85-4d2a-81cd-750d670f2230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8018b988-9701-46cf-8c0c-31da8d69d51e",
        "cursor": {
          "ref": "5cee04a3-f889-4720-bc8c-76770d7ca41b",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7b851715-5f86-4b3d-8b1b-a3754318eba8"
        },
        "item": {
          "id": "8018b988-9701-46cf-8c0c-31da8d69d51e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3b3a0186-5cff-4cb8-b8ed-e9f673fe2827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cda0b0-6df7-43f4-98e6-526374aa0ee9",
        "cursor": {
          "ref": "883d6c4b-0f60-44fa-b55c-f7016158a832",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e248a1e9-9ab7-4452-adbd-5a713549eb1f"
        },
        "item": {
          "id": "61cda0b0-6df7-43f4-98e6-526374aa0ee9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0b525e37-09a1-4a5a-8aae-f3f2c03cf04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db8817-f208-4d1b-8790-204fb723122d",
        "cursor": {
          "ref": "d008aab8-fcb2-41e7-872a-db44f5e3041a",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "565159f6-0f18-4362-9c88-86f539dca01a"
        },
        "item": {
          "id": "36db8817-f208-4d1b-8790-204fb723122d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f67a8676-4e85-4f7f-bbbf-592f5cfeed37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9158fff4-a4d3-4833-b272-93a6c28439ea",
        "cursor": {
          "ref": "f58562c0-d04f-46d0-8b25-e9e063e21819",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a1a02886-01dd-4e86-8245-c05c7b895f58"
        },
        "item": {
          "id": "9158fff4-a4d3-4833-b272-93a6c28439ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7063ceab-c467-4cd9-9940-dc76d0cfd31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd2fd8e-15b9-4032-af7c-2b96f3fc5e2e",
        "cursor": {
          "ref": "651827f8-7b28-49dc-b14b-046d3a01a468",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e7cf8eed-2409-44c0-a3fd-6a654d4ee620"
        },
        "item": {
          "id": "cdd2fd8e-15b9-4032-af7c-2b96f3fc5e2e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01ebfca3-9b11-486f-b9cd-4fe18b20c9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b44def-c1eb-4b40-9bfb-67b20936b678",
        "cursor": {
          "ref": "fbb0a184-7425-4737-b282-ce6e396bc9ca",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d65c5426-3755-4a94-bb57-20f7a76ced78"
        },
        "item": {
          "id": "d4b44def-c1eb-4b40-9bfb-67b20936b678",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cedab4de-3600-42c4-aac5-b82434eda8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95152ab6-17e9-40a6-b344-5c5013b1c919",
        "cursor": {
          "ref": "a6b560d7-762b-4531-9ecf-c75ec2355f78",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "82ba1d9d-9c34-4baf-982a-f582f5264bcd"
        },
        "item": {
          "id": "95152ab6-17e9-40a6-b344-5c5013b1c919",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "86a2c96d-3aff-4e3f-8208-82d8d2c9883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a147f9-e35a-43bb-8c27-4ff41e937d14",
        "cursor": {
          "ref": "abbecfbf-7867-43fe-8660-2ffe999ca536",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "52bde75b-3f31-45ea-8fc6-31bf538c95a8"
        },
        "item": {
          "id": "d5a147f9-e35a-43bb-8c27-4ff41e937d14",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fc7a13e5-c9db-4eb5-aacb-c9fa1c3a6047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13b8cc2-b973-4f65-9357-0869874a513b",
        "cursor": {
          "ref": "902deafb-def6-46fb-84e8-2255a2aaee31",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6c4667c-7bd3-4bb4-8e02-d1f1704ef66e"
        },
        "item": {
          "id": "c13b8cc2-b973-4f65-9357-0869874a513b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "59c51edc-4907-46d3-b9f9-17748c3da865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e9a36-b93f-40cc-9ad8-952353f34219",
        "cursor": {
          "ref": "44831b5a-152b-429c-ab51-5ae7c3acead2",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a946c1ae-03ba-4e5b-b9d8-c53efaa6335a"
        },
        "item": {
          "id": "6a6e9a36-b93f-40cc-9ad8-952353f34219",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d1b8b24b-9536-4b78-9651-74deb98b80d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960effe7-1233-4247-a371-a6382de71a3f",
        "cursor": {
          "ref": "13e00274-1525-44f1-9164-e6feb8dd1636",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be0836b7-6d14-43de-8375-ec9af9ef0b44"
        },
        "item": {
          "id": "960effe7-1233-4247-a371-a6382de71a3f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1aac2ea7-20ff-430f-b879-736da5aba10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd730ab5-4f50-414f-85a8-28de9980971c",
        "cursor": {
          "ref": "ae9e2df3-3f7b-4038-b991-d135ba5503ab",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "57d1245d-4e08-4f0f-8cc6-7a15459777de"
        },
        "item": {
          "id": "fd730ab5-4f50-414f-85a8-28de9980971c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "363162b6-5f0c-43b0-a378-9d6bc259a95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe5412f-22fe-434f-8066-7a2e23cfad28",
        "cursor": {
          "ref": "d76b0d37-8b26-4701-ad75-d731e032711b",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f1753d06-0bb2-4b4d-80bc-429aeedf7210"
        },
        "item": {
          "id": "dfe5412f-22fe-434f-8066-7a2e23cfad28",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ce3c0dd-84ef-48c3-b889-bac60e4f60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b83a4ce-eb41-4204-8a25-85666d02700e",
        "cursor": {
          "ref": "b2050e4f-468d-40aa-9174-b78d59b913e7",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "770f4e81-383b-425c-8d81-84a3203e5254"
        },
        "item": {
          "id": "7b83a4ce-eb41-4204-8a25-85666d02700e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16b2aec3-9071-44f7-aebf-ba93c54d8f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01d1b57-156b-4a7a-9514-05cabb51c5e0",
        "cursor": {
          "ref": "1a0de48f-b92b-4670-bc19-a36b294ef4f9",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c73dced-21c6-476b-829a-4eaa92d2ae7b"
        },
        "item": {
          "id": "e01d1b57-156b-4a7a-9514-05cabb51c5e0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1398d314-912e-4df7-a99e-156d27f74a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2917a0c3-3776-4e95-a39f-fbf4bcf0b42e",
        "cursor": {
          "ref": "0b1a39e4-1db0-4908-aebf-f48591e288da",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a2ea4ffb-01af-479d-ad09-e7d862d26c4a"
        },
        "item": {
          "id": "2917a0c3-3776-4e95-a39f-fbf4bcf0b42e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "96885d52-aeeb-46e5-a4ac-1ea44e5aba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0d9ebd-763f-45d0-9dc6-7b0503b65547",
        "cursor": {
          "ref": "98ae8437-7af7-4b63-8326-b3221a9243f8",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d24fdad8-756b-4329-bf40-608aa4f7c10f"
        },
        "item": {
          "id": "ae0d9ebd-763f-45d0-9dc6-7b0503b65547",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "88dd155b-cb50-4cf0-9260-4301a3482c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5364492d-bd11-4e90-ac43-2534329ef329",
        "cursor": {
          "ref": "7ff07bc9-e398-4499-9a23-2e72942ce399",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "391118fc-be0f-45e6-862e-0df1f9ac60bf"
        },
        "item": {
          "id": "5364492d-bd11-4e90-ac43-2534329ef329",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "28084994-04e4-493e-bc58-287944f15ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b68141-8184-4085-b8f7-8d86c12b5b53",
        "cursor": {
          "ref": "1df1b88b-612d-450f-9bb9-a4b2c7c5180f",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ad8f76f-9ed7-4c41-a362-f0f9392011c4"
        },
        "item": {
          "id": "60b68141-8184-4085-b8f7-8d86c12b5b53",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bd823e1d-7d26-45c4-8085-377042e065f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7b693d-ac73-4829-8ec6-3824d1a78d8c",
        "cursor": {
          "ref": "75a96653-4c0c-43a9-83cb-125873e68511",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9bc96d08-d939-429b-b702-e92e1d4609fc"
        },
        "item": {
          "id": "5c7b693d-ac73-4829-8ec6-3824d1a78d8c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "96b17a41-ec6b-41bc-823d-a072ab18ce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92048ef8-2e5a-4350-9df9-1f597780b93d",
        "cursor": {
          "ref": "91d0fd93-5577-4b29-95d8-e22c5a4b0e56",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fc90cfb1-3488-494a-bf66-fb40de71255f"
        },
        "item": {
          "id": "92048ef8-2e5a-4350-9df9-1f597780b93d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d7c6306a-6771-44fd-b3f8-6f3d2e165005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaa8e3d-201c-4249-8e87-5f63fac8247a",
        "cursor": {
          "ref": "bb9c12f4-bf70-4121-8cb6-fb3749ea7c8b",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b9a5989-3cba-4eec-85d6-4c5f6968eca8"
        },
        "item": {
          "id": "8aaa8e3d-201c-4249-8e87-5f63fac8247a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "02cf963c-2bb8-442c-971d-89b536cac206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d4d383-3dc5-4f36-9e58-11b7a8c266b6",
        "cursor": {
          "ref": "297c3803-359b-445e-9789-63a89d11f73b",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9fb18571-c073-480d-9413-07d599f18b2d"
        },
        "item": {
          "id": "75d4d383-3dc5-4f36-9e58-11b7a8c266b6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce167772-eae7-4c73-9b24-098718ac9252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe1897-6ac2-4b48-9195-57c30c5050b2",
        "cursor": {
          "ref": "acf6c25f-bf65-4fc9-a400-8d58b55383c9",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7ef56c25-ecae-4f0c-bd67-96fe78cd0a12"
        },
        "item": {
          "id": "8ebe1897-6ac2-4b48-9195-57c30c5050b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "31428774-efd6-4d34-a8ce-4823f8936e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccf9ef3-8617-444f-a782-c6bb6b5663bd",
        "cursor": {
          "ref": "33cb9ee6-7fb3-44ab-b935-b1ccf392fda6",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fb2e7100-8c8d-4225-bba4-49ea6eef03e1"
        },
        "item": {
          "id": "1ccf9ef3-8617-444f-a782-c6bb6b5663bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9f3ed874-909e-4f15-9aef-d4dd13e02851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00e52a7-2974-42e5-9efe-579eebe998c1",
        "cursor": {
          "ref": "fafb36a0-df18-434e-b6a4-1c2cebf2e1f1",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8f251f31-9e81-4aa1-8610-c3718f658d90"
        },
        "item": {
          "id": "a00e52a7-2974-42e5-9efe-579eebe998c1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09a6a80b-4cc8-41a3-b381-e0efa9eb1a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93afc34-3863-4037-8d71-d62604aded24",
        "cursor": {
          "ref": "86940527-c027-48c3-bbde-a43eff3282a6",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9c9e3e3-ac67-4b60-8d11-89649af552d7"
        },
        "item": {
          "id": "b93afc34-3863-4037-8d71-d62604aded24",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ea9eb74e-0db0-4db8-86ee-6b3fa4c1957a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf6d398-5594-4315-babd-c0efd3a41d6d",
        "cursor": {
          "ref": "73cf7405-5595-4535-bbdc-7647b0717f95",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ddd0571-4542-441b-ac40-b3b297084d8e"
        },
        "item": {
          "id": "7bf6d398-5594-4315-babd-c0efd3a41d6d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2c739800-3de8-4b6f-b5ee-406d2bd6fa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6210b30-575e-4636-8a8b-d8608f3b693f",
        "cursor": {
          "ref": "1bb6460a-d9b1-491c-baf2-5af439a4fb9e",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "398c9f48-3117-4a0f-a037-f98e9cb93e6b"
        },
        "item": {
          "id": "d6210b30-575e-4636-8a8b-d8608f3b693f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d045480b-d83b-4717-8331-4078bb839d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d9e633-a84d-4567-a0ad-72312779b1f8",
        "cursor": {
          "ref": "b0e2463e-a12f-44ed-b0f9-229093c9c750",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4f013fff-01be-4f73-b6e4-3504ff88460f"
        },
        "item": {
          "id": "59d9e633-a84d-4567-a0ad-72312779b1f8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "01a8e851-6419-47be-ad38-8ec8ee04a17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6c0d8d-88e2-4161-a9f4-94f0b63120d0",
        "cursor": {
          "ref": "cb8a5500-c770-4dd5-84cd-00dfd95ce88a",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0382a0f5-0803-40c1-b326-85996bff7c78"
        },
        "item": {
          "id": "ad6c0d8d-88e2-4161-a9f4-94f0b63120d0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fcf1e135-b1cb-4e2b-bc8f-ad40db59e705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a3441d-08ac-4309-b6b8-4a7bfe326e36",
        "cursor": {
          "ref": "d93cb5bb-16b2-4727-8777-066b0a082517",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ae74bb84-6ff7-4261-8c1b-4e66e3d7e4da"
        },
        "item": {
          "id": "f6a3441d-08ac-4309-b6b8-4a7bfe326e36",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1f21d95c-5628-4079-b51c-b52ac7a855d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c4c17-d74b-4e0c-9bb6-02bab32f959d",
        "cursor": {
          "ref": "000ff961-5c32-49e3-a113-b0f8b9c4cd35",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7400ad5-3a9f-4795-a9be-e28e48c0d4f3"
        },
        "item": {
          "id": "2d9c4c17-d74b-4e0c-9bb6-02bab32f959d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d513cd5d-cc01-4d87-bf74-79543a68c36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc4fa7-b1a5-4f33-9aca-a411a75b56e1",
        "cursor": {
          "ref": "ac665d3d-27a8-4ba3-a3b1-2b9068430b74",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3c5e2b9c-7d6d-4f54-b846-9879e107db08"
        },
        "item": {
          "id": "bebc4fa7-b1a5-4f33-9aca-a411a75b56e1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc46f335-fafd-42cb-8f8a-0662cdbd2c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1a594-efce-450c-bb0f-6baef64c96ed",
        "cursor": {
          "ref": "c3e225a9-6914-4c94-8ba6-d920cad355f2",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f2f19ae-a5e3-4da3-b2a4-7af03f194ec2"
        },
        "item": {
          "id": "8ba1a594-efce-450c-bb0f-6baef64c96ed",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6c945737-f987-478d-83cb-3d1400ebf12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ccec16-0bfc-4a70-bb62-db02ce491d4a",
        "cursor": {
          "ref": "faf822d7-ef37-4dac-9d0e-37d627d35c75",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "89230926-020b-4ec4-8564-e123dbe34206"
        },
        "item": {
          "id": "f4ccec16-0bfc-4a70-bb62-db02ce491d4a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "da38b81e-e73e-4376-93c9-b4ba8a761c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eee097a-20ac-4c69-bc52-8153cd7926cc",
        "cursor": {
          "ref": "625956bb-6ab9-4c0d-9efb-3611cac2636a",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "930d5d57-e2ab-4c1d-b0c5-5dc5b1862782"
        },
        "item": {
          "id": "3eee097a-20ac-4c69-bc52-8153cd7926cc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c3b46e9f-3541-42ee-b645-4fada0f50352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a57c3-8a36-4309-a5ce-6cdee3e1ad82",
        "cursor": {
          "ref": "6aad627c-f7b8-4bc3-b960-d123eee776c9",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "66fd5169-d8d3-47f6-b08e-6404a8ee7eb7"
        },
        "item": {
          "id": "ac0a57c3-8a36-4309-a5ce-6cdee3e1ad82",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05a6e8d9-0ffc-47e1-944b-ae9a1b8bc196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66c8fa3-6628-4c42-98a8-cfa8d8c5666b",
        "cursor": {
          "ref": "ac245d2b-86eb-48c0-ad46-aadaa2582ed7",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c664cb78-53ee-45b4-97a7-e5128eab6d37"
        },
        "item": {
          "id": "f66c8fa3-6628-4c42-98a8-cfa8d8c5666b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "756b703a-5d06-4f18-8742-bfcff9c17c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e94d472-5db7-4817-98c7-810e60764fb2",
        "cursor": {
          "ref": "a295a2f4-94bb-4927-97b3-440b04838110",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a82fe6fa-aace-4090-b014-c8e65f37b938"
        },
        "item": {
          "id": "1e94d472-5db7-4817-98c7-810e60764fb2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ca6933bc-fa7d-4d0e-8c4f-eb897083ac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b7b281-591a-4ded-931b-0a6c30836433",
        "cursor": {
          "ref": "1d2e45ab-cae5-4f8d-8ede-a09857009f84",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8444dd44-d398-486d-83c7-f1e2f86a8122"
        },
        "item": {
          "id": "29b7b281-591a-4ded-931b-0a6c30836433",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "29d846e2-9408-4d72-aa62-5765419d8322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef201e2e-2cbb-40de-8748-3527c8da684a",
        "cursor": {
          "ref": "895f4a86-f36f-445e-b656-cb4dfdc83943",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "380751fb-4da2-4e5b-8045-acce351c2d28"
        },
        "item": {
          "id": "ef201e2e-2cbb-40de-8748-3527c8da684a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "de189e24-0f5b-4174-a4c1-f7429efa75d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c4e439-b026-4a14-9d60-b4bcd616bae1",
        "cursor": {
          "ref": "78db907b-c1c0-479e-9ddc-c55a79bd2aed",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b37c8b9-9789-47e8-b15d-e461f01789f0"
        },
        "item": {
          "id": "45c4e439-b026-4a14-9d60-b4bcd616bae1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1288b56f-607d-4e05-bad7-97217fc96c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ecf9b3-3703-4e93-ae9a-76bc392cc54d",
        "cursor": {
          "ref": "c8f6a6e1-9930-4432-b8e2-c8a08881a90a",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dc3d8adb-75cf-434f-bf2c-7b19cefd28f8"
        },
        "item": {
          "id": "f8ecf9b3-3703-4e93-ae9a-76bc392cc54d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c48ac427-33ae-41f6-b85d-fc68d91fc2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbe574f-2378-45e0-80a1-791f859c0efe",
        "cursor": {
          "ref": "2dd8779b-a6ed-4732-a499-dff831557df8",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7f96205b-c13a-4e18-acdb-4f9529b50fe9"
        },
        "item": {
          "id": "5fbe574f-2378-45e0-80a1-791f859c0efe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7f766558-3a07-4d6b-885c-4d2dbdbd645e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3664722-8239-438d-ba0c-fedd0ccc88ee",
        "cursor": {
          "ref": "b73e53b9-021b-456f-8b0b-9ab8fb474f51",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1719e486-b0d1-4029-9706-497ca2314d55"
        },
        "item": {
          "id": "b3664722-8239-438d-ba0c-fedd0ccc88ee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "df1c7624-88a6-4715-8440-d7b6b56ef49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1044fe9c-c3e3-44c7-9197-c8be651f2287",
        "cursor": {
          "ref": "7259af70-f761-4ab4-82ad-9368cb69738c",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ac0e2619-60c5-4eb2-a242-1b94e7cf19c1"
        },
        "item": {
          "id": "1044fe9c-c3e3-44c7-9197-c8be651f2287",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef379fae-8e35-4a22-b617-70e66b655a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dd27d6-b027-467e-b5a6-0aaa9aa0762f",
        "cursor": {
          "ref": "d2f1f69c-d8a3-4724-9a14-511dd64c1ddb",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2ce68493-b351-4446-be8a-446fa7d70d95"
        },
        "item": {
          "id": "03dd27d6-b027-467e-b5a6-0aaa9aa0762f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "225d29a6-c827-4ffc-b606-39f5b0542f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a67c52-b03a-4523-8d3e-8cdee40b86c0",
        "cursor": {
          "ref": "5b8e0fbd-713e-4738-b968-c7eb6aad6280",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "007640de-ffc0-45b9-97b2-69fe396be50b"
        },
        "item": {
          "id": "34a67c52-b03a-4523-8d3e-8cdee40b86c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17a66383-fc7b-489f-b333-732ff0dfd12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb1ec93-cca9-4db3-89bb-003dbdb30621",
        "cursor": {
          "ref": "8bd71b42-ba1e-4454-9735-c2b4273bae8b",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "43ca1b53-7c3c-42a4-9054-f1332e9cc287"
        },
        "item": {
          "id": "7bb1ec93-cca9-4db3-89bb-003dbdb30621",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9a86f842-6c52-443b-8f06-1de710560341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021439e1-763a-4822-bd62-822802317b00",
        "cursor": {
          "ref": "40a7b8aa-0135-4197-a249-e576cfd1273d",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f110d27f-0701-497f-85c0-9e6d74428d77"
        },
        "item": {
          "id": "021439e1-763a-4822-bd62-822802317b00",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "51c75fec-74c5-46c2-939f-efea6eb1bb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa2fc84-5240-4a64-b101-1f210d815e66",
        "cursor": {
          "ref": "9a2f537f-56b1-4e4d-99dd-abde7dc3289f",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d430cbe-4e5e-4b7f-bcfd-3aa8a50c74b7"
        },
        "item": {
          "id": "daa2fc84-5240-4a64-b101-1f210d815e66",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d70bf77d-6c50-444d-914f-dedc424382d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9753d3c8-4a91-45f6-a65e-40ffd74e3168",
        "cursor": {
          "ref": "ab6352d3-fd42-4c28-8c31-62a5aec853a9",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1838d88e-6296-4efa-b6b0-05b1b0148e7b"
        },
        "item": {
          "id": "9753d3c8-4a91-45f6-a65e-40ffd74e3168",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9983c16c-caf9-4db1-8136-1d1170a4f767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e032583-c994-4f55-a132-e66c4f48d479",
        "cursor": {
          "ref": "f1b28324-01e2-4f16-a6f6-1868bc943d7d",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4df2aef4-e8c0-4155-bfcc-5b0b191d309f"
        },
        "item": {
          "id": "5e032583-c994-4f55-a132-e66c4f48d479",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21706e59-03c1-450e-bed7-937aae1dca9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23de1c3-7efe-428e-bf33-108e24cc218c",
        "cursor": {
          "ref": "8c25e1e0-9f99-44e7-ab00-3dd36f586b9d",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a901737a-214d-4039-9a66-9e353ee78739"
        },
        "item": {
          "id": "b23de1c3-7efe-428e-bf33-108e24cc218c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "83b6e8ba-662a-4694-91c8-dfdb72dbf93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb1d40-0920-42d7-baff-a54421fe12e8",
        "cursor": {
          "ref": "a5f237b1-420e-4184-a51e-d378d8c822d2",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0d722bca-9b8c-46bc-a110-9bd296f72d98"
        },
        "item": {
          "id": "7dbb1d40-0920-42d7-baff-a54421fe12e8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "95ff8994-5fcc-4f16-9763-23455f2af08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb562da-0acb-4a99-be6c-de90d3be3ecf",
        "cursor": {
          "ref": "c146bbad-11c3-4ada-b900-4a358fef6800",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "078e427a-3c4d-4329-97e7-2b1b387b3a3c"
        },
        "item": {
          "id": "9cb562da-0acb-4a99-be6c-de90d3be3ecf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8099db7b-c399-4336-9604-287fbfab85e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d620283-becc-486c-b88a-ea53285fc218",
        "cursor": {
          "ref": "de06e6ab-b403-4ecb-a435-e728354e9aa0",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4f0300e0-4bb8-4d99-9df3-01cfc237357e"
        },
        "item": {
          "id": "1d620283-becc-486c-b88a-ea53285fc218",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7a37e045-ba4a-49a9-b513-3d2f02782a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a83a0-50f6-41a6-919e-ccbc419627ed",
        "cursor": {
          "ref": "78e6129a-7fdc-4ff7-a27a-2ba986e82be0",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fd806b75-bb1d-4b94-96d2-61d03be7732a"
        },
        "item": {
          "id": "733a83a0-50f6-41a6-919e-ccbc419627ed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "08b2e8c8-8493-4cdb-b80a-fe145418570f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac25e4-b5a0-4661-90f6-6daf643784fc",
        "cursor": {
          "ref": "6810b45c-74ab-406b-9bd3-540bcbc39c9c",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "607e9738-e398-43b1-afa2-2c4a57473569"
        },
        "item": {
          "id": "22ac25e4-b5a0-4661-90f6-6daf643784fc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8396cd9a-b2f8-4384-bea1-155a1e24546f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 301,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38702a2-f18d-48dd-bf32-5e58514771ed",
        "cursor": {
          "ref": "8c431943-8c23-4139-a9ba-8961ca04019b",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "81b8c95e-2813-4f58-ae95-80e75a2be2f1"
        },
        "item": {
          "id": "b38702a2-f18d-48dd-bf32-5e58514771ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ba007a04-72f4-49e8-b2e8-1cb4310b7034",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a154e23b-4e4a-4cc6-81b2-de52110b4f96",
        "cursor": {
          "ref": "ffd20e52-faa4-41bb-8cb6-9bded75fde85",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "188fdcd4-ec78-4da4-99de-680c6366cfc2"
        },
        "item": {
          "id": "a154e23b-4e4a-4cc6-81b2-de52110b4f96",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f45f353a-3044-4857-b2fd-f6569156eaa2",
          "status": "OK",
          "code": 200,
          "responseTime": 365,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c3714-2a1f-4edd-bd57-2d15847a4c8d",
        "cursor": {
          "ref": "a28084be-830d-4aa7-bbfc-2f1ce6cbcd86",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "25861db4-7b0f-488c-942c-f9fc1cc31a57"
        },
        "item": {
          "id": "5c6c3714-2a1f-4edd-bd57-2d15847a4c8d",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "51713a69-ded0-4e73-a0fc-c45499504349",
          "status": "OK",
          "code": 200,
          "responseTime": 403,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20346cc2-5569-410f-a6a9-1d8765f9ea48",
        "cursor": {
          "ref": "274d2e8e-88b7-4e86-8b7d-53166a4e0724",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f8830fc0-1a89-4150-ba21-b5fdde038656"
        },
        "item": {
          "id": "20346cc2-5569-410f-a6a9-1d8765f9ea48",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0eabec1b-5fb0-42ed-bd34-a53d05a3d6f1",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
        "cursor": {
          "ref": "e1ff0d5a-1856-4b99-96fa-0e31632c365a",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "20819af4-a760-4dc0-96a8-1d02222e2be0"
        },
        "item": {
          "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f8149c9-684a-4748-b598-60ec2350f2e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
        "cursor": {
          "ref": "e1ff0d5a-1856-4b99-96fa-0e31632c365a",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "20819af4-a760-4dc0-96a8-1d02222e2be0"
        },
        "item": {
          "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f8149c9-684a-4748-b598-60ec2350f2e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
        "cursor": {
          "ref": "e1ff0d5a-1856-4b99-96fa-0e31632c365a",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "20819af4-a760-4dc0-96a8-1d02222e2be0"
        },
        "item": {
          "id": "31bc6715-dd74-4f62-ab38-d82983c723b0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2f8149c9-684a-4748-b598-60ec2350f2e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717623dc-3dbc-4bb9-b30a-a2157f32d2d8",
        "cursor": {
          "ref": "9cfc0076-e0a0-44cc-8351-a7a1785f8bac",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7eb506fa-7506-4146-b5ff-e1e81b42249f"
        },
        "item": {
          "id": "717623dc-3dbc-4bb9-b30a-a2157f32d2d8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "46c4f7b9-9836-48e7-8610-07675557d21e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe41781d-946e-4d1e-8a22-9a6006e65a55",
        "cursor": {
          "ref": "18da962b-ce5c-4ff4-8a56-415452efc446",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a683b6eb-d1ad-459e-9a84-25bda7772b7c"
        },
        "item": {
          "id": "fe41781d-946e-4d1e-8a22-9a6006e65a55",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa49e545-8619-4232-9e6e-4c2f88e1a109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe41781d-946e-4d1e-8a22-9a6006e65a55",
        "cursor": {
          "ref": "18da962b-ce5c-4ff4-8a56-415452efc446",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a683b6eb-d1ad-459e-9a84-25bda7772b7c"
        },
        "item": {
          "id": "fe41781d-946e-4d1e-8a22-9a6006e65a55",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa49e545-8619-4232-9e6e-4c2f88e1a109",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca16b31-3b49-4c14-8d24-ff92071128c5",
        "cursor": {
          "ref": "81b41f1d-490b-4887-960d-aaaae561f36a",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9718674d-fc6b-4e8e-a4e8-b62021a65b35"
        },
        "item": {
          "id": "aca16b31-3b49-4c14-8d24-ff92071128c5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fe5eb750-1eb7-4810-ba19-c87f5fc0bf10",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9064e975-194d-4c52-8bc4-7c22672e6c23",
        "cursor": {
          "ref": "1191b8d1-f1ac-4820-bb32-af4383b50a1e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "19b959ef-27cb-432f-95b9-146b995e9e73"
        },
        "item": {
          "id": "9064e975-194d-4c52-8bc4-7c22672e6c23",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26c254dd-68d8-414c-8a99-286c2d0031c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9064e975-194d-4c52-8bc4-7c22672e6c23",
        "cursor": {
          "ref": "1191b8d1-f1ac-4820-bb32-af4383b50a1e",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "19b959ef-27cb-432f-95b9-146b995e9e73"
        },
        "item": {
          "id": "9064e975-194d-4c52-8bc4-7c22672e6c23",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26c254dd-68d8-414c-8a99-286c2d0031c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a2d111-5b5a-40b4-accf-2442941c0baf",
        "cursor": {
          "ref": "58ffcf6e-375d-43e5-920f-9e3d2d42ea2f",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3a796ad4-84f3-472e-9e2d-67f329d4d8d1"
        },
        "item": {
          "id": "47a2d111-5b5a-40b4-accf-2442941c0baf",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "cd65f251-541b-4d58-9413-58700a065a98",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 573,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}