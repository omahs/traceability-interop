{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a6ca4260-9e2a-438f-ac24-fdffc71755f7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cecb6336-6bc5-46e7-a8d2-351c1c2b65f1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f25327c9-a828-4b1a-be5d-665cae2b7d1f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5742c793-f2c7-474a-936e-50485893ace7"
                }
              }
            ]
          },
          {
            "id": "50139637-9902-4ba3-9562-5ae537aa2da1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e85ebda0-adb2-44d9-a41a-8dd78287ac5c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "458b7573-2963-44e7-a3ed-8f343b32b2bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4929f6ae-f038-4a7b-9571-b7bee6430d2f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9e514a9b-a233-4eb0-b83f-fdca1efe67bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99bc16f4-6c80-4966-b8da-0fa4ce51c45a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4414e54c-cdde-4c47-b632-77d6d3f37c5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3854220-9997-49c4-9c9c-265b97708da7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f805ef15-7c44-44e9-b500-ac2c2afa5262",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2905ae7e-fdf0-4b56-91cb-97ac37ba3f81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fb4fd9b-55bc-4054-8e2c-4bac09928c4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0fcc1cc-38b5-4816-bd66-0cbd8c668682"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4b34ec5-6d58-4bbd-a303-b6a37dc8c1e1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "551a8f00-3a77-4427-9b1d-397b97f3dea8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b49172d2-7e88-4cd9-b8e4-c7f6af353f1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "deb7fd8c-1865-4130-8847-a0eb61835cac"
            }
          }
        ]
      },
      {
        "id": "1918b96c-21ad-4cef-864a-1af26af39de3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "061f488e-81bd-4a0a-8521-b91cf295d476",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e5d7340-e39f-407a-aa2e-c07169f80615",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85a91011-95ac-432b-87b3-1dab84df2a4a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4c277c-6270-4fa2-810c-2e761d043a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3701bc7-e5d9-4e3f-a7a0-2a735ca5b83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca279d63-abd8-42a3-b5fe-3226b1edb6c5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e5ee32-aba8-46da-ad4f-0dc61bfd2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6fcd2ae-c6e4-4153-b51a-d38fb3035c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589d108d-e622-4bc3-9d16-6d3bf9deffdc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d446ee-3170-4a2f-a7d5-085a7c669b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3881f8b-d147-48d1-ac74-9b1d4227efa0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e63a30c-13eb-4c9e-9454-601e78728e03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3240655a-f6b3-4c0f-9902-73a04d64b1ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86c10ee-1026-4856-8d7b-186789f55017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7d8e275-9b5e-4f7e-a4c6-82cdb603a46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dd6e2d-3207-44ec-86dd-87586a4971de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcdf4a2-2e68-4cfc-a96c-45e925d9b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70decac3-676b-4588-8704-e72fc70ca66c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754b41af-d8dc-41a5-b68b-19eb8ea548eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0809a539-34c6-4c9d-8094-b544f65abd85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55e8f4-c151-4c71-9492-eb63dd11b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6e7d65ee-81bd-433c-8b05-75575a217330"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aeb350a8-c4c6-47d4-962b-e2875fcf22d0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea04a494-92a5-4f6b-b9d0-269f3b33a224",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bbf1fc8-81f3-4b60-b75f-e4a22c99fb40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5d245b72-4571-4d17-bfcb-478d9dde4a5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcd2ca58-24b7-417b-a9ee-e830656fa1f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "897f0080-ddd5-4213-86b5-903f7b13f32e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c353f646-7065-4e68-9178-975a69fe7e9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0afe67cd-feb9-4ada-80c6-7ca0ebc44c5c"
            }
          }
        ]
      },
      {
        "id": "1326f3d3-4475-45b4-ae8d-88349d944d2b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "83ffce48-7027-4bed-ab09-06b90b174f4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7171d3cf-ed1d-4156-bf53-8f03a7ca1b9d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "61a39420-810b-4b89-81a1-be37e9e30789",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd18cee-4196-4f7a-99e7-5be6daadaf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d1b4c1-6346-4647-b71e-46f09bf5f64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21398780-32e2-475c-b890-8b0a589a619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f8ca379-3e06-4876-baa0-7ea076fe07c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cabd65-9c5e-4407-a29a-5b6877dfcb2f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e996049-d518-459c-a3c7-e7efe162a35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045f282e-88d5-4e04-a29f-ffe830c49739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef5773-d9bf-4c48-8402-447b6c93371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a47cf86c-2522-4cb6-b212-d839ea0b2135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317297b6-e226-490d-8dc2-81022a3b91f1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746eedfd-7b12-4ef1-8d5f-98fcd7211dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15728c4d-b7ea-4d7e-85e2-4211baba519f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21129ca-d32f-48e3-80e4-67add5b14098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e37a1a0a-16a0-4727-92ce-c6617ba31648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0726cb86-14e1-4616-ad6e-e9a40307866b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3375e3-8321-4d5b-9c53-13cbdc77e072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ffd5e9-5340-421a-8e15-f9f182d87744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6809c193-2352-432b-b22d-998f504bc145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba159f0e-4550-484c-9421-269043e220cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9f61e3-4060-454c-8155-0212310726d1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093a6760-f9bf-4e20-8c1f-a2e871e46918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1461e0ad-0024-4f07-8448-2eb85ff5a896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f8cabf-3eee-4a08-b391-957e36d93dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053ad01e-e64d-4a0b-a8a7-708e1f24b59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d476bf0-b3d6-4a00-a600-004daef121b6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043b356d-c6a5-4bea-bc17-9167b966f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1ee775-e46b-47fd-9a7c-237c3eddcc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bcfc83-ccaa-4680-896f-6deb0e5ff77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de71655c-d73d-4dc4-ba1c-f79da915589a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53760bc1-aaa2-4c66-803b-b9731604ba7c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5fd801-22a3-461e-aaa5-e294e0ef7507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bc62c6-6b0c-490e-92c3-4484f104abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1806b29d-e51c-403b-a18f-258bd9c5e909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b2f278c-fbc7-4b7b-ab43-c3f46a75f3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758349dd-1a1d-4456-9ca7-1b21d7bc7306",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1c46f-c445-4732-b6cd-b54d2041abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617c6b98-6365-4b0d-9b82-012746c122c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb9eb7c-3143-40ba-bb16-44114fc6c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e68b65-f030-4ab3-aefc-82409cce59bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5c44f0-ad3b-4c32-b211-67d6e3986e09",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42daaadd-a3a0-4204-bc4a-b470824c867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5478b588-df2b-4fb0-a2be-731cf37f786a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1513e524-0198-422f-95f7-9fbbd91b1b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75d2a4af-4952-44eb-a052-fbe3a8c0beb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cdef8f-bff3-4c46-9236-0a010f971a65",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9057230f-df6e-4bdc-b3fc-297499664ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f1a6d5-c114-48e5-94bd-75c50ef0ce80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575979ee-53f7-4387-b9c2-f422eec5c349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffaa6b88-bcf6-43ce-9548-2c9f969d9461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd2c46-394d-4570-8dea-86f261d74fa6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4062b52e-1fb3-4dae-b41d-f76e9043b07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ceb0d4-915f-4ed9-a6cb-f2da0bf1cc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd5373-feb2-47c5-9ac0-818ec3c5228c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29838a73-92ac-44b6-ab13-b179ab55070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b40259-390c-428e-a5b4-e7f358b2c4b3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce1a6cf-6a30-4db7-b84c-549141e63a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ce34c4-70e6-44ac-9f40-732e67acdc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59e0887-8550-47ca-99c7-93b880c041ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e47540eb-c1bb-4121-b2a5-5465d799d6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c259619f-af85-42b3-9bdc-5a85d526b432",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f7f27-c4d2-40f9-8a43-272c89d9df44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c692092-cc44-461b-97f8-792909fbeeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28238f01-873d-4c25-bace-9a97895ae00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d30fc84-8df0-424e-a220-6a42a54e7d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2947bb-5c4c-40e9-bfdd-2ff2271b35cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3775ad-976e-4300-a455-7222d152b1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2bfece-4bcf-4363-abd2-45439d7a5183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065caab4-1c0f-4203-aa64-3b14a981305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4584ca0c-bc12-49bb-8127-92ff0a9f42d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b688b-56b6-4cfb-8e3c-15dd741bbf46",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa394dce-41ae-4fe3-a8dd-e0970802717e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f48455-93f5-4067-bd91-6365072b5056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1faa4a7-7efc-477c-9590-2aeb4624a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75139cb8-3992-4c3a-93bd-3831032d7043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6024d96f-bd48-494b-93c1-cb9493fcae27",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b52292e-2615-4080-8627-52b48f1838c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc9b6d0-eb24-4618-a9e3-916b6905f3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e0b619-ca40-41f9-bff6-d730e5aafaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60d4dca9-7aac-4c3e-b6dd-a2f5c0fbdc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7879ea55-bbfc-4c2c-a617-adff4cf81c72",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8421772-80ba-499d-a614-85ec2de4115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20738295-153d-4230-ae09-b2c044d939f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58014685-87ce-44b3-ab0f-9eaf48e71495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30b1197d-27b5-469b-924a-2930c6e182c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee281bb-04a4-4a67-8898-ad9761810066",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c8d212-4210-4d26-9cd3-3d4346f7d652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1947b5f8-947d-4f18-a9fb-a84d9af10563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b2924-6020-4cc0-9230-046418a21d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf15507-7404-403a-b794-dac83a8ac8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cf1674-d56b-4f61-ab27-382f48f5af03",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2ee480-651a-4cdd-a4ef-0152a401486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc4874c-e46b-494e-b9d1-6df09857b777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf8d42-7a8a-4d47-9973-621406214b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e130339-da11-423f-b9a7-cd34ebe62c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3d0e83-2a13-40a6-be6b-9945fec32fcf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a71bca1-4096-4a3d-be0d-91b74fdeb2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4293b3d5-c52b-446f-a8b9-c6916e75a0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fe10c9-be5c-4507-a9f3-ecd438ec32c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f44573-1820-4631-bc99-890eabdbb301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56155628-d2cc-4636-8546-ea6d9db993b7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdc8b0a-5cb4-49e4-b060-a6d14c13c71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d517f3-0e87-4f80-8e67-dab5f1bf8ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c99036-18bf-447f-8261-b01f82c3fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a5ffaa-ec1f-41e8-b1d5-a56eddb43ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba420b8-5b19-49c0-9682-3bdc9f142189",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12bd54d-0684-4fcb-8fff-710ea643a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a259a5b9-8ca1-4fca-81b0-e878cf008f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d941e-adf3-4f25-8007-8b1983586783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5207bf98-2668-465a-b84b-6b2f94dbbbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8d6b75-3bab-4805-8e67-8ad83754f8b5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc6c79c-2f92-4c74-b3d8-ce970a5b20da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e68260-18bc-4ec3-95a5-48f6b532fc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66424cb7-932f-4644-b620-1d66f49fb0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac60de3-5cd1-406c-9b8c-21f59eabe000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8669981-c6d7-4086-8ca3-775a24b8f076",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c392b9-5936-4057-a90a-7f720a5bb568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc69c27d-2f78-4301-a0bb-5ea1c72eddda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7534a9-15a9-4d67-9998-ac5b358fd814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0646e8ee-3313-4f6a-b34b-8a757c64e806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3645f6-ef8d-4809-a057-14cd22b92838",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e5220d-edcb-4bd8-99c8-729d54c50639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcd804b-7435-46e8-b810-a5ff2cc91bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a591f3-9fc8-46ba-a2aa-bd50168c8225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1470cdb-64f3-4e3e-91cd-c6ab7694a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3176ae-7c64-4ab2-bf10-5484fae779d0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ab1686-7eb7-4160-8994-531670b3120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de27f7f-d0f0-4cec-8563-b0c8cd56b87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420d3796-d076-41d8-98be-54bef95dbb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a5bb6f-fd52-496f-ba14-7b942bd3b9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174126c3-d037-4b31-9e4e-8cb764189d76",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d553bd0-213b-4fb6-a2a1-ff3444d852a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc2a5f7-4b5d-4469-82e6-33ca490a82fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d391ad1-439f-442d-9162-697255ef2bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37a1260-bd1e-4376-be18-513656a32d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90736a86-3ec6-4658-a64f-72ee5c1c4cb3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b13412-5ca4-4338-9a9d-43cf2e3318f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6cc7e7-796a-4ac9-84d3-e1795272ef29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57abd7ca-1fc9-4412-89ef-ff03a2ef0bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5246d422-d350-449f-af74-5b979e41c448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b076e4-fa41-4e0e-b452-86e4caf4f42c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c3c2fe-12a9-4fa2-bfea-45843baa9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c06dc03-3290-46d8-a7c9-ef19ccbc1cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8199bf0-cadc-410a-af66-dd618bb84bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac32eb9f-13f1-47eb-9200-9d47c6082f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9180f07-4ac1-44b7-92e4-0cd322c3597b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2147725-9b9b-4998-b5c2-632268e7298b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc964433-b81d-496a-88e5-5c33a15aae3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fa826c-a5e3-48a9-b4c9-3730e5cfd6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b43b79-40e4-4491-a283-bdb05132b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d3e06f-81f7-4c05-a20e-26f01b3f0a2c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01b0138-c4b2-4dff-ad47-7e5e072e7485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3074230a-f5df-4895-8cc3-74758dfe8457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832fc1a0-e9f2-4a15-8642-2a26b9e67d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b8f3f1-0233-4a30-88dc-37eefe7d4382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152a97d2-516e-4cdb-8b04-73c3f29df6ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920b9c3b-b474-44da-b8d3-09a0e1a150b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba241a8-3787-4fae-b681-5fbdef58abd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04c9798-8581-4764-a086-00dfef0fecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0132fefd-feb4-4a18-ae8a-af11634bd140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab53cbf-6ef1-47d5-850e-49c3996fda54",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b394b1-9645-4c1b-8e0c-dae9ad467f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d4dcf7-9e97-4152-81ab-4b26edb01e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50232953-1e41-43bc-9283-d14ed1121d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73096bad-8671-4c82-9da0-d0128ac43c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4f8b69-b9d6-4863-bfdf-73357a74ecfd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b03e779-3f17-4a1a-8f38-a6a57c532848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8714ef5-81f7-4f4f-88cc-27bcf647d7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90495b99-bce6-4319-8600-addad929a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c754749-336b-4e11-8829-01c59791f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba93780-0a66-4539-82b0-21c4bb0296c3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6a839b-19f8-437f-8162-e97be2e842bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773cf4dc-0505-47e2-bb88-4c6ed9515b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e4a40c-83ae-4b2d-ac5e-2b78c6ba0728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb95e35-d968-44e0-b7be-e28a6b9b1600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbab849-d17a-4cd3-9f68-7da07e58f770",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6328de-1bbb-428a-8c5f-ba309671d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b16ff1b-f34a-48d5-b923-3a368093154e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1247315e-fc14-438d-a564-ba30851632bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3918b33e-c047-470a-8427-11ae2071604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7667f4-1323-4469-9e0a-5fa4b0ea856c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72493026-e4d0-4178-b610-37a35022982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf93fd8-9172-4713-8d90-0872b271cf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c9c95-f749-4daa-83f5-b2afb03bb384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9270cde-176b-4bef-8194-ecf6f122d440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc05ec1f-92a9-4a06-bd9e-cdb72208f47e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e51eda-ef8f-48f1-917b-ff690201b52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14b4092-30df-402a-abfc-9782b77fe2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cc7952-553f-4403-aefa-fc420b3910ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6218e8f6-346d-46bd-9e04-4bead0a39bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266bcb7a-15aa-4ae9-a7e7-c2801637f60f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df2f2e1-1f83-4387-aa81-650ffc6b0d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a3e0ef-7641-4712-8840-e632f14a483a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652134ca-379e-442c-a9b3-e5e2b38b7af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0c91d0-c0bc-4433-bd36-63f888a13c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be60c19c-f1dd-4754-99dc-f2de460badab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acccb12-f66b-46f1-8ed5-5942c8a81e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371149f1-554b-4ef8-a96c-afb9f8bb376d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe313adc-0855-46b5-8546-8015bba98875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "35efac0d-be67-40be-94ba-5329006e6a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0432d484-e2df-4668-a62f-048013aa849b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce71479-6620-45ed-9645-aa69c071fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70fe31e-f800-430d-9631-b3f6dc9d65f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991cf335-2a3c-410d-ae98-9c1a0453019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6a9a0f-e64f-48b9-bf83-7c98754b77f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4304ad70-94fb-4ae7-8047-4c842f3b7b8a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6f16e1-0998-4374-8885-bee3a363edf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb884c6-bccb-4dc7-9bb5-18821604673e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f80c55-3274-4505-953c-0a46ea4b5215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce24364-3ec5-4017-beb0-abaf91b02c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61f1a0f-4bdb-4eb4-900f-ee14010656d2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e50dc5-68b6-4f5a-93f6-60c5d9013378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f308b01d-2466-4522-90b8-d2b24601f81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632e4c9-19f2-4227-bbb1-de8f3077f952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74670f98-a5e0-4bda-b941-6674ae01c76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f7a21-4158-4970-af96-117bc17b7e24",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c044e-e5bc-4a30-aa1a-53a8e352c8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca30aac-c5e0-4518-97ea-bc9a464712ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790c1a41-aa90-486f-a6ad-c2f97a10477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "18b76693-4788-44c4-b5b7-e9778ceddbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f398338-aa26-4d04-844b-45e0de1ef5b8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf5d1b6-caca-4a48-ac26-d543229bb542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8196fc6e-a166-4956-8974-2e353096f0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92dbc6d-cfb0-4447-b2f8-581b75a09538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4063ed1f-2e7f-4ca5-b0ca-7adab62d8e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18344d6-c26c-4c77-9ed7-92c2f2865ef5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d799d-7137-4510-91e2-03f6129f69f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31ab06b-4283-4048-9b60-d234d9e59307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bba77b-2920-4344-b957-848082aa362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fbaabf-6766-4e37-9434-c413d3d75e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ada4e9-9bdf-44c0-8ad4-352a2bde0fe3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35444e9e-569e-4178-9ee9-441cedc72816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630d6b37-99f5-4484-8a1f-983e6262a1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2d42de-38ab-486e-8138-53b05bebd6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ac4faa-8bf1-4af5-aa51-7f3b4a454c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e1e8a-5a37-48c1-aa63-a391056634ec",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb008821-49d6-4233-99c9-50ee02f8e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d35896-76b1-4a8b-a024-b23075200532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b57920-fa73-47d0-8219-af94d4050b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9234c528-e191-4710-a1ef-8fa77793553d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b261b8d-aae8-4f18-b94e-5429464e6493",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f85f953-6c7c-4286-a19b-213f5a014968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4bbc22-d8db-4655-8043-811482b4f512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a1625c-6537-41a9-8e43-2fdb564422e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c35fb10-9023-4557-86af-e13dd34cd0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ac72eb-185b-4023-baf8-08a2113c8f25",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89eb35d-4a4b-4e5f-8fc7-9bb2436a578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9a4654-5972-49a6-84b9-95d4d937b318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2002c14-8c2a-4fb7-857a-438058ae7685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "255e4c65-3ef9-4330-b217-4d2ecdc2158a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c37fcf-6b6e-4c85-ac03-732eff365329",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65454af1-13c5-40f3-bbe6-2a847c9a72f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b80e00-1c0b-4e34-8412-79c67d9519b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f081ec4-c8aa-4a17-a54d-2bdf44e806fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d82fac-ee49-45a2-87c8-17cf778543ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbca8e2-1f83-4efe-87cc-f5eaa3066eb5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe0bfa9-3da0-423a-8af9-29fe1167fc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb519b76-f762-488e-98bc-4cb662e9cef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d973edc0-3eae-4a0d-ae45-95c1c8093467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcaf8775-f81d-4fb2-8a45-c9c6cfd17663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd5b106-b237-44fa-8cdc-518d24a8203a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e372561-6500-497e-8e89-e35c2ff71f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbca4096-b6db-4e69-ae0c-76d7ce2e8e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13297993-2893-4497-b01a-b1f471141e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12f05c8-bcee-48c8-8647-fe318b1c012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7fff9e-a8ef-4efd-b09d-01d83f128043",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a7f5f3-6a50-4a9c-9f64-ab4167f38802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac02a57-7bec-4ac5-a508-6ad4f2832807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f890060f-f043-4f51-a4b8-a5fea3c3b271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e89a9dd1-2f7b-446c-bc28-4787e88e2338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec712913-7f8d-4ad8-9626-fc2ac3bcfeaa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea8c297-dfe2-4fec-b0ca-596b5758316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dca429-3bf5-445c-8e5e-d70bc3b4d52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0df214-d871-4ac5-bb24-0f019c13a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c82b4-7b3f-423e-a09a-c2c358537611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ff8f5-fe4d-4241-b148-a496cdd2e849",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a839a9bf-fc2e-4633-873e-05bfb4d3cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2f674e-528a-4758-b8d0-94157ba60f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f8ebce-bc16-43e3-ac58-ad78efa45d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6d28940d-9549-49fa-8cc1-438727e9725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da7dcf2-2648-479e-a098-50e0ae1538d8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f51be58-cad2-41b9-9779-4254cf73e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cd0b42-9259-4d15-ade7-b80c3eeda46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5868238-cee4-45ca-aed0-ed58abf5a24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4a7eae-9d1e-4297-9dfe-e94244d3f744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6c9864-0f02-4a8f-aaf2-bbb2f4521716",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c0537-36b3-40ab-8630-7e6d42270d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba26f293-a699-4402-bccc-91f5d4d5a570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cc809c-5dab-4ae8-a335-273553968d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7457af8d-b1cc-4539-b09e-9d76e5714145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc920725-2a96-4043-a37d-5c183deefae2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8850ba81-7337-4bef-b132-4aca5df6f438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efa3452-6382-4358-9800-6dba51ef8a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452cc01c-f72b-45b8-af47-7768fd5918df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dab9238-5400-45cd-b78f-9cd7e54b8ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544b6be2-0f03-4ce9-b1d9-98a1ccd23ffd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601a0ea5-e5f5-4a7c-b15e-c2cfdcf95c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bf83e2-ef36-4d42-be90-1a6813e10997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3c7237-1ac9-4527-9fbc-3d3412963e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "700d3db9-d26f-427c-89b5-8a69d85622aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e26be-9236-4e03-8ba9-d80ca34ff2f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfdb162-1747-4422-8546-e6ac3be38ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bf6a4d-a0ea-410b-b02a-81db97694177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a291d5-9bf0-4e59-9c6f-cbfeb9875347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f243d6-a726-43b8-baae-31bea8977a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b1c6ec-8513-410a-8906-0e80d83e4c61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2052f6d-161a-49fe-9c97-00be7a3861ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f149654a-3b70-4e5b-8987-8a34db43bebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410d5a01-368c-478e-b5d2-7becb673b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a718c93-5e0f-4d09-bf7b-fbb3c29f8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9421dae-180f-4f8f-b18e-e8e7096bd1ef",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad81243-2506-4b02-81c7-2caa93f9c02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bf0bd3-8bb1-4b05-a754-f81ea0c0befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a012b75-2bee-46b5-ab48-8aed12b58464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd999fd-85b3-4284-884f-17d9135b60e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f2bb4a-46ac-4204-9319-5b8ab71e88ed",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613cb152-33d3-4a35-96fe-078b08175cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0142ce1-a0a6-461f-acd7-28d7b06f965b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29dfecf-8eca-4a50-a5e0-d48aed4f0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e1adbd-5d88-4c4e-8c1c-25d5444ce393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ac2f4e-5295-48ef-b371-3679351abd9c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b8bfa9-003c-40c9-9fcb-48d926742fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133feea5-0b13-4f5d-85e6-85973cecc76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac527a6d-3e51-424a-95fd-05c58021928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac4f880-de82-4490-97ae-2ed447a287c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea87871-8bae-410a-bc5f-996388265466",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962b6f50-948a-4e82-bd36-48fbdd460c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89ebeb0-e8ba-4aca-a57b-6d33f1a2d4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b6573a-29ad-4214-8ddf-8fd33cd69c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b46816b-ebcb-4ce6-a1b5-0a8937a60e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8a92e6-3bbe-47b0-a70a-639c3552c8f9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37932401-3447-4557-8c39-0fe67d676634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cfb722-e6d4-48c2-87f8-228c6435d90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbbe1ad-3781-49dd-b5fe-a1aa654f432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d35a8787-158c-4df7-b240-f690b6036709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51c0541-955a-48a7-80d6-57981606ec57",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b98227b-333a-439b-8c91-838da52f24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c739875-f3a5-4597-9990-00652c971017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dec601-75b5-4435-9bb6-15ba8d6472e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a44ed7-dd20-4778-b977-451beedfe8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf43bf-7647-4f00-bfc8-5aae4d599eb7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3374bc-5909-47ee-b15d-e7cd6b335335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea88647-6fce-41cb-8cb2-e9e136c1bfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ad3005-f002-432d-a906-ccf6e188c2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a72006-5aba-41e7-864d-a8f0bed63d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379d6d41-6d8d-4dae-ac59-6c2ba4db98a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b439d11b-3dbf-4b4e-8833-a12e84d63109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eec454d-a5ff-4151-8d78-653710d0f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c4b72a-618a-456a-95fd-fed2cc9f646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0378bb32-bcdc-4e09-b1d5-67eedf0da325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec03eca-4f27-4b9e-bb38-a5bf2ff3cd43",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80a366d-3aa0-4e1b-ae11-dcea38ea2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a290d70d-acbd-4e85-9ebb-221b370aeba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4526858d-8a99-4dd7-8887-d91837a677ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f2b6ce-0fe6-4afc-a143-795bcd3b3383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407a8876-b390-4c81-bb0d-0d2176d10f95",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c061725-6c2e-4736-98d0-2e8cf30b508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e47bac-5c0e-4f90-91b0-d6349a2d76d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f252fd7-5c7a-487a-8159-8752b6329501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe9497c-85c2-4545-93f8-9492a34039ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e65ebe-318a-472c-9361-d70c585a0dda",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b93500-6b28-4d6f-9806-ff1d210d0a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a856d3f-fa2c-4d6e-90d6-fca0f5a4afb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff57c07-1093-4f3f-8117-ac5ac17f4fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "374a0511-2eda-416a-81c9-020f881045f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f58e499-b8aa-44fa-9b1b-7940319d8795",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d076458-1729-40ae-88db-236ef559a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0e5883-08e8-4173-96a9-ebc0c5bd8428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d525bb-cd69-426d-8e7e-c786c4236475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f866fad8-1a52-4d88-818e-304eb23b0d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cbb405-e37a-4ee2-a5a3-850534f733b2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d54a86-2eff-4035-a4cf-1e5e3ba33c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760c42a7-86e7-4118-9f49-5536ea55d9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f95e8ef-ef04-4f88-bef4-024ec1d62a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f98261a-0dc0-49ae-bc3c-f041cd170ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0736b99-5ded-4e1b-8af8-bc2dc9485487",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d16238c-7252-4c20-b88d-ec098797c693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebdc18b-1acd-45a5-8a4d-3a9c729ffc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3c76a0-5e26-4c88-9942-02fd166aa45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea4c2c9-91d6-4ad6-b9b2-7583d20da103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4de6bd-dea2-4e34-b0f9-6fd9c87834cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972796a1-803c-4eaa-8b4b-59fab0729d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53ff5bc-2029-4cb2-b3cc-4db1094b2fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85d29ad-497f-4a1c-8996-6c0049037322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be05a32-dc48-4e33-9d5e-ae036f0841da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03ccd1b-78e1-417d-b4bb-7fc5aa560ba4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee3d3d4-ae60-4675-9bc4-700ca2c0ce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a75e38e-40a6-4e2b-8d31-8467d009e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e5336f-dc7b-4e30-b723-2320a08fdf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16341a14-b241-4de3-8010-7ab7acbef93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a283dd1d-750a-48a7-b280-dc9770f29a89",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc84537d-3052-4fea-97f6-fd1f2363be86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2526f040-c488-49fe-a04e-2ff099f3b3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554eab26-42bc-4577-b4f6-c548ad8390b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d976bf3d-424a-40b6-9bc5-101073a6f802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c1f35-d624-435e-a321-2f343b73239a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbddd3-ed4b-4e9a-8418-3000e33a542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc100ed-45db-430f-8dc0-919c81a0c90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a51e33-ba3a-425b-8b93-af3e336776bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87197a11-cab4-470f-9bc4-22bd32ae7a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92724f85-d781-4400-a1ea-f83fdfb9a45a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3108f6-5d52-40db-b360-6613a68bac85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f662c2ea-566b-4f37-a8bd-0280808982dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894fef97-04b8-4e74-b654-3ba1b783d720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f73973-61e8-4b7e-9dcc-7a0e515755d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc86f8c-f9b7-4273-959b-6fc139dcfdff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baa45a5-6f12-4a3c-8b3e-295dc0b2d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6ba8d4-8064-4306-9cc3-4c7c2d0550b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc19b2d8-56ea-484d-ae28-ffd8e971d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc44bf6f-15cc-4efc-97aa-a38640e36605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0a83d7-6b07-4f3f-8f92-2cbedbb29630",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da37e5e-7d4c-4135-86f5-83b03176115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c709e9-585f-41e0-b5b9-3a7a60238ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7eefe02-4581-4e04-b5dc-47beafc4682c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c44d6e-2eb4-4172-834f-9c12120e3c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c9c462-364b-42c9-8d94-4b1f7c847edd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312ac17a-376b-47c5-b035-cdfcb94ea44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c8b779-e951-40c2-bc98-baabc23adde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9f108a-2e98-47ee-965c-a180f58053a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0ab8a1-12ba-46f9-bcb7-d66c34dd9d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8904d2-4f7b-40ab-8a77-1eb81634d98c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cf5bae-89fa-4f67-a00b-de24db37061b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b0051d-d462-4af5-83e3-3d4d5ae8a9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a282c1-16eb-4ea6-a213-7eb3cf9658c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e00bdf8-05b8-4c96-b0d0-053ca26e881a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d83b65-b690-4b8f-b13f-5fec78dd6782",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca42389-ccd6-4c4c-9dbc-aea686d7771e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ec2dac-3879-458b-8e8d-d2616a0378ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84092f2-4727-4ac1-9bd7-6da6c14a6db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7c1df-4d60-4fef-817d-acfa460febb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c3bdde-437e-4b32-a78d-257a8b76cea6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b929eb78-1c6b-493d-b218-ac544de144a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdc84fb-0fc9-4a24-9c10-0591298d4cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36846c2-070b-4f8a-8c02-65353368f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "409c65c7-4508-4b22-b734-abacc8b31b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a70014-fc34-4666-97c6-3189b1a8f952",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598eae9f-0605-4244-aff3-6262894fafd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb15631-1979-4c18-9bf8-0f0432d8eadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e859288-4fb2-41ee-acc6-65245826a406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c929662c-ed6d-41ef-8de8-c9e0960c2bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9317e1-9df7-4bce-928e-98d284375957",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f6c64f-3cba-44f0-985a-9e07443f55df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17701064-378e-48fa-991b-56fbaf27c8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d64b50-2156-4287-951b-743cc1dade55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d82ab317-e000-46d9-a574-8cd969295aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bc94e5-dc2e-4d24-9d1f-07c328c07875",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0664ac2b-0c6c-4aab-950a-a5ca0fd9a5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d316cc8-9211-4eba-8979-352cacdaa485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997e911-9c11-42fe-b57f-4e3a8327e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bb2e67-9d5f-4b87-8631-06b76b679865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4369de36-cfde-4683-b0ff-9c0fcb72dba1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052d30a-d27e-42d1-aac1-4e8027a6e74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190afc31-2bd1-4d66-963a-4a0778d7c312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34b5b6c-0aad-4cd0-b000-b56366d7e22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b319036-5252-4234-a3ac-7369372430f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f56500-2445-4b82-a896-4075aff53393",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e365d-32ac-4927-9db9-d840929776ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34dc1cf3-5516-410b-9300-6d2aeb11c3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d5784e-ab4e-4cf8-bd18-67bcf80dc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "030aa08b-5909-4700-9c1c-f55e10b7753f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37516d57-6a7f-48a2-895e-66f9156e9d36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb7b6e88-b3a3-4719-90d4-49fdb3f8df20",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dacdf69-2643-4f47-8095-b1bee2c353e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc738f42-7255-4c5c-9ae3-7a41073840ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96babfc0-9559-41d6-827d-57f10da16bf8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ede7c278-634a-4308-b2c3-011c2021b772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdad460-4c40-4486-b070-0f91cfee1cd9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8aa9e7-ad5e-43e1-9b0c-eb7d7c80f443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba37ce65-5737-485b-9c13-be2af88453ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9855496-2d22-424b-89b8-96c2c2cf8b78",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c12c3dbb-eb53-4a95-a4d3-faf84f751999"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84112658-c6e8-482e-b073-33967dfe2366",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48095d61-a4dc-4004-a243-e5dc302ba3fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c2dd0db-169f-45eb-bc2e-51c05716e5c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a865b923-5f85-417d-8e22-181cf826cdd8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb9feddb-5b19-4d0a-97be-aa969c01bb0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef5067c4-aef3-419c-8f54-acf78ffa9b59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69dd3540-b53a-402d-b763-7e953d766337",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa809c64-969b-42a1-a38d-bbb90877022c"
                }
              }
            ]
          },
          {
            "id": "77abf450-99cd-475f-9e59-c6c9d45a3d09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9717dfe-cef8-4753-906b-5049ccf10bea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a76bece-22d4-44d8-a96c-8726f93df87f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0058cca-8344-4e5d-9c51-ddcb9d7574cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a277a36a-a94c-4fa0-bedd-f2838069e752",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64eefaff-65e9-4cb7-8060-a6e0360e4570"
                    }
                  }
                ]
              },
              {
                "id": "b2665a93-9bfe-4a60-8db6-76b7b1983ee1",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "767c2918-ff33-41cb-9a9c-68af5c9e5894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9619bc8-f41e-41c9-9c62-03dedd157f3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "332bda12-1a11-42a1-9587-e45d928f727e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80baa9b9-d597-42bd-8f8c-6e99b6b7e5a7"
                    }
                  }
                ]
              },
              {
                "id": "c355cfa5-38f7-4f38-9296-956f940a7509",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35e23a2-9797-456d-8264-9ba2cd927f5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2a8d7cb-def9-4180-b2e4-635e3e10ade8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20b13017-e121-495f-8557-19c8c99d8225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df639c39-ec60-41b1-a512-680573154f11"
                    }
                  }
                ]
              },
              {
                "id": "18ab91db-1e8e-4147-b718-04a4448a49b4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c6e5ccf-0276-4604-ac5b-414825f40618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f82e14dc-444f-4203-aa99-0215b6cf20ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a3c471-646a-4835-bf59-76ef73f9582d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d115bd28-db9a-4e47-918c-64dd40581c13"
                    }
                  }
                ]
              },
              {
                "id": "2301af1f-a719-430e-aacd-88d17563e175",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eda2cbb0-1ed0-4165-814a-590d68387e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdafdbc1-6843-4f54-8ff2-5448a3751ab4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3522fe5d-c4cd-4627-a221-87f61b4c0950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a801665c-1ded-402d-961b-ab4e5b21f0e7"
                    }
                  }
                ]
              },
              {
                "id": "44504543-701d-4f81-884b-6b5f8d8b6752",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "346fde9e-4ba6-4c0b-bd69-039e1a39dc82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eab387b3-95ce-4f53-ae58-66a5dd273a50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99e84cb8-5770-4adf-bed9-1b2af2f49076",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31bde274-7af7-4c16-9052-19237fae4397"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82fb9f6f-7e83-45fa-bace-4475501ad445",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d12ffd4b-fe8c-4fb2-b019-2f2c2e878791"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38788321-c40b-4854-8e1a-287a15db1b00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f2bbc499-79b1-47e7-a44c-0b59510cd726"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38c40d3d-128c-4dec-9c6f-7f2814330d26",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1111230e-1d81-4d01-aa7e-142241777869"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0583d53c-b95d-426b-bb78-5d222142b700",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f93332c5-ea99-45ec-9c5b-bb1c3d688e0b"
            }
          }
        ]
      },
      {
        "id": "b050b5ab-4250-4483-8c36-b7ddf0f92048",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "84bd6752-15a3-4b08-9e8c-3a7ee75ea1d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3506a44e-3cfd-4e64-889c-c2862d4747c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4afc7bee-e2ab-48e1-84d5-6b4df45056bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c6d58a-12a4-41aa-b141-5e3cefecaa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8510e4d-d477-4805-baa1-b7c6c9dfed5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43924027-45b7-4a77-8e8d-c9f6c1a9276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db0dc81-2073-4154-ad2f-e4214cbc4509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd0e57b-3e51-406e-b557-ebca30cbe2cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79309536-03e0-4e35-9b62-637153e73412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27537456-e4f7-4006-bdea-4b7003632e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ed152d-5c01-4647-ba36-edc29cbf7377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "729906fc-3f12-4cb3-8de5-95d3a7603ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea1f171-0095-4860-aac4-e60db1877681",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e150164-d1f3-41ef-928d-2384649e95af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb7d56f-f949-49cb-ac72-2838d168f556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb51d2-b1a0-42a0-90d1-e8d40250d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "477cc700-f13f-4a17-a134-bf5465c7b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c477645-304b-441f-9ce5-d3cb59fc34b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6320815-0103-48a9-bbba-b559a91d2adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a38519-f427-4605-8f62-d714dfed98e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e28a4d-9647-4619-8c5a-fadc731d289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70370e21-4c65-4978-9c3b-9927afa4132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953865a9-640d-413a-b5d7-2254836b419f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fbd37e-7c42-4fb8-aac1-063856f2ad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9684edb6-57d0-4a41-bd21-8dc95a944107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d1b42b-23a3-42c2-a7a0-e0e5719ee028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae30963-93ad-43a2-8ed1-9fbda53c6c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69027573-3ca8-44d9-a07c-dc1c9aee2a24",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5f851a-e442-48ce-94cf-bf26d840ef8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d09ba1-20f9-409f-a158-6ecee9869619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54cce74-fe1f-431f-a486-e7a69e7a7713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b77d6364-75e1-4a29-af2b-8f6b68ef5305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88ae7de-e1a1-4520-9cd4-60f13495b268",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489c207f-fa91-4b3a-82ae-f6d494443048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0473678d-eb4d-404c-8188-1ea2a4f03a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4146c98-6dc7-4d70-80f7-009cec40f3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d520ec6-9231-48b0-841d-50d402c38cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e899543e-9cc0-44e2-8b2c-ac68d363e0e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112f7bd9-c992-4042-9c27-6b6b242e0c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e6d898-ff3d-49bb-b9cd-31b69eb08861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d6b167-9b6e-4106-ba19-d2cb660438a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40006a2-b415-45d3-acc7-ed44cfe1085c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e5d72e-eb94-45bd-a8d7-769b48b886c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ea1e4-9265-46a6-aa09-1680941ceef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35dba2f-be06-4a9c-bede-1c428d8c52d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f7f62d-f3a8-4efe-b132-3c8e818b8a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e638108b-5b67-4c68-a496-84517fb25076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998455df-09ed-47c7-ba0f-5dfb5b989f35",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7608262-b8ec-4d66-83fb-5e8ad9583289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdcfc58-7d86-430a-a848-d343d4b499b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0315f624-87f0-4dad-8165-d9cc99e80dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f3cf2b-c9c4-4d87-8b22-2fa8af1932f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1811ca5-d761-4c38-8050-e2db0fc016f6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5c42b8-1995-49a8-a1c7-c4508f564360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46908bbd-f973-4a69-b4e3-2e44a4d236c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b65c01b-db04-4b16-9a15-416387b5d0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "403624d7-e3a4-4f68-a43e-727bbce6a7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c2b77b-43a6-4fa4-b7db-9133fddfe27b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c5f6c5-86ad-4d15-b9bd-7607de47774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd32e5f-5fcd-4849-ac9c-663adc28bbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d4e9f4-4d5b-4671-aad2-c5b7e85d0aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "905c683b-2273-43e3-83de-b919d3fd02bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400225be-f4b7-4b5c-a51c-2961113fdfeb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d710e6cd-3ad3-492a-8ae9-72ab13424815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d307fda9-a4e1-4dd9-a541-4b61c3eddd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a731cd-2a84-4ca8-ade0-e32ef6c913aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06e717a-00b2-460a-9426-a73edced9fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02812e8-5271-4719-825b-c70f201f3e78",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b76371-7ffb-4275-aa65-7257955284d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da79abd2-da4a-4ea9-a7f8-3da81fdcf5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1781e32-cacb-462a-a584-9a1acd79a070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "556b530d-35ee-4f57-bfa3-f22e815cd232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e2ddfe-69b7-4414-9505-ddac8e89dad4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d65d5c-e1ea-402d-8c2d-8dc99bf4072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ec83e-9e55-43de-97a0-734f81c6812a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa1ec67-3a01-4941-ae27-f9b46c18a0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5e5b95-95b7-4d14-ab78-0a0a811ae9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6dd315-1439-4bdf-a95b-2e31a8a169bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913be0f7-0eaf-4a7e-9eb3-49747b0ec1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3aa41-77e4-468d-a2c8-35a154859f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834f2010-5a8f-4d13-ba9a-350df7be9cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da24c8f-51b9-4211-a33b-91f08a18068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae9f422-e6c5-4337-a7ad-4bc2b7fe8dec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c6eb77-a6bb-498b-96c1-0afa92f033f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952ec6e9-02b7-45e2-b366-fbbc8de15bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b852f50-b6ce-4c5d-8659-3d30edf37bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf04a60a-fa45-48d4-bc00-3a2db36bfa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df322f3-2774-45e8-b8a3-c053f764a07f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b240b0b9-e728-468f-92a3-b4a2bd201aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca6460d-8fa9-453e-84a6-79f91e9261d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb748d3-84b9-49a0-be77-9a99b9bf9668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0cf98f-26e1-42ad-ad0e-493653be13c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00a3f24-bdbb-4869-ac56-1b148345fab3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8453e931-04ff-47fc-80cf-1c8b6528369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b710f731-78ea-4e69-a599-685e3545f173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99081fe1-2b95-4a55-974b-c2933ec2c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "769498a2-0c3b-4ecf-98e5-f4041bc53fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93552d28-84f4-499f-ba27-5ceab0722ddf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e04d05d-2098-42af-93fe-95414f84825b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e17f6d-175a-4779-ad59-e37939f08e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13f24c2-8bb0-4d9c-8137-1ff33b6b81b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c49170-da5a-48fc-89bb-36779fe11195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb95285-518b-4590-adf7-c04ad7c19159",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf33e71-5a6a-4229-8144-ebbe137bfb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce7b455-9e3b-426f-a714-2a5047255bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a7f752-9ab0-4e7f-a50e-854ef4e5836c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ea1688-5464-4e79-8251-2b76edc405b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3f1cbf-2080-459e-881b-b7eb09eb7f58",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db327b44-a193-4795-8142-bb18800711e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a762cf0d-dc08-4660-8f33-a58c5924d5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a682e567-5cf9-427c-abba-8568d9866a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8422a6e-0b7c-4b54-97af-7fd0c25d1795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a09f92-9a0a-40af-bf47-20c16c627568",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5da6ff-0630-4be7-ad7c-171f353af3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c1e5a7-5d48-4cc7-bfba-da8ad5d465b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cd5000-8745-4ca8-8365-17ae4283218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00eaa5ef-0124-4f4d-a093-c31aab11fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d69119-7896-45f2-83d3-758a67b84e51",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb3d6b8-29fd-4d7d-b435-a706f5524ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08542725-6d0d-4c26-9f7e-cb7a500edd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ea63cd-99f7-47b1-a10f-40671e332eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e1d3de-9192-4020-aa3d-560117b57dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b5d95-b21a-4088-ae6a-00415e7b27e7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca1ef50-9a9a-4fda-9c3c-7ba9a2429563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002d72a6-3857-4359-b12f-db502bf290be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13df2ab7-687e-4d78-8bb6-2b8e8c29382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22fe419-eb1f-4ce8-9d35-e16e360cb259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427eca9b-d647-4f6e-8661-90c358a477bb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c38ecbd-aa18-4331-b293-5ea0e1548c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69925354-ec2f-4fd5-bfcf-99268973cdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ec76fd-fe1d-4257-91c6-697c2d5861d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20508c76-1c6b-407f-bbce-4a15de25b542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0310d6-d2a9-4aa8-a9e8-02b9998294f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a946106-f30a-4147-aea5-85a9a6383bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4fcabd-10c9-4f85-88de-b14863137dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20548e0a-7d20-49a5-abef-3f97447f3335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa496ba1-8b06-41ed-9841-c053bec524b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e0cf56-4a91-4b29-85c1-39bb6285faad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0253cd0-c1e4-451d-87ba-b9eaf8459f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a4c48e-bb99-4031-ab3c-c0b964c2f069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c79875-008f-494e-b2fe-1796f64e7da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b3ab59-2245-4e0e-a286-20654c61c417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ec2f48-1adc-4e41-a660-00cd25b46b9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f78827-2be7-40fc-9383-55f601ed7fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd135b0a-977e-4513-ae86-a024aea9a30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa2925e-0ec2-47e2-ba10-77c2579923d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de28a914-4f70-48ed-8a0d-dfae85a4ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400fc45-d127-42cc-8080-a6795b294463",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a718950-fc59-4007-90f8-22321d7924fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff5acb4-3802-42c3-9c4e-3dd8937ad985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9255a511-ca8d-439a-994c-ec50ef19d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee711bf-d05f-447d-ab00-22ba489baaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcab900-48a8-42c2-b4e6-95683fd6a45f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfd0dde-0ac4-4d69-8f40-47db7d401ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c812a6-ac93-4005-b3fa-70e468101b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e515af80-eb20-44f0-8964-9fe4f3174171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d126c37f-18fd-4491-9ce9-3b4b37e70bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ea41b-e468-4be1-a71f-36cc0247df14",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6cc6fb-1dca-4e48-b9a2-427941cad77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac2f709-85e0-46a8-9dce-c903fafb931b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5050da0d-8103-40ab-8872-34408a3ba9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1961fe5-08d6-4f37-986f-1cde474fa126"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6299245a-6fbe-4ceb-a519-f2f77dbc6709",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48a75d13-a957-42dd-9d16-fb7e98ebe5a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118edc21-192e-497f-9ad6-e26e22d3d221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58fe3f3-4622-4431-a47d-c2d508c44ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30e868b-3015-482b-9f6f-ff083f32ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe51f12e-22bf-4769-b25e-d2344cb99e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f08f66-8d5b-49e0-928d-7e4d4ea025d6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7cc469-5806-40c9-abc3-8937ee0957c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7e27ce46-2971-4582-9c97-ef7c3c84c0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821c59a7-19b5-4271-8d72-4faa2dccc801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c24345e3-2acb-4da3-82cd-530d49fb70cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdcdc5e5-20b5-4b25-8169-8f140c96adbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45b218a4-e17c-4dcb-984e-8763a0b963a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1733d80e-acf6-44a7-b4a0-6b24bf0fc8e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30521193-43c2-4eb9-a83d-b867c361705e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ac489f7-e655-4c82-b314-8da1f9367e72",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "678bff0f-4d78-4967-bc37-028172a5b93c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "924bffb4-78a1-4e6f-b232-e9ad5eacd8c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "872e7173-de9f-4d4c-a02e-38be38b88a6b"
            }
          }
        ]
      },
      {
        "id": "b94e75cf-82ed-4553-8f31-604d775fc7d8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a4b7d196-efa9-4fe6-b784-db87d49c2e9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3c3d570-2e0b-46c6-b071-ceaeda0c3cd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f919f3b3-3763-41fc-9906-09256179c45a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e3d337-cb51-44ad-be6f-d23eff93ffa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb27771-cc3f-43a7-b656-a38fa8021bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4319aead-d544-4c3c-bcb0-e83b617c18e9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20040f92-5076-4336-a64b-4a8182db33c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a7ab3e-f65a-4b1b-801b-2619730caa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3e6aa9-abce-4887-931d-1a4fce355120",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4e3a92-6db9-4133-b3b3-fdd28e9cd16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06422f2-a1d5-46d6-8a61-7722be4cacfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e0001d-6ec6-4d77-990e-ff939dd7aa03",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ee6c03-250c-4244-b8d5-2b02dfd4aff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d149426-71d0-4d64-9497-08249a7576e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad32010-6c7c-468d-9293-660a8f9bf13e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e046bda-0495-4b0b-aba3-e335ea7639ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d9493b-0579-4566-a67a-81949c5fd246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2427e402-fbac-46af-b026-1ee52811e265",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767a839f-6f81-4163-8b88-2cc2b56e7bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d56f8a-bd0c-471a-956f-dd0231a458d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadecef5-28e7-4501-990d-6994c0b1e70c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e79efc3-6680-4c9e-a36e-2c486574191e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a7ae4e-1127-4d10-9a44-f1871789d06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42bf3e3-c0b1-42b2-aa51-545f362d4575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670e6279-e359-4d96-a8c0-41c3cac3d3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf5d761-332f-4203-96c9-50e2d2eb5b7e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8a6f6-c0db-4e71-b853-4d0947eb7fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cf5e86-4afb-43d3-aef5-7dd65b7f906d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fceaf7a-9f70-437d-9ed6-06796e42edd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bf4a9d-918c-43a3-bed0-f5b32cb27b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0004045-6cd8-43a3-b045-7ed2bc8c2348",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd42c9f-5956-456a-a85f-c0833c3ff410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4db632-e71d-4330-9f9b-dffbb9f828ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b092473a-7730-48c4-ab12-a85eb18012a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d8d919-345b-4938-be84-d1996418d9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389cbadd-3353-4f67-b161-916575daa1db",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c51133-3db3-485f-bef4-e6735d54010e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419b16c5-2996-4afa-9bea-3284019274b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49ce72c-8da7-43b2-a9a7-5cbd2a5fd256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573bdda6-136d-4b7b-9cdb-63f148bd2a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c9914-1cf0-4e3d-8610-3a45447bbe68",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27dcc92-c8d8-43ed-8e36-c3bcd9133e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb07fa8-6354-4ad1-bb7f-b80621e53b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f27753-29a1-4d73-b9d0-c0ed4b46f940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939d3d59-2995-4b43-8bcd-c2ffc66fa5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d7af4-2fc4-4d5d-9b89-b4a084357881",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1bc320-5bae-49cf-a4d6-aaef642f507e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d950d15e-85ea-483a-adfe-8b60b7c5a3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98415ccc-f4dd-48b0-b33c-56e1dbae66b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146e374e-8ab4-4517-bcd0-be501357089d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d8cefe-4081-4d32-b5b8-20a523755271",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95a229c-031a-4b5b-994b-7c14ec8993e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f58099-6868-4f43-ab9f-9e87a7b76b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648ed850-c3e7-4b89-afca-e91864644b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f13f6cd-7086-42f1-a10e-c45ed00d102d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813c95ef-1032-4d88-9ed6-d5b91211b237",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f35d8-353d-4652-9fbd-39f3766800cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f80ab7-ea15-4c70-8d0a-f5133ddd7c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5346260-5f1a-4135-941a-4d2c89f790d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691c3e7c-9a45-4d39-a459-6cdc2e810ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d445cfb-1004-4278-91ff-cf05950ccae9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264d1db3-68f0-4ec7-856e-246ae2b26208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01126e4-f7c0-43e9-afd7-7580c4411576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76f01f6-5f0c-49e2-a5c4-e5da0ab881e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b282ac5e-7ff1-407e-aaa3-02fefcc9260b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c5f617-a547-4059-9da2-a4a56b6892aa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0f1d5b-c8de-45bf-8831-de8e954030b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61adbbf7-6a79-460f-b7d1-c35ba8fc9394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b4a01d-b56b-41e7-be57-3f469b1cfcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f46c92-51d6-40a8-8846-3698a86ecbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0f0a32-f17b-4d96-bde2-6d6cbf715e55",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafafba9-a626-4182-8367-4bf4429b7596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91f2182-a097-45d3-a777-7a32a4fedb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8b141-8108-4c5f-885f-672e67f0bfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e751f577-33f4-449d-ae03-6376639be3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0836d3ac-eace-4e5b-9e0d-87429801e33c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64caecf-20c1-4c37-b514-b7f87023c55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdef5097-8cb8-4d6f-bf7e-378879086c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b45d8f-36c4-42ed-af9c-4597e99119f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa767d6a-b64c-411e-8ad7-2804882216f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e20a8a5-016c-4407-ad2e-a9ad5dbef356",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024292b3-c6d6-4395-8e28-d55fcc48cde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e73485-17e4-447e-a2f2-f1fa68ce1adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ff97dc-2746-4a52-9b5f-3634973e7961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c9ffb8-8781-4c45-b52c-f2e15c82e6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34129c56-ed0a-4aae-be05-7d9a12183bcc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1262da0-5c8f-4a72-b5ca-b4bed5aa2d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3939ccb-0c68-498f-91ab-29fa64a17fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b237561-90c3-4fc6-8072-caacb14b9f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944c63fb-a16c-4c76-8a2c-0994899adc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec67041-e4f9-40de-a3ed-df949cc2c1f1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78da6cec-86bc-4393-9a80-57350f3b8244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041edfbf-68cd-4a7c-8cc2-965f50ad56b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7863d546-999d-4e95-aa32-dbf28181a737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12024eb-3203-49b0-ba86-64ec7b26d299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6699dc-a394-40ad-838b-d0ddec860e83",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cb91b6-6d6f-4668-8491-c1611d490546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efda78c7-15f1-477d-88b5-f1ff8a7884fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81c4ae7-85c7-4d52-b36d-8135845f604a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e468738e-35c2-401d-8fec-9cb09deebe70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5999d17-0acc-4e94-bd48-a735d76b27c6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb209f9a-b888-4e62-b19b-7859bc1dff25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9164fe1-15cb-45e5-a281-9ffd78aef560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd8fbcf-24b0-4e5c-80e2-e3456f2622c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db807d0-c946-4249-9179-afc5ef3cc6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82027f5e-9a2a-493d-bd64-27275984cb5c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d013f5-01d4-413f-8fd0-931be668ccb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ac9e6a3-7f99-45e2-90d1-13f24f885438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d793c07-ef28-40fa-8560-feff8a90a872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dba67e-723e-472d-9f90-ccaa323b603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db97d65b-61d7-4879-8275-e4d559a5d9a6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc01e94c-c71e-458e-b0ab-de914c2b57d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8281c07-b811-4b80-a6eb-ad6b123dde60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f0fa0-ee45-408e-bc19-51b6a555f951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75b8506-1ccf-48b8-b855-5364a51d41dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd003fc8-388f-47dd-8da6-2cbf5438ba04",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660cbd72-833c-43bd-bcdb-7602243c8048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca81532-a3e6-45bf-bd47-a0ddf868e5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5497b-959c-40df-a94e-e70a55637ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521f9848-8b38-43e0-b9d6-995d2a813e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e83b05-780c-4545-b6d2-c94bb700da2a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb997a65-565d-4afc-903b-5d29ad3ce8c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b11e38-180d-48a5-ab5b-cc1d4fe8438a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d45c79-48c3-43e0-ab2b-f5747d92dcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f267c80-fc6b-4544-930b-b7edcd96df3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7e7bbb-9336-484c-aa94-d987295e356a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee3f53-f695-4edf-bdc8-b8ac21a68d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f125298c-43d2-43e2-bc8b-1ae76b75cd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f0d882-8dc1-41f7-9acb-2c20b1d485ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146af597-c1a8-43a3-85ab-d715256fa259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b174a3-ca68-4fb3-9ad6-c3c62215b06a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18177e24-9530-49f2-800b-f7505ddf20ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15413054-fce2-4c3b-89cd-27cd1e673eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5550c900-664e-4683-91c8-4cb254e7bea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0dd34b-e942-4300-9db1-cef1e50e4217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1192cfb4-db69-4c75-9aaa-3414d6357e6a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae2e34f-14ad-48a4-b5f9-ce48847721ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13037fc3-b1da-4c1f-9c03-ffaf445b1aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e582cd0-259e-4f78-aa6d-af976f017a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2c29c8-edc4-4283-aecb-5799e59d2824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f639a7-5b83-4e6f-bbdb-348a8a09d92c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789bd162-605f-44e1-92f7-eff7d33660b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1e3b03-7a48-4a60-8ec0-86aa4ba84faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fef50c8-8db5-419c-87c4-98964f061cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cde7cf5-40cb-4077-89b4-589c9d5216b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6045e3-76bf-45f7-8cad-525d6f792b7f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7600aa2-ff21-480d-913c-24b0c4977d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23c9506-9504-43e0-aa27-5a18c8b7e30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0dcb8b-a415-4d33-968f-e4f5a43ffb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce2f0d0-f406-4403-97a6-318981499480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bd7d7b-ea1b-4a17-ad16-cdbfd3fc29c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc56f582-0e41-4721-a2cb-545d74e53013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb5e244-f369-4339-85c6-46881929ce4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f9a1e2-dd3b-44fd-a25d-6b93a7d35b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98231eb-629c-444a-be33-59216815c2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7b7ed3-8e90-4f5c-8c6c-075ab15fc349",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc9069f-528a-4d91-b3bc-9f3dc2472a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0977ffd2-1ba0-4be3-b426-7af876cc73ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37af2df-f265-4bce-b32b-816d818ed08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ad7023-aa63-4255-9617-a9e1b7659ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cb9d32-7ad4-4e2b-9a36-746950b430e1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987089b2-7196-4dff-9763-ee03d2d44e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485c9b07-4dfd-4643-9c7d-6e53c501c6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a1077e-9493-41bc-af40-f3236b31ab53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b182995b-6cef-4434-a88f-708fdac4ccb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44356b34-749c-43c4-9b4a-bf3b7d35d7cf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3bacb0-8c76-48cc-a096-d95668d64102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e618559c-2905-4dcf-b73b-51cf0a32f782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185bb27b-fc00-4dfe-a08a-f81f2f3d3804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44890c8d-2a9e-4786-9c87-e5529176ab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276522fc-258a-4043-88b6-92fa78b78476",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b5839-a433-42fc-941d-c9dda724c2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932aba17-3f28-4896-88dc-ebf8c1ae65df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b59dab6-7b14-4a95-96cd-8de735adffb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7522bb-3c62-402f-92ff-68e648796127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5374ba-313f-41a9-b81e-db60a795e31e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787241d-ed2d-49e1-ab37-b2b84130fd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e07950-05e2-4929-8017-ed30d3372c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315be0be-18c4-4281-be94-ea2b6d9a525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6240516d-fee4-48c7-b14d-7a64c7a850a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6061cb44-6a70-414d-8fa8-3c9804f997c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eead95e-d65d-4525-bd9b-33e28de0299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ab6b2e-4f4e-45fb-877e-4f980c88ef24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9376a-0df2-4277-8a32-40364ebc7f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333a8115-85b7-4e73-a4f9-409c3f0e9ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd80baae-5348-4ff8-8308-d93059375e2a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea3bbf1-9cc3-4eb7-87fc-1680f57b6766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91c7e85-537c-4982-aa38-0ac015408b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dc0153-6bc2-4857-b91a-ee5d1fb79683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79e8079-e66c-43a4-b316-b9dacc080fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b20382a-7609-4b9c-9760-0c1b5a39ab7f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c845ffd-1c86-438d-a028-6131ec77b3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337551b0-1636-405f-814a-8d72b2fd1ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b788504-2137-4ca0-882e-01a8fa8d7d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1f0a6c-e34c-4844-b3a8-016634c9436e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bfd6d0-c7c3-470e-bf7c-3d5d6a3fbbaa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52ab43-747c-4beb-b0f9-5f828e97a95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b154c6-8330-4432-9609-f7194235fc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1c1f39-0b58-41f6-bbd0-2cd6db925fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b05f83c-3a6b-4a1b-81d4-81aaaa50c330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9543a341-e70f-4ab6-be9f-27031d33e027",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3872ec1b-f8fc-48b1-a55b-caf13ebe020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69889cde-f473-4f5e-9404-c86e2bb40810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f2759a-1ee0-48d7-a834-238bc12735d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69600426-b3d1-407c-867c-cfca948aecea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017c5e55-f826-4792-b8a9-0a14d701f10b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867befc-5a41-4ac8-b74e-f672ba9bfb23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da46629-2593-440d-982a-53053bbf9d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04d4491-c4d6-4943-bece-5382598bb70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d76c65e-0fa1-49aa-a028-21e2032bd4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9ca724-ce44-423b-8cc7-d05425394e59",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8848cb-38af-455a-aefa-dc484d483b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6a9987-c47b-4f44-bf3e-125bb65e7366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd59c77-6ee2-4d8e-94ae-38511ab80a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00f2ff9-541b-48c5-8438-348afcf4b961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fd6d07-ee0f-4e0a-afa3-4af920d3fb49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f0ded8-a15e-46ae-bcdc-34b92cd7e1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d24e2e8-0dd4-49b0-99be-f8a69806f1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dddcb10-0a7b-409e-b48d-9a90433edc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73f4790-5ed6-46e6-9b52-491fb3f2dec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb48081-1395-4d1b-9885-27d7e74716e0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcda9e0-8783-483c-b8be-dfb509dd9586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267088c2-db9f-4e83-8763-aebe3ebc04f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3429ef-c0f9-452c-9d49-3c4113f5404f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6a2f20-2439-4dfe-a15a-2f0703526ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8047c9c6-e29b-4e23-8d1a-4ef6ab793543",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e9e29-6a12-4c97-9803-aecb7050c4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4592e0f7-c0e7-4fc5-a08f-df0c565e1d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0cfa27-1919-4822-8cdd-f118a4fdf947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f351000d-86bd-475f-8401-28cc3d1edc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fb1df6-943d-4f4e-8562-fd39194129b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305870f6-6d6d-4130-812b-915c23b81073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8a2d11-6f40-4639-9ebf-5182822ee03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebbd5a6-d492-4a1d-820c-de29f1cd682f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23698837-f26a-4577-9dbe-5aa0a1de3a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85164d77-ea90-4fd9-805b-a3a93bc6fe12",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbca9edf-b9b8-4089-896e-841185bd15b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cea52cd-f60d-4602-83ba-fe528bf2329f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5388eef7-c6f1-4fc9-8f75-6033ff08fc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93dfe44c-beeb-4806-bb65-45046560ae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ca3038-5d7d-4b98-ab1d-ccef0d1a2995",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dedacf-bb81-4f52-821d-85ed61e8447a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cb3e79-ae26-4beb-a363-c9d164a61f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16724e8c-9267-4826-a5f8-92e9da90c20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efbb172-8e24-4a3d-9f17-5a0f393eef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54543880-678d-4a04-a943-e68cd3ae1b8d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9401bbfd-c64c-41eb-a7ea-f611cd431261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea6f979-5937-49f7-b790-971dc3cd05eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e14296b-4dfa-4895-9dcd-76ddb53eaf61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20173592-0489-473c-8d87-7cebd906a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24013ab6-956d-4f7f-bf8e-abbee183e9da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9512f7b-679f-4f53-b6c9-513fdcae98a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23f3c13-f004-4c2f-b279-63948ff07194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d30bc6-e163-4d41-be2a-e58365d27a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b493ff-2988-4377-89f8-1a74604d757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5349867a-9cdb-4e0f-851d-eceb65db5ea8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3537166b-ace2-41d9-9496-a176972f4285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dccad6b-1714-4d3d-8d4b-22455ecfea17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b799ee-fdd0-416d-a3fe-224bfdda0426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d62dce-d3af-4ca7-9ab4-20031edff194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f5d53-1ea4-4b70-a443-7b7a09ead895",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c08905-2298-4bd8-819e-df2112150ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2783c9-eb4c-4a87-a981-53fc5e8d3640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12da44e4-04cf-4c70-b261-00676cc003fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d00be3-1118-4ae0-9c83-372cf7ba3a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a493e13-222c-47e5-9cfb-6d16417b0900",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fddfde3-f2b1-46f7-883c-277d93e22844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a88b990-1bb3-40d8-97cf-d0ab82a02053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8071a644-71c5-49d0-89a1-a54075ba59f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8f6c64-efe7-4d6d-86b6-6788521c68e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23b2a3-6e46-4105-bb44-4abd3053e772",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d4c434-3d21-473a-8da7-4e735f4336b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e741a6-b9df-45da-8b70-7e41ebe37d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98140ec8-8f70-4531-9d51-321ba3052a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846e2ded-65fe-4f9f-899a-ecf87ae67bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b577b0-2ae3-41a0-9eb2-f9ffcd0389d4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1759512b-128b-433b-94ae-cc53591ff9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9334571-a9b5-4144-82d0-2065e57c0480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfea131-b851-44c5-bf84-21567b29f2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594b7c03-a9bf-4afb-aa2f-44088cd41de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d0c23c-443a-49a1-9cb9-925b3a44999a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009718e-56b1-4bb9-af24-40baed3b5743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371e8787-fef1-458f-918d-08b8bae82e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b76536-db78-4bd4-b4d4-cd31916e37ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01139f-6300-464e-a30a-d059949bc1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b63930-77b3-4c72-8dd6-cbf70d02c724",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b817d1f-4b77-4f5e-868d-8ecdb4cb80a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4b6bad-e184-4c67-b729-3f483eae98dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e4edb3-b461-4b26-8dc1-84d5688294f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd0f7d1-4d24-4c92-9cf4-bc70e8387534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44bcd6a-bae5-4947-9611-af6a40677f68",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e3c33f-5369-43ed-8ae7-3c984d38c72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1a7e97-2239-4db4-acbc-4b94eb58184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deee4908-e4ab-4e9f-903a-4e09354a6c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f001d91-fdcc-434b-ad4c-ca807b58be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cee91a9-efca-4e19-ad62-602faf79a5f7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c88ffd-023c-4b96-a540-3ce8f8c70b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aaf0d5-175e-4874-a68a-f09fd27c90fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e35e1ee-44ad-4061-a3c0-2a14185452d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411d2f66-880d-441f-b552-3b111f33dd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fd27af-9558-4558-819a-b149b5947b58",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9110db22-4556-442a-bc58-21e2d879ca44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea22b5b-1331-4b16-9dd7-e3877ccd5eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b697add4-769a-4011-97b8-59af975e85a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691e4b25-d469-4cd5-9201-e865d6c0ebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f300d1a-90c2-4aa0-80a3-5adc5f957903",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe021c4-cec6-4873-9588-8826083f04e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b0ea21-6077-42ec-a180-aedf3c297b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1778445-f7f6-4684-973f-1ef69f04422d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ad1978-6ae7-4b81-a3c5-d7eaa658cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35ac49b-acbe-49e4-ba08-43ffa82aea9d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3264d3e6-1e44-4ef3-a415-147e6f7363ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c4953a-95ac-4f89-90d7-dd841de04e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd73c27-24e8-4360-90c8-2a5161434463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1259b349-f3f5-48ff-8c16-0613b755c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b74459-d09f-4a24-bff5-6f063c287cf4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b24e8b-7e43-474f-ad61-f077bbe3ce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca90bc1-a52d-433f-b804-61974c0630fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ac3274-727a-4654-a565-2f400f26d58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9960236d-0ec5-49d7-864f-810b4dfcd353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834a7d67-b6d7-4e75-b3de-17498c7eedfa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4ec2a6-92fc-4232-968c-a98b2029cc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e7e964-24d4-4220-b36d-cdd1b49de502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1235e497-46ee-4717-842b-e628a2d74007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cba0b7-f051-4975-8ee2-9b35fac90c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d108934d-d2e5-4abf-91a8-73eed2f83534",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812546b7-a7b8-4566-9c7b-3453688f81a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "226e6b4d-0582-439f-8abc-bd0e99473c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeb1c7a-ba22-4e88-8b46-637654660ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7191a339-df9e-46dc-b326-0a8e07cf4fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c300123-137b-4099-b0a3-10d9fb6ace24",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa2d0b0-8c90-4680-9e68-8735042bf0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696c9e1f-7470-41a4-aeba-ae6897bffc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e3182-ff88-438b-ae5f-a2ce8c889484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179b312e-8940-4a7c-8f77-94f46b243411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2d955a-307b-4134-aea2-2d34eaec9f83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2b7a5a-557a-4af3-b698-63f7e8e21d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8625fd0-cbda-499a-9cda-cc97454aafcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f693e5a-3cfb-40a9-87f4-7a6b9dea67c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f2236d-9865-404a-a8cb-15b5c7acd22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fc1deb-ce47-4780-8059-50039341e348",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bbf483-2768-456a-b5a1-837c86919323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b86dff-b722-47fe-bd1c-239ccf0b7334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ae1266-2325-4ea1-9483-85b3448e768c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461b9827-d5f5-4745-93bb-8fe6ed35f653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c81fde-bff5-4afd-b317-714b6df689a4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330303c2-319e-49cf-8b72-8be21ea4444e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "402ad572-35a6-4510-bfe1-8fbfea9edab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee91bf04-0b74-4c52-aac9-4c0bb1e04307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e4266-7c2e-465f-bf7f-77f327993ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324ecc19-0619-405f-8219-2b7ea8cb02a5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1464f09a-10ef-4900-b974-c8403a1fd1d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08f045e-aed9-4f03-a280-342a7c8c011b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408bb2fd-929e-478a-9080-b9a561e33eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5990e108-96c8-4e4b-a602-3e9a5eed5ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1d8a04-f6ba-4c83-b24c-02dfbb08f83a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb2712d-bbde-42e8-b444-351ef5caf471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e738ec7-424a-44c2-9b4d-90cd452ffbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5feb0f0-0e11-4ed8-b9ea-7de15d521ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5049597-8422-48ca-8635-7c88d172fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa97ebe-cf73-4045-8a71-e668450402b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d870078-7d00-4847-abb1-e3df3582e23e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240a3c34-1b48-45b8-be23-aad20e2895c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5851a6f-2fb8-4000-a338-225828cbeac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930d9f1a-d705-4510-96d8-dea378805df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99863d9-874c-457f-9dd1-5a3899798ad9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10fd2c4-ab48-4467-8092-e964eb5507b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604faad7-4ede-48eb-a043-b77ac7294c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b3917f-f5f2-411d-a0e4-76c3e194c877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19de7a37-bf41-469c-bf77-bfc061a875d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168e8ff1-de03-4749-913c-c9173f085e78",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a96238-7075-4858-bf42-80180d4fa218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51915afd-b02f-4a8a-baee-09b5dcec124b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac62663-1fec-4678-ab53-7c7dfcc848cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f2b8d9-8ca8-42be-8c21-eee2c8d75dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796b2b9d-4ffb-40db-bca8-52fd0da9ca0a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d7b11-ce0d-45b1-a82c-59adba299734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e6dd98c-de00-42d2-b3e7-06c4fdb0fdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c97d76a-e6cf-42b4-b3b8-3bcd6e8ee0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae03a113-03ad-4304-8d96-756c5b197c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6116752-851f-46e3-8705-95529f76c6b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369b9328-0691-4730-b5c1-69e57117e941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1844a045-3974-44d8-911b-0959f40df090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f228a536-15e4-4623-8027-9e8d20b41418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b416cd9d-b965-43b3-9984-3cc8ef47e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c2d24e-8479-48f4-b651-630e8f24cf15",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd3517c-34c7-4011-bf8b-3ee72ef9a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fe8471-21e9-4613-bd20-827911da3798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e898e16-e79a-4cdc-b3d0-8df90d174584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ded07b-f34f-4bf1-ac13-b4aa231113d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499051a7-ccfa-4bc1-9a34-8c90261266bc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c607f749-7101-4726-a088-3d2a9f1ce4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1216f6f8-5c07-4cce-95ea-66872faaa883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1782cd6-717d-4627-b5ea-08364d649e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5445b029-40b4-4320-9ecd-032638578375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b87d84f-a151-465d-ae70-704ac7959d43",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93793440-1614-48b1-954c-50f5abe4227b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81854a0c-5ed8-490e-b127-208bb8fd3903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0039344-33d7-4218-aa6f-038c8a03f46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97ac67d-50dc-4c99-a277-a550587b5cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8441e509-ea6b-4d7c-999f-ebee8a710173",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986d5963-e211-4ff5-b548-cf25b56d07fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cd2e2a-92b4-4571-990e-3d353919aaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6bae14-3ad7-4684-91af-6169a3242d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d88fd6-0a35-4939-be6e-98be0e278a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9493816c-270e-4689-98fb-07594316523e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f28b7d-2c06-4ae5-ae67-b807a68951f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3fefcf-b1b2-4c51-af8f-4acca378e3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f50b82c-d7a1-4f80-a2d4-b3f7a29bbc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4100f04d-ffa3-4535-b4be-dabed634e748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72254b48-70ad-4f34-b77b-0b1fc4abb111",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2f8e2-d85f-4e93-aed3-dec94b2a24b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35785f2-3229-47da-9521-0d2bffa51b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2797c94-6376-4559-9489-4c97b79c4682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93172ba2-da40-4777-a5ca-b036e307a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf6806-dc51-49e3-9efc-394fa453f9b6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c699ce-fba0-400a-9e50-de9cf03de82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7291a33c-62a0-42ff-9fc3-fbd909657f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02398406-6f73-48bf-b012-5bc969358c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e91723-2b77-4531-b423-90f54042b5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e27c8d-7270-4a9b-af79-7b853abf0e1c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62206013-4642-4c5d-abcf-3f01da0fcb19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c02d26-b719-42e4-9442-369fd901d1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37dbb75-3d24-4fab-b79e-b193db274251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bb2158-3475-4abb-8140-030df4ee1f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a87b0-f193-459a-b8f2-2fa2b2a25ad7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f16c40-f250-4674-be59-18ff517929dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30680e9e-ded9-441b-b459-f667d958f7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458f8bef-26e5-4456-8fa0-5be1b15ebce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47285588-ca9a-4ba2-9f12-9326e6905539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cee012-d17a-48a1-a6c9-6edd3c0f1ccb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce180f4-f67b-4311-b4d4-40ea96f4c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d758cc6-fe0b-4f40-acf3-633a2d4c2bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9227dc-afe6-4f8b-9813-09991dab50a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9400c5c-e647-4993-ac56-471667385c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061208f8-c444-454d-b0cd-6ef73abdfbd6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cced1d2-562c-4b0b-88bd-e63ce8bcffc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09aefadb-f024-43ab-9559-264a079598b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a19e5e-f3de-4caf-aa03-3db78d1b910e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e7e25c-36fd-440d-bc7c-b9633415ea99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b23a734-a1ff-4818-836e-a9ee54bd1da6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d0e40b-7424-417f-be27-3dec3ea780e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4b0ff0-182c-4d4f-bb11-8361b4fc8e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953df45d-4c24-4662-850c-21733de28729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c35c11-8e92-42c7-bf8a-514274228d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2f22a-d5fd-48c4-972f-308220015435",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c8afd1-eb26-47c8-8966-37c2467721ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de3e63c-0a44-43c8-b60f-898e5efd4bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e67e7bb-fd2f-4436-87e8-4ed8cca6b222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d70a5fe-631d-4c49-84c4-9fe992d8b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46d666a-71ed-410c-b57d-be2391d83d41",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d6779d-263e-41ba-bc54-ee142adb2080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b01f9f8-5e61-4bc7-a18a-dd8869d2248f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa1238-cbd6-4723-827f-7d5c97e4bee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fb5867-f570-482b-985d-2f3c3d3936b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa4cb3e-2400-4efa-8a9b-bc502f126f38",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5726b290-17dc-402c-b2c6-02c5bea81b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80ada82-62cd-437e-b54e-bdd581b2b7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703d4b20-57fc-47e5-a323-b71a9c4fa17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55042b6e-51ae-46e9-8c5f-368da021742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad7bc94-276c-4892-abb0-391b90b33e23",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bc19c1-23e2-4889-8241-e6b06f3a6bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9baed03a-f3d4-4073-ad97-84db86a87f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2915056-9328-4527-b913-90bbf8c49a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5875737e-bbd2-4a2d-bc9f-695ce6c56e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4920cf8f-f368-426a-bff1-1506721dcd17",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b591f-0ec3-4bf8-933f-72f88d1575e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0bc6573-11bf-43a2-aee8-d08079f5e761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252bfba3-f9d1-480e-810d-2bfea2e9b39a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0f26a3-bc21-4d25-8f82-c7bc17dc109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee2e0a-ee82-4fe4-96ac-e6fa8043fad3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d0d69-ab7d-4ce7-9b61-4b94496caabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1267a6-c531-4038-abb2-59b152f91d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e856d1b5-0066-4103-b6e8-a6ef38e2d30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd74ced-4fc1-4d29-9587-651cef39df40"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19bbf76e-f4db-46cf-ad6d-1c8799b207ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52d275de-e53f-455a-9446-4748271f68cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b5ad274-046e-4aa1-b626-fbde07721d4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6878b46-af2b-4c8c-ac55-5846cb983e4a"
                    }
                  }
                ]
              },
              {
                "id": "0b0341fa-6cba-4bcf-90cf-3cbcfa54aef3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bffaae12-2229-44e2-8a82-e62c338ed00c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d38755d-2c45-4651-8842-b02680a83a2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fe740f3b-64a0-42fa-b9e8-672171596db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30cd253-8b9d-4cf3-982a-be52f1f5f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64bce5af-c549-441f-b059-035b52990e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c11a454-09a3-4859-9dba-761bcf9c493c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c5175c-51b3-4e7d-8cb7-41631facc060",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "88913118-37bd-4a37-bb9d-4bac422fdda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e67d6b7-0ea6-4b7d-bdec-8d3aa405cf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18ec7b5a-de61-4aef-80c6-a21872da007b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebf97154-acdc-40a1-b062-dc6095f4897b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a95bdbbf-e31d-4aec-91ec-3cd15508ebbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afc36735-31ae-453b-88e1-55a8d0303b3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9938a650-ad66-461b-ae00-e8378389baa2"
                    }
                  }
                ]
              },
              {
                "id": "53e5f346-925f-402b-8173-38e6684c11a5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cd26ddaa-e963-4a5b-bbed-47e72e0bde85",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196c1251-3c93-4769-b2ca-11bc452d2ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20f492e7-0f0e-480b-8cbe-40ec259117f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57711ea0-1e8b-4db9-8061-d571e1e8c654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba505f33-5bd5-415b-8050-0417e3869bfc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04a0b150-a878-4898-90ff-2c37af37acb3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "162b98f0-8670-4fd5-b3b2-b46dad0a2541",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d5633a5-acfc-4cff-939e-842db0ca76dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f681d6a-4d3a-4824-827e-d10f1fa446c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91580016-9270-4cda-bf4f-98ff457ef004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff0aacf6-3541-46dc-be28-f2063358338d"
                    }
                  }
                ]
              },
              {
                "id": "4cfa3628-7a51-43ad-aefe-5c0179aaa832",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff3b5b9-aefb-4aa2-9435-a9b32b06c8c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "168fed29-c0c4-4b18-8df4-4babb78b60df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd0b0f02-a7da-482f-a732-a182ecee4132",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30e7f904-c51f-49b5-bbe7-a4792db9aafd"
                    }
                  }
                ]
              },
              {
                "id": "40a98070-4580-4374-96b2-58349c01e241",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cf58716-dd03-4245-b211-d283d488428a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a5a204d-8e91-4910-8558-5d357c527655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baf071a5-7cdd-4bc0-aa20-b71b57a62803",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39a9cd9b-71b1-48c0-b7d9-22ec386eb47d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2306d77c-74d7-4d4e-a9a8-c8af666333fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d489c29-689c-4e61-836d-03142775dbee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5bf1e72-a7fb-4731-9164-4bde6142abdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b12e139d-9ea6-4b0d-9afa-495abda529dd"
            }
          }
        ]
      },
      {
        "id": "452d5365-ef27-4a7c-a2b0-c49c344ee79d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c685718a-e4d1-4cb1-8713-a329bb968461",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb794f34-5ce9-49d2-a725-4fcff38ae4a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7963ce1-23b2-487d-8085-058b2b42a2c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "613f8e7c-b3e7-411f-9dda-8467ff7ecec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b676c2-e5af-44c7-a73f-314dfab14a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e042b2f-28b1-4115-914a-bd1b037541b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac2c2dd-2b2a-4054-a684-9a509b6a3609",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536b40e2-ce51-4ebe-a97e-6ff313c89e57",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10469776-31de-4fa9-b156-b289984ca70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05b68aa-6990-4017-9639-8300c42c44fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a84237c-0f3c-44cb-b288-5f73a72026a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1cfb55a-2167-4655-943f-88766ac3abb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74e30ed6-d211-443d-8543-bffc5ed9d11c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cbc6e9a-92e2-4607-8cd2-6706d6c935ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35c94840-4156-4e7e-9c36-f34c6c2dd128"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "835a971a-ee05-4105-876d-7fae26e795ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0878fb11-aa16-4414-8bab-c06e50c4c92d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09638ce6-e586-4303-bbc2-4e219313f696",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cfeac1d-3cf0-4a96-90e0-1e5729f87252"
            }
          }
        ]
      },
      {
        "id": "b5453765-64b5-42fe-b52e-33caefe6e08b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "405d0fca-65dd-43cc-8e13-46a70aff1195",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e5b701b-f91d-4ed7-9fa6-33e337013136",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bd80d62-30f8-4b01-bca4-c55ea05aa46c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff66ef2d-ffa2-43b4-b7d3-e8f9afbe7c77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8033e42a-bc6f-4137-9886-bb08922ac486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b6ca1e-fbae-4a3c-bc95-f2ce624e265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad56009-9711-4d0d-ae9c-106632a87658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3386eb6-d6c1-4beb-bcb5-0f5488d8acf7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb8102-783b-42cb-a95b-18239a401209",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "524472df-39a3-4a13-9897-893c7b154adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e8edea-ecac-41c5-b91b-942b3e26e38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae66fa8-b088-46a7-bc26-04e592a09b9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c76a9cdb-965c-4f2e-9a0d-f6a93aff1f5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c32047c7-7d24-429a-bde9-c8955a27d8bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf4b52fc-d3ad-4843-8f56-103d216d6558",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8198b06c-3986-41d8-9aad-d15985dd94f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f3f60e5-d0bb-4f0d-9bab-5915d6df75e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a74763c5-1e49-4114-a0ed-756f2c02d459"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76652783-c41d-4806-89d0-3d1ae3addd55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13bc050e-2615-44b9-865a-7b1e4712f4d4"
            }
          }
        ]
      },
      {
        "id": "d6c9b938-f986-49bb-bce5-9ca390051495",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c9665a81-3678-471b-879c-e5c2a182f493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e37845e-bbc1-4e8a-9824-ac192e6a73fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49a5710c-52a3-4eeb-97ad-c3aaabddf42e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7da86-8551-4311-abc5-2d21a8e58c6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f651ff0-37c2-4433-baf1-dac205be4f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaf7e04-0b87-4e5f-9b7a-786b4fc5c37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ce66b61-8bcc-4bc3-91d6-d8f8fb2e8ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cf9c9e-ab94-4c5f-a2a8-e3f0279e7022",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a410e938-2bf6-41f0-ab3b-37c686229cde",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf919293-515a-4254-a096-6df15c86e36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432eb154-4db8-475d-b204-6ca02cc5184f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb1c3436-81ea-481d-8f51-e164471e8ae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24305611-0f8f-4076-88ed-f1d745f9bed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36c565ef-07bb-4ef6-a93b-d16983f66c28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "244f1161-fc6b-4a9d-a698-01f97ae66d7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa05d580-5e68-429a-83c7-33e8f5f31f41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1942b2de-5eb8-4292-b989-870bfcc2acfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed824546-6a79-45a6-b186-a1d2e645a7d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a01c6280-44d8-41c4-a682-a35bb87564e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "067f0df5-fdea-4fd9-bede-7d962a547a31"
            }
          }
        ]
      },
      {
        "id": "051a79a4-28cd-4dbc-9ed2-8b16185ead4b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "755f808d-6fa4-4596-a8da-f0a0ff7ca80d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf16142d-a53a-4df1-8181-d0038e8b9f24",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c81b6435-c5a4-41f6-8eb5-394174a2a957",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71100844-0a3c-4866-aff0-67408a03c541",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8aae647-04a1-42f0-9c19-0b34b95176ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 544.5172413793109,
      "responseMin": 11,
      "responseMax": 7108,
      "responseSd": 558.0564768120968,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668818759707,
      "completed": 1668818912328
    },
    "executions": [
      {
        "id": "cecb6336-6bc5-46e7-a8d2-351c1c2b65f1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d13eafa3-350a-4340-b1ef-b5dc07de2136",
          "httpRequestId": "c4d76a33-9969-441f-b5e6-55a95c6970a5"
        },
        "item": {
          "id": "cecb6336-6bc5-46e7-a8d2-351c1c2b65f1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bc49e50f-9f1f-430a-b8a8-62bcbc15edf2",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "50139637-9902-4ba3-9562-5ae537aa2da1",
        "cursor": {
          "ref": "72314431-a864-462d-b6c8-9b3313887c59",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d0b267a-b2d1-433e-888a-14772ed29a66"
        },
        "item": {
          "id": "50139637-9902-4ba3-9562-5ae537aa2da1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1cc93255-7d44-40b3-b1fb-128555256b79",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "99bc16f4-6c80-4966-b8da-0fa4ce51c45a",
        "cursor": {
          "ref": "5efbabdb-13c2-4d7b-b792-2a06d2dc6b61",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e17b86c0-1e74-43b5-83ee-9630374d4f85"
        },
        "item": {
          "id": "99bc16f4-6c80-4966-b8da-0fa4ce51c45a",
          "name": "did_json"
        },
        "response": {
          "id": "91447513-5ea3-464f-9b81-b8a75a9af49a",
          "status": "OK",
          "code": 200,
          "responseTime": 1626,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a91011-95ac-432b-87b3-1dab84df2a4a",
        "cursor": {
          "ref": "936f408c-dfbf-45a6-bc55-4b24c4391b90",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ed760ca-a3fa-4c50-8726-12f459a91312"
        },
        "item": {
          "id": "85a91011-95ac-432b-87b3-1dab84df2a4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "88c3a98e-4f37-47d9-b55a-eacf1774478e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a91011-95ac-432b-87b3-1dab84df2a4a",
        "cursor": {
          "ref": "936f408c-dfbf-45a6-bc55-4b24c4391b90",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1ed760ca-a3fa-4c50-8726-12f459a91312"
        },
        "item": {
          "id": "85a91011-95ac-432b-87b3-1dab84df2a4a",
          "name": "did:invalid"
        },
        "response": {
          "id": "88c3a98e-4f37-47d9-b55a-eacf1774478e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca279d63-abd8-42a3-b5fe-3226b1edb6c5",
        "cursor": {
          "ref": "5f35af87-490b-4165-9ef7-6de3ea88a685",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c4bea49c-89e4-45ff-87e0-d05a5d46b93d"
        },
        "item": {
          "id": "ca279d63-abd8-42a3-b5fe-3226b1edb6c5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d537da3f-8af6-4533-b0cc-7fefd0365e03",
          "status": "Not Found",
          "code": 404,
          "responseTime": 732,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589d108d-e622-4bc3-9d16-6d3bf9deffdc",
        "cursor": {
          "ref": "2eb56102-04bf-4111-af52-271892efbb7f",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "88fa38b7-33a1-40c3-97f9-5ffae3b7940c"
        },
        "item": {
          "id": "589d108d-e622-4bc3-9d16-6d3bf9deffdc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38646738-0436-4eb0-bb4f-d666367ce043",
          "status": "Not Found",
          "code": 404,
          "responseTime": 520,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3240655a-f6b3-4c0f-9902-73a04d64b1ed",
        "cursor": {
          "ref": "46a577a2-0892-43a3-9908-05a74586f738",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f8e6287d-6890-499c-a53a-5919ea65bd37"
        },
        "item": {
          "id": "3240655a-f6b3-4c0f-9902-73a04d64b1ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a5e52cfa-eb30-47d1-a9cd-685afe1804b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70decac3-676b-4588-8704-e72fc70ca66c",
        "cursor": {
          "ref": "5593707d-2678-4d6f-a324-22ede79e4b5f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d831ddc-bf48-4cdf-8cdf-ca6e4b100b80"
        },
        "item": {
          "id": "70decac3-676b-4588-8704-e72fc70ca66c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c7f3a55-d717-48a2-9b83-f9e307493732",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70decac3-676b-4588-8704-e72fc70ca66c",
        "cursor": {
          "ref": "5593707d-2678-4d6f-a324-22ede79e4b5f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d831ddc-bf48-4cdf-8cdf-ca6e4b100b80"
        },
        "item": {
          "id": "70decac3-676b-4588-8704-e72fc70ca66c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c7f3a55-d717-48a2-9b83-f9e307493732",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 574,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea04a494-92a5-4f6b-b9d0-269f3b33a224",
        "cursor": {
          "ref": "48e01e65-0849-4a2a-b95d-c64c50fc71f9",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "656e6253-f001-4037-9af9-2bfbf09877b9"
        },
        "item": {
          "id": "ea04a494-92a5-4f6b-b9d0-269f3b33a224",
          "name": "identifiers"
        },
        "response": {
          "id": "9f4223aa-4058-432b-99ce-abbf816ea742",
          "status": "OK",
          "code": 200,
          "responseTime": 1031,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a39420-810b-4b89-81a1-be37e9e30789",
        "cursor": {
          "ref": "0ae0d01a-bb16-4fc2-805b-35872b6693e1",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e910f17-4ac0-468b-83aa-fbb451043a31"
        },
        "item": {
          "id": "61a39420-810b-4b89-81a1-be37e9e30789",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6a1656b-c76e-4c69-93df-f630006d365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a39420-810b-4b89-81a1-be37e9e30789",
        "cursor": {
          "ref": "0ae0d01a-bb16-4fc2-805b-35872b6693e1",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7e910f17-4ac0-468b-83aa-fbb451043a31"
        },
        "item": {
          "id": "61a39420-810b-4b89-81a1-be37e9e30789",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6a1656b-c76e-4c69-93df-f630006d365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cabd65-9c5e-4407-a29a-5b6877dfcb2f",
        "cursor": {
          "ref": "928d4790-aa42-4a88-97cf-3c6fd4d756d5",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a0665a21-4d4a-4010-9d85-8a73fec82b07"
        },
        "item": {
          "id": "c5cabd65-9c5e-4407-a29a-5b6877dfcb2f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25ad1e1f-6e53-41bc-8fc9-7dccec4939f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317297b6-e226-490d-8dc2-81022a3b91f1",
        "cursor": {
          "ref": "21ff6c20-5a0f-4bb2-92a5-573392b1bf43",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8034d262-f04d-4a38-9f9b-af4dcc3cf346"
        },
        "item": {
          "id": "317297b6-e226-490d-8dc2-81022a3b91f1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1d40f51e-bf0b-4e04-a6ae-72c2de6c1d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0726cb86-14e1-4616-ad6e-e9a40307866b",
        "cursor": {
          "ref": "f264e26b-2bd4-48b9-b8e4-65267abbb7fc",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f942e178-5410-4f67-81ef-97e55b69601b"
        },
        "item": {
          "id": "0726cb86-14e1-4616-ad6e-e9a40307866b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1d02485c-2a4f-4563-a22e-bdf4af9f0589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9f61e3-4060-454c-8155-0212310726d1",
        "cursor": {
          "ref": "34cbcd39-0d61-4632-81a2-f9193fac2c1c",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "eb4e7c3c-3264-4a64-b4f0-ecb54ae8e286"
        },
        "item": {
          "id": "5e9f61e3-4060-454c-8155-0212310726d1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f0a58d7c-3819-4f5a-ace1-c57206b187ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d476bf0-b3d6-4a00-a600-004daef121b6",
        "cursor": {
          "ref": "1bfffb30-dba9-421e-929e-8ece4672f0eb",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "45d1b646-51e1-4181-a117-27a7984766e5"
        },
        "item": {
          "id": "0d476bf0-b3d6-4a00-a600-004daef121b6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8f09eef4-9e43-45de-91d8-d42049a5bfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53760bc1-aaa2-4c66-803b-b9731604ba7c",
        "cursor": {
          "ref": "ff32fd37-e1f5-4246-b3b2-1beb786344ab",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d6a603ae-7a68-48f4-aaa7-6dffa1eff7bb"
        },
        "item": {
          "id": "53760bc1-aaa2-4c66-803b-b9731604ba7c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9e320130-b37a-4119-8710-91e8b03a6e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758349dd-1a1d-4456-9ca7-1b21d7bc7306",
        "cursor": {
          "ref": "c5c6c03c-0eeb-4791-be56-c69c1717b50b",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "76ad19dd-6394-4bc9-b34a-1a0a10cc5f5d"
        },
        "item": {
          "id": "758349dd-1a1d-4456-9ca7-1b21d7bc7306",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f89ca576-b7b4-4084-b7ff-d94ee33702ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5c44f0-ad3b-4c32-b211-67d6e3986e09",
        "cursor": {
          "ref": "d38587a3-e089-4b4e-aaef-740d7e9fb4f9",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d03d2a32-4ce6-4f80-8f9b-54817b1b53ff"
        },
        "item": {
          "id": "2a5c44f0-ad3b-4c32-b211-67d6e3986e09",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31e74ec0-efde-49c2-9578-04a0550da3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cdef8f-bff3-4c46-9236-0a010f971a65",
        "cursor": {
          "ref": "f5a966fb-73f3-491e-a92d-130cd206136e",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ed321241-129c-4a24-9593-5f09ad62318d"
        },
        "item": {
          "id": "36cdef8f-bff3-4c46-9236-0a010f971a65",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "49511f13-0908-4631-b45d-d7c9edd1849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd2c46-394d-4570-8dea-86f261d74fa6",
        "cursor": {
          "ref": "e5900aac-5b35-4d94-8790-72c9954da032",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c20c0da-18af-4b4f-baf0-1334d5bef639"
        },
        "item": {
          "id": "c4fd2c46-394d-4570-8dea-86f261d74fa6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6f82d32b-1f30-4f45-8e1e-36b500b4082f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b40259-390c-428e-a5b4-e7f358b2c4b3",
        "cursor": {
          "ref": "c1fba909-f70f-4047-b836-31e333340bb9",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "900558a2-96bd-4bb0-a420-1cc00ef90502"
        },
        "item": {
          "id": "68b40259-390c-428e-a5b4-e7f358b2c4b3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7abc5be3-143f-4897-8951-4465631a332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c259619f-af85-42b3-9bdc-5a85d526b432",
        "cursor": {
          "ref": "027f071e-4668-4e6d-a756-00e8908af8ba",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b8935081-061b-42ee-99d1-4528e1a22519"
        },
        "item": {
          "id": "c259619f-af85-42b3-9bdc-5a85d526b432",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d1acdbcd-334a-48c8-8fcd-06894271db35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2947bb-5c4c-40e9-bfdd-2ff2271b35cd",
        "cursor": {
          "ref": "ddb0183f-1751-4a73-9a16-5a02ec9558cb",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ed500bb6-beeb-4fa0-bf9e-17e318518c28"
        },
        "item": {
          "id": "5b2947bb-5c4c-40e9-bfdd-2ff2271b35cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ba4da45e-16fe-4118-9f85-06799044f68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b688b-56b6-4cfb-8e3c-15dd741bbf46",
        "cursor": {
          "ref": "29acfe73-5483-4cc0-aa52-9cbdddf0c023",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "155c67cc-da91-4d28-ab55-37d5d90e513f"
        },
        "item": {
          "id": "680b688b-56b6-4cfb-8e3c-15dd741bbf46",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2ca91461-bc9f-4409-a632-d2845d29138b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6024d96f-bd48-494b-93c1-cb9493fcae27",
        "cursor": {
          "ref": "8596dc70-454e-421a-9687-60cc9d2678c7",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6089d242-1558-4901-bcb4-c36beb111c35"
        },
        "item": {
          "id": "6024d96f-bd48-494b-93c1-cb9493fcae27",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5609faff-a40e-41e5-b863-82a3a2f194b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7879ea55-bbfc-4c2c-a617-adff4cf81c72",
        "cursor": {
          "ref": "284acb6f-3bae-483e-a235-e140be19ecf5",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9f15de14-1114-43bf-b73d-519efcbcd6ab"
        },
        "item": {
          "id": "7879ea55-bbfc-4c2c-a617-adff4cf81c72",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e16c6eda-978a-49db-a32a-d0158f084ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee281bb-04a4-4a67-8898-ad9761810066",
        "cursor": {
          "ref": "e5e0a080-6025-4050-b3f9-92971352334d",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8c44e132-636b-44f5-ab9f-d0fb9e95b689"
        },
        "item": {
          "id": "dee281bb-04a4-4a67-8898-ad9761810066",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d331cd64-f266-4596-806d-6e449ef8379b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cf1674-d56b-4f61-ab27-382f48f5af03",
        "cursor": {
          "ref": "260b3431-cf53-4bb8-a59f-8dc420c71b73",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6cbdaed-4e99-4b7b-bd17-09db33391fb9"
        },
        "item": {
          "id": "45cf1674-d56b-4f61-ab27-382f48f5af03",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c1724a24-16f8-49ea-b52a-45333387e318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3d0e83-2a13-40a6-be6b-9945fec32fcf",
        "cursor": {
          "ref": "1d02863c-1499-44f5-b4bf-dda878bce3e9",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c857d202-796c-4da0-bacd-8d61e705f621"
        },
        "item": {
          "id": "cd3d0e83-2a13-40a6-be6b-9945fec32fcf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b60759a1-7e43-4e17-974e-591f89fbca21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56155628-d2cc-4636-8546-ea6d9db993b7",
        "cursor": {
          "ref": "6551c9ed-f943-4a93-896a-330d6c12c48a",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "74b13faa-3340-43a6-a837-e9f28426d159"
        },
        "item": {
          "id": "56155628-d2cc-4636-8546-ea6d9db993b7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "794e1a11-c1e5-4ec2-a41f-8987eb637f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba420b8-5b19-49c0-9682-3bdc9f142189",
        "cursor": {
          "ref": "0d755aa0-b668-4780-bf2b-ad5103f670af",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "33967455-76b0-449a-afba-d91f2fbc7409"
        },
        "item": {
          "id": "dba420b8-5b19-49c0-9682-3bdc9f142189",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "be66365b-8a84-420b-93ad-01154743ac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8d6b75-3bab-4805-8e67-8ad83754f8b5",
        "cursor": {
          "ref": "acfe144c-6fd5-4275-afb0-6b8b9920a592",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a951b8eb-d1cc-445c-959f-196aa336d12e"
        },
        "item": {
          "id": "0e8d6b75-3bab-4805-8e67-8ad83754f8b5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f9de944c-1072-43d1-9a87-04dc25776077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8669981-c6d7-4086-8ca3-775a24b8f076",
        "cursor": {
          "ref": "b06b512f-6978-43e5-9e0e-54c56f9e4682",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f8e3e006-bad1-498b-8c00-d4e73b6ef1f8"
        },
        "item": {
          "id": "b8669981-c6d7-4086-8ca3-775a24b8f076",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc598ea0-7274-4493-8e45-6420f565c03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1081,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3645f6-ef8d-4809-a057-14cd22b92838",
        "cursor": {
          "ref": "e1c48da8-5de2-410d-a1dc-2bdddbb0c195",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2730a20b-9e91-4b2f-ad36-36470bb3fc58"
        },
        "item": {
          "id": "fe3645f6-ef8d-4809-a057-14cd22b92838",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "12fb2a5f-a964-4c04-980f-ba0e24e637fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1241,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3176ae-7c64-4ab2-bf10-5484fae779d0",
        "cursor": {
          "ref": "34d27d34-dc6b-4890-a8fd-7805e21aa741",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1b71cce5-b73e-4ef8-a426-74c056b6c58d"
        },
        "item": {
          "id": "6f3176ae-7c64-4ab2-bf10-5484fae779d0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3291e5b3-7e9c-4aec-b122-750695da9087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1085,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174126c3-d037-4b31-9e4e-8cb764189d76",
        "cursor": {
          "ref": "e9d3c390-d07a-492e-8804-894ce4cbe99d",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "474a79b0-e3ca-43c3-8d16-687487c93348"
        },
        "item": {
          "id": "174126c3-d037-4b31-9e4e-8cb764189d76",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3c02dc34-152d-4f91-b9ea-f3e2cd05ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90736a86-3ec6-4658-a64f-72ee5c1c4cb3",
        "cursor": {
          "ref": "13e04b7c-4596-4499-88d9-9b592b2f9348",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c62f6442-6767-4a43-b8dd-65323f072fe6"
        },
        "item": {
          "id": "90736a86-3ec6-4658-a64f-72ee5c1c4cb3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9cb7d01c-175e-4eb3-899f-a137ef348348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b076e4-fa41-4e0e-b452-86e4caf4f42c",
        "cursor": {
          "ref": "92a3b327-301a-4559-a7ee-4a3a73aa5f41",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b0657403-89d1-4b5e-9aa8-196a860a6e7b"
        },
        "item": {
          "id": "e4b076e4-fa41-4e0e-b452-86e4caf4f42c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b8fc224e-f480-4e78-9cc2-d4fd97ba7e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9180f07-4ac1-44b7-92e4-0cd322c3597b",
        "cursor": {
          "ref": "51172a40-7ffe-4c23-9cb1-dc69f0ffcaab",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "593f8dee-5bb9-46fa-874e-52a4169958d8"
        },
        "item": {
          "id": "d9180f07-4ac1-44b7-92e4-0cd322c3597b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "60661585-ecfe-4c57-8d51-715471871f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d3e06f-81f7-4c05-a20e-26f01b3f0a2c",
        "cursor": {
          "ref": "c7117499-b71d-4a9a-ab6a-573a0f81f323",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "67ce5dac-eb0e-4c25-8126-24e80bbf7117"
        },
        "item": {
          "id": "68d3e06f-81f7-4c05-a20e-26f01b3f0a2c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2ffc3209-4f0b-4d02-9fa1-41b8b2eb5875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152a97d2-516e-4cdb-8b04-73c3f29df6ec",
        "cursor": {
          "ref": "7b6cea04-38f1-458b-8c4a-cc5b14594405",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c5579a98-1bec-4581-8a50-d5b85a4e4b03"
        },
        "item": {
          "id": "152a97d2-516e-4cdb-8b04-73c3f29df6ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "619c499a-db98-45db-a542-95c2bc925fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab53cbf-6ef1-47d5-850e-49c3996fda54",
        "cursor": {
          "ref": "f3a6b2d7-eaef-445a-a320-18cebeae3c6f",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4ec16963-d134-47f4-9a6b-2917e4f0fe62"
        },
        "item": {
          "id": "1ab53cbf-6ef1-47d5-850e-49c3996fda54",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "53257b63-b5c4-47e2-bd9a-f9274a3a85c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4f8b69-b9d6-4863-bfdf-73357a74ecfd",
        "cursor": {
          "ref": "a27de12b-f6f3-4a46-8a6f-08e3b387acef",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "537510d6-d012-42b1-b954-d93693990bc5"
        },
        "item": {
          "id": "de4f8b69-b9d6-4863-bfdf-73357a74ecfd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c79e57f8-9f92-4111-8ea4-f2ea113bd74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba93780-0a66-4539-82b0-21c4bb0296c3",
        "cursor": {
          "ref": "73438fe9-958b-47d8-a320-09c19389f916",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "14a9b15a-d8e1-4f4a-9cdb-5b0f22356381"
        },
        "item": {
          "id": "aba93780-0a66-4539-82b0-21c4bb0296c3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "93dbd1b0-78a9-49b6-afc4-069d2f543ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbab849-d17a-4cd3-9f68-7da07e58f770",
        "cursor": {
          "ref": "81f4afd8-58e3-41b5-b307-fd4ec1fdfe7c",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c3b00cc1-6ba6-4220-bf14-3b1e656d3c06"
        },
        "item": {
          "id": "9dbab849-d17a-4cd3-9f68-7da07e58f770",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "587a3b72-7243-4b49-9231-1e382f42cbf2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7667f4-1323-4469-9e0a-5fa4b0ea856c",
        "cursor": {
          "ref": "cb8c9b34-45f9-48ad-9c06-0cb54db6e8e1",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "39aceaac-6231-485e-9142-311379f43cdf"
        },
        "item": {
          "id": "6a7667f4-1323-4469-9e0a-5fa4b0ea856c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f83c9c9-e0c0-4c89-bdb1-cb50473f4412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc05ec1f-92a9-4a06-bd9e-cdb72208f47e",
        "cursor": {
          "ref": "5a1e1309-b7d9-45b7-a826-f1d5552890ef",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2fc764f6-73c0-46cb-8735-c883e0d2f26e"
        },
        "item": {
          "id": "fc05ec1f-92a9-4a06-bd9e-cdb72208f47e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f907ed51-d409-4a0f-a0b7-f3dadd5e1a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266bcb7a-15aa-4ae9-a7e7-c2801637f60f",
        "cursor": {
          "ref": "e4b1ac3d-4c94-4873-948e-1132f56dd1aa",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6dfb74d2-c115-4de3-8acd-c7b7cfedc237"
        },
        "item": {
          "id": "266bcb7a-15aa-4ae9-a7e7-c2801637f60f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5de753cb-4e9c-4b06-ab8b-e5c7bcb20689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be60c19c-f1dd-4754-99dc-f2de460badab",
        "cursor": {
          "ref": "1b4ba952-743a-4ec0-af06-c75d2d1332af",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a05b9e98-d76c-48b0-ab5a-0dfa84fffba3"
        },
        "item": {
          "id": "be60c19c-f1dd-4754-99dc-f2de460badab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "86a9d603-bd06-4a30-9f35-602927b2e08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0432d484-e2df-4668-a62f-048013aa849b",
        "cursor": {
          "ref": "04a0849d-f673-45ec-a591-a46ffe42fe06",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e778e3d3-0d30-4281-9377-ac7738994c67"
        },
        "item": {
          "id": "0432d484-e2df-4668-a62f-048013aa849b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6c5c4599-917c-4348-8177-ee39a1e85b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4304ad70-94fb-4ae7-8047-4c842f3b7b8a",
        "cursor": {
          "ref": "61f8006e-eef5-4699-a62d-85f40d9c0185",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "053c78b7-5f2b-4b71-a7fc-02bc276748d9"
        },
        "item": {
          "id": "4304ad70-94fb-4ae7-8047-4c842f3b7b8a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3f12ef99-8118-479d-b588-d6b3d4437266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61f1a0f-4bdb-4eb4-900f-ee14010656d2",
        "cursor": {
          "ref": "47e817c4-5aa4-4758-bf22-181ee4b85cdd",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "407ff306-9412-495c-b20a-631d36995998"
        },
        "item": {
          "id": "e61f1a0f-4bdb-4eb4-900f-ee14010656d2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1f0ace22-77b0-4aef-97e3-5d4b167b8b24",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 541,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f7a21-4158-4970-af96-117bc17b7e24",
        "cursor": {
          "ref": "30e510fa-e569-4449-94ec-ced74d19b2f5",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d778133-17bb-4dda-81d2-cb7337210450"
        },
        "item": {
          "id": "6f9f7a21-4158-4970-af96-117bc17b7e24",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc340550-a2c3-4fc1-8d03-1287a46689d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f398338-aa26-4d04-844b-45e0de1ef5b8",
        "cursor": {
          "ref": "d36fc8fb-8b7b-4c9e-aa2e-d9a6a8542cc4",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "738b7e30-6f2c-4727-abf9-6976409e5e0d"
        },
        "item": {
          "id": "8f398338-aa26-4d04-844b-45e0de1ef5b8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c26d4bbc-0315-4e2e-8113-b7d7253758e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18344d6-c26c-4c77-9ed7-92c2f2865ef5",
        "cursor": {
          "ref": "71ad1b83-9993-45c1-b570-b5bcc6f333fd",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "87ff873b-056c-48ac-817b-5548a193f93f"
        },
        "item": {
          "id": "e18344d6-c26c-4c77-9ed7-92c2f2865ef5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c1749a73-a52c-43d1-b600-f628083bb1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ada4e9-9bdf-44c0-8ad4-352a2bde0fe3",
        "cursor": {
          "ref": "03094d06-5583-43fa-b1a9-64f085fc54aa",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e69ee261-e63a-46cd-83fb-f2b364f4fef0"
        },
        "item": {
          "id": "56ada4e9-9bdf-44c0-8ad4-352a2bde0fe3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ff53e6c1-e269-49fc-9d80-b625762dcf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e1e8a-5a37-48c1-aa63-a391056634ec",
        "cursor": {
          "ref": "5c036e37-242a-4730-8e6e-6f30de0a5f54",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "db59b37d-3240-4436-87d6-9a9951572173"
        },
        "item": {
          "id": "282e1e8a-5a37-48c1-aa63-a391056634ec",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e2035b53-5a7f-4438-a07f-a4b79ba224e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b261b8d-aae8-4f18-b94e-5429464e6493",
        "cursor": {
          "ref": "98d6108c-532a-440d-ac50-38e18f422f69",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50cb23e1-3801-4ea4-ba90-abeabfe682f3"
        },
        "item": {
          "id": "9b261b8d-aae8-4f18-b94e-5429464e6493",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b25a903e-6e9e-4fde-b97a-0680abe812c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ac72eb-185b-4023-baf8-08a2113c8f25",
        "cursor": {
          "ref": "7d6c160a-3035-4db6-98f7-30b0e5003469",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ff3a0e1b-9ed9-4e0e-8853-e0e11667260c"
        },
        "item": {
          "id": "e4ac72eb-185b-4023-baf8-08a2113c8f25",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dd2f56da-bbc5-4783-8ac0-819d8b7bef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c37fcf-6b6e-4c85-ac03-732eff365329",
        "cursor": {
          "ref": "ca10e913-01e3-4687-bd88-1839cf4fc543",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fdbdd76c-cd6b-44ea-9920-6a095763c0f1"
        },
        "item": {
          "id": "55c37fcf-6b6e-4c85-ac03-732eff365329",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "03b8f711-a428-471a-a268-bb2ca18b3145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbca8e2-1f83-4efe-87cc-f5eaa3066eb5",
        "cursor": {
          "ref": "e78beca8-c369-4222-a2f1-4d8c892fee4e",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76670f01-51df-4133-a7ee-e5563983984c"
        },
        "item": {
          "id": "5bbca8e2-1f83-4efe-87cc-f5eaa3066eb5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f8e3210c-1219-43c5-92a2-b16fd52fc94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd5b106-b237-44fa-8cdc-518d24a8203a",
        "cursor": {
          "ref": "902afcd8-7b23-4293-a3c3-3ebe026d54c7",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2691ce25-1233-44e1-85e0-2c5cab6aed50"
        },
        "item": {
          "id": "0cd5b106-b237-44fa-8cdc-518d24a8203a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d80a711-d3aa-4155-9970-c062132e4b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7fff9e-a8ef-4efd-b09d-01d83f128043",
        "cursor": {
          "ref": "fc22e08d-206e-4c68-b93e-7d89ef2d6b00",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "14f93450-1480-4be6-a10c-d7808d6be6fc"
        },
        "item": {
          "id": "6d7fff9e-a8ef-4efd-b09d-01d83f128043",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2f01d668-d2c8-4c9d-b5a3-c8f5aa94dad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec712913-7f8d-4ad8-9626-fc2ac3bcfeaa",
        "cursor": {
          "ref": "7f261dab-6410-40e1-aed1-8765e524b50f",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "106e93f5-1d13-4075-a4e9-dcd72d6e293e"
        },
        "item": {
          "id": "ec712913-7f8d-4ad8-9626-fc2ac3bcfeaa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "371d493f-0606-4b30-b5ac-dedbfa2f5909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ff8f5-fe4d-4241-b148-a496cdd2e849",
        "cursor": {
          "ref": "fbb35afa-f319-4597-ba05-c74fa8a4f3d6",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1281fc1d-6a3d-4492-8940-8bed6c0c3417"
        },
        "item": {
          "id": "263ff8f5-fe4d-4241-b148-a496cdd2e849",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "903dd6f4-ea25-4496-a36f-63f96f075bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da7dcf2-2648-479e-a098-50e0ae1538d8",
        "cursor": {
          "ref": "090ee347-5937-483b-9a76-d11ae75e42af",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c89a6eb4-9ce6-4a9e-85f3-53462490a93c"
        },
        "item": {
          "id": "8da7dcf2-2648-479e-a098-50e0ae1538d8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69326758-5179-45eb-b917-b8e12d216c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6c9864-0f02-4a8f-aaf2-bbb2f4521716",
        "cursor": {
          "ref": "4fc1d505-62b6-4c07-9623-5e1c1b9f4e20",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5041acc1-6721-4600-8bd5-be1ceed589ab"
        },
        "item": {
          "id": "0d6c9864-0f02-4a8f-aaf2-bbb2f4521716",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "182498ef-94cb-4057-aff1-d1de3aca97ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc920725-2a96-4043-a37d-5c183deefae2",
        "cursor": {
          "ref": "51ad0132-9527-4749-966b-e78925b07560",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ffe42e6b-ff6e-4ed7-ae58-8897e0e94174"
        },
        "item": {
          "id": "bc920725-2a96-4043-a37d-5c183deefae2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c90a3282-9d44-448d-b2c9-204667bdd90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544b6be2-0f03-4ce9-b1d9-98a1ccd23ffd",
        "cursor": {
          "ref": "ec3ff53c-7515-423a-9b79-3c99aafded91",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "42a8c963-5bfb-4ef9-8631-52004a1e3fb4"
        },
        "item": {
          "id": "544b6be2-0f03-4ce9-b1d9-98a1ccd23ffd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5dad82e8-0b3b-43c0-8dde-9722fc77896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e26be-9236-4e03-8ba9-d80ca34ff2f7",
        "cursor": {
          "ref": "b7e50973-a6e9-438c-9749-97f6f3f25325",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9dcf5f17-6618-499f-8553-83579013dc55"
        },
        "item": {
          "id": "f17e26be-9236-4e03-8ba9-d80ca34ff2f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3e8ca373-d85a-4f87-8502-3b1aeeec7a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b1c6ec-8513-410a-8906-0e80d83e4c61",
        "cursor": {
          "ref": "af6a988f-d78e-4d09-9218-57172ca9fe79",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c029e183-3b86-453f-8b03-9234abb34c6d"
        },
        "item": {
          "id": "08b1c6ec-8513-410a-8906-0e80d83e4c61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a35ff116-c908-4bce-a7ec-41359a4e0109",
          "status": "Created",
          "code": 201,
          "responseTime": 2181,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "a9421dae-180f-4f8f-b18e-e8e7096bd1ef",
        "cursor": {
          "ref": "a11c4bda-2711-4d2b-9f0b-c44229356958",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f2c51352-d7e0-4b8f-8d38-4e3bc4022c43"
        },
        "item": {
          "id": "a9421dae-180f-4f8f-b18e-e8e7096bd1ef",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cc22554b-6011-4963-b9ce-9b7a00d7067d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f2bb4a-46ac-4204-9319-5b8ab71e88ed",
        "cursor": {
          "ref": "e7bb6f98-300d-4a24-868f-97713073705c",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "98e14c96-c2dc-40f9-8bb0-d9e5138d455c"
        },
        "item": {
          "id": "46f2bb4a-46ac-4204-9319-5b8ab71e88ed",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d1e684ba-652d-429d-895b-b94deb2accd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ac2f4e-5295-48ef-b371-3679351abd9c",
        "cursor": {
          "ref": "710ae047-9bb7-44f1-b7bd-b7151e1bd460",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a1bfce63-01aa-4dd2-ac58-79bc67cf03eb"
        },
        "item": {
          "id": "c3ac2f4e-5295-48ef-b371-3679351abd9c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "58c1a3c4-830e-4aa7-b09f-7fc171216ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea87871-8bae-410a-bc5f-996388265466",
        "cursor": {
          "ref": "a0e52c19-c103-4e8c-aece-46e9f1dcd8d8",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5051a6a6-07c1-4373-ba77-99fd598bcc5a"
        },
        "item": {
          "id": "fea87871-8bae-410a-bc5f-996388265466",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1d577404-42c4-4c5e-b558-bc99a116aaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a92e6-3bbe-47b0-a70a-639c3552c8f9",
        "cursor": {
          "ref": "14619822-ae43-452e-b5f4-51d485a78d84",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edd8b65d-485b-44dc-897b-d512f4917176"
        },
        "item": {
          "id": "7a8a92e6-3bbe-47b0-a70a-639c3552c8f9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "09477c02-bfb4-4e6d-89b9-d5f54ad745d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51c0541-955a-48a7-80d6-57981606ec57",
        "cursor": {
          "ref": "c7ea80d3-8d01-42e0-b49c-7f028f5981a9",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d888e3c8-8a80-4f17-aa5d-76edcf4b8128"
        },
        "item": {
          "id": "d51c0541-955a-48a7-80d6-57981606ec57",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "903c0f25-7668-4eee-bfa2-2fa558bb85a5",
          "status": "Created",
          "code": 201,
          "responseTime": 2048,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "11cf43bf-7647-4f00-bfc8-5aae4d599eb7",
        "cursor": {
          "ref": "0e237dba-132a-425e-8b62-f2067e123797",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ca68ab7-16c8-4c93-bee3-023ea16df87b"
        },
        "item": {
          "id": "11cf43bf-7647-4f00-bfc8-5aae4d599eb7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bc050e47-9865-4578-821a-66cdad204507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379d6d41-6d8d-4dae-ac59-6c2ba4db98a4",
        "cursor": {
          "ref": "b7374d37-e27b-4f0d-a020-e5fe547811e3",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b0772f72-407e-4d2f-ab29-dd6529f81fb0"
        },
        "item": {
          "id": "379d6d41-6d8d-4dae-ac59-6c2ba4db98a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ec7f9c5e-4385-43c7-8a09-f6d296683670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec03eca-4f27-4b9e-bb38-a5bf2ff3cd43",
        "cursor": {
          "ref": "34408fc2-37a5-4865-ac6f-7b82fcdaf485",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b76f8187-b63d-4fe4-9e2f-c91f22aaadae"
        },
        "item": {
          "id": "bec03eca-4f27-4b9e-bb38-a5bf2ff3cd43",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c133bdd2-cb32-46b5-bacc-2261adc29d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a8876-b390-4c81-bb0d-0d2176d10f95",
        "cursor": {
          "ref": "8fd0e49d-f7da-4aa2-96c3-f4b4d4e30256",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1a307d50-9554-4259-8512-f6512b9a9f7b"
        },
        "item": {
          "id": "407a8876-b390-4c81-bb0d-0d2176d10f95",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "db6b90e3-690f-4d99-89a5-099de429af10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e65ebe-318a-472c-9361-d70c585a0dda",
        "cursor": {
          "ref": "c149b782-0e9c-4866-af5b-65ccee0ac7c6",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "36df4fcd-d6d2-4a17-a5d8-f24b1a774b15"
        },
        "item": {
          "id": "d4e65ebe-318a-472c-9361-d70c585a0dda",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3e8dba3-4968-4889-9379-ec69ca76a580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f58e499-b8aa-44fa-9b1b-7940319d8795",
        "cursor": {
          "ref": "dea5c9a6-b88d-47b2-a38d-368bb4480849",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1da5dd29-b542-48ae-9edd-8f5c99e86577"
        },
        "item": {
          "id": "2f58e499-b8aa-44fa-9b1b-7940319d8795",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1354159f-616d-47f4-b026-abc74296b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cbb405-e37a-4ee2-a5a3-850534f733b2",
        "cursor": {
          "ref": "92a14922-90b8-4279-bdb7-67ee8e978b96",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d7dafb34-a958-4d97-b14c-035581b185a9"
        },
        "item": {
          "id": "83cbb405-e37a-4ee2-a5a3-850534f733b2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "adaab25a-4913-454e-bfbb-5f269824787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0736b99-5ded-4e1b-8af8-bc2dc9485487",
        "cursor": {
          "ref": "769d73c2-028a-402c-aa31-736f5b5e28d5",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d10f2a98-0610-40ea-beb0-fe03e279f5a1"
        },
        "item": {
          "id": "c0736b99-5ded-4e1b-8af8-bc2dc9485487",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9943c68d-5944-46cc-ac85-11c561d4f3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4de6bd-dea2-4e34-b0f9-6fd9c87834cc",
        "cursor": {
          "ref": "f4b6066b-4891-4dae-9b83-3dcbd1b71fac",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "905f2484-b365-45a9-a02c-44768f11ab26"
        },
        "item": {
          "id": "ab4de6bd-dea2-4e34-b0f9-6fd9c87834cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7b0cc4d7-cdd2-4b1f-bb73-f1cf24d5c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03ccd1b-78e1-417d-b4bb-7fc5aa560ba4",
        "cursor": {
          "ref": "521c8ddd-9338-4e14-803b-5754ae6d78e5",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "70b7b1b4-3d87-4471-9556-6317953c8aa5"
        },
        "item": {
          "id": "d03ccd1b-78e1-417d-b4bb-7fc5aa560ba4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b0e3e05a-e3ea-4593-8ecc-fd6727b59e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a283dd1d-750a-48a7-b280-dc9770f29a89",
        "cursor": {
          "ref": "3de422cf-e2af-489f-8cb8-7221fee96c24",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2f6e2b30-d3d5-459a-828b-8caca6c3e340"
        },
        "item": {
          "id": "a283dd1d-750a-48a7-b280-dc9770f29a89",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b1a5ed4-3442-4cdf-b774-d9ca4ee95cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c1f35-d624-435e-a321-2f343b73239a",
        "cursor": {
          "ref": "dfd1f1d7-5e0d-49c0-8774-339cf15e649a",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2e3cf476-bcbd-46d2-866a-f772393d3807"
        },
        "item": {
          "id": "1e4c1f35-d624-435e-a321-2f343b73239a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "337420f5-d871-4e66-910c-d1e718db41e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92724f85-d781-4400-a1ea-f83fdfb9a45a",
        "cursor": {
          "ref": "c403863d-6b7c-4e5c-b7d5-0c1ab267c54e",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "491c1bfa-d7f4-4c93-ac8b-6593718ff9f0"
        },
        "item": {
          "id": "92724f85-d781-4400-a1ea-f83fdfb9a45a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b6a63f67-7e7c-4781-9d31-b4f8b86c951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc86f8c-f9b7-4273-959b-6fc139dcfdff",
        "cursor": {
          "ref": "185c6b9f-d07f-4ea6-ada6-0ce010bbe225",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "232fe303-96cf-4f3a-88c5-d47405b64f9e"
        },
        "item": {
          "id": "3bc86f8c-f9b7-4273-959b-6fc139dcfdff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "947316eb-4f30-4725-a4dc-b9d8cacd281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0a83d7-6b07-4f3f-8f92-2cbedbb29630",
        "cursor": {
          "ref": "0c7ee997-2efa-435b-83a1-ee69df45bad9",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0175e643-5e2a-4d06-b80e-d34aa90c0fd1"
        },
        "item": {
          "id": "1b0a83d7-6b07-4f3f-8f92-2cbedbb29630",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "97f597d1-59f8-4a5b-9922-7f6cf74102cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c9c462-364b-42c9-8d94-4b1f7c847edd",
        "cursor": {
          "ref": "0be1fd17-44f3-486b-8879-833a8f083332",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "50c18511-902e-4762-aade-73fbe3879925"
        },
        "item": {
          "id": "a8c9c462-364b-42c9-8d94-4b1f7c847edd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3517483d-3334-4748-bbf1-50340cb25d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8904d2-4f7b-40ab-8a77-1eb81634d98c",
        "cursor": {
          "ref": "2a563c38-0af1-4cf9-af52-33a5fcd3d4dd",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "626f134d-1e06-487c-b19b-58ae35b2505f"
        },
        "item": {
          "id": "6f8904d2-4f7b-40ab-8a77-1eb81634d98c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ffc9e40e-9138-4049-a6cd-eb599052247e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d83b65-b690-4b8f-b13f-5fec78dd6782",
        "cursor": {
          "ref": "cba3f73b-71b6-4144-a37e-f13ec65b336a",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "76131efa-d03e-44f6-a663-eaa49ee8af54"
        },
        "item": {
          "id": "40d83b65-b690-4b8f-b13f-5fec78dd6782",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f79a1cf-c325-42fb-bc3d-0ec1389026dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c3bdde-437e-4b32-a78d-257a8b76cea6",
        "cursor": {
          "ref": "533467c3-3fe9-47c9-bbe2-f48d4ed8b3ca",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a60e2653-a6e2-4574-862d-76d84f403900"
        },
        "item": {
          "id": "57c3bdde-437e-4b32-a78d-257a8b76cea6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "31c66cfb-8cf9-461c-9fea-38e80ff886b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a70014-fc34-4666-97c6-3189b1a8f952",
        "cursor": {
          "ref": "08bb2b2e-9550-42af-932a-1e101cf19bdb",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e1f736ac-6b30-4ed6-ae81-72c26fafdff7"
        },
        "item": {
          "id": "e8a70014-fc34-4666-97c6-3189b1a8f952",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1558a7ca-bf22-4725-842d-e71a72bb3ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9317e1-9df7-4bce-928e-98d284375957",
        "cursor": {
          "ref": "0358601e-6974-4838-ac96-baa54480fd93",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "71c1d463-33f3-4793-a312-cc4dfb5c1a4e"
        },
        "item": {
          "id": "cb9317e1-9df7-4bce-928e-98d284375957",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5c81dba5-d1d3-47db-b385-10e0145225a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bc94e5-dc2e-4d24-9d1f-07c328c07875",
        "cursor": {
          "ref": "1183e8b9-a9e7-4b6c-8df7-5592398160db",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a1a4bed9-7209-4c5d-bc43-eabd21cbb1fd"
        },
        "item": {
          "id": "56bc94e5-dc2e-4d24-9d1f-07c328c07875",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ca3c2d47-3d93-4f2f-b3c8-c9e88ea458cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4369de36-cfde-4683-b0ff-9c0fcb72dba1",
        "cursor": {
          "ref": "2bc239e1-f236-4219-b5ab-25c89667d6b7",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6144359c-193a-41df-b26c-96e6b7809dfc"
        },
        "item": {
          "id": "4369de36-cfde-4683-b0ff-9c0fcb72dba1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "53c27561-d0ce-4980-93b3-d30f63e83ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f56500-2445-4b82-a896-4075aff53393",
        "cursor": {
          "ref": "3539c4af-0894-410a-a9d9-2e7c01b18cbb",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "537ba7ed-e5cb-40c6-ad62-f177e6dc4271"
        },
        "item": {
          "id": "29f56500-2445-4b82-a896-4075aff53393",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "528e7a3d-6c63-445e-8bf4-230347d8cd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7b6e88-b3a3-4719-90d4-49fdb3f8df20",
        "cursor": {
          "ref": "7ab2251e-c11f-42d2-be30-b3439c8e6f33",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e219604c-957c-4312-a9a1-f0d50c82d275"
        },
        "item": {
          "id": "cb7b6e88-b3a3-4719-90d4-49fdb3f8df20",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aa203b1c-8c6e-4e42-9edf-4456714eb989",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdad460-4c40-4486-b070-0f91cfee1cd9",
        "cursor": {
          "ref": "438c86c4-51bd-4c7c-a74c-93a943e84426",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0ce675dd-6229-438c-92c7-048e913821fe"
        },
        "item": {
          "id": "1bdad460-4c40-4486-b070-0f91cfee1cd9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1c324caa-4d97-4c25-96f9-6833e7e06173",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 579,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9717dfe-cef8-4753-906b-5049ccf10bea",
        "cursor": {
          "ref": "b8272e2a-28f0-4c29-98df-b6ceab0e1266",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6b043c75-ea0d-4b20-8e08-f5c9b67d645a"
        },
        "item": {
          "id": "a9717dfe-cef8-4753-906b-5049ccf10bea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "54cc3a17-2477-4130-8d89-2087937a009c",
          "status": "Created",
          "code": 201,
          "responseTime": 7108,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "b2665a93-9bfe-4a60-8db6-76b7b1983ee1",
        "cursor": {
          "ref": "351e4e70-cc7d-4417-8dde-9d237737611a",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "96420795-35d0-4a38-ac20-3e0c23e2f5d4"
        },
        "item": {
          "id": "b2665a93-9bfe-4a60-8db6-76b7b1983ee1",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "f0810870-cd67-419b-93e1-6882ec4bb47b",
          "status": "Created",
          "code": 201,
          "responseTime": 3304,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "c355cfa5-38f7-4f38-9296-956f940a7509",
        "cursor": {
          "ref": "218f6388-c68a-4b0b-924d-92478231d614",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "62c2552b-1dc6-4460-9ab8-98bb0e74597a"
        },
        "item": {
          "id": "c355cfa5-38f7-4f38-9296-956f940a7509",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ad303d58-7dc4-46ce-a01e-e3256d168dac",
          "status": "Created",
          "code": 201,
          "responseTime": 2222,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "18ab91db-1e8e-4147-b718-04a4448a49b4",
        "cursor": {
          "ref": "f7cf0742-ef4d-4075-a1c6-4dbafe48bb54",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d6af4330-f05c-421c-b681-1d4c31850208"
        },
        "item": {
          "id": "18ab91db-1e8e-4147-b718-04a4448a49b4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "17a957f4-80cf-4bd9-940d-e0c0f6218150",
          "status": "Created",
          "code": 201,
          "responseTime": 2123,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2301af1f-a719-430e-aacd-88d17563e175",
        "cursor": {
          "ref": "08fa0289-39c2-4bb2-a610-cdcaf464f46a",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c7c7246-02cf-4191-a92d-1f15125f6688"
        },
        "item": {
          "id": "2301af1f-a719-430e-aacd-88d17563e175",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8cff1010-2c57-4d0c-be07-ea3db4301b31",
          "status": "Created",
          "code": 201,
          "responseTime": 2289,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "44504543-701d-4f81-884b-6b5f8d8b6752",
        "cursor": {
          "ref": "4fdd06f6-cc98-4d9d-bc31-67c01ce6e273",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9e38749f-44cd-4fbb-a9ff-d899a61bf31f"
        },
        "item": {
          "id": "44504543-701d-4f81-884b-6b5f8d8b6752",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a2edcc1b-fe07-46a2-8543-4de4f71319dd",
          "status": "Created",
          "code": 201,
          "responseTime": 2658,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "4afc7bee-e2ab-48e1-84d5-6b4df45056bf",
        "cursor": {
          "ref": "9b2b0670-aa22-4f4c-b2cb-928a8a98be27",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e4fc52c-8165-457a-8fa6-70cdfbff52e0"
        },
        "item": {
          "id": "4afc7bee-e2ab-48e1-84d5-6b4df45056bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9b95421-9a54-417c-ad8c-cdb26f3d53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afc7bee-e2ab-48e1-84d5-6b4df45056bf",
        "cursor": {
          "ref": "9b2b0670-aa22-4f4c-b2cb-928a8a98be27",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e4fc52c-8165-457a-8fa6-70cdfbff52e0"
        },
        "item": {
          "id": "4afc7bee-e2ab-48e1-84d5-6b4df45056bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9b95421-9a54-417c-ad8c-cdb26f3d53d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd0e57b-3e51-406e-b557-ebca30cbe2cc",
        "cursor": {
          "ref": "a9d4e325-aa7a-434a-b7aa-4d2fe8cd6111",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7e9ac613-6930-46c6-a9c0-ba1f4fa1ea75"
        },
        "item": {
          "id": "dbd0e57b-3e51-406e-b557-ebca30cbe2cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f215d16-fc51-43b0-a8d8-172184b2d47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea1f171-0095-4860-aac4-e60db1877681",
        "cursor": {
          "ref": "b295bb35-3c87-43bc-bc24-d5a5af9498b3",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "feacc3ae-140d-49f8-a2fe-be5646a7ea00"
        },
        "item": {
          "id": "9ea1f171-0095-4860-aac4-e60db1877681",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f0d8336-b3aa-4f43-822e-1f28d19eb1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c477645-304b-441f-9ce5-d3cb59fc34b6",
        "cursor": {
          "ref": "356e08ed-de7d-47b5-a2ce-c9fd5259db0c",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3b0f9479-f89e-4b9a-8968-19dce7f94b3c"
        },
        "item": {
          "id": "5c477645-304b-441f-9ce5-d3cb59fc34b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f827363-aa00-4257-b0ee-94059c29bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953865a9-640d-413a-b5d7-2254836b419f",
        "cursor": {
          "ref": "febf38e2-a9bc-4f37-b4c3-715e59911c99",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1683c3f-0456-4855-a9c6-57a9c3d39ed8"
        },
        "item": {
          "id": "953865a9-640d-413a-b5d7-2254836b419f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1d57a71-8e57-49ba-8f6f-2599678f9544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69027573-3ca8-44d9-a07c-dc1c9aee2a24",
        "cursor": {
          "ref": "004d1a8b-1cec-409d-a407-4b5da1249e3e",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "da7cc5d5-c885-4b31-b7fd-a02a1a6b6019"
        },
        "item": {
          "id": "69027573-3ca8-44d9-a07c-dc1c9aee2a24",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "efbe4be7-fc7b-469e-9389-88a030c87690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88ae7de-e1a1-4520-9cd4-60f13495b268",
        "cursor": {
          "ref": "f48f3baf-0c7a-4d75-b7f4-37185820ba21",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2d27d190-a5d8-4c08-b150-3673dcdd467e"
        },
        "item": {
          "id": "a88ae7de-e1a1-4520-9cd4-60f13495b268",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4017f89-1014-49be-a413-b4839cad124a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e899543e-9cc0-44e2-8b2c-ac68d363e0e7",
        "cursor": {
          "ref": "27c8fc91-525d-4eeb-a8f4-5dd56c124bc2",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dedb6cf3-0c9a-47a1-8380-171cff32bcc1"
        },
        "item": {
          "id": "e899543e-9cc0-44e2-8b2c-ac68d363e0e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42be8eb3-ebcd-43cf-a176-43e7d20eec39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e5d72e-eb94-45bd-a8d7-769b48b886c3",
        "cursor": {
          "ref": "f4b0cecf-9529-4fef-89e8-0519f7d58ffc",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "776017c7-16c3-4e0c-8289-b8136586c41e"
        },
        "item": {
          "id": "68e5d72e-eb94-45bd-a8d7-769b48b886c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb1f013f-bc59-4027-9143-25a23b3772aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998455df-09ed-47c7-ba0f-5dfb5b989f35",
        "cursor": {
          "ref": "3b222c92-ec09-4e87-8516-519769088cee",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "20fb9a05-9dd4-4bc0-b678-14b8327927b3"
        },
        "item": {
          "id": "998455df-09ed-47c7-ba0f-5dfb5b989f35",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "655c6a46-3459-49ca-966e-03e3b7251620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1811ca5-d761-4c38-8050-e2db0fc016f6",
        "cursor": {
          "ref": "cc7f5db2-52e9-4d3f-9ec3-7b27c20826b9",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05e160b6-31d2-418e-8138-55ae68439e8d"
        },
        "item": {
          "id": "a1811ca5-d761-4c38-8050-e2db0fc016f6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eafb30b2-8fe5-4106-8138-0f66e3d50cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c2b77b-43a6-4fa4-b7db-9133fddfe27b",
        "cursor": {
          "ref": "fd41f88c-8c62-440b-91f9-eb4e97ce4cd3",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e85f849e-96ec-4cff-8109-085118eaf02d"
        },
        "item": {
          "id": "38c2b77b-43a6-4fa4-b7db-9133fddfe27b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84f35506-6ba9-4944-8c35-5f073d8e2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400225be-f4b7-4b5c-a51c-2961113fdfeb",
        "cursor": {
          "ref": "cc2d250d-a248-4221-b2ed-a1ecb8e73aa2",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c91fab6c-ca38-428a-b451-3dd520939e5a"
        },
        "item": {
          "id": "400225be-f4b7-4b5c-a51c-2961113fdfeb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "deac7fd8-f9a0-486e-a9ae-833508113493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1174,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02812e8-5271-4719-825b-c70f201f3e78",
        "cursor": {
          "ref": "659668a7-9545-4d43-93ca-72b1800d07a8",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "238ca1bc-8af9-43d8-a602-f7e2e3e95653"
        },
        "item": {
          "id": "a02812e8-5271-4719-825b-c70f201f3e78",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "05442992-3a68-45ef-8fa5-e2dc7009d267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1117,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e2ddfe-69b7-4414-9505-ddac8e89dad4",
        "cursor": {
          "ref": "bf0912b2-535e-4d7c-83c1-ac2f09b6135e",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9e840ac2-3a1d-4e26-900b-e1065afdab26"
        },
        "item": {
          "id": "29e2ddfe-69b7-4414-9505-ddac8e89dad4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c384836c-0ac5-4e52-92c3-cbdca5f1e323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6dd315-1439-4bdf-a95b-2e31a8a169bd",
        "cursor": {
          "ref": "ef0eadcb-efcd-4abe-84cd-d7e097e379b8",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c31140e-f5ee-42aa-b930-acb7d46002c4"
        },
        "item": {
          "id": "8c6dd315-1439-4bdf-a95b-2e31a8a169bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a32d42b-daf0-4aef-bd7c-c0dd26a695ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae9f422-e6c5-4337-a7ad-4bc2b7fe8dec",
        "cursor": {
          "ref": "c6f02638-0bc3-48e9-aafb-a8bdb9a4e5f2",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1852f5a-4e06-444c-ae6e-108b3d692e00"
        },
        "item": {
          "id": "cae9f422-e6c5-4337-a7ad-4bc2b7fe8dec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2efe8579-b0d6-4d42-80ee-3632bc5db210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df322f3-2774-45e8-b8a3-c053f764a07f",
        "cursor": {
          "ref": "dc4daa17-aa8b-45a7-8099-1017ceb507b0",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2b8bb7b9-7ea4-4e08-a3de-0aab5c01d709"
        },
        "item": {
          "id": "7df322f3-2774-45e8-b8a3-c053f764a07f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8fa5fa91-0d2c-481e-a1e7-6027e7dfa3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00a3f24-bdbb-4869-ac56-1b148345fab3",
        "cursor": {
          "ref": "78ee3a8e-fd88-4b8a-b657-fbc5a08f66af",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "566cb716-044f-4698-bc03-3ce22f53760d"
        },
        "item": {
          "id": "c00a3f24-bdbb-4869-ac56-1b148345fab3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f6fd07c3-b663-48c5-b3d8-6bb5db46894a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93552d28-84f4-499f-ba27-5ceab0722ddf",
        "cursor": {
          "ref": "1a785f13-9e25-4e27-bb35-687b41eeaae2",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dc249c0e-4ae9-4f76-bf68-91ad9e571acb"
        },
        "item": {
          "id": "93552d28-84f4-499f-ba27-5ceab0722ddf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0777a8d6-21a2-4327-b121-8739ec85f881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb95285-518b-4590-adf7-c04ad7c19159",
        "cursor": {
          "ref": "2fe45a8b-0c50-4ed9-bd43-3e12c6558328",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a620a25a-b593-4296-ac7d-4b2cb1ff68f7"
        },
        "item": {
          "id": "acb95285-518b-4590-adf7-c04ad7c19159",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ccd367f7-5015-486a-82ac-f109646a3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3f1cbf-2080-459e-881b-b7eb09eb7f58",
        "cursor": {
          "ref": "2b74c581-163a-4d07-a2f6-b0d4e6cf6525",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2cea3eb7-bad6-41be-8c91-6d0ec52d12a9"
        },
        "item": {
          "id": "9b3f1cbf-2080-459e-881b-b7eb09eb7f58",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c969c8a-020f-4ecb-b2ed-b840b544ed48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a09f92-9a0a-40af-bf47-20c16c627568",
        "cursor": {
          "ref": "abf5545e-1bbd-4092-9af0-282a965af7f3",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "454060ce-af74-428c-a43c-a5954e6b5d87"
        },
        "item": {
          "id": "e8a09f92-9a0a-40af-bf47-20c16c627568",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8bd0785a-eb63-44b7-af1a-5eae1e5345ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d69119-7896-45f2-83d3-758a67b84e51",
        "cursor": {
          "ref": "01666603-6dfb-46d6-bad8-96a0d1241dc7",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6749f31e-8c86-4ee5-8be6-b4b7ac5026af"
        },
        "item": {
          "id": "54d69119-7896-45f2-83d3-758a67b84e51",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70f0c55b-bb1a-4018-83ad-ad1010eb0cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b5d95-b21a-4088-ae6a-00415e7b27e7",
        "cursor": {
          "ref": "f6f6402a-0a2f-4c2a-a3cc-8eb489d17bf9",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "59fc6ebd-9ba0-4449-a716-61831ab5f65a"
        },
        "item": {
          "id": "e10b5d95-b21a-4088-ae6a-00415e7b27e7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "db4b05b9-d86a-41ab-9a81-99a4c167294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427eca9b-d647-4f6e-8661-90c358a477bb",
        "cursor": {
          "ref": "db91c4d4-092b-4212-abbc-7491cac7344b",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d0aa74aa-8bca-43b4-8e33-709ced1d804d"
        },
        "item": {
          "id": "427eca9b-d647-4f6e-8661-90c358a477bb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "01698fbb-c2cb-4c19-a1b3-dccde1c1f0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0310d6-d2a9-4aa8-a9e8-02b9998294f5",
        "cursor": {
          "ref": "5356413b-117e-4baf-991a-d00a9d69a0e7",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e75a3eb-5d74-403d-885b-ffe990327da3"
        },
        "item": {
          "id": "cc0310d6-d2a9-4aa8-a9e8-02b9998294f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "32419e0e-c05e-4496-8d8d-58c06482e843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e0cf56-4a91-4b29-85c1-39bb6285faad",
        "cursor": {
          "ref": "75100bc4-94cc-4d85-a1c8-abff95cfe4e9",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "680bc927-84f0-42a0-9e54-24055573ddc1"
        },
        "item": {
          "id": "c4e0cf56-4a91-4b29-85c1-39bb6285faad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de3e49bc-5a6b-4f8f-9b6c-a52a471ea4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ec2f48-1adc-4e41-a660-00cd25b46b9c",
        "cursor": {
          "ref": "343b4201-5604-48eb-ace4-0fed115d9234",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "193eddd9-e134-4a06-af9b-21d50fc8b6ec"
        },
        "item": {
          "id": "69ec2f48-1adc-4e41-a660-00cd25b46b9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8e49de2d-9ceb-4ca8-a263-512b1180ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400fc45-d127-42cc-8080-a6795b294463",
        "cursor": {
          "ref": "b29f3ace-4aaf-467a-9755-4420c1baf742",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3694f3ae-b103-4172-ad91-72081f05e408"
        },
        "item": {
          "id": "7400fc45-d127-42cc-8080-a6795b294463",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11e4ffea-73b8-457e-a4bf-5c55fdd110d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcab900-48a8-42c2-b4e6-95683fd6a45f",
        "cursor": {
          "ref": "6aacbf2b-c722-4cd7-a4d0-f8b918680f9b",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "44208940-2cce-45c5-a024-221169b2a225"
        },
        "item": {
          "id": "0dcab900-48a8-42c2-b4e6-95683fd6a45f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "26cc9e08-77a1-4b5c-ab9b-4beeeafbc57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ea41b-e468-4be1-a71f-36cc0247df14",
        "cursor": {
          "ref": "76e8df5e-239a-437b-9ea5-676bcd20202c",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a2273938-07c1-4706-9af2-360259a81601"
        },
        "item": {
          "id": "565ea41b-e468-4be1-a71f-36cc0247df14",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e5771c34-9ecf-43e4-a6b6-ee480090d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a75d13-a957-42dd-9d16-fb7e98ebe5a5",
        "cursor": {
          "ref": "b94423b2-cea3-4e89-846a-6b32eeec1525",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5bd2da18-cec8-4715-b72c-4d65e0a00f79"
        },
        "item": {
          "id": "48a75d13-a957-42dd-9d16-fb7e98ebe5a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "404db21e-6d91-4003-9210-539bef9bcf63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f08f66-8d5b-49e0-928d-7e4d4ea025d6",
        "cursor": {
          "ref": "7d38a398-bd06-4bdc-badb-57187b108042",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f18e69da-16e1-4d04-9642-07133031a3b2"
        },
        "item": {
          "id": "e3f08f66-8d5b-49e0-928d-7e4d4ea025d6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c047bdf6-ca24-4dbb-90af-8fb7cb5f00de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 497,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919f3b3-3763-41fc-9906-09256179c45a",
        "cursor": {
          "ref": "a2754fa7-d7cb-45cf-92ed-e21e21731b2e",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29884cd9-79c4-4634-b67c-6c12f68c9c68"
        },
        "item": {
          "id": "f919f3b3-3763-41fc-9906-09256179c45a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdcaa719-eaad-4571-8e5b-40f842434841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f919f3b3-3763-41fc-9906-09256179c45a",
        "cursor": {
          "ref": "a2754fa7-d7cb-45cf-92ed-e21e21731b2e",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "29884cd9-79c4-4634-b67c-6c12f68c9c68"
        },
        "item": {
          "id": "f919f3b3-3763-41fc-9906-09256179c45a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdcaa719-eaad-4571-8e5b-40f842434841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4319aead-d544-4c3c-bcb0-e83b617c18e9",
        "cursor": {
          "ref": "e2be00f0-4531-4514-bef6-16de61bf8d0e",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "02909372-b45b-4763-a414-13bad8c76bb8"
        },
        "item": {
          "id": "4319aead-d544-4c3c-bcb0-e83b617c18e9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2d87d1b6-6344-4705-bea5-77c6454fa08b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 319,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fd3e6aa9-abce-4887-931d-1a4fce355120",
        "cursor": {
          "ref": "e9e59563-76e3-460a-9d41-142ba5f51b33",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "633a7a19-93f6-4be7-b8cf-006adaa718d5"
        },
        "item": {
          "id": "fd3e6aa9-abce-4887-931d-1a4fce355120",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fa9bc712-705d-424d-891d-73120ed747a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e0001d-6ec6-4d77-990e-ff939dd7aa03",
        "cursor": {
          "ref": "7b561413-3253-4523-bb72-64a9f3699a89",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3473d8e2-56f9-43e7-9336-3d07beea2500"
        },
        "item": {
          "id": "23e0001d-6ec6-4d77-990e-ff939dd7aa03",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "58857c8a-44af-4887-8464-edcfbb982563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad32010-6c7c-468d-9293-660a8f9bf13e",
        "cursor": {
          "ref": "95cad25b-5d12-471e-8760-828ebc927c0f",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "55c35748-43a1-437b-a633-fcca13bad055"
        },
        "item": {
          "id": "bad32010-6c7c-468d-9293-660a8f9bf13e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6840bdf-8655-4a9b-8186-20aae3ede5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2427e402-fbac-46af-b026-1ee52811e265",
        "cursor": {
          "ref": "b45b7bbb-6d35-4f8b-b4c2-92629ae10627",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4642f3bb-f676-413b-9c5c-ce74b1bd3769"
        },
        "item": {
          "id": "2427e402-fbac-46af-b026-1ee52811e265",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6e97dc02-dbae-4e3e-b70e-0b2f378e02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadecef5-28e7-4501-990d-6994c0b1e70c",
        "cursor": {
          "ref": "4c1ee4c8-27c7-4a72-8368-57cc550e5f9a",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "474d3adb-82f1-438b-bb23-85db4e6f0adf"
        },
        "item": {
          "id": "cadecef5-28e7-4501-990d-6994c0b1e70c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "803848fa-16e9-4322-8e98-e31540cecea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf5d761-332f-4203-96c9-50e2d2eb5b7e",
        "cursor": {
          "ref": "74346d30-81f7-4884-81c2-c40a7648b2aa",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e77cddfa-3775-4f9d-a83c-4b4789a51675"
        },
        "item": {
          "id": "1cf5d761-332f-4203-96c9-50e2d2eb5b7e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "deb8b2ea-ff4a-4b49-8f31-0071343cefa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0004045-6cd8-43a3-b045-7ed2bc8c2348",
        "cursor": {
          "ref": "efbcddb1-32bf-4e69-a219-9da9e29cae84",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1c8e1030-ab7c-40ac-b04e-afbd37257c9f"
        },
        "item": {
          "id": "f0004045-6cd8-43a3-b045-7ed2bc8c2348",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "39911ba9-1054-41a7-9663-99ecbceafb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389cbadd-3353-4f67-b161-916575daa1db",
        "cursor": {
          "ref": "661088ae-0ef4-4b9b-99e0-5754c95b2d26",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f91228cf-888f-41be-8a9d-2bac2b79215f"
        },
        "item": {
          "id": "389cbadd-3353-4f67-b161-916575daa1db",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c33198c8-babb-4807-8227-020a93090637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c9914-1cf0-4e3d-8610-3a45447bbe68",
        "cursor": {
          "ref": "88b09d70-1c89-43f0-ae61-37c81589f8c0",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b7fd6df8-5da0-4564-9bf6-9f4aa302338e"
        },
        "item": {
          "id": "e09c9914-1cf0-4e3d-8610-3a45447bbe68",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e58c1d6-6363-4702-adee-eeb660dd2b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d7af4-2fc4-4d5d-9b89-b4a084357881",
        "cursor": {
          "ref": "20fbadd2-fad6-44de-8d4a-edfa98437baa",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "125fa04b-2ba5-45ef-95f9-d0069835ca1b"
        },
        "item": {
          "id": "273d7af4-2fc4-4d5d-9b89-b4a084357881",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4ad0d101-0d5c-4bbf-8a79-0de982ac3102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d8cefe-4081-4d32-b5b8-20a523755271",
        "cursor": {
          "ref": "3e4b2fe8-cc66-4f25-aafd-af6f8a2c6065",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b19014a1-f178-41a3-976b-348a3c5ddaea"
        },
        "item": {
          "id": "31d8cefe-4081-4d32-b5b8-20a523755271",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4ef89b45-3efe-4e2e-aa7b-ca42ef526276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813c95ef-1032-4d88-9ed6-d5b91211b237",
        "cursor": {
          "ref": "f7b83dd4-2746-4a7e-9c5d-14d0bd79be19",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b4dcafdf-a4e1-4842-b319-e61f35ae03f4"
        },
        "item": {
          "id": "813c95ef-1032-4d88-9ed6-d5b91211b237",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fbef954c-3127-4a9c-9954-6ee431ad9ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d445cfb-1004-4278-91ff-cf05950ccae9",
        "cursor": {
          "ref": "84c5a30a-4f96-406e-9091-b9be1efafecf",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ddd133e6-fb9a-4783-8814-ff5739d319fe"
        },
        "item": {
          "id": "3d445cfb-1004-4278-91ff-cf05950ccae9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b11fc94c-929e-4c7f-ac66-c6418f84b9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c5f617-a547-4059-9da2-a4a56b6892aa",
        "cursor": {
          "ref": "cbd000bf-816e-40c2-aff2-332c0d3cc222",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "77ceceb5-1fde-4ec5-8e2b-8012f4163af0"
        },
        "item": {
          "id": "75c5f617-a547-4059-9da2-a4a56b6892aa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "34c7681e-6db5-40c0-b540-d23c4c0092e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0f0a32-f17b-4d96-bde2-6d6cbf715e55",
        "cursor": {
          "ref": "781a0b03-2216-4781-8fa4-faef363212e8",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4261a660-912c-4864-9cac-9ad677e8bb84"
        },
        "item": {
          "id": "bf0f0a32-f17b-4d96-bde2-6d6cbf715e55",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0a90e0dd-8765-4652-99c5-2c495c30b68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0836d3ac-eace-4e5b-9e0d-87429801e33c",
        "cursor": {
          "ref": "e968f575-e8d5-4bc8-a9db-ef197292487c",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a2a20595-afc1-4ad9-bf7d-37a98379fd03"
        },
        "item": {
          "id": "0836d3ac-eace-4e5b-9e0d-87429801e33c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "352d0933-fb21-4181-b712-1e1fa58b83a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e20a8a5-016c-4407-ad2e-a9ad5dbef356",
        "cursor": {
          "ref": "59e3976d-07b6-4b7e-8358-7f3a4ade1651",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "39021004-56a3-4fd1-aeec-e0dae8c0cd47"
        },
        "item": {
          "id": "1e20a8a5-016c-4407-ad2e-a9ad5dbef356",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1df5ff88-658e-424c-8a25-c0f0872d424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34129c56-ed0a-4aae-be05-7d9a12183bcc",
        "cursor": {
          "ref": "bd168b8a-f649-4eda-b37b-388c37f96189",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "22d974d8-8758-47ce-bd71-afc59a856a2b"
        },
        "item": {
          "id": "34129c56-ed0a-4aae-be05-7d9a12183bcc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cc91d33c-ff0d-469f-940f-a2670a072a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec67041-e4f9-40de-a3ed-df949cc2c1f1",
        "cursor": {
          "ref": "233ef287-8339-4471-9a82-1ea6851bcf50",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1b3cac03-17cf-4bbe-8d6e-a93a1fa93ded"
        },
        "item": {
          "id": "7ec67041-e4f9-40de-a3ed-df949cc2c1f1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "508a93fd-c14f-4ff6-bb84-d562dde0a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6699dc-a394-40ad-838b-d0ddec860e83",
        "cursor": {
          "ref": "93d33cad-e5f1-4c67-a9a3-ac95c47af8d8",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bdca7d90-8532-4b7f-aafd-b5d0782991f7"
        },
        "item": {
          "id": "1a6699dc-a394-40ad-838b-d0ddec860e83",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b3d8ad7-7cf3-492c-b622-e37976705f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5999d17-0acc-4e94-bd48-a735d76b27c6",
        "cursor": {
          "ref": "c4cae3e2-1a31-45d4-ac8f-773cd7c1310d",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2057dc79-5c20-405e-a22d-e6cd126a7fd9"
        },
        "item": {
          "id": "d5999d17-0acc-4e94-bd48-a735d76b27c6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "44f62d54-0fb4-45c1-8eb4-6c1316fbb664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82027f5e-9a2a-493d-bd64-27275984cb5c",
        "cursor": {
          "ref": "eb023456-87ec-40dc-add4-b69b2b04be68",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9abde65b-56f5-439a-bd54-bcd6f0ddeaa7"
        },
        "item": {
          "id": "82027f5e-9a2a-493d-bd64-27275984cb5c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "683ca0c9-bd60-4057-88fe-eecd8499d738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db97d65b-61d7-4879-8275-e4d559a5d9a6",
        "cursor": {
          "ref": "2e996c96-beaf-4e39-a192-dc1bf68418e5",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7f4560ee-bbe3-400a-ad0d-93fd4188cf14"
        },
        "item": {
          "id": "db97d65b-61d7-4879-8275-e4d559a5d9a6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2a566163-a012-45ed-9bab-4ba70318530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd003fc8-388f-47dd-8da6-2cbf5438ba04",
        "cursor": {
          "ref": "d4123243-c7ef-4339-99ca-d7e541b2c540",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "61697103-7c06-41d0-a017-c2d14861f8d6"
        },
        "item": {
          "id": "bd003fc8-388f-47dd-8da6-2cbf5438ba04",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b33d728a-328f-422f-ba3a-9d2acc78f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e83b05-780c-4545-b6d2-c94bb700da2a",
        "cursor": {
          "ref": "30824e69-5325-4ade-8c6d-95dfc9540676",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d6848db0-6873-4988-8e87-4b4dbccf507d"
        },
        "item": {
          "id": "a7e83b05-780c-4545-b6d2-c94bb700da2a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "280172b2-9b90-4f14-ae23-f376c194d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7e7bbb-9336-484c-aa94-d987295e356a",
        "cursor": {
          "ref": "c3cfd323-b71e-4de3-9609-2f35f458042b",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b7c8e344-42f4-4a42-942c-f1cc3362d4e8"
        },
        "item": {
          "id": "0a7e7bbb-9336-484c-aa94-d987295e356a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f227fc18-e079-466c-862e-40ca23309d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b174a3-ca68-4fb3-9ad6-c3c62215b06a",
        "cursor": {
          "ref": "60100e0b-f901-477a-9bac-9fe141c376d4",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "96a5677a-fcbb-434b-87da-18442cac7d57"
        },
        "item": {
          "id": "a9b174a3-ca68-4fb3-9ad6-c3c62215b06a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6bfe4f10-b494-48c7-a57f-d2392d252dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1192cfb4-db69-4c75-9aaa-3414d6357e6a",
        "cursor": {
          "ref": "968208e2-009b-4360-b823-43220427706b",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4ad9ea7b-4cc6-4aec-a2ae-605555c80ffb"
        },
        "item": {
          "id": "1192cfb4-db69-4c75-9aaa-3414d6357e6a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4c337e4b-9e56-4648-969a-17bd1ea43952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f639a7-5b83-4e6f-bbdb-348a8a09d92c",
        "cursor": {
          "ref": "baa69645-f434-4e90-a4f2-751553f98e0c",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "52f9315b-84ae-4de9-9d33-6726429369f4"
        },
        "item": {
          "id": "15f639a7-5b83-4e6f-bbdb-348a8a09d92c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3905c57b-302a-4140-a2ac-cf9a35746363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6045e3-76bf-45f7-8cad-525d6f792b7f",
        "cursor": {
          "ref": "a83a5d2e-7823-4322-be96-998d48936a9a",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2b6a2b6c-6cdd-46c7-b28c-e773dc69d928"
        },
        "item": {
          "id": "6b6045e3-76bf-45f7-8cad-525d6f792b7f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "84312383-9e01-4fd7-a829-57ada3c22a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bd7d7b-ea1b-4a17-ad16-cdbfd3fc29c8",
        "cursor": {
          "ref": "d4e42e19-ff24-4502-a611-203d5dabf569",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aaf41250-e5d7-4ee9-ac50-ed6f0dee651f"
        },
        "item": {
          "id": "f3bd7d7b-ea1b-4a17-ad16-cdbfd3fc29c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6c3b75d-dfa5-4178-afde-0375f5334561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7b7ed3-8e90-4f5c-8c6c-075ab15fc349",
        "cursor": {
          "ref": "3f8ec8e0-0246-4b17-bab4-c32cfc35c47d",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bcbe32e9-9d11-4d6d-ba46-e8c4db2e8c9c"
        },
        "item": {
          "id": "6d7b7ed3-8e90-4f5c-8c6c-075ab15fc349",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7508089c-c169-4970-b3ef-1b969d179604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cb9d32-7ad4-4e2b-9a36-746950b430e1",
        "cursor": {
          "ref": "183e60d9-3fe7-454c-99b9-991d986cae69",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "652ecdd7-e9f6-480e-9a8d-752ee81fa1f8"
        },
        "item": {
          "id": "53cb9d32-7ad4-4e2b-9a36-746950b430e1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8dfe2fd5-62ae-4ce1-ab22-08d05f53ff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44356b34-749c-43c4-9b4a-bf3b7d35d7cf",
        "cursor": {
          "ref": "84d2f225-d776-4b88-9e0d-22bfd60a490a",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0a616c33-20cb-4aa0-80b4-19028a0f5c4f"
        },
        "item": {
          "id": "44356b34-749c-43c4-9b4a-bf3b7d35d7cf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "43da8585-1224-4425-b3d3-ca1d348c53a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276522fc-258a-4043-88b6-92fa78b78476",
        "cursor": {
          "ref": "b0cf552e-52ce-42f5-b909-03d2fe93e240",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3c3ddf17-4ba5-4949-a1e9-7278918fc140"
        },
        "item": {
          "id": "276522fc-258a-4043-88b6-92fa78b78476",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae67944c-2473-4a6d-9967-2688adbafe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5374ba-313f-41a9-b81e-db60a795e31e",
        "cursor": {
          "ref": "be8f452f-60d2-4fc1-bf81-76658afe8880",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "26869162-8184-40ac-b010-4e75370fee40"
        },
        "item": {
          "id": "bf5374ba-313f-41a9-b81e-db60a795e31e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6043bf38-65d1-46e1-ab45-ba91884da2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6061cb44-6a70-414d-8fa8-3c9804f997c9",
        "cursor": {
          "ref": "f97e38ec-cf1c-405d-ae00-9475af193294",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2e033037-cea5-4d50-96ca-89da8ba35768"
        },
        "item": {
          "id": "6061cb44-6a70-414d-8fa8-3c9804f997c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1192dc61-9503-4df0-8fb8-44a6400263a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd80baae-5348-4ff8-8308-d93059375e2a",
        "cursor": {
          "ref": "60732cf2-23a5-401b-b8a1-e2feec008ff9",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "055ac99b-8367-4ce7-b372-bf7dbc2bd6bf"
        },
        "item": {
          "id": "fd80baae-5348-4ff8-8308-d93059375e2a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46864cf0-fdf8-4502-aa47-13acecfdc4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b20382a-7609-4b9c-9760-0c1b5a39ab7f",
        "cursor": {
          "ref": "f2c92d3c-774b-4065-81fa-4f9c272a2120",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "20f4b6a8-5796-47ac-bd37-87430d39daaf"
        },
        "item": {
          "id": "8b20382a-7609-4b9c-9760-0c1b5a39ab7f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "08b7f006-7872-4c96-9390-1f58bd5e3a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bfd6d0-c7c3-470e-bf7c-3d5d6a3fbbaa",
        "cursor": {
          "ref": "06b17a7f-d0cd-49ed-b746-ae4cd0f62d2e",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cde2a710-e2b3-4980-9fc8-1a4780006baf"
        },
        "item": {
          "id": "21bfd6d0-c7c3-470e-bf7c-3d5d6a3fbbaa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5a4ff82a-25ae-4ccd-923e-8878e380b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9543a341-e70f-4ab6-be9f-27031d33e027",
        "cursor": {
          "ref": "14c6af13-97ce-4629-b6d9-32648664b291",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b4d1d617-3313-4970-a5e0-afbabe66e7fa"
        },
        "item": {
          "id": "9543a341-e70f-4ab6-be9f-27031d33e027",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cf4594f8-2c08-4ca9-86e8-132d12d8f53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017c5e55-f826-4792-b8a9-0a14d701f10b",
        "cursor": {
          "ref": "2ee51e1f-3e75-490b-818b-b73bd4f2184f",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "81e55cf4-e742-4d15-af73-83a43e705750"
        },
        "item": {
          "id": "017c5e55-f826-4792-b8a9-0a14d701f10b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e6d9942b-9a9f-485f-b427-dcd27b193cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9ca724-ce44-423b-8cc7-d05425394e59",
        "cursor": {
          "ref": "f314f3ac-a106-48a3-9af5-12fa56ceb62a",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f3b95183-0922-4d3e-af5a-ee0cc1df957a"
        },
        "item": {
          "id": "ce9ca724-ce44-423b-8cc7-d05425394e59",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "15f1ef21-27a7-4eb5-9f71-7e836e651332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fd6d07-ee0f-4e0a-afa3-4af920d3fb49",
        "cursor": {
          "ref": "e297367c-ea80-4c39-ac16-02c4d34db91a",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "32fbf344-3a43-4750-b307-73cb53b043a0"
        },
        "item": {
          "id": "24fd6d07-ee0f-4e0a-afa3-4af920d3fb49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c2d04888-27a6-4ad5-9d6f-c32a3b954df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb48081-1395-4d1b-9885-27d7e74716e0",
        "cursor": {
          "ref": "96c922d4-340a-40b0-93c8-77e65f8018a3",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0b908016-57e4-4ec2-a281-56e8e05e1ce3"
        },
        "item": {
          "id": "3cb48081-1395-4d1b-9885-27d7e74716e0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b7ebda13-be05-4d9d-976f-cfc501053ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8047c9c6-e29b-4e23-8d1a-4ef6ab793543",
        "cursor": {
          "ref": "2d3ee979-6e6d-49ea-8425-5fdefe51f1d7",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c9371908-c82d-487f-ab6d-8edde3cdc857"
        },
        "item": {
          "id": "8047c9c6-e29b-4e23-8d1a-4ef6ab793543",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "566b35af-567a-4a01-b157-3962f82d88f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fb1df6-943d-4f4e-8562-fd39194129b7",
        "cursor": {
          "ref": "ebc56a12-2182-4c4a-a684-745649e09c8f",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "630c5224-6f6b-4a83-abcc-c311bb15ac12"
        },
        "item": {
          "id": "c3fb1df6-943d-4f4e-8562-fd39194129b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5c34f56b-5924-4a36-9cde-e943b1c184a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85164d77-ea90-4fd9-805b-a3a93bc6fe12",
        "cursor": {
          "ref": "e8149277-3870-470f-b3db-c417f4c50aaf",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2163b238-4001-43f6-a49d-64bbbeb1dd11"
        },
        "item": {
          "id": "85164d77-ea90-4fd9-805b-a3a93bc6fe12",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "954d13f1-d816-4cd8-8929-08d367ce29d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ca3038-5d7d-4b98-ab1d-ccef0d1a2995",
        "cursor": {
          "ref": "95e87b22-15d8-4572-b526-bcdb40651c79",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ccfbd72-3040-458f-b2d6-58a5b015e537"
        },
        "item": {
          "id": "16ca3038-5d7d-4b98-ab1d-ccef0d1a2995",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9e7538da-ed93-421e-ba68-4fdc10d4c554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54543880-678d-4a04-a943-e68cd3ae1b8d",
        "cursor": {
          "ref": "6a50ee09-b34f-487e-b20e-e29881d5bb7b",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b55152a9-2909-4013-9e90-f6375cb7b913"
        },
        "item": {
          "id": "54543880-678d-4a04-a943-e68cd3ae1b8d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ee9d87e2-32ee-4d0a-b53c-9bcb21c814e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24013ab6-956d-4f7f-bf8e-abbee183e9da",
        "cursor": {
          "ref": "13074c2c-509d-4278-aa2b-67b290140733",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4979633-6ef5-4b14-8ce1-a777785c9172"
        },
        "item": {
          "id": "24013ab6-956d-4f7f-bf8e-abbee183e9da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3e08768-4b40-4e2d-a9a3-238f36cc3d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5349867a-9cdb-4e0f-851d-eceb65db5ea8",
        "cursor": {
          "ref": "a5c0295f-ff52-45df-bfd4-dd36454abca1",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2503126-5cf2-4f82-b265-a13cdfea7dca"
        },
        "item": {
          "id": "5349867a-9cdb-4e0f-851d-eceb65db5ea8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "83043260-f59b-4c82-ae77-49573cc6ef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f5d53-1ea4-4b70-a443-7b7a09ead895",
        "cursor": {
          "ref": "70fed9ba-424a-4025-872c-e70e9d99b9a2",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8ed00644-e84b-4b06-9411-997e3c44f02a"
        },
        "item": {
          "id": "e60f5d53-1ea4-4b70-a443-7b7a09ead895",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b2f0395-5be2-4947-bafb-1107204e4e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a493e13-222c-47e5-9cfb-6d16417b0900",
        "cursor": {
          "ref": "3936f343-ad62-48f5-a8c9-f7b900e48eb9",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a6e7c4d0-2df6-4ad3-bbd9-e58f252f1e84"
        },
        "item": {
          "id": "2a493e13-222c-47e5-9cfb-6d16417b0900",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b808a200-8a90-4f7f-9b3e-c681fc2e300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23b2a3-6e46-4105-bb44-4abd3053e772",
        "cursor": {
          "ref": "95a01394-e729-4c75-b953-153dd9c021c2",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7cab133e-b701-44b4-ae90-32211ff8816c"
        },
        "item": {
          "id": "ad23b2a3-6e46-4105-bb44-4abd3053e772",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1da21d11-3e57-411a-8b01-666995410401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b577b0-2ae3-41a0-9eb2-f9ffcd0389d4",
        "cursor": {
          "ref": "a9400672-9f65-4faf-a793-367055d2531f",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b41d7981-14f8-4955-9f9d-d69a971d09a4"
        },
        "item": {
          "id": "f6b577b0-2ae3-41a0-9eb2-f9ffcd0389d4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c72d0201-bf38-45c8-b909-9fd0c0c33f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d0c23c-443a-49a1-9cb9-925b3a44999a",
        "cursor": {
          "ref": "5eac0a89-40d3-43e6-89f8-241cc562f8a4",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eb70a0cb-d808-448f-bd97-8e52cbbebc17"
        },
        "item": {
          "id": "c0d0c23c-443a-49a1-9cb9-925b3a44999a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "96d0f18e-bcfd-495b-9bc3-201c3f38e00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b63930-77b3-4c72-8dd6-cbf70d02c724",
        "cursor": {
          "ref": "2fea616c-9175-4011-94f5-deb79d288a41",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be1db600-9d89-4942-a117-c06f6c240d12"
        },
        "item": {
          "id": "b6b63930-77b3-4c72-8dd6-cbf70d02c724",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff7e9a28-5be7-40f7-867f-9fd22a362a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44bcd6a-bae5-4947-9611-af6a40677f68",
        "cursor": {
          "ref": "e1184644-8003-4ce7-9322-ac09e3147995",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "428250f0-bdd7-49f6-829c-3a6c8dae9285"
        },
        "item": {
          "id": "e44bcd6a-bae5-4947-9611-af6a40677f68",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2f3e4255-6619-4b33-918a-a5e978ea1588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cee91a9-efca-4e19-ad62-602faf79a5f7",
        "cursor": {
          "ref": "267c347c-979f-4603-b06d-65ed8d002263",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d88091f2-1878-4894-bfc7-79abb9c3ca28"
        },
        "item": {
          "id": "6cee91a9-efca-4e19-ad62-602faf79a5f7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "22df33bc-cfa4-4881-bef1-20f49cc1ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fd27af-9558-4558-819a-b149b5947b58",
        "cursor": {
          "ref": "613dd418-df49-4258-8ced-f9015e1ee787",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4e86e648-60a4-49a0-b378-f3d174f2ebe3"
        },
        "item": {
          "id": "12fd27af-9558-4558-819a-b149b5947b58",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "74590690-4ede-4b93-a6ad-4bfaadc0639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f300d1a-90c2-4aa0-80a3-5adc5f957903",
        "cursor": {
          "ref": "92386ec1-0911-49e4-867d-3f45e9ee5bec",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2226867e-1c5d-4d15-938b-66e152fa7d0b"
        },
        "item": {
          "id": "3f300d1a-90c2-4aa0-80a3-5adc5f957903",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "963bc46c-2960-44f9-bcb5-bccff7cb9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35ac49b-acbe-49e4-ba08-43ffa82aea9d",
        "cursor": {
          "ref": "8be94071-cdbf-40d1-aed3-fb33644d43bf",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ae974846-54f8-4e1d-b0ba-bc529280d296"
        },
        "item": {
          "id": "b35ac49b-acbe-49e4-ba08-43ffa82aea9d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d1f42301-0310-4f33-b65b-f71d6d1fae1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b74459-d09f-4a24-bff5-6f063c287cf4",
        "cursor": {
          "ref": "b734799c-743d-41eb-ab6c-b3c68e020a1c",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "74f36811-4df6-4f20-9004-507e4f01fe6d"
        },
        "item": {
          "id": "d1b74459-d09f-4a24-bff5-6f063c287cf4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "391d7757-0ef2-4989-9ece-0e2cc1ad76cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834a7d67-b6d7-4e75-b3de-17498c7eedfa",
        "cursor": {
          "ref": "7e26bef9-591a-4858-bf40-12ed82a8c6f5",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dbaba902-b052-4583-ac81-da12bc8f6542"
        },
        "item": {
          "id": "834a7d67-b6d7-4e75-b3de-17498c7eedfa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5bed83fc-36b6-4009-b7ed-e88ef390ae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d108934d-d2e5-4abf-91a8-73eed2f83534",
        "cursor": {
          "ref": "f689e9e8-0af0-499a-a8b1-213aa2892f7c",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a61add1f-baf7-440e-a33c-94206762e07d"
        },
        "item": {
          "id": "d108934d-d2e5-4abf-91a8-73eed2f83534",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f17479ae-30bb-48e3-8385-47419314dc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c300123-137b-4099-b0a3-10d9fb6ace24",
        "cursor": {
          "ref": "23323733-48cb-4992-a3a4-ebd71e96c5ba",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8b986b23-bb5d-4499-a687-dac76ab2622b"
        },
        "item": {
          "id": "9c300123-137b-4099-b0a3-10d9fb6ace24",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "075c9642-70f3-4422-bd71-75b36bb84a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2d955a-307b-4134-aea2-2d34eaec9f83",
        "cursor": {
          "ref": "e7f09f19-470a-441a-814e-569493d18361",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c028815-bbc1-4ad9-b285-9daebe942b34"
        },
        "item": {
          "id": "dc2d955a-307b-4134-aea2-2d34eaec9f83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "800b07af-a518-45f1-b78d-4f95764f4f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fc1deb-ce47-4780-8059-50039341e348",
        "cursor": {
          "ref": "b72e782b-614c-4f0c-84ff-de1afcfe902b",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5a9a9c9-1759-4c14-8fe9-098d9021b594"
        },
        "item": {
          "id": "97fc1deb-ce47-4780-8059-50039341e348",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7af495fc-e48e-4c2e-b747-018f9fabfac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c81fde-bff5-4afd-b317-714b6df689a4",
        "cursor": {
          "ref": "6438fa82-5785-489d-821f-26959812086b",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "940fe247-0fd7-46ce-b784-2cc3971a1178"
        },
        "item": {
          "id": "f0c81fde-bff5-4afd-b317-714b6df689a4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3a5c3a7f-1a82-47b1-bc71-3ed747aee014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324ecc19-0619-405f-8219-2b7ea8cb02a5",
        "cursor": {
          "ref": "176f9b17-8874-477e-854c-cb7a27072f66",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d36de600-a8cc-41c8-81f2-a8705fcc1013"
        },
        "item": {
          "id": "324ecc19-0619-405f-8219-2b7ea8cb02a5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d74da79b-326e-4fb1-8af7-d8d52b7120ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1d8a04-f6ba-4c83-b24c-02dfbb08f83a",
        "cursor": {
          "ref": "0b2f7e35-7183-42fd-aac4-c910974fe3a0",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aaf6973d-e661-4dd6-8e82-220e1094ece3"
        },
        "item": {
          "id": "7f1d8a04-f6ba-4c83-b24c-02dfbb08f83a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4e48c084-cb1c-4ed2-a724-f362b990d717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa97ebe-cf73-4045-8a71-e668450402b9",
        "cursor": {
          "ref": "88bcc3ab-bc97-431c-8c1c-8a1f7b0477ce",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3ddb7388-41ad-40f1-84fa-a268c8044ccb"
        },
        "item": {
          "id": "cfa97ebe-cf73-4045-8a71-e668450402b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c24c0be3-9fce-45eb-816d-864be5141383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99863d9-874c-457f-9dd1-5a3899798ad9",
        "cursor": {
          "ref": "7c554294-efe0-485d-adeb-798313be579a",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2433ae41-d4b9-41a3-a044-3c6467d38cf8"
        },
        "item": {
          "id": "b99863d9-874c-457f-9dd1-5a3899798ad9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09add531-f26d-4bf2-bcc0-5fe4624daec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168e8ff1-de03-4749-913c-c9173f085e78",
        "cursor": {
          "ref": "fd131f27-eacf-4122-8388-288ab1fca84c",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bf8a3b21-159f-40a3-ad7c-8be7b76f8bb8"
        },
        "item": {
          "id": "168e8ff1-de03-4749-913c-c9173f085e78",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "da1421f0-2bde-4a03-b8c1-0943af5a2fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796b2b9d-4ffb-40db-bca8-52fd0da9ca0a",
        "cursor": {
          "ref": "2dabccf5-47f5-4516-88cd-815110d4bdef",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a765d21c-0527-4f19-81de-8f391a83321e"
        },
        "item": {
          "id": "796b2b9d-4ffb-40db-bca8-52fd0da9ca0a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "14a2e6c9-a20e-429b-a46b-d33fc8d8ee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6116752-851f-46e3-8705-95529f76c6b1",
        "cursor": {
          "ref": "0c8d3f51-e5fe-4f0d-ba2e-4a7bb5d9953c",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a07265b-b47e-42dc-8894-54442f11d28f"
        },
        "item": {
          "id": "f6116752-851f-46e3-8705-95529f76c6b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2b291881-4050-4134-8bcc-9057b3ba1f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2d24e-8479-48f4-b651-630e8f24cf15",
        "cursor": {
          "ref": "6b226cf7-a079-4054-9234-e84caf9abeef",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "944f1ab8-64fd-4672-8ae8-aa78f0427d93"
        },
        "item": {
          "id": "88c2d24e-8479-48f4-b651-630e8f24cf15",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a74843ef-56c0-474f-9352-2dc386508c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499051a7-ccfa-4bc1-9a34-8c90261266bc",
        "cursor": {
          "ref": "c7e499b0-fbc8-4c42-95a6-7cb56a134fab",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e03803eb-a06d-4b45-9c3f-de3e5d5386dd"
        },
        "item": {
          "id": "499051a7-ccfa-4bc1-9a34-8c90261266bc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bea5a072-14eb-417b-9bd6-63afb6db871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b87d84f-a151-465d-ae70-704ac7959d43",
        "cursor": {
          "ref": "87f86645-ba0c-4f2e-975b-f1909eb31e39",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "24159b34-fda8-48e3-94e2-9eacb7ecd930"
        },
        "item": {
          "id": "3b87d84f-a151-465d-ae70-704ac7959d43",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d14f3277-437d-4832-8639-7b0362813e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8441e509-ea6b-4d7c-999f-ebee8a710173",
        "cursor": {
          "ref": "f5d0772d-bafb-4e01-a419-14f79be51e87",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1478e5e4-11ea-48ed-ab97-31f91df469e2"
        },
        "item": {
          "id": "8441e509-ea6b-4d7c-999f-ebee8a710173",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a4f82a62-5850-42b8-8311-16073cd3bf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9493816c-270e-4689-98fb-07594316523e",
        "cursor": {
          "ref": "bfa40a26-f444-4054-91ff-6374ca336f8a",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "04170f92-b4b0-495a-9a2f-7a9c87385fe4"
        },
        "item": {
          "id": "9493816c-270e-4689-98fb-07594316523e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a960a6ff-4f50-499b-af1e-1a45182576ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72254b48-70ad-4f34-b77b-0b1fc4abb111",
        "cursor": {
          "ref": "43b8e076-80e9-45c3-ace6-71f22d992f15",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "20afcaed-9162-4618-b8ae-8f0ca36f68a0"
        },
        "item": {
          "id": "72254b48-70ad-4f34-b77b-0b1fc4abb111",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1d6e1761-4f4c-4065-b187-b5eaf18e7fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf6806-dc51-49e3-9efc-394fa453f9b6",
        "cursor": {
          "ref": "cfd39ead-fc48-4298-9a82-390fe486ed07",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36613e50-1bea-4b2b-b342-80f1e0f87995"
        },
        "item": {
          "id": "acdf6806-dc51-49e3-9efc-394fa453f9b6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "86718255-1309-4035-9279-573204cc2a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e27c8d-7270-4a9b-af79-7b853abf0e1c",
        "cursor": {
          "ref": "7386e005-387c-4e29-b0df-f763572dd455",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2311a7a2-4f9a-4061-a017-44643780dece"
        },
        "item": {
          "id": "20e27c8d-7270-4a9b-af79-7b853abf0e1c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "74f74449-30e9-4986-a2ac-beef8421ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a87b0-f193-459a-b8f2-2fa2b2a25ad7",
        "cursor": {
          "ref": "e0414cb8-7c2a-4048-9fc6-fc71310a2dfe",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c1cb93b4-f80b-45fc-9a83-0e753af4f344"
        },
        "item": {
          "id": "a86a87b0-f193-459a-b8f2-2fa2b2a25ad7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "305bddf8-abea-40f5-9bca-17cf394a6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cee012-d17a-48a1-a6c9-6edd3c0f1ccb",
        "cursor": {
          "ref": "bf881ba3-1e9a-4eab-9dab-81a25f8bdae0",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b08577f1-2f80-4f7e-9397-120323b17404"
        },
        "item": {
          "id": "e0cee012-d17a-48a1-a6c9-6edd3c0f1ccb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "073e89db-d460-4398-87d0-61ae33586549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061208f8-c444-454d-b0cd-6ef73abdfbd6",
        "cursor": {
          "ref": "8bc6e97c-668b-4a62-88b4-0fd05f1add26",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "39a98d07-2157-47f8-825d-526d759475f7"
        },
        "item": {
          "id": "061208f8-c444-454d-b0cd-6ef73abdfbd6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6e74e664-dbf0-4b96-9a0e-fd17f12a170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b23a734-a1ff-4818-836e-a9ee54bd1da6",
        "cursor": {
          "ref": "33e5e677-f378-4b9d-9298-d5d69d32d357",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "42fea654-3850-4f41-871e-fb993b7e7066"
        },
        "item": {
          "id": "0b23a734-a1ff-4818-836e-a9ee54bd1da6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "33894fe3-7970-4d02-a478-8e664e3b53eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2f22a-d5fd-48c4-972f-308220015435",
        "cursor": {
          "ref": "be09b14d-f7c2-473e-bc7a-312e5f112f4d",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "787ef24a-7f6f-4ee3-987f-41944e030a21"
        },
        "item": {
          "id": "8dd2f22a-d5fd-48c4-972f-308220015435",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "449bb96e-dac4-42ae-9d21-78f165733e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 972,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46d666a-71ed-410c-b57d-be2391d83d41",
        "cursor": {
          "ref": "64fe362b-bb5a-4fb3-a986-0f891baf32d8",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a0dd498d-060b-4c8f-a200-31db085304d7"
        },
        "item": {
          "id": "b46d666a-71ed-410c-b57d-be2391d83d41",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "24bb727e-0a7e-470d-be5a-43d0a46e0358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa4cb3e-2400-4efa-8a9b-bc502f126f38",
        "cursor": {
          "ref": "5784a588-390b-4a2f-97c1-5744a2a2de7e",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "22e613ab-d320-4d49-8ab8-06d90b3ae564"
        },
        "item": {
          "id": "0aa4cb3e-2400-4efa-8a9b-bc502f126f38",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "31311374-d2f1-47b4-8b6c-bdaa48ea4bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad7bc94-276c-4892-abb0-391b90b33e23",
        "cursor": {
          "ref": "de71963d-9fa3-4336-8c0b-59c24b68cd09",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ae15a241-8026-46b3-8b44-44557e4f243f"
        },
        "item": {
          "id": "aad7bc94-276c-4892-abb0-391b90b33e23",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cd9accb2-f4c6-4508-82ce-c2619f71dfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4920cf8f-f368-426a-bff1-1506721dcd17",
        "cursor": {
          "ref": "faa9bbe5-28c8-43ab-bebb-bd851fd4f103",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9a4540dd-9ccb-49b3-957c-f8dd791488c8"
        },
        "item": {
          "id": "4920cf8f-f368-426a-bff1-1506721dcd17",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "22a95155-631a-4231-adfe-4b0fcd9320af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee2e0a-ee82-4fe4-96ac-e6fa8043fad3",
        "cursor": {
          "ref": "182b38f1-1e6c-4887-9c96-6ec3d33b66c4",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d46992e0-74c6-4e04-8bcc-94a67a951a39"
        },
        "item": {
          "id": "1cee2e0a-ee82-4fe4-96ac-e6fa8043fad3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c570960-2b2a-429d-875a-fe5b81f621c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffaae12-2229-44e2-8a82-e62c338ed00c",
        "cursor": {
          "ref": "a18b7919-aef3-405f-b0c5-17e01330b5de",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b6a69acc-e02b-43c9-ae2d-2f19b6f02273"
        },
        "item": {
          "id": "bffaae12-2229-44e2-8a82-e62c338ed00c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cee2d30a-6d8b-4cac-9215-404f625e5a20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c11a454-09a3-4859-9dba-761bcf9c493c",
        "cursor": {
          "ref": "c40dfae1-7e13-4fd9-aa5a-9d426c0f3cca",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "06e8cedc-59fb-4d0f-b141-1050dfe9683d"
        },
        "item": {
          "id": "1c11a454-09a3-4859-9dba-761bcf9c493c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "345c8ad3-abf2-4c64-835a-b6506e7e9163",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 601,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26ddaa-e963-4a5b-bbed-47e72e0bde85",
        "cursor": {
          "ref": "01e30ef5-b811-4693-968f-e4322042b891",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "174f9898-eb59-46e8-94c9-8cc193047105"
        },
        "item": {
          "id": "cd26ddaa-e963-4a5b-bbed-47e72e0bde85",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "11d59b04-4100-4ba4-9d04-a9190f10ab41",
          "status": "OK",
          "code": 200,
          "responseTime": 406,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "162b98f0-8670-4fd5-b3b2-b46dad0a2541",
        "cursor": {
          "ref": "17ecf228-a49f-4852-8bbf-64bdd814d8e3",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "acd83769-9e94-4733-979d-edd776a12a2f"
        },
        "item": {
          "id": "162b98f0-8670-4fd5-b3b2-b46dad0a2541",
          "name": "credentials_verify"
        },
        "response": {
          "id": "162ba6aa-fe8b-4f35-90ab-67f6c70d56ad",
          "status": "OK",
          "code": 200,
          "responseTime": 384,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa3628-7a51-43ad-aefe-5c0179aaa832",
        "cursor": {
          "ref": "5f8ed2e9-1066-4755-aed6-fef9f98f003d",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f52d48f-848f-4e58-9e7e-f3e0a14be1dc"
        },
        "item": {
          "id": "4cfa3628-7a51-43ad-aefe-5c0179aaa832",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "1db28af0-2bd7-40cb-941a-0bb842377276",
          "status": "OK",
          "code": 200,
          "responseTime": 402,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a98070-4580-4374-96b2-58349c01e241",
        "cursor": {
          "ref": "7a7cb30c-e016-4c06-85d9-8f183011c3e9",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a2def12-9105-4b03-9255-442c7aaa191f"
        },
        "item": {
          "id": "40a98070-4580-4374-96b2-58349c01e241",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0720f7a5-8722-4869-9445-219cf126a219",
          "status": "OK",
          "code": 200,
          "responseTime": 435,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
        "cursor": {
          "ref": "abb9dc74-3229-46e4-9af4-21756898f578",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "225d3146-5060-4d2f-b07e-894a10fb2346"
        },
        "item": {
          "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adf2aa7f-3ef8-403a-ad3d-32b0b09e1ddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
        "cursor": {
          "ref": "abb9dc74-3229-46e4-9af4-21756898f578",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "225d3146-5060-4d2f-b07e-894a10fb2346"
        },
        "item": {
          "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adf2aa7f-3ef8-403a-ad3d-32b0b09e1ddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
        "cursor": {
          "ref": "abb9dc74-3229-46e4-9af4-21756898f578",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "225d3146-5060-4d2f-b07e-894a10fb2346"
        },
        "item": {
          "id": "836c003e-09cf-4227-bcbb-400aded5f3a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adf2aa7f-3ef8-403a-ad3d-32b0b09e1ddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac2c2dd-2b2a-4054-a684-9a509b6a3609",
        "cursor": {
          "ref": "82d8f604-1752-4289-ad75-67dbc31be8f4",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43744e51-3214-412e-b6e6-f8d48c7e34f6"
        },
        "item": {
          "id": "0ac2c2dd-2b2a-4054-a684-9a509b6a3609",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "dfa983bd-1157-48d7-91b2-cbfc6baaa058",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 281,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd80d62-30f8-4b01-bca4-c55ea05aa46c",
        "cursor": {
          "ref": "1a6c2a70-4c53-4423-a898-85bcfae91849",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "90ab8d80-a2a2-4feb-9629-ab11bef16642"
        },
        "item": {
          "id": "8bd80d62-30f8-4b01-bca4-c55ea05aa46c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d2531617-7b91-44f4-ba51-1796ef5910dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd80d62-30f8-4b01-bca4-c55ea05aa46c",
        "cursor": {
          "ref": "1a6c2a70-4c53-4423-a898-85bcfae91849",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "90ab8d80-a2a2-4feb-9629-ab11bef16642"
        },
        "item": {
          "id": "8bd80d62-30f8-4b01-bca4-c55ea05aa46c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d2531617-7b91-44f4-ba51-1796ef5910dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3386eb6-d6c1-4beb-bcb5-0f5488d8acf7",
        "cursor": {
          "ref": "ddc45084-62f0-4aa2-9b45-fb6cf2c1d4c2",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c7a23a2-c921-4bfc-a0fc-cd45c1bb6d95"
        },
        "item": {
          "id": "a3386eb6-d6c1-4beb-bcb5-0f5488d8acf7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6f3734c2-f642-4dc8-be39-a964d6ec5f8a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a5710c-52a3-4eeb-97ad-c3aaabddf42e",
        "cursor": {
          "ref": "96bb657e-3cc4-48bc-b9c3-4d7f60c66c2f",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f122556e-d7b5-40b7-8200-ea9476a3f3f3"
        },
        "item": {
          "id": "49a5710c-52a3-4eeb-97ad-c3aaabddf42e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "094830ac-8bd4-48b9-bc34-c66d0893d5ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a5710c-52a3-4eeb-97ad-c3aaabddf42e",
        "cursor": {
          "ref": "96bb657e-3cc4-48bc-b9c3-4d7f60c66c2f",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f122556e-d7b5-40b7-8200-ea9476a3f3f3"
        },
        "item": {
          "id": "49a5710c-52a3-4eeb-97ad-c3aaabddf42e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "094830ac-8bd4-48b9-bc34-c66d0893d5ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cf9c9e-ab94-4c5f-a2a8-e3f0279e7022",
        "cursor": {
          "ref": "4451e296-b0c2-4450-899e-1b9223367459",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8700c4e3-8633-472e-a1c2-b5f92b9786a9"
        },
        "item": {
          "id": "a7cf9c9e-ab94-4c5f-a2a8-e3f0279e7022",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "102b75d7-c649-44e8-bf21-0efd2a16e91e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}