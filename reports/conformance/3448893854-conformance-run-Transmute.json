{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1de86d6e-9bcb-479f-9f49-3b7a899f29c4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ca549428-1ee5-4d7f-b724-9f9f3c3d554c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c70c465-1a98-46f5-a116-fd76bd866d3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e920a6d7-54cb-4c25-98ff-b8fa1000dc1d"
                }
              }
            ]
          },
          {
            "id": "2ca9ebe6-940e-4a3e-a365-6659217887be",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7b7e32a-c3cd-42d1-86ad-3fdb986b5250",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57598867-4674-4ab2-8863-74cb7df4642c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff3acf58-3a31-454d-9521-5976a69505cc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ba36aca1-78e8-404d-ad8c-f029daba42a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cacdbd72-21f0-465a-985f-c60e44a13d10",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fec93bf1-e7fa-45e9-950a-5e02987131f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "658d5388-3e54-4f85-acc7-c2e7239c014d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6e1a3bf-235d-460f-9846-fb858768a2fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fea7c70-a6f5-4594-9be6-749edf93e9f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1497794f-d0e0-492c-aa0a-5d78bbed2bdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5afa043e-9e96-4e9f-9589-149848f6e06a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ba47613-1c46-4d28-9e90-b14b65ff143a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a44f0a77-80da-46f5-bda0-079114fa9e33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f7fc6ff-d74a-42ed-aa67-ed8fd27ebb28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b4d7ffa-7a98-4d33-989f-6e17dbdf31c3"
            }
          }
        ]
      },
      {
        "id": "2384a33f-8f9f-4c39-aa58-49c0b08c6d6f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b36385e0-50e0-471b-9c89-cb64738fa0b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9636e2b9-a4e1-46ce-8202-f67d59b68a43",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1585338-4250-4bd7-95c0-302cf42d2969",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd86b137-1a08-4d04-87e2-5882624ebe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a64a474-e911-45db-85f9-a137c64e1418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cefa497-cd28-4d9b-a105-e40110cb4454",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd733a9-d0fe-49b6-add5-4e89ecf71895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "715a9d6b-c59d-42b4-b406-a677a183a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebb9786-4749-42f5-b4c5-61ebd71526c8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d14dac-afa7-459a-8261-5a07b0ce046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0696cdb-de0e-4d35-b0fd-140056d04a37"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7610cdcd-f658-43cd-a051-404648bd7491",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "805e071b-6c92-4987-808e-0a6451fc59f1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91271550-2ee4-4b7b-9fa2-93ab7cefd900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6926986-ff26-431a-bc38-03b310f2001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff7a18f-2dd5-4f9c-aee9-3ead771df3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aae714-b46a-4f4b-8eb6-cc8b06a0f31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129e9bf9-a9e0-4960-885c-5b67279455bc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6eb16a-577c-48d2-adc4-87480820b8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01c3cae3-f23a-4366-80ce-27077b802e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23ef17d-f655-4af6-af74-a6efb372273a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ba2e78a4-8f19-4f42-ae52-bc59e4b2d3b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5ec3ed89-ed5a-4062-b3f5-a053d3883e3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "266e2e38-cb93-4b8b-be11-edc9c1e3145b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "145b5be4-8657-4eae-8c97-699a22f474b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bbed973b-7331-463b-b66e-584827729228"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4764446-6078-453d-908b-df6c2cb88450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "11cad797-bf6a-4230-b107-17da42e925c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8774e2d-5207-47e5-b1df-c6c5996a8f37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58e3617b-0bff-476b-9ca4-7b6184a32c00"
            }
          }
        ]
      },
      {
        "id": "09d0a739-58d7-4790-a039-7e24020c6a63",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3dedab19-896d-4d05-80a6-5a78deee42ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08b40dda-5bb1-4f06-9e49-200b6a7f9e20",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "51a58430-3f6c-4419-b7ee-347916151ba4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec8b8e3-590f-475e-9a96-c35162424e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9e2f2e-1e21-46bb-8012-ee7015da11d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba139d16-13c7-4d11-b0df-2ca1ffbd644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7fa0a7a-d07b-4fa7-a915-bc66855e5a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2314bcc6-6640-46d0-9632-f0c91f0ead9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8f4eba-0f3a-449f-ba37-8aa1270b5134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348216ba-5ed1-414c-9674-1ad578e7270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f544bdaf-1538-447e-a443-2d5f06c6e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81ca2152-3783-4e69-875b-07357811b315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f312f2-2f42-4d69-bcf6-1f2fe7b75c8d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c543cfb-9b3e-41bb-9d11-07061d0e5a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296d5426-f6f4-4736-b4a6-99e68d0697a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3fdb43-86cb-406a-a5d0-10e369458d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d22c4c-0b9e-4485-bde9-2da604d94662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d219f0-d486-4623-8a1a-6bafcc57e1a3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbc8940-ea94-4f60-bc5b-7eb82e08209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c3fd03-2dc0-446e-8957-26817c3a3d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9bcd2c-f18b-4efc-baeb-3ce3ebdef1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed02ad4-ea3b-4a97-b6df-e7befd305613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fd27ea-1e05-4e35-ba22-6cf176514c7b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff3ced-b79a-4487-836d-10cc2f78acaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fae13a-f1ac-44f3-8c01-55499de36bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de13c815-5639-4f07-9d87-efcc1ed44a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11871674-07bf-4b57-8c50-c6387a72448b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba256940-709f-4915-b4cf-c2f4e59b7e2b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffdc780-3246-4c66-8a8e-8ca994cb0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8449f9a7-a2ca-42e5-85b1-5c201fc45486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc9902-89fb-4c48-8432-6c1aa0f11660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d96183e-d1a8-4787-b59e-64f113c65b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ad0c8a-d58a-4e3a-938d-84557673fece",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44490e2-7f3d-4d31-851d-025854ba0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92880cd1-26ee-4a94-aefa-3694f6393b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bfb129-af32-4366-b85a-61898ef22c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64fa9795-322d-41e1-a4b5-ca0201bcfa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803e95bf-2706-4b2f-8ef4-94fcbc5a847f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07da61c-3de4-4c90-a833-f20bcd8abe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71468437-b4ee-43b2-95e9-1d2a42b3e78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8b0e42-cccf-4ee4-84dd-4e1e0dc527b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff358d2-f3a4-4672-92e1-7283b5c82ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df765ad3-6e33-4f80-a685-1f0db9c6400c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5e1bc3-8d19-4c8d-877c-a2ee1fe3c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387eaac1-c287-40d1-8fbc-01713f6f6b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45dce4e-f13e-4a65-b5d8-803c2947cb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f46f6c61-9224-427e-85bc-0a71d226cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c668ba06-687b-4878-bcd1-0e0dd63762f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4254924-8096-49ae-82b4-a0fbc2462a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b45c36-c318-49bf-a533-399ed2da05db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2413dfa9-53d0-4156-926c-5dc96b3db079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dd386d9-2a06-4d4a-b48f-f59016cc8cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d81438-1f5b-414c-aa27-0ff496cb5137",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeace07-bcc7-4fd5-98f7-abb01a7da47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feffe5b-1f0d-4209-89e8-f4d7654ebb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985ed5ee-d7f3-4c61-ae8c-4b6c39e58da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f676a810-11e9-453e-96c5-961abd7de89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ab2066-51b0-40d4-b6c0-ef4b64c263be",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3b7ffe-12a9-43ab-9e6a-dc389343922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2686bfab-1ced-44bc-a6ba-dc0281da1fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e03567-b883-4040-bde7-513b2203fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e03e87-1984-40ef-a859-7c4998d8773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dc2e28-9154-49b6-ad27-c840de6d6bd5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168ff96-d6e0-4cf3-bdcc-e027eb3220f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37627f17-8dae-4078-85c7-ee8b16dc6d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0854e84d-3fb9-48d9-8b74-0d5143ee45fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd488c6-9537-4c3f-a19e-8cc9853fd660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4b5767-b221-4795-b923-13ee5636e28e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab92cf9e-435c-46b5-a23c-a9ad57c19f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0dd663-8503-4822-a93c-3d19997b14b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ac2bd7-5db8-4fcf-b8fd-df79f50cd8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd382229-ee97-49e7-9357-c1e9a0a59f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ff1dc9-85b5-43b7-bf54-d2cceb5674ec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39402a7-4f3a-4ed7-a4ae-b5abd86784a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c96cbba-8773-41d6-a996-4fce5f8f4cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576595f5-6765-4dc9-9067-7f08c5a41bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b3ead2-da54-4150-900a-03279c9d10a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58ebab4-9ba9-473c-9639-5457cc3148eb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9165eef-281c-4e80-8af3-17c8ab0853d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785c06ba-9f17-4994-8a71-7d95865c4f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20178d84-fddb-46df-b074-99e48c30ba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "207ce48e-4c7e-4ce1-a3b9-5dba6a8c5f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb3ebf8-0c78-4e93-8e55-7aefb4ab09fb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e9918-a27b-4f7a-b0d7-a864301a14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf79097-d2b6-4045-8ad1-e2fa9b4f6b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9977269-b5b8-455e-a189-b7404018c051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b8f754-700b-4c67-9a7a-f9b16fa38ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227b22ea-d32a-4695-8530-137d41d3a6d1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c89ee5-ada2-4626-8b7d-261a55c459c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c004ec-a8c5-4712-83e2-acad57823adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b92bc5-d67f-4776-acae-6e24e32a7cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe560aff-ac27-4e5e-89cb-54a814584393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c560bf3-561c-45bc-afd9-a90c00f6ba96",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ef5b19-aa4a-428d-a1b5-563452fe3bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee52e462-bf22-49b7-bfaf-77a64f5456c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb4ed1e-14d3-4d38-a875-1c9910ca2832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e24c19a-cf7e-45da-893c-ff7ec523e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad535e4-677a-4881-ada0-2f07bb8a2bd5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67537264-0d62-4840-886b-39073425dd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720b1947-e804-4b91-95ce-ee9b4bd83202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c441461a-7dcb-4c60-aa81-a540714efffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d12eb4-978b-469e-aac8-06a2a8a2fee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98f0193-834e-4d04-b7aa-db85c73393fe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ea4a7f-01b2-46ec-b5cc-d7aad4a3c5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f81337-bcfb-4c83-a96f-3b64285bcbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcd15c4-1312-4f74-8893-38bcb55aa723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7679b45f-e074-4c88-a95f-62a56449ca86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcae3335-0c1a-4b93-bbca-bc268098b8a8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc722d88-ab91-43bb-99b5-4cd87ac4aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed56892-ff72-451f-9378-231638c7ab81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de7ed19-1bdf-4521-9598-824a5253e738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56c60eb0-eca9-4d75-a22f-f5ea1433a629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b04950-08e8-48d5-bab5-45b1b818ae1c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811559f2-0b95-4fe4-9793-620c002722dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d9e75-36db-4b31-adc7-1d72e765d3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8ee8ac-ad04-42af-b667-d048fb14c547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b68c4cac-88e4-4364-b320-fd2e777ec899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177349b4-11a4-43d1-8c9b-e7ed771315df",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5029c5-7cf7-44b3-a551-83b0af9568dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30548532-6aa5-4111-8f1c-474eaa7f2d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080e3391-646d-41c6-91a4-3148d0d24066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "51df18a9-d547-463b-9ca3-1c838914c93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7acbbf0-d8eb-4386-8d9f-cba6ecea0bb2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc15cfcf-32d4-4f73-8e1c-a077c8278c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270a5d5a-ee10-4c79-b95f-27d4325fe388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf86182-3ce3-49cc-89be-cb4218f8688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c739ec37-bc30-44dd-b49f-8287ed921447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089fe4f4-282e-41d9-81c6-947670ca6051",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a4ce98-a769-474b-9c43-77fe87707836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ca7aa-b97a-4db4-bc08-5693983fa268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f818410-48b7-4339-a2ce-106682ecb33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b73347-7b3a-46a6-9ce5-fe8fca572904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8784e41a-db08-4357-9745-1e76b34f515b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3ecc20-2d89-4f86-adfd-5abfd73dedac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b2cea5-1bf9-465f-ba0f-0ee27d35d21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1505663-98fd-4a82-bb05-1fc040c3fbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb35c83-9f52-4ee0-9f33-b4a40b74368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb63ff-981e-4def-aed5-ccb44776580e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d80384-1e43-404f-ac38-27469dc92707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d804b36-e71b-4142-8d21-9847550d01f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218e55fb-a478-4ac9-b6ba-049a8bb463f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1722670a-f49a-4060-86b8-0586c784bead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e643111b-eb88-4d78-84c3-70fd21146f66",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f7ab1f-7b07-418a-971f-9f7394fd9428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7f8453-eced-4f8e-9b0a-9ffe6e054b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27233396-53d9-45f9-811b-16acbf6c9d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f88d3b5-bddc-40a1-8adc-e1b381e0a959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72876c7d-0de0-40fc-ac64-d1177383060c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f805021-dcf7-4b58-9f78-a0d23bd3eb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e694ef-f1af-4cb7-aa4e-efefef02e41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c7fa1-9a32-4aea-ad26-9aa144217f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8516fb-4464-4eca-9b98-440bf120438a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801654c6-15f9-4eb0-a2c8-2a55931d28e4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ecf1ff-bff6-4c34-98e2-257ddb24a7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ed61f5-1460-454a-86e9-5e0d254e5e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d6e64e-c2b3-4f80-909f-b6984951858c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8859b02e-6750-4fc7-aaa5-580ed50dbd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e84ff8-6cf9-4b62-b54c-aec6130a21a0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec10ea3c-990b-4d06-a2e9-bf7b922fba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537e13ac-5fb1-4e4f-9591-d5c34a68d774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903b0580-2177-41c5-9e61-7945a66a94c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86220003-304b-41ee-b4c6-5ac1c20164b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb91666-b325-4260-b48f-0dff418c271b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2623686f-d5c3-41dd-ba1c-57eb8c6e22c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bb2fc1-36ad-4c28-a306-6329e7d957a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5931cbd-c6d7-4cad-a735-9326c0ed7a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2da4ff-e258-4adb-9431-a68d3dddfe97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f286c4d6-cfdb-44b8-989e-cb4219c857f3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9395e90c-0cdb-4cd8-bfa2-6f2ea52b5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c1b94c-ca72-4ad4-8459-fb189b40afd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0b041f-c87c-4cc8-9664-4b13be6bbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6bd554-4124-4165-8aae-4c2bf70a59f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc97d4-a76b-4a58-b562-6b02f4694ea0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815d1e2d-939b-4797-9b32-d77c07a2c0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689a3c1f-121e-46bc-ac2e-5a4989bef5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30488bdd-7176-41e6-81fc-1797c8acada4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c636bb31-a4c1-45e7-a091-f846b31afa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b991abe-5b25-4686-86e4-ccce9f3ec9c3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da0b0e-3e23-4f4a-ad48-7b6cfa4d404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b60aa4c-2cf5-4fa2-8421-9f3d049f53ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93890e5a-09b5-40b3-af46-54952a5a41bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6464d9b2-8ba5-4f79-9383-5b98d1dcc5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83713a62-fbe0-46f5-8ab4-44a9de07bcec",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee82ae3-cf87-4df0-9829-be8b267bacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ab439c-963e-4e68-aae6-e0146cbe1e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10995fdb-5767-47f3-a9ff-9c5801b917ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b1afd7-6fa1-4c4e-8c74-e47fb775ecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef69c30d-543b-472c-a96a-7a26ac241f26",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe06a32f-a4ad-4d12-90c1-baae6ec20632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a1d807-c8ae-424a-a467-23e654bd4854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a97dae-fd42-465f-9b9b-746dfc2ef61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ab2b91-ca98-479a-a69d-e7743834a62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6778709f-d491-4c93-aff7-b044c7bb90b0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2f93b7-9c60-4905-8bb2-ff7860e14111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706caf30-0931-4a65-8c49-d44b48309233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996e6bad-f662-4185-b83f-189237b52955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a45dcf6-8207-4271-bb6a-2d6aeef00c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ba4d4-c8fc-418f-9b99-e14e75d06afc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdb9f70-a760-4c2a-9228-c70423070eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ada265-d1c9-4dcc-be7f-8fd868ae5ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ae1c1-5696-464c-b155-31f2f7336108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d69dd5d-6ad8-48e1-91b2-6ca90b4dcae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24e1336-d977-4f9a-9d21-32f41b51df58",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877fd9cc-b82d-4b64-9cb0-630d7fb5e383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b486ad91-431f-4746-9281-af380fc253f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8d6135-034c-4c31-ad59-125080233544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab5030d-eb1b-4304-b6b2-c4876598aee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bda410-f2e2-4d6f-bcfd-1b44368a77f1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fede52b2-316a-43d6-93b5-9166968f282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0942f872-9c51-48dd-93e8-673f8c7e406e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a65488c-3b5e-4bce-883a-39f8d5dfe1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1075a13e-62a3-40ba-87bf-3c814680c0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cece9b1d-d935-4272-af43-c6bdc227f856",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba9bae6-8235-4dee-bfa1-5671762e5cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e18f00-bb0d-4a2b-9448-452cd3dff7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b35e560-c9e1-4759-908e-cf20aff5e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c11e74-4b79-4b28-9cc9-546851e15928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681a56ce-dffb-4c9a-bab3-a277b0049d9d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c293d22-80a0-4cc0-8937-949f26bba034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03333a0a-772b-4aa5-b2b6-e895271540a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cd5a14-261e-4ca1-a669-8b9c4b4fd58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e87128-f552-4a07-8745-6c3f158acca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb37423-4e76-4136-ae78-2db304e91d07",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0d1563-fba7-4d89-9385-8431ce8f3f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359051d7-d739-48d0-8bb9-aee90f014d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ba914c-41d9-4590-8daf-a6c1042dfad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7429e4-b95d-4043-9d2c-6a0d8e36abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0296bd84-7fbc-48ad-8b3f-0b6a16c4be09",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6ebb60-8bd1-48df-90c7-13685ecef5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe426196-a184-4b73-badc-dceccd085c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb8886d-fea6-4aef-87ca-edf9cb082cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9756bb-5744-41fa-a032-cb7a5b4d8353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17b441e-1df1-4307-b436-a07478ecdb87",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aeb477-dd22-497d-b758-48dd8f2f91d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6274b376-8629-43e4-980d-5ce4a81b87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af32fe5-567f-4f0b-b599-a202a53d6677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "618e17f5-c91a-4738-a3c5-7a0127880163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b53bad-0a87-4090-81a6-6fb6d08f9721",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be3f445-bfb2-4415-adc8-595817b8d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab2b88a-dfea-4f1e-a610-cc11f5253151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d1987d-ce60-4c3e-8872-e6efb5844b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd5b123-9d85-49c0-93fe-c88cb2e50be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53a159e-d6c3-43a2-9fa2-f0c7525f07e7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d8368d-d895-4d3c-a463-b453934ea271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1775afe5-9c60-4703-b080-3a4b8d2db781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e14b16-fc91-4ef8-a920-82376307dd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24f85b83-5c12-4891-81fe-011f85104b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57313d0f-96ab-4a51-a91e-c1583644ab61",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed4635-2c50-45b1-81cd-cf8153f9d176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f6f18-bedb-4ef9-a5d1-fb34d579d557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7601ac96-6462-4c2a-967d-35f637a1d019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84001009-df74-44c8-a363-481a46a4791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f25a81c-bcfb-4085-a42e-59b876231236",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1076980-990a-4925-9d80-18b1e3781437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922c4924-7be6-4afc-8d4e-9066d52a9e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251dc7d0-c602-4e23-b58f-e6c5c7cce358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "240c5d57-80e1-4b91-9142-f62ad762b05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caef41e-67ad-4141-a514-1cdd8adaa91f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2ab242-7384-4c13-9f5a-03d89594b573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb464f2-736d-4ddc-b842-0eeed7e0ed6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1962b2fe-07be-4c78-8e8b-393e2e28baf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86de1515-628b-40de-921d-3832e2aece16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c5dff3-3563-4b72-af7a-fb2e396ddcff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4b723f-cca9-4c04-bca9-de0b0a90c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e53715e-1303-4853-8453-fd8e71f54872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b809cfc8-0fdb-4067-8b79-209f9d22c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33944547-bf2e-4ef7-8ac1-a01e43aee1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eabb28b-ba4b-489d-82a8-a912ebb5885d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f363535a-2431-4b5b-8835-3619e8909d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ec6d0a-35ca-49fe-ab4a-da781d45ef2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e49e0a-0e09-4ea7-b603-3c9d1e92c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe4ec48-82e4-4ccd-8535-0ffbf4f34fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38486bd-9a3c-49b6-a98c-5f78ff61bc99",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f2a6d-d8ba-40cd-b434-69a4c6d4fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b90af48-dda4-4e91-970f-d312a20dfef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f930285-4b17-4ee4-b442-b0872c4f111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91fea6f-b2df-48bf-b1ac-10da385879c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fee2784-583b-44b2-9150-ddf946bf20d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540a83b-93e3-4e49-8668-17f08ed5760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfd75a0-3f92-4b3c-9c30-8064a5df1d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b007db8-76d0-41e5-af51-8bd81858eda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbb476a-5dde-42c5-95a1-c32c99f3d459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee22981-34b6-4a2d-92a8-19a06306fcdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a10f3-230d-4676-b733-15cd5a740574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb84ae43-d7c5-4c6e-8416-2b851ba0e9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47255f19-a761-4976-9d69-1f857b30e253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a49c48ee-5d3a-414e-b841-2e96edab56d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484d42f7-f75d-4bd0-84a4-78e846fff5d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fbfa7c-db96-4f7c-a156-e1169db7b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e66bebf-6b54-49cf-a4b0-b7199983ce2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c736fe9-652b-4fed-99a8-1b29975b253d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "127b87a4-7b3d-4156-8a99-b5292dff6b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a305221-23d6-4b44-9e70-ecd3c0e0bd7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2ad7be-a081-478f-b267-5cac5534827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b324c3-40a6-4fad-8a73-417c40a61aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcf3844-7e65-4cc4-ac40-0525f54510fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59653f7c-5213-4fa6-a3f0-c830529d314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d0e0fd-deb7-4ede-8905-4e67c07d280d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccab45da-94f2-43d3-86a5-7866500abd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc646337-ecd0-4958-aa9b-0bfb7e8c4268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922964dd-a1d9-4fa3-854f-f54209e09410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97f8755-e6b0-4cfb-a5aa-61a269bca04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea675b3-49d7-4d36-ab52-85550bae3c44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d174aa17-5369-43eb-9f9b-d21251407ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abc2cd7-d65a-4742-8cc6-9c016c7e2591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe4ba4-0d85-4df2-af85-0befb3f1d021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fa1efa-a494-4353-8674-483b2234a37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f929a31-7b0f-419b-967f-564c2fc92b48",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be4892-2fe3-49de-9755-e78bbc606b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8602df42-4cd9-49da-951a-1f86a608a008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7578c82a-90ed-40da-bcd8-fc908cae78d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a34479-80b6-46c3-a03e-d0e6f20e9c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a11de-75fb-40ad-907c-d53f746457c0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33aa2fa7-445c-426d-a208-803d11a7ac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e039b6a2-0a50-480c-81f0-8f78601792ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6556d04-6d28-4e29-8865-7395773fe0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "171ee5ca-67fd-4f1e-8228-d4cb0b1c70bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcc73e9-18dc-43cd-81db-13e3e11ebdfb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a042327-27bf-40a9-ac5e-df1a6a546d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1113fa6-0c69-496b-933d-72042ef6152f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bc0b29-a8c1-4570-a014-b156a16d5bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "653a555b-ecb5-4742-bae2-75e6224988f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b776976d-58d5-4f2c-aebf-d1b5b89d03b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f6579b-12c6-4c21-92c9-b79493187934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d45fe4-dc90-4a3f-889f-b07f619555d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b012386a-8706-4610-aed5-700143a6ea46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8467e531-626a-43fa-9f42-e10b45b0ab7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed72b9d-79e9-4d21-8a22-9919cdb25c04",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851d0df-fc9f-40f7-9811-657591a7177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd633b7-9e84-482d-9f0f-afefb0c0ae6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0643710f-b19b-4b9b-ae19-b29fb22e8d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a89356-e77b-4243-a9c3-97dd0e8fdd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e8604-29b2-44bb-942b-a8aa157e398c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b77abe1-5b53-422e-88bf-32e6d7b5e10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a790d7-3b9d-49a6-a829-712e6859e988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592782e8-bf6e-4300-abb6-f4d49e01b7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a72cdc2-9e61-4b1c-a2df-73facdbcab5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edab366c-c07e-4a48-9ce2-a619d86418ba",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf640dd-9312-48bc-be40-e43499e6b268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41d8d0f-a9b7-4eb5-90e5-1d0315c5bfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca269a98-2a49-49dc-a84a-1e2a6a75764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7c38a4-479f-4d45-8252-2c37fd6e7579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef661fc5-719d-4895-8332-3518788eb96b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201dd999-3ebf-460d-8866-eb2c300ebee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3dc428-5b2f-459c-9551-d3cb2c7af693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1a56e3-3ec0-4a07-abaf-c366d95b95ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "139da236-5c0f-405e-a339-5e66ae50087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89060a9-fb4f-4637-a14c-9f966512064a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f1b96c-7a75-4a0e-979f-5d20ba4ced38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54902e8d-9269-43ba-8686-922c5da7d221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc14037-c98c-4a72-9614-ebc8d678b09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afacbc2d-0593-4e05-83e5-b87bd5d282d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d4285d-5855-457e-8cc2-ae0ecce220c1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de5e51f-e2be-4236-822f-b657c46847b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392595dd-80a3-4674-b29f-dad6744c7be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a00bfa-da1a-4446-b113-46b04dd48d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b4b4e7-cf72-486b-a827-e98f35441214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92aa351-668e-4583-91bb-a0c67dd79fc0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae2c41e-8d22-45e5-8954-0bd8edb6d038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60633d72-a133-4cc5-9175-a5a5bd789588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8babc5a-ec4a-46a4-a832-ed75b7379edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e679b1-c936-4b58-a645-c7eca90fd939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b21ce9-de8a-4306-ae3b-138e44ebffa3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a43fbe-4fab-4880-b590-524c964c297f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7d01d1-2b57-46fa-a9db-53e0737083fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1620f7-df8a-4924-95f2-c3faee57a535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0e41a9-8a43-4822-b928-80b95b1c8a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1bcd06-01cc-45f3-bc93-d155fd427c98",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52d72e7-d7ff-419f-bf7f-c32956fb1c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656eba0c-43c0-41ef-a429-03749b4c11f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce203398-b2ad-43e8-a461-ebed3818763d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f926e21-fb87-4740-bc17-5e694f3ebf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82b8988-6175-4578-842b-be871dab3f64",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d2c080-fd6d-4eae-9fd4-2120e64575b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edad12e6-0695-49ad-a639-681dc0bb9130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f34155-e6f5-41d1-a579-6ac798f12577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ca67c8-0740-45d0-8d5e-1ac9b46ebeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b21c35-b967-482f-87c3-576ddde465b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968cfb60-434d-445b-9e5d-7979aa73baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5fc3863-b73e-476a-913a-acd0c5de4d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523a57b0-27a9-48d8-b127-c1b8753e0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a99556-b642-42d1-a614-1f2a6f3e1992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b87b1d-24e3-48b2-8f22-af4a731fd114",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed8a5b-d0ab-49e0-ad83-50d38af07fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53b06c5-e29c-452b-9907-fd8abdcd97b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca19e52b-e684-4ed2-a270-6e4a03da833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c268ff0-5c94-4de0-a105-7afd7cb95388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d36d87-acd8-4af6-94c5-bf9e5bddba44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcc0e82-ee86-4169-bacc-c961249d5aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467111dc-5afb-4ef0-bcbb-4bb42c474632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f081105-0a98-4b2e-8db4-2bb1a2a35cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb329163-cd68-4086-bdfc-62a0a17b4cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c1d42e-b393-4b56-b654-febeee5b0f78",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472ecc68-2745-4afd-aa73-fe0422dd3cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21df590-59b8-4fa7-a0dc-e46cc7446ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758319c2-4570-4a15-b725-7a982d7b2510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e863f20-a378-477f-aeed-9d322a56b052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9645a9f-be6b-4c31-b9f7-0221a4efec1b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9045d2-2ce6-4db1-93e5-f4217b9b9a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc77b85-a135-4752-8f86-2e4b19855456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eee601-0358-4ec6-b95a-bea0c6646424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f192c911-f298-49b8-ae87-55a3d0b82bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa89fea0-a20a-4752-b20e-442c2596667c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc2e865-9831-4860-8cc1-89f24cb27417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68247a51-1249-4c76-8681-af77d86fca45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e301ae0-f4d6-415b-93c5-9702d7b6d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48138bc-8713-4e5a-986c-9e3b4eeb0ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f48b1a-b351-4135-a16e-b29d4ad598fa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa449125-220e-4eca-aa64-1a76c8c31788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac41dcf6-154d-45cd-975d-30bea58abbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c21b4a-6201-40f6-a96c-8aa135001f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad142c91-4c76-4b9c-945b-846aea412602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ff78e-753f-4d14-920d-0724c136612f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b5eae-bbda-44e6-830b-211e902cf5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5d0c23-45f6-438d-a91e-ce8ef35174d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed1219e-87cc-403e-8d91-6679d84ff6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c886f63-fcec-4b93-8146-c8a6ff2b19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4e80f2-7fa0-4661-b45e-3c8e8a5d6ecb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f02a6a7-e66f-43b9-9a36-054edcf7d26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39320d5-25d6-4a60-944a-af2a4cee7e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ef4f8e-39b6-4ac4-8c09-3b83dd0fc197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e154d15d-3795-4234-aa96-c9b698bb5839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5609b94-8c0c-4990-8136-44d57c7cb40b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37afa871-a614-46a2-b61a-1926a1effc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014b3bd5-86bf-41d2-ac94-ea9112efa4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e995ce-c2c6-4229-9c48-271ee5335843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8608eec7-c5c7-4721-b874-a30f47003d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dc7158-2d1e-44d8-8706-715d1ce2bd26",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ac4498-00da-4441-bfff-9381e6001988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b437f9b7-6394-4a9b-9253-31699a677458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e8379b-a813-4ae0-b74f-565dad17f4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ce2cfa-20f4-4dda-8abb-fc206125073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9fbe16-ab11-467c-a5f3-4cc02c1f1c33",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a6b04e-9a32-41f3-a10e-41ee55f8408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3664d55-fc23-42aa-aa6f-6771f2adbbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a903c7a7-3970-4386-bf11-a3ee28024514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0133ee9d-9952-414b-af48-9ba772978c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5efd4-8426-4629-8a32-20124b07346a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147eb588-3a66-4ac2-bf61-b8ba58955637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bbfcf4-b3a2-462d-be28-1282d956f12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f753eb1-54a4-4052-a1ee-196c10ec006e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4c5fe5-bcef-46dd-a969-8884a76896aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a07ae5-53dd-4d8d-98e3-a690c86eac02",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a3f687-b06d-4bd5-b7ee-6e92d9964cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2242dc0d-9a8b-43b7-b5b6-94928c844339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f166b08-03b9-4969-823f-2d0c1a21cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "35db3e21-4f9d-4f9e-bb72-b56ba5e563f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de667a87-0c85-431d-a122-0ff442a7c21c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc9d41-d585-4f74-b73c-ff5dd0ce98bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e6afa6-8357-4ccf-9243-f26a86fd37c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6c25d1-fd65-42aa-8bda-f5ae061fe8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d434d7-52c7-45f1-bb38-1ebdd39df679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774cfe55-c4d0-4e35-9412-6702e7ee05c0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d13e32-3b1e-4d2b-9853-636ed00f722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2f6e0a-e034-4c91-be17-b3a231558bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2112baf-c788-46b8-aa53-52b31ae56b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e793241d-ddf9-411f-8ec9-f89419002b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442745d4-2d9c-4474-8b60-7d0d527ddf93",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab08eec-8e30-4895-ac1a-c5fb9c707822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba384c87-263e-46e8-97ab-bd85e9fc09a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc40c92c-6fe5-480e-8297-ae9b207ec9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ff7a38-a7ae-4a2d-94ec-98e5cd5250f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34988a83-7751-42c9-bbb7-d9c14c4070ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f62ef7a4-18c0-41a2-a91b-ea2c4aa0e1e7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e817b370-7acb-43a1-9f68-bf692f4b5a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d674d1-e34f-40d3-92d2-0454cd6a7a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cedb9a-7f12-4f21-875e-b168c23a6867",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d94572c1-890e-412d-b00b-4f563d2e9410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134da7ad-1a80-43e9-9575-08e6f38fef3b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28f0a26-aebe-42ff-a71c-fcd6b529ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "673a9b90-a3a4-4c5d-b722-fb974e1c9f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de291d79-6b46-42c8-9f61-ab55c822962c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "22dfba49-d8d0-461f-a151-6d2869076f3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f23c5ca2-c93c-4514-a702-af1c807790fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac97e93d-ef94-4e1e-9aec-6f117a5a237a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00618647-e131-4d31-9d4a-00892533214d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f329e104-13b2-481a-8938-f661a22923e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0864d56e-2e3a-4428-b61e-e3ccb6513f6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa71b0a3-48e6-400e-846a-271211b2f904"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a8cdeee7-3a16-41ee-ae56-0ee82747c18e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6ba8120-48b6-4da6-8c44-aef28e22615a"
                }
              }
            ]
          },
          {
            "id": "7ae3958c-73b2-4ebb-870f-f80a76e493f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "80a4ca63-8b21-4183-bde5-16c4f984b896",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0626bc59-00ec-436f-ba88-cd85780e81bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "822dcd56-5e86-499a-b10b-69dc4f27e688"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "689ac4ce-f9c8-424a-86e9-86fcbb20092e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "350bf4d7-22bc-4e66-8604-79bac8fe8ec9"
                    }
                  }
                ]
              },
              {
                "id": "4d0de68d-eace-45cb-87cd-0e222dcc9a60",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0218b546-a50b-4f59-8bce-ba7bdee097a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8bfd3b2-a1e6-4c39-b625-86b8442b7694"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b1c50f1-f101-4586-8d61-3066bbd0ad7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e48e8bf-cd27-4a02-8cac-abb2ae40c8a3"
                    }
                  }
                ]
              },
              {
                "id": "7b34cf82-7b6e-4b25-8db4-33c405c1fa9d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53b1ce5c-a338-4e14-a22f-42d780a8d654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6cc0239-f180-4eff-bbf8-83666f449cb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b75e3b8-0a00-4955-a4b1-b33ff3f9f3b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d94386ca-493f-402d-95db-6e041e1457fd"
                    }
                  }
                ]
              },
              {
                "id": "785ba88a-863d-4134-bb82-35edd1f82930",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f42634-1406-4ed9-bd8f-8337e8b20151",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "601e728d-11cc-48c4-a80e-1014c5302b18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "560927ba-0eeb-4bcb-b553-b070f6681df1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "91931112-7ea0-437c-ae15-d7dbaa0ab0de"
                    }
                  }
                ]
              },
              {
                "id": "8caf49c4-ebf1-426e-9936-b96f8b185a20",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d115c876-a241-4622-be38-83216f15c8b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b91e9e0-aed9-4968-8955-2b4dd616d68a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aff017c-6c07-4243-9eeb-9169def1e990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "941cc6dc-61fe-47c4-8f70-d61efbdd69ad"
                    }
                  }
                ]
              },
              {
                "id": "9b07ba20-0e81-4bfd-a975-27909d48871e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "805451fd-07d1-4f06-bb65-e845a256b161",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "812f016c-ebca-49f3-8292-0d0a632b4d0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e967314-20c0-4e2e-ad4c-2b71fe0793ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "953377df-e201-4fff-916e-19f4ef4b3f34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9848a715-23d6-4a2b-b240-36901dbf4b53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47354f58-d2d0-4879-9c31-052e2cdf7fdd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4d79aa6-9efd-4487-8f8a-45223d2ac810",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3be800f9-f9c4-401f-8c5e-e8800f9e965b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eb3d254-831c-4699-b6ab-a22f08cb9b1e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eab78261-7898-43ef-9a64-ce2135d358ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1cc7ccf-55ce-4031-b881-a6a829c92465",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed136675-1b71-479d-b978-cf96acbbccb5"
            }
          }
        ]
      },
      {
        "id": "b7bd6204-77f7-4c8e-88fe-3a0bf11539f9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "723cc3a6-7f4e-4cd9-a3ac-0f565d12526c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6432bae4-836f-4ca4-8d6d-8eee4025dcac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8c76b0a-a452-4637-9762-03249aef2692",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0dd603-9e80-43c9-9ebb-3f7040e86820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f3ed20-85ac-45c3-9f52-5c4198fcd00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eef99a4-8345-44a1-97ca-a044c1bd14eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d622abaa-c3e3-4b6d-a1f6-71fb32ff6974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f029c09-649a-44f5-b32a-236ec02f909a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7a543a-052c-48bf-b14f-3a7da751efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b6532a-ced4-451a-9056-862a08a024d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7739564a-0016-4264-bd7d-56c5a35051aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "662ca287-6904-44ec-b21b-4fd94284fa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03703686-07e0-44cf-8746-6f896e1129d4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c4203e-945a-43b9-be98-97e843d54e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44d0296-9e98-473e-970c-3dc1790d35ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088692b-07c5-4fcb-a847-21b8a6584330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22762e1a-70d6-407a-8006-317e44530c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10b554-74eb-4f86-a6ce-e5e3cd1cef49",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b68a16-d249-47da-9bd6-86121e2ec041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cac2ec-bb8e-4dbf-b1fc-e66452219e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c749a6-5236-46b1-b912-7b37a92eee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c77ff101-c4f4-49d9-98f2-b720c1d07334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5766eb8c-0819-4f01-9200-4825ffe8b9ff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c27804-b32d-47e4-81b2-eb2185f0d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26210f6-452f-4e05-ae11-58c67a3f6c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d222d6f7-52fa-47e8-bf3f-34a7b9b190ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f91a0d29-d0bb-44a2-807e-f279508fdc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7dc991-c250-4016-82ee-6ffce96dc392",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff34b7a-b7c4-49a7-9167-943d271c5210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8333ba9-a82d-4da5-9493-60482aafc4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794dd720-dd70-4b90-b2b4-fe91cc028b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ee2cf8-0560-4022-91ab-3665365e1c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90093b69-4866-4f30-b96d-c8e9f8b2623a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b22378f-29c5-410b-b674-c3b1e7bd4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2832f0c-8075-4fca-85c0-ea22dfecf791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4335642-9718-415d-a3c0-374151ba2b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05eabe29-3ead-49b5-9aea-46ad156c711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25fdf87-eaed-4160-b761-0b02ccad45a8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d57924-7eef-46d8-9e07-bc00bae2787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a0cb1f-4eb9-414a-a47c-4c15c02e3b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b46bd52-d105-437f-80b6-87af64851ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9007c8-e07e-4110-ab48-d00d488c17e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757f205-5eae-4e1d-9076-080b4f432a5a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49005457-7a9e-4594-996b-df7ebc3bf081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36205bcc-4479-482c-86ce-3fdd361c1b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e23add8-e133-4179-9433-4608ed0696a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5f26b0-22ab-4d12-a9cf-8b1e55314e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c877897-7694-48df-b844-21a72e063810",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31179cd-c7d5-4df7-bb01-490dddf1d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6349195-4ced-4846-968f-caf6ef8ec0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d220613-acee-4ef0-9081-ac3d907f0153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "204f0450-0dd8-40d5-a049-0c9d7da80a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949525e5-20e0-412b-a846-237e802e3342",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafcb81c-fcc4-4f29-bd51-440f714aa86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dc0755-e201-44cd-a616-c96f2baeed13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337cd68-4152-4ab5-9aca-735437be5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09abc5ec-b278-42c3-9625-9ea7742c4802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f328a0-920f-4c25-83b6-99a3ec1a75a5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f3efa4-a3d1-4da8-99c0-b55e72a32d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e58b2db-94c3-47bd-ba70-795773a5f22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8607bb4d-08f0-443d-97b5-519d57f1d7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d11bc54b-406c-4844-8fca-d9c6ce33e015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee62858a-d099-4e04-9a2a-70aae1c321bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80d9f92-9977-4002-8460-79a143259c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf45e8f2-f1c9-48c6-819f-01a32a08ce92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251619bb-bb25-49ba-9fb6-9556ae9402e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79032815-875b-4697-a816-e703190d1f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cd1e73-8704-4f97-8023-6d916398ddec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115a512d-e666-43ec-b842-28566d46b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aab06c2-6fa2-4750-8823-7e38c4fbc5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec70872-24ca-49c2-9582-2f9429dc943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4871267f-6a49-4d03-99b0-7e19e2b0fd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836c8b37-2c78-4e53-92b7-6ee4e8028096",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99ed2ef-8b92-4e76-90ae-40e897438e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cd54c5-38e4-4c0b-87e6-928f7eba2075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d68eb93-1886-4a22-88f0-c34e3dd4402f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79367912-bb7b-46eb-8724-3282164c2227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb95c00-5dd2-4db3-81ab-ea238f46f651",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c5fb9-8672-4637-80f6-92aa9e02e5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f89361-2017-46f2-a9e0-e6037cd3ad8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d497df4-6d27-4cdb-8cd3-8bc00cd1fa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e60e6edc-cef7-4773-bed5-f153934ac0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3497ffe0-ee87-409b-b7f0-f99ff0e7e5af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8100f0a-e337-4900-b282-58277f210c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c1c09-8de3-4458-8343-756bf05d77dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2157f6d7-9825-4d03-b031-02809598cd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1656aaf-7ad6-425e-a4b0-61d2e5e4d47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66381c7-9d3f-469a-9500-59d30df2d741",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eda32e-9f7d-43b7-8f34-f9793366e409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d752554a-a47d-4fd6-9fea-d204915b9158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20953cb9-1c57-4b76-b34d-cbe48eee386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d5992d-145b-441a-9593-7fd9ccd45fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af98082-1afd-45e2-b517-c43973e99f7e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdf469e-b95c-4b4b-aeec-1d7695b6acf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bb27db-3bec-4fc4-bc3a-a2c6b1c12aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9034eb40-60dc-4456-b225-cba6ef8e78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6adc86-665e-441d-b7d6-6a6d7826d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ce851-7787-4e96-8b59-1bcca1f2ef91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c72998-730b-4e78-bb66-2dd168509b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158167e8-edd9-466f-89cb-64ecdaec1590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34238c4-7214-4962-8bc5-cff70e487f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4516a2ff-e16c-4644-8269-e1a16672ea57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45b6cb0-a27c-4d64-8357-6ed055f8fa6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c619dbf-7971-4d98-a74c-8be4e99a2a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47de2032-7bab-4a3f-a50e-6674e41e2b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7b8733-a77b-4871-8755-3989223255c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7735d57-5c7c-40be-906b-c89505286140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19830246-2bb6-4c7d-a532-83eaa304ea23",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd13ae4-4ead-4c9c-baa5-1179fa5a8613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0deb5e-a20f-4842-8e91-ea54a77c024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4985a88b-3f76-48e1-841a-4ffffa90e683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba872ae-e7da-4682-a84d-cb4f865bca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7ce1a4-5459-4b97-86cb-ea6c6d7ca581",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62807968-b42c-4c2b-8812-a6ccd6dbbe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73818ee3-ada4-4304-9d5b-b8afada47ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206fd5a3-cce0-4534-bd1c-ff2d8c577377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99c591d-c712-416d-bd5f-656b22f4a5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea8d100-b31c-404f-900f-c663980dc299",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe4412-77d5-4916-a66e-39fdef111bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01201bc6-932e-493b-b19d-e8cce0ec3565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d104c243-accf-4f2a-92ab-251d91e44e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15acdae0-35ee-423b-a9df-2fa2fbe08a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7610c4f5-ced9-42b1-9857-7d5dd9a970d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a19cec-7773-4154-a476-2f2e87a08e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df54cabc-a8b0-400a-bb2e-6df35a58aac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a5bda0-4d1f-4f20-932e-7329ce53d058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ce1046-8696-436d-9f9e-02debbf80ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07050086-ff2e-4795-8eac-c1f910bec896",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480d29f-7c0c-4514-8237-386ec59d1bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa585c1-125a-4b41-98b5-fe5a4112b81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17040957-d6d3-4e84-808f-714bb2dfc587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7219d8e2-8d95-401a-ab49-9bfe71e787cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a83ddb-4849-4c3c-8c1a-fdb7a00ec785",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92597d4-3dbd-4a99-b62f-110d67ab7d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232522f6-c5d5-47a2-9160-9f4bc7dcef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577dfbc1-1fc6-4862-8d66-8b03af855925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06b7377-6583-46b7-a5ee-3a0f835811b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84ba82a-f631-485c-b13f-3217f29c5f4d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286d1dbd-6542-4002-b110-cae9f2cce582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf141a67-9fcc-45a5-ba44-6323365c05fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c476c9-a9c9-467d-bec8-38aba148fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bde8023-1c7f-407b-a0d6-e6c99a22518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028a22d5-668e-4284-8cac-14a5d86e5cb4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7f432f-1a52-47e4-876e-c41587e1e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9eccf5a-af28-4393-b312-3ac3b35012a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e281d67-2562-42e9-af2a-286f592c340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23fcc2b1-6f8d-493f-ab3c-9ec069dcf41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d4d2a8-0914-46b9-b213-55a41568730a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021f97fb-fbaf-4a9c-8121-5d7437de08f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08d19fa-08b1-4b28-9637-dea78986acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99395947-a050-4708-8826-acf66b186fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfb8585-dcc3-48cb-b72b-83aa1c00cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c2b77e-7858-464b-bafb-1788abc9e295",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701198fd-0986-46fb-9ad5-6794ffd0e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068a4d16-898b-4836-99ca-afaf59b47486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f87048b-b213-43ab-9edb-ba1d78e79647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b6e38a-fe83-4dc9-bd8b-ce2be0a839c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05da507e-6338-48d0-a50d-8e11a77a0e40",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a60267-82cf-4469-b62f-e25a9be503ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2b5d7c-4641-44af-9c59-ae678e8a6f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f0d4a5-f61a-4bb2-ba91-856d245fb2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b738b68e-4eb5-4f46-8f77-40a8932dc9f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb9b2df6-b7cf-4ca9-97c9-62a3d2a69f08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26047494-f746-4c29-a6d1-b0e7b5668026",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28921d25-ebfe-4694-b690-61cfe8bb60a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0371f4c9-15bf-4de9-b562-7482a08d7f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5397aaaf-55d5-4110-b21e-162c2eda1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "471bd4ec-8a0e-491c-ae3d-bf0b12805cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33a8ba8-3168-423d-b832-45efd8afd6fd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed595b4-ad7a-4ed8-8552-5b3b9275db7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "26162919-3943-4583-a95e-f7239a090cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90f5e9-3871-4d35-b1d4-d157025b769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cebe6a4-1c73-441a-959f-d00c42d97876"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33da3baf-6829-4861-b448-f69e26799519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5bcc0b3-e120-477d-a7f8-05c9143e2f93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "408d254e-afaf-474e-81bc-bee0635a5447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceb4b92c-6935-498c-ae60-2b4c666d1e45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ee47e41-f591-4aae-af5e-f30c67e5c3e3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "419e8f67-9c8e-4c9a-a658-eb8474bdb3b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16fd3936-c51f-4d93-aff9-91a0c7dd5ef8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1125cf5-c48e-46e1-adc0-a8161dd72aa8"
            }
          }
        ]
      },
      {
        "id": "2c6266a5-eb9d-437f-903e-293fbc652531",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "907ca4ea-4ceb-49ed-970d-dd601a8e38d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da5fd8c8-d15b-41f0-9eea-67c8cdc89356",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59ef3083-08b5-45f5-8256-0f457fb9087f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584013f1-92f6-4064-8dbf-ec0cad0b3857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f393b324-b373-449e-b418-9799e932d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c6f65-21c2-4036-a39a-812a31d5ba16",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9798da0f-c45b-40ec-b6a1-b7e798f99505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0efa425-fdb4-412a-a1e8-64305af3afc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48941483-049a-415e-835b-f7cdff61a47b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b53988-8c6c-4365-85b8-0a423e5ef7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8372ec6c-05fc-42cf-9028-556ca9356dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f657c2-d4d7-49e5-a85f-19ec9897ad7a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f876cd8b-f286-4d45-8104-989c2b2fefed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1780b7-5414-42ee-8b17-afe7210e9216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d006f4-813e-4f9a-bc62-3a2d8c483edd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b82dafe-d74c-4188-86a5-ef124faf62dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a203aa-6437-4c4c-99d9-bc8e0a0b3b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca2d4a7-9e38-46eb-bcc8-60136acbdcee",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412115ba-7161-4eab-aa19-0a93f2b99e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e8d8c5-aad8-4a3b-87cb-c9e6f92fed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2184a2f-5810-4996-8eaa-83e3756ce1bf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97419483-63ab-4dab-bef1-11d36660f193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aa2915-3562-4ecc-b93c-a9679c2c0550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d45ca5-000f-459d-ad1b-c10b6c519d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a0f961-3406-4d4f-976e-64cf8cdaaa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a084a-27ac-4bbf-bdd7-03fdeded2716",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c115c07-c86e-403c-a98c-90da64c3f749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21986fc-399e-4fd5-9514-a84b543ef909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0894809-cd29-4416-83df-7c4b1053dfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eec440d-2406-465f-aa64-f62b6cd57412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44956e0a-d91c-4d9a-8081-9b1c29a78f01",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0168c8cf-468a-4c19-a0bb-946322a2d247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7675f7c9-096d-4f29-9718-546081c477d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab8420-75d8-41ee-804d-f7af0bc264f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab37a6b-6e89-4feb-8d3e-417d514df093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cabbdf-f3df-4b41-944b-34eddbcd7d78",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb5d44f-407e-4112-9cb7-3cf2dd2311bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da01a332-498d-455b-b0de-cbf8f8166487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fc5d8d-f4eb-4f66-8b2b-6db46e57365b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ecc4b0-e2ee-4128-b5f9-d9fd03a532c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4db310-b16a-4155-be72-da1a2bb39609",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68496c19-5f6c-4507-8ba8-bc032b106aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e50f7e-ba3b-4d74-8634-d97ecf9ec7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d68e07-728b-4fc3-ba45-2b58ef490a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088b7adc-16ae-4529-a90b-6d978c397a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccdc341-060b-4994-af76-5a8c32f02f38",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e1e972-3d11-4bac-b00c-68bb10a63163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139f0fdf-5a92-4e61-a32f-a153bfe3fb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a3377f-6cbb-404d-b369-6e654b28d852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b488e961-9169-49ac-964d-728ca5d79fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9a8306-5896-48f0-abe8-6930c993d111",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132101b0-6caf-4efa-8c50-89b707e84cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d0c585-e47c-4419-b952-05b7526f93a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad74ea6-9a46-4a38-a9f8-e8dfd149e0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9806b4-e638-4239-b7a2-e45f6e4a3d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b3975e-e826-496c-b385-e6907b6de0b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce1571-3155-4af6-808e-5de5aad43ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1761b8-33eb-4dee-adab-caf06d097224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9d42d3-23cf-40b0-8bb9-dc0cb9ac8e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a7ac2c-d7e0-4bd4-899e-bf0128905fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa3b138-cdb4-4cf8-9197-f644ab6d64ac",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6a5936-e55a-475c-bcff-86291fbe15f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725fcc07-0873-41e6-a1d3-414397da7da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf24e45-d723-44a3-b80e-2c9756b432c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402c718b-5e1f-48a8-abc1-23c386660529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2901d20f-1926-430a-9bb4-80e053254716",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32889df8-0fc3-42c4-9820-16c3bfb575f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2fb60ec-7650-49c2-a0db-fe24a7ba9718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89405f81-c78f-4781-ba30-ff8c111d8078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b9434d-8026-4dc7-968b-6a9f6ad25741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e910aa-d0d8-4b27-86e8-2b694e339da3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5b518c-39af-4814-bbd1-d8757b58f027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f91c09-2271-41b7-b5bc-0924c94d8858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2efc882-5f85-4497-9bef-41bd2428214e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e6f50b-0ea1-4474-8a4c-44896731409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeda1bfe-8c25-4ae4-bff7-e8838a574343",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618223f3-3bb1-4c3b-b7a1-a631e3b78a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73406e90-edbf-489e-9039-2dc27ab39b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170c5717-a4f1-4b0c-a6c6-471a5d8d4505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eacbd96-13be-45f0-a1e4-5e21ea353aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9522915-8171-494c-a52b-68b3450f4701",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22414348-47d3-4232-9030-aad69211d36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2375946e-8a77-4a98-892f-8d1a65236d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e590ca80-f973-42d4-b8fb-77ba7322630e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c44f2af-50a5-4ea6-8b98-17df12518ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1714b2c-be49-4d6e-85f3-0e694790fe87",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbeb524-811b-4c35-a382-9e776436277e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28adc61-52d0-4ef0-9236-61242ae44dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926003ad-432f-41e2-9975-78e70e5b2414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4e081c-d260-4bad-8875-b42ace5d41be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0ce184-bd56-4524-abda-ba42ce265cd6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b979a70-cfaf-42ed-8b88-ccc422349be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918cc526-0cea-41f0-a090-74c070121112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f2400-5123-4976-bb87-eb7fca6ea966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8194ba2b-2382-4be2-a17d-8886eb8cf821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561759ff-1890-4a09-91e6-4ca58bd2c47a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ecdd3-8966-4221-a9f7-fb910e0ca86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07632f22-72a6-4b18-bc1e-fd7750ecc204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cebd7cb-0ae5-4c2f-89b3-8652c244cd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc3d1d3-1599-4bb2-af44-1fe0fcec14b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e83cf9-a175-426d-ace8-dff5947e71cc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67ebe3a-a6f4-4deb-be7f-a0bdb79604ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da05e26-3748-4e7a-9bdb-891116d3393f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d733f32-8b4b-4659-85fe-7019a46c0bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b52dd0-b7df-4293-b981-f9463618d1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57957c0d-d80e-4ada-bcf0-1a12058bf99c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dcef47-ecc6-48da-a814-627d26ea86f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be30b3c-6936-4475-9ec2-2ba2fc1546ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a6db2-9e6d-4ac1-8ef4-2af690b6fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755c875d-95cb-469e-9156-dfa6396dffcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a6487c-4783-4f96-82c2-e5ab0c71a625",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd4d042-1052-4292-989f-d2c6681eceb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92a036ec-6bd0-43ff-8162-08a9de9422cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330da3c4-11b5-4430-be46-6ab786423030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131423bc-798f-41f8-81b5-bd8ed960e231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ec59eb-92ad-4ccd-853a-64a7db9eccd7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ba243c-cdc8-4717-b2ca-b044a75577aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25d961a-4ca5-4e2c-9fb2-839c6938f24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a397db7d-acbb-4c4f-9d0b-7c5c9566d426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6222720f-bb11-40c4-95d9-a99abeef9877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8859462-f773-42cc-828d-7c7bfcb2d396",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1241b299-f6ee-4dab-bae7-2da4ed8ab632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e425ae2-278a-4919-ba1e-96b45ab3e310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2fb630-7053-438e-8e2b-3a9df10205ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364e7c0a-2cb7-469a-b227-84d0d0bb114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221896a5-7146-40e4-8e10-1386fb6ad98a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51db7742-4c66-4ec8-a4ff-718a7c2574ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf88f450-5273-4a26-a5b3-5eb6f2108df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7033de30-a935-48cb-99f2-e5bab2239931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b81e8bb-9181-4043-abfb-9111f4db2052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407594cf-e8a4-4279-b833-28de637f12bc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366552eb-9eee-4494-8e49-622888bc9c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eefb8a57-3468-4da5-b0f9-052003df0ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542412fe-224b-417a-a8f6-702a7dc4e39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890520b3-9b91-493a-b059-73aad4501582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a98f61-e475-447d-ba46-859b46beaaa7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e7641-1317-4dde-9b0c-d6b15beddbe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e31f54f-4260-4494-809e-c9471edfeb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4501d439-4661-4fb5-8667-5b836e524679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08b97ac-d315-41c6-bd5c-0358f1b0689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf29c39-9ace-4b20-882d-47df9a1d2fb9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113d2579-880d-4e31-9e23-e52e502fb4ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eccc0a7-8b7e-4490-bec6-b871afb974e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7cc663-5305-4dc0-972e-f020704ce5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91298bd4-bb82-46ff-8d8e-bf0297490f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a519cc2-f280-4f04-98b3-457c239a8acc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f17bb90-33fa-4956-995c-76ef840ea013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a86a2eb-77ed-42e7-8cfe-028137afda71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0014be34-13a1-43f0-b301-f5d6cfde72de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfa3620-22d8-4b15-a046-9119aa703b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0e93a9-0a30-4ace-8d96-f9788dc63da4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026c3744-9271-41aa-a675-9fd509172683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08c5592-ae42-433d-9a37-5771c1cb9710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68145f1b-e0cf-464c-be29-355e9f22233d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca7570b-2be2-4ce1-821f-fde52ac9423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3de1f2-515d-4b63-b26d-cd2b995879ac",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5008e039-d0b3-404c-b683-466e0512811b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c005553-bd38-47af-80d0-38ce0951f855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a611115d-5259-4f0b-bb98-966e3f5abc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad20f598-43af-449a-8557-d4a2d7f60098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0279224-52fe-4612-9c76-adf2da4ae93f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5254ecb-1753-4f34-bb6f-22daf19d69a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166b5168-6546-43ba-888a-8df5b8dd33cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7c5d65-a3b2-4cb7-943b-6ac6cbeb347d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe81e639-be5a-4361-bfd6-a9d62cd3789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5173a501-4af6-45f1-b4bf-31b03bad63c7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2426f-34f3-44e5-8092-83c3caaffd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f4760c-3c58-4d7a-81ee-47bd58fe5a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9726548-0f9b-4df7-83a2-240c1040f273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3299d4-f2d2-4309-aede-e5f31a9d13c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f2c749-4576-4d8e-b8ef-dc1495944673",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbbd364-43c6-402d-9842-81fb09e48f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b87713-4758-475e-94a5-5cec44e5a19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbfa721-6857-4bba-a50c-fa9e58b134bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f000e3-bf56-47a5-b74b-290fcf04abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8ef8b0-5b81-4fba-9730-070d6f196a67",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34d24a7-8960-4242-b1c2-656374e88e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a848ae-abf8-4376-a78b-93a7fef3524d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb33e5-0d25-475d-9ede-9310e88d0a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7efe94c-a796-40f7-8c96-d6c57e35ab7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bad81d-ddde-4964-b90a-bf01a86e68c8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ef8c82-608b-4f84-8c71-0102ccd12a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f67282-1815-4216-a44c-24ae885b3e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc939d8c-fa6a-4ee6-be30-51875ad0eeaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc79c67-6bb5-4459-90d1-03a492c31a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e142c92d-6f15-4a04-9f74-cb96768f2743",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee29f295-0230-4acc-82f7-f5f3734905a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386cbb2a-e3d7-4543-9d9b-942104940004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0faa8b-bb10-4df3-87ce-54f41b5ef42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a172403-4c4a-4a0b-a09f-81e36a05cc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4336f84-4a22-4fd5-897a-05e45487a35c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32196960-c830-47a2-aa25-096c346426a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba2ac12-93ab-4f21-8105-38e2389c4da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5220dbd-e30b-4401-b91d-e2ecc3702434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a13d518-352c-4f4d-9328-c591ba9e5464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4588ca80-12e1-40b0-a32d-89f13b891f20",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb31b0f5-ff82-4f1b-85b6-38dc1ccadc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dff0ba-4ebc-4237-bbc3-6e6fa9cbbea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3775af10-a67d-483a-9328-03b7926a241f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662ccafd-2c4f-4716-9a3f-0e606d5c142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a6b87-3b09-4faa-ae1d-4fc23e112024",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891151d4-bd75-4957-8b89-1c21f5afdb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455f9c59-a277-47dd-b261-0f67b6c570d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a87e01-579f-465f-b724-f699d33ff9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bb305c-84cc-43f4-8e99-6345b3146907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6242b-dbee-487f-a131-3259ab670511",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e710feaa-7e77-4562-9a43-23659bbe206c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a317f7-228c-4b22-a674-248329e2eef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5312626-df98-4d06-96c1-9a28cd99deb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86b506b-1ea8-49ff-8fac-0bfa4fcad98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9d497d-6269-4cd2-bf37-b73691bfb03f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b5e6a7-7784-42be-8434-10e72018f93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5d7bf1-dade-46cf-b1f5-b389fa8fa14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a9945a-a03f-4f62-9b0c-d9144d01d697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc5604b-59d5-40ed-8d22-2e121da38bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94962b85-0487-4652-b6d9-bc06c54ee2a3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ce6923-a2dd-4a17-8e4b-45f7d6d3c07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5585573-0def-4d90-a2ac-e6d5b6f40dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5fb64b-1f43-4766-b798-a25d356876bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d1cc75-07b6-41cc-b936-123cabf46f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d874487c-34a6-4910-b93d-83933506028a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9bb539-a1ce-41e6-a279-f1d61b2436f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7eab47-b5da-404c-b302-d31e5d030269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f41a2de-9781-41a0-8e99-b261e2c0bee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82738f29-bf61-460c-a546-039298815d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147aeabd-ae51-4a35-9d66-8817e0d5d060",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f16422-8ba4-468d-976c-d929c10e5759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488ab573-abb7-4d48-aaa7-466efacfbf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2da7a8d-e75b-4a77-b1e4-b0de89b9bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfddd5d-4867-4677-a9e0-db4954908f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b089cc7c-2b2b-43e4-bb9e-a0999c3950f9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43625ca3-6f48-44ad-b9cd-9c7bafa1ac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821bc203-3c80-4424-84b8-ebfac6a15bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c191a87a-484c-4456-8b4d-afbd82a22934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68acbde-e1f0-481a-abc1-d2fc67c0b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c0aaec-d3c7-4c00-ab98-03ebc0a7154a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9daebd-b9cb-4160-8168-2eb39d266c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9765eaea-68aa-4d7d-9d28-6f2081daaf9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dd766f-907f-4983-9bc0-813d94c1ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d8eaf-8fef-4eab-86cb-fc4d25895006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12c6518-565e-46df-853d-6337b7d7ed30",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34acdb09-40a3-40c7-8783-6c367695c276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a871158-f893-437b-bc5a-3da659004c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aae211-c694-4254-ae96-68ad5e24eef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da44e070-a55f-40d9-8589-8c4a0e284c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa27369e-9dcc-40d3-a3c0-24e16562f409",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4754b7-ccab-491c-9df9-c0ba6e77ee04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdf1ae4-3b64-4d35-bbbd-b364a80124cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cfe3f6-c888-4bf7-8234-66e2201de0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a08e84-b920-45ff-b0ee-e2bbc6ede3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c42c04-a732-4cc0-ae00-9fb5a0009223",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4b9cd-3754-4ed5-b697-31fa7cb1a60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722a8902-9eec-4714-bea2-4295a2d0c417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e5c80b-988d-4486-85f6-cf94103ac78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2946fe3c-4e34-4562-9974-78255eb3de4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04f6a32-f395-4f8c-8a25-ce13fee0b757",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd713d2-b0e5-4d73-921e-164fea708560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df0643f-c648-4e1c-b447-c36559d39015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e0dc33-a9c9-470f-9c5c-091a4f937a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de227cc0-49dc-4a6a-a289-7c6c0e822d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3786adf-8642-4af2-b2c8-1f3a1702d651",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17edbe0e-a1a6-4be5-9640-c084ea6cb8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f4efdf-bb88-41c8-ba10-0a68281a8d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffd4c5c-992e-4d39-a75e-5b952bd5a8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c253f5a9-7748-408f-883a-4a71ce076840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d56678-ea40-4e55-8048-ebc9d3485c3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d563e5-7b6a-4bfe-ac2b-d7e97eaccb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d23b9a-eb06-4181-903d-85dcd2d5aad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e67f4-c6c5-45ac-a5d9-7ff5ae4b7407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358ce991-e923-4aa8-a607-9e55da39fb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a39fed-d6b3-49bf-abb4-19e76a75b030",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc37200d-eef1-4bef-8730-45b8e5cb127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b8f423-9451-45fb-a997-d4c887650bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5169f42d-981d-4828-bf4e-b1fd6a70e6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508a8823-ff30-4e4f-b4e3-0e7c4230c33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dd8e63-da0f-46ab-9a37-2227d68fdabd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0507fc41-0777-4d1b-b3b1-db918c3c2cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b8606c-a89f-4b21-8d12-8e81340d06a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a2cf6c-54b6-4794-b67c-1b19fb89c354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cda0ac-9fc4-4506-85f5-973084b165e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd72d6c-1640-48d9-8e10-1f9ecc705f17",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc20f6-be6c-4618-965e-cb1795a22309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734e605a-59e7-45e4-b679-3d536b6da594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75844f2-b4f6-46d6-a1f1-fd2d6cc4131b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bc8bf3-5c29-4a94-be8e-887b6cb9ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2264f3c-b160-41fb-9662-60a8406959d7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5784a3-1c7c-43a9-828a-fd54517cb054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3cb306-8fa0-4a9c-ad89-95df72f11fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952c4ea3-a4df-400e-a208-e208f012497d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e71724c-36e5-4fe6-bc2f-a2b2efe899a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d901169-5523-4189-97ab-175dd6cb52d5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5688f454-bbdc-4514-8928-ace82b330020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6363e0de-0dc4-4d88-85e5-2a36304282ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0ddc6f-8c06-40b6-a65d-b4a7d7b76f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857aad7d-ee96-48a9-8169-d64725603dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f15ff2f-0038-4a8a-a33c-ec3e94092be8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e0083a-fac8-42fd-b4d1-4810ded87e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b51a04-cfe7-4940-a656-7499155a2717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840176f-8fb1-4862-8148-9654d1650b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d9b25e-844b-40d8-8cc3-ec920d13cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8d211a-ee9a-404d-a8c2-ec18f76ed8aa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61817d9-f7a3-4e19-b66f-1906f27b1099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc1bb69-529e-4f23-a382-707b555fdffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def00e6a-9f46-40a4-825e-3b1ee9db88bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9d8274-5ce5-4f38-bce8-4e552db19b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb76ab5-fbe3-4d5b-96f3-ebf61226072a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c85bd96-ab4e-4517-b05f-ceb173961391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46cf7ab-6aaf-4a05-ba0b-e05bac984ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bbced1-642f-4061-9594-b8a496d07513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1f4b2a-f54b-4b6d-a02a-932c1453f6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d5e11c-8ee7-4e02-999d-7ae90aa927b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de48cf19-5c24-478a-9e25-2d8695d5cd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974ecfe0-cbd1-495d-a73e-1d6f54baffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4eb1e3-aee4-4c8e-ba74-5384071c6d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9e73e0-7746-4744-9561-ed3b4befe91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a19e864-7254-42ad-b3be-02cdc8996392",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f9492e-4218-40f6-91ba-ca3f081ff034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec2d692-5ed7-496d-8ced-441a84d61eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030db91-071c-4a91-9616-6d3f0d849278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2abdfe7-0224-4a5d-9ee2-6e70893e1d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8196c5-9032-404e-9097-c6349efd193d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0411631b-227e-4ddf-ae25-b984f903b543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b04a25-99ee-44d8-aa55-2c8b70a04f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccce072-8978-4e16-b902-a2f75414cb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df406b0-57b3-469a-9573-4650ea435031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce223971-dd61-45f8-8b3c-d9e1845b4785",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb48aa20-d790-4a5c-beeb-70eb99f9e91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e67e91-eba5-4abf-93fc-3d2119aab8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74c75d4-1123-4dfa-8dad-0c42f4b668bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85df256-90c2-4789-a279-ce612c3ce007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6abaa9-2665-4f6a-838e-da3866e68585",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187f6125-f8ea-4217-9024-0e33bd8f3bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee580e19-29a5-4560-8c26-086d3a5487eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659d5eac-e642-47e6-9997-b371a0ec0e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7fc0d-72e3-4daa-b39e-b66f9a5f187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f11e241-0f80-400b-a66f-f413ceee5b8b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e662e29d-8549-4092-91ed-e83c87640962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc8c814-6a91-4eeb-a4d6-3ee8c5df4913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10feb3d-d738-4790-bbc7-25100a66ce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89569f4-53e4-479a-a3dc-11c7f04612b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764f5bc5-705e-4a1d-a77b-9060012ca2f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452e65cd-62df-442b-a4cb-cd5c2e17bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60250e4-2201-42de-9134-de325c6bd3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca5db30-9e46-42bf-9705-29f6f61a278b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea44573a-30b7-486f-a798-fd9872a515a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcffca45-44a9-44ea-bc8d-fa5f1f7d3c73",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316719d2-6082-456e-abc4-67fa7d87c03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0f03cc-5caa-42f8-81b1-f2165ce8a46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e15de06-8433-4c0a-a7a6-502f6298dc67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4ed0fb-7a97-4d85-b852-fabb7f5c522f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9585dbc8-7096-4663-b3a4-0155456546f7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8b9d8-5114-45ce-8433-abb71153a1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c68f7e-7b7b-4446-9bdb-27fb7db74df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a15432-6fb1-4e92-a88c-6fcadef90847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857b4c18-a949-40fe-9282-8f2698ded942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b022c2a-a8f1-401d-91a1-34764ae7c2c0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71656aab-0722-412c-ba0c-703fd10aad47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd7f035-050f-4fb6-ae0d-ecc0b146d64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e8e1d5-8e4e-417e-8994-0172e36d29a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4ef311-e4c6-4df3-967b-23ca649c80bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1430adeb-f0b9-430e-bd72-ac9e651fff60",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccadade9-2ebf-40f0-8bdb-66489c44eca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7615622b-a94a-4905-96c7-6f232f6f72d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e80e10-522e-464c-8e6a-381500e013be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69d4a77-7e3a-46c7-a8b4-7f62bed11e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf891ab-b106-44b7-8fcf-1465054f6b3b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ef613e-4625-4648-b35f-7a9ca7cf13bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b23f6e9-d511-4c93-86af-a3b13d44f8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e158bbab-9f70-4a92-8919-e3aae85d46fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32c90e7-98b3-47c1-81a5-aeb7bffad0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea2860f-2ce2-4dc9-a0c2-12e4ac7ffa7d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83233600-15e1-4946-84ce-221e501158a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610aa3aa-5294-4c4a-83a6-7a7b3c579f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b40535-3321-45bc-b4f4-a6bee8cad2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0292019-b015-4b99-807e-9118bef3055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff4211a-207b-4a5f-8c0e-c51a8fe3af12",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b7e7ac-a0a8-4c06-bbfb-b5f7a97924a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664ab8bc-37a5-41fc-a170-5c7c91e85ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9048fe1f-84cd-42c5-b66c-7f9bc6498afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d10194-de20-4412-b7bd-61529083ebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b987c1-92b8-4f78-9d55-4b0e4ea0ae02",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246604e0-6a83-4b8b-83b7-dd98c8d7239d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967c592e-61de-4513-af76-69c2dc1d92ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85534dbc-5ef4-4dc8-af07-4eea7a56cda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce54283-755e-432c-b75e-5f78d478a575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96f4250-c440-49c1-8aa2-611646aefc9c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e0c84-2d9f-4770-b14e-848c407cb60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b693c5-d3bd-45d2-b7c7-54e8b4f366e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52480ca-7c03-4aa1-8c34-3e7aba65549a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe960c4e-bbc5-4cd9-a985-8fb0793bb07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac51034-8270-4b42-bd3e-6ad1ef901bc0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184688cd-bd26-4063-9b33-69f9b8e19e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd926fe-41f7-47f3-9e05-4b42292584e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad5d06-daa4-4b0e-827c-0c47ba4b7797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8cfe1c-5135-40ef-843c-76df8cb4466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2796478d-4616-41d4-b8dd-722c678d670d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9890b77-ab4b-43e4-85a7-78ce56030278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ab62de-a35c-46ee-ba55-74851a35f268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc575efb-3364-49ec-ae18-78147d58f500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515bb282-e953-49a2-bb39-664889dc6a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ca18fe-9c4b-47e2-a01d-9f1caa2ddc34",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd75a5eb-8557-4117-a472-1a5011f00737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcaaeaf4-696b-43d7-bf64-21c2d0f2cfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1662f0-b8f3-4c4d-9b98-1935b1861c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a42413f-0dfe-4f2c-97e0-049e7aa6d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65ac839-b0b6-48e2-b6c1-dba75e7a002c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc663c34-3c64-4985-a9a7-818271f039c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a54d676-affd-4cf4-a263-5991c22aa230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09624508-491c-40ff-a8ce-779c47959b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2032654-29fd-440b-b116-bdf27afc0624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3b963-e2fc-49b8-bccf-7eec4058b039",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02415b79-86fa-4771-9daf-a2a8b3e38c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2852e8f-4c36-45f9-8349-78299fe31b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997608f5-e978-42b1-bdfc-8cc8bd1c964f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f992eddf-30e2-44ed-8ca5-47e23b63d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7400f9f-f3d3-44eb-a91f-f346df3dcdc9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dbca9f-6aa2-41e8-840a-6244f6cdbf26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fe619f-ce4e-46de-ab16-66b1f2745a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca560e5-34ec-48ac-a9e0-686d73b285b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52be0b9-d4e7-4d37-bd1f-c190e9a49449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed751fa-8982-40a0-b491-d056a7560709",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb141ed-60a8-4d42-8196-34055fd4ce8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56068db-d584-427b-9f24-bab4b9d67bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975a89ef-10ff-40db-aa23-582ea4a800ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62d6e23-daf9-45fa-99ea-7700b1dc430e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b196c1ca-9fab-4f86-9c4d-d5111b60c3e4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c930024d-a8e7-417e-a3d0-e8023b6cf058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6c03c5-95ed-4a72-8e81-6096e0b3b734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b525929-bce3-49ac-9f0c-ebd1966d0437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a4c38a-d253-4181-a4be-c26b1bef803f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a44cb9f-16ed-431a-afee-1d38741bc1ca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6318add6-1690-4f7b-b89a-568df3c48828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f949a1c9-3826-43f6-8af4-cc9b9e3b780a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886b4d58-4fd1-4923-ab72-0561c8d58da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556a5e95-30c3-4238-9f6a-7d401211b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528fab23-5d93-4dcc-9078-46c86f9711f7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931764f-3956-4692-82cb-68c410c6b525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e88ab0-2a77-42c5-b0da-1b44e0e77877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420ab81a-6a9a-4370-9d9d-261eb9380e46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbcdf6e-3dea-4286-9acc-799678e217ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ea8f63-9c52-4985-9d9a-b0a030050e3e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ea2735-be3f-47d8-9126-f7ae07796b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a756a6-4cf4-4b96-912f-9afd20c826aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f056990a-633e-4b15-840c-b3e54be5d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96ed0ee-7f70-47d6-8fb9-39ee12e2357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4142e817-c208-4849-8402-4d009b5c7030",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5eb930-ac2e-49d0-a85a-16ebea5635de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b552c2c-ea49-40e9-8ec5-a9d4a5f600f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35d5ba5-a375-4fdf-8cfa-943e790f9c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe316c7f-4680-4644-8466-dfd914eac1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06c370e-111a-49cf-bb03-dd273060cf68",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b34d5da-326d-4a7e-9dc7-629a33bdb75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a775252a-af6d-4483-b1dd-aa2487347e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2d042-b9ba-4568-a696-28cc1b466f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b160517-a2b6-43ac-a9b7-20918d907623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0121bc0-e318-4fc3-86a0-ba9fdd644c41",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383b97d6-3d42-49b2-8d22-b9e6e559057e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61cb3b40-e774-4493-b009-b3675834b369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad2706-062c-4126-8438-d7a7ad4438d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c50ca8d-0eba-40cb-b7de-22934ddc60c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a0bec0-7b24-43eb-b9f0-e8d447b1739c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bcc266-2441-4291-a989-8f84d9282f2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb52c96-7045-4e2c-8c69-a5ab32c9319f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc694340-f7df-44bc-a0cd-1b785c1dc6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0a81b7-9f6a-4418-9924-2298a7fccde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb0399e-7c2c-41f4-ad71-9f09742c3681",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c85cdc-a815-406e-a457-4806f544b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6efa112f-f6a1-4718-ae10-91eea5841dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5954d1c-066e-441a-856e-97f1ebbcd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4ed992-e0d0-4a8c-932f-0f1595108c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdb7253-3c67-4a4c-a7d6-fca81f148f2c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb78606-8b4f-4053-a3c4-2374eca395ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d238ab-63d3-45e4-b722-0f75d58d7f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5046dd00-7cd9-42d3-b685-7188ad7ecb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9029a47e-6253-4502-b54e-44b3dd6d489a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bf84ea3-da34-48c3-a818-5d92b218bae5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3564c325-5288-49f2-9bee-c284015a4db7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe651208-7c65-4eee-bcf9-12194652d098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49198798-f9bc-445c-9be9-ae09ac060e03"
                    }
                  }
                ]
              },
              {
                "id": "c11d84f5-6d80-4831-bf8a-610783163995",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46256b9e-372a-424f-ae89-d7debb8a40e9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f636c2ce-5148-461b-8d8c-0dc123520838",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "df60eb0a-8456-4b36-a42b-f67381c19abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b71404d-aefd-4926-9b44-e8b15c1c9d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d29c38a5-eafe-4559-931a-7cd6accd1d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e48dd9-6d6c-4431-ad13-a3d934044055",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1aa0f-0f83-4c3d-9781-1c64414e31e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a5d28173-4647-462d-b8c4-930a568a2cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256e41d6-63e6-4c83-ad49-cc0cc4bf5b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40ec35b2-2f5e-4aa6-ba3f-43aaa14f0139"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17cc83dc-d7a3-4786-b24a-68a923e4852f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91c3f7ed-a8a0-4ad1-a0c4-84d04317cc41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e0c76f-967d-4c9a-8b31-dbb582e13c91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6e5a0b-ce3c-4dda-9455-1697d36ac954"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "2ff6698d-5f3b-408a-a9e1-36b0c4fef7cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "276b988a-fbee-4fd1-a096-41441d85d4ab",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfa7bba5-ee05-41c0-b380-cf00e90fe8ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "620ef1e1-8e9a-4daa-b252-5bfa9f19928b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b223922a-01b4-4b32-bb6c-62a2381d1d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3f16ca-acf8-4697-990a-ada5178038d9"
                    }
                  }
                ]
              },
              {
                "id": "8329676e-a8d1-43c7-8cb8-95575b565c59",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cbbd848-e37b-414d-a207-1be45c37a4d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc2de3e2-3702-47dc-bd51-a00905c9d990"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaf6b28c-5d61-430d-8443-18bde264c64f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ae86edb-c97f-4822-8dd5-af03c97edd61"
                    }
                  }
                ]
              },
              {
                "id": "2f5815ab-84e6-4973-bdbe-d27485ee371d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "181368ec-6da1-4c50-bbd7-15c21e910bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21042ce7-bf28-4d27-9792-cb67e0af64ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5df4dc2c-a09a-4a94-8635-9a8e55aff125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb49d71c-7907-4da1-a19a-b13c55cd37b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5c7ab63-6786-4313-ab2d-a279b8f2fe8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8b5fc529-016d-439a-8fcf-468c31dc56de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3ec0c6e-b0c3-47a4-b992-5ee4469afe3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37ddb86d-b383-4b35-a605-ef9cab16957d"
            }
          }
        ]
      },
      {
        "id": "70d067bf-e63e-4210-89a0-9c7792efa87b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "22745ca6-a028-49ef-be3f-2716abf133a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4995f963-29f6-4c76-8575-127709bec6ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0296de84-1916-4e21-8e6b-5009eb175337",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "96361329-98bb-4e28-9c92-a064ab6d4f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbece2a0-ceea-4e82-abc5-14e33706474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ae36932-4c2b-4c1a-aaba-9e3a7e08f99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ad033c-bef4-4a55-a561-cf9734f54228",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3293ec9e-189c-4662-b354-e804e51b7525",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "18341e8e-9981-47c6-928b-b16424f055f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b379bf6-076f-43bd-ae6e-7dc219fdbcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff27b27b-4588-4ecc-a897-9dfce3007b9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56dc125c-c137-4d36-a186-25e768363e4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dc72c27-0586-4c2b-bf55-dddec1725e29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef8beec6-e04d-40d1-80b9-8da72eed8992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9cc6f08-dda2-4245-98db-80158c9e4723"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d23c374-f2c8-4f19-ba99-a4235761e3c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e31d284-1475-4332-a458-e6929ba9a10c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a914f407-127b-4122-89a9-61167fa70aeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f99d7c25-f91b-40ef-ac6f-2409f93be7ba"
            }
          }
        ]
      },
      {
        "id": "3bd31df9-fa32-4174-b40a-81d87c277214",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "40e44641-9224-45be-b017-bc9d17c1af66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e957d195-a859-48d5-a9cd-3e48ae0ad886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06064e15-8812-4e94-83d1-7e7c7e3f0e34",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3002efb-f95e-4a6b-ab03-8bd9701224a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "38c449d4-fdfc-4c02-a376-787862a06b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a71109e-c45a-4ae3-a0ec-f225d8dbfdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac08ab6f-853f-4350-aae7-69a1c1dedcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84f472b-a4e5-4d16-abb8-e031e5a4b86f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2c480b-7621-4cf3-a62d-2394fa24a411",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "34d8566f-be1f-4361-a5cb-30e57b6a618f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df0427-74ef-4a84-a392-695c8366a9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a01ec225-bea5-49d4-b105-1700af8d5db6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbc46b4c-c10a-41b8-9b3d-d2765166f373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b17a90d-53b0-4837-9f05-54e0d7182fcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e55b200-1b4c-4579-8d86-08d2de1a66d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08b1edd1-5cf5-4988-85fe-62b7d8c30ac8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59827079-cc18-4846-a165-dda941d3cf7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d7ced099-fe6e-4c81-809f-ce70e6c63fff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5245774-0d85-4e69-9079-5ab60e6ec402",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f96d67ac-0705-49a6-91a9-8d894b572f80"
            }
          }
        ]
      },
      {
        "id": "29988cbc-6d49-4ed3-bb66-80ef3748de27",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "be4eae3f-2752-40cb-a593-af7216caeab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "959f9aed-d5dc-43f1-8a45-e5efb0ac0eb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "271d9cc1-f983-4c89-a479-58341bc356a0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754d039a-eb0a-454e-99ef-eb6a8f403d78",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0640f7b4-f0e1-4fe8-86b3-301ad5ac125f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82597ce8-7dbb-4c8c-b9de-54840473236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1939642d-f05e-4157-ad5e-5a4d607b85de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba741c11-29b9-4d3a-afe2-6e05959337f7",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e04581-c6db-4366-b5c3-25a5ea852f46",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c234a478-03e5-463c-ba33-41d94f1ffbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675e5013-0eb8-40c2-ad12-4699de5997a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7b12ee6-7ec5-4d8d-a188-a4cbcae544c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16bf1b54-aae9-4bd6-a609-82a7d5815db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87ee1325-cc08-439c-aafc-c4c8d25dbf07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2baa23d1-857f-43ac-9f87-d0969c3ce249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31229a56-6944-49ee-84f8-a4494847b303"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28631157-486c-4145-b711-b1ba27ff7138",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5544d0c2-c9bb-4aa5-ab46-14718d94c424"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d63dcb46-7301-4fa4-b938-bad2fcd6259e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6375913a-f67b-462b-9fb8-869069d04361"
            }
          }
        ]
      },
      {
        "id": "5966f9f8-6071-479a-ab5e-4f7a741ef5dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf2df981-8a47-46cc-bb65-5d121f7f9f63",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d0de6cf-c17e-4f06-a9a9-f5c062aae980",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "80c3f64f-8f01-41a8-9b0c-cbe64c8b1ebb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05207006-6ea0-4de4-80b3-06ac208bd6b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d24fc0c-016b-467e-93e7-7a638fbe0669",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 498.22307692307703,
      "responseMin": 10,
      "responseMax": 3193,
      "responseSd": 405.5522780563393,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668214104522,
      "completed": 1668214245268
    },
    "executions": [
      {
        "id": "ca549428-1ee5-4d7f-b724-9f9f3c3d554c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d85e0e3-064b-425d-90a0-64518bba89cb",
          "httpRequestId": "0f07d88d-ac8f-4f39-ada4-e7b3a3a3efa6"
        },
        "item": {
          "id": "ca549428-1ee5-4d7f-b724-9f9f3c3d554c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fbbda791-b686-4581-b4c9-869356404fc8",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "2ca9ebe6-940e-4a3e-a365-6659217887be",
        "cursor": {
          "ref": "3a7580fd-eaf7-4bb9-9a68-8f67f665ffae",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0b6a5aae-ab9a-4385-8ec6-06ea185cad29"
        },
        "item": {
          "id": "2ca9ebe6-940e-4a3e-a365-6659217887be",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27ecfb52-a6cc-4bde-88b7-1620f9acef3d",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "cacdbd72-21f0-465a-985f-c60e44a13d10",
        "cursor": {
          "ref": "b7abfa08-4444-4204-9225-48e57902d60d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d7602c89-972f-4f1c-a151-6a820bb83109"
        },
        "item": {
          "id": "cacdbd72-21f0-465a-985f-c60e44a13d10",
          "name": "did_json"
        },
        "response": {
          "id": "b78d980e-a47b-407c-ae31-88980715378e",
          "status": "OK",
          "code": 200,
          "responseTime": 626,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1585338-4250-4bd7-95c0-302cf42d2969",
        "cursor": {
          "ref": "177d374c-f17a-4041-9b46-65d09997fd32",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc067386-b5a8-4449-ae30-2bafc51aa208"
        },
        "item": {
          "id": "e1585338-4250-4bd7-95c0-302cf42d2969",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab78c87b-93d5-4fce-90d4-60ab6f451e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1585338-4250-4bd7-95c0-302cf42d2969",
        "cursor": {
          "ref": "177d374c-f17a-4041-9b46-65d09997fd32",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fc067386-b5a8-4449-ae30-2bafc51aa208"
        },
        "item": {
          "id": "e1585338-4250-4bd7-95c0-302cf42d2969",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab78c87b-93d5-4fce-90d4-60ab6f451e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cefa497-cd28-4d9b-a105-e40110cb4454",
        "cursor": {
          "ref": "bbbfc145-bef7-414f-93ea-8c190e3f5926",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cdbb4568-3a4c-4d87-96c1-2f8bab36cbc4"
        },
        "item": {
          "id": "8cefa497-cd28-4d9b-a105-e40110cb4454",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "db8ff916-a636-4324-b5ca-29adc4b5271e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 657,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebb9786-4749-42f5-b4c5-61ebd71526c8",
        "cursor": {
          "ref": "e572dec7-d206-483f-b3e0-585b56422d80",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a4f38d23-6472-4258-9d04-b5948027bd60"
        },
        "item": {
          "id": "9ebb9786-4749-42f5-b4c5-61ebd71526c8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f54a1338-a722-44f3-b8ef-9e0473045014",
          "status": "Not Found",
          "code": 404,
          "responseTime": 466,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805e071b-6c92-4987-808e-0a6451fc59f1",
        "cursor": {
          "ref": "92f3f64d-43c4-4ee0-a1e0-9a3dcf218157",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7c3e7a8e-63fa-44a0-abaa-237e94925a72"
        },
        "item": {
          "id": "805e071b-6c92-4987-808e-0a6451fc59f1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ad9ff7b3-dbad-423f-bdfe-331a501135d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e9bf9-a9e0-4960-885c-5b67279455bc",
        "cursor": {
          "ref": "f24c7827-fbbf-43d6-b243-dbaf8f3b9faf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8370beee-4853-451d-bbe1-4113eb084f19"
        },
        "item": {
          "id": "129e9bf9-a9e0-4960-885c-5b67279455bc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d01bcde9-de6e-4391-be5c-5a974b601d83",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 452,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e9bf9-a9e0-4960-885c-5b67279455bc",
        "cursor": {
          "ref": "f24c7827-fbbf-43d6-b243-dbaf8f3b9faf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8370beee-4853-451d-bbe1-4113eb084f19"
        },
        "item": {
          "id": "129e9bf9-a9e0-4960-885c-5b67279455bc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d01bcde9-de6e-4391-be5c-5a974b601d83",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 452,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e2e38-cb93-4b8b-be11-edc9c1e3145b",
        "cursor": {
          "ref": "ea5da556-48b6-4286-982c-9bc2d9f9170a",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "194e33d5-7fa7-4455-85b2-930c6574e8ba"
        },
        "item": {
          "id": "266e2e38-cb93-4b8b-be11-edc9c1e3145b",
          "name": "identifiers"
        },
        "response": {
          "id": "d83519ca-00c9-425d-bbe5-9b7e499662d3",
          "status": "OK",
          "code": 200,
          "responseTime": 688,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a58430-3f6c-4419-b7ee-347916151ba4",
        "cursor": {
          "ref": "900cdb65-95c2-4373-8bc1-8da587b7dcd3",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c044ec77-2c5a-4dc2-bacf-5dd8cdb36488"
        },
        "item": {
          "id": "51a58430-3f6c-4419-b7ee-347916151ba4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65b72229-baf8-48ff-b3a3-a729332f7eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a58430-3f6c-4419-b7ee-347916151ba4",
        "cursor": {
          "ref": "900cdb65-95c2-4373-8bc1-8da587b7dcd3",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c044ec77-2c5a-4dc2-bacf-5dd8cdb36488"
        },
        "item": {
          "id": "51a58430-3f6c-4419-b7ee-347916151ba4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65b72229-baf8-48ff-b3a3-a729332f7eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2314bcc6-6640-46d0-9632-f0c91f0ead9f",
        "cursor": {
          "ref": "c42246aa-b7a2-4139-91db-8811d22b5c75",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c3b50485-facf-42b7-957a-7e9129f0780c"
        },
        "item": {
          "id": "2314bcc6-6640-46d0-9632-f0c91f0ead9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25d4144f-67f7-4b8a-a7a0-32a8b952cf3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f312f2-2f42-4d69-bcf6-1f2fe7b75c8d",
        "cursor": {
          "ref": "785b1340-1ba5-4daa-beaf-4ac064a55b04",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b75262bc-dede-4e37-b154-533018a5b1c1"
        },
        "item": {
          "id": "99f312f2-2f42-4d69-bcf6-1f2fe7b75c8d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d44177e1-d845-43bb-9101-4c72f0661057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d219f0-d486-4623-8a1a-6bafcc57e1a3",
        "cursor": {
          "ref": "ace6b1f3-c0d0-47d3-8def-935be10af5ab",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "144715f6-20b4-4412-a552-d2208d1c1190"
        },
        "item": {
          "id": "02d219f0-d486-4623-8a1a-6bafcc57e1a3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e6973d23-be4d-4098-8e9f-def3023792d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fd27ea-1e05-4e35-ba22-6cf176514c7b",
        "cursor": {
          "ref": "b18b8380-0647-4dd6-98da-4ce54f6dc9a5",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "180086e4-3c60-410e-933a-78812b27b824"
        },
        "item": {
          "id": "52fd27ea-1e05-4e35-ba22-6cf176514c7b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c204b8ea-dd72-42fd-972b-1e0046c9bd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba256940-709f-4915-b4cf-c2f4e59b7e2b",
        "cursor": {
          "ref": "39485236-7f8e-48dc-b887-2fc416b1365d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc6441ed-0b31-4037-8e55-f5819fb53366"
        },
        "item": {
          "id": "ba256940-709f-4915-b4cf-c2f4e59b7e2b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9730580e-3d3b-4059-965a-5cf2cf45aa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ad0c8a-d58a-4e3a-938d-84557673fece",
        "cursor": {
          "ref": "ffcd910c-c6b2-4156-8cdc-8868daa36dde",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9cfef52e-6e8b-4e1f-b70b-e0e6c7d2037f"
        },
        "item": {
          "id": "c5ad0c8a-d58a-4e3a-938d-84557673fece",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "60be22de-8bf5-4115-8a56-a8fae3724c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803e95bf-2706-4b2f-8ef4-94fcbc5a847f",
        "cursor": {
          "ref": "23533c95-4955-4fea-9c93-3806934a7dae",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dbe10e68-491d-4ffa-beae-86dc5f8daab9"
        },
        "item": {
          "id": "803e95bf-2706-4b2f-8ef4-94fcbc5a847f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a0f6c6b0-eefa-46b2-b87a-d9ea27539a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df765ad3-6e33-4f80-a685-1f0db9c6400c",
        "cursor": {
          "ref": "90fcb24d-a9e2-4c18-a9db-3af174314186",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "59398e5c-2aca-4a3a-8860-c0338fbe9e38"
        },
        "item": {
          "id": "df765ad3-6e33-4f80-a685-1f0db9c6400c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1a4964d3-ddab-4d91-8719-328aea45c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c668ba06-687b-4878-bcd1-0e0dd63762f8",
        "cursor": {
          "ref": "58dc0394-7e04-4d53-9ca9-9f07bd377d29",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81638e15-cc1e-4945-8baa-fa39054336a1"
        },
        "item": {
          "id": "c668ba06-687b-4878-bcd1-0e0dd63762f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b4a2f883-b57b-44b9-a342-665133b1374f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d81438-1f5b-414c-aa27-0ff496cb5137",
        "cursor": {
          "ref": "5ca16e46-3075-4519-be6f-b6307e3399d0",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8302614d-1649-444f-beba-cfe9c9ae6050"
        },
        "item": {
          "id": "40d81438-1f5b-414c-aa27-0ff496cb5137",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "276d8819-b574-4e64-a7fb-80a5dbc965b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ab2066-51b0-40d4-b6c0-ef4b64c263be",
        "cursor": {
          "ref": "29c4be66-191f-4dcb-bad8-5bdf8f18d826",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c0b99162-85ba-4aa2-b204-5ff0d07e36c2"
        },
        "item": {
          "id": "30ab2066-51b0-40d4-b6c0-ef4b64c263be",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "baa08a7d-e639-4a13-913f-5c7001d540bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dc2e28-9154-49b6-ad27-c840de6d6bd5",
        "cursor": {
          "ref": "9ae0336e-644f-4953-9578-4a5d5fcd93bb",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3c6f5e84-b7f7-431e-a6c0-55649de584ec"
        },
        "item": {
          "id": "f3dc2e28-9154-49b6-ad27-c840de6d6bd5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8423a274-b6d3-4f96-8774-2c59c8a23c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4b5767-b221-4795-b923-13ee5636e28e",
        "cursor": {
          "ref": "990b9d8e-5abd-40f7-b269-fb64b5803a32",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4d5c7097-21ea-4c70-9911-b50020e9aba6"
        },
        "item": {
          "id": "2c4b5767-b221-4795-b923-13ee5636e28e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b93e10c6-5b99-46a6-b9e7-a433379bd32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ff1dc9-85b5-43b7-bf54-d2cceb5674ec",
        "cursor": {
          "ref": "9cb0e67a-87e3-4fc7-a4e9-ca01621e5305",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4b4d7df8-9472-4fe0-8496-9f34a4cdcab5"
        },
        "item": {
          "id": "15ff1dc9-85b5-43b7-bf54-d2cceb5674ec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c7a5bbf2-2699-42cb-b919-eda8dbab7dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58ebab4-9ba9-473c-9639-5457cc3148eb",
        "cursor": {
          "ref": "2476c8d6-3b6c-4091-8ad0-67c7eacfb397",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ddd9b8ce-7a5f-4ec3-a0ca-956d56ce7f35"
        },
        "item": {
          "id": "f58ebab4-9ba9-473c-9639-5457cc3148eb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c878cf9b-e146-4276-a920-f56f05d8d504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb3ebf8-0c78-4e93-8e55-7aefb4ab09fb",
        "cursor": {
          "ref": "0b6a3eb5-0f5a-48cf-ba24-40d79f3703b0",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "259d30b7-4ed9-475d-be37-529be79648dd"
        },
        "item": {
          "id": "aeb3ebf8-0c78-4e93-8e55-7aefb4ab09fb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2e741b89-d301-4eb8-a0e4-589e2738d24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227b22ea-d32a-4695-8530-137d41d3a6d1",
        "cursor": {
          "ref": "f174f3e8-2046-4fca-be57-5f1e0f4c241a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e188abb9-a340-4aa6-bca7-55625ed4ebb0"
        },
        "item": {
          "id": "227b22ea-d32a-4695-8530-137d41d3a6d1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "36ec368b-309e-49ca-bbdc-7eb09b0050ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c560bf3-561c-45bc-afd9-a90c00f6ba96",
        "cursor": {
          "ref": "283c2764-f8f2-4f35-9267-02574272ef12",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a2a55331-0cb6-4b3d-a46d-11bb07468c81"
        },
        "item": {
          "id": "4c560bf3-561c-45bc-afd9-a90c00f6ba96",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0556313a-3da5-40a0-b773-ec3d90283091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad535e4-677a-4881-ada0-2f07bb8a2bd5",
        "cursor": {
          "ref": "5da62c64-5b16-43fb-bfdc-69560f98c3e5",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "795de728-b867-47fc-aa22-cf2a04f8800d"
        },
        "item": {
          "id": "6ad535e4-677a-4881-ada0-2f07bb8a2bd5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5c365d37-51fa-45b9-a7df-cc6c3d28d824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98f0193-834e-4d04-b7aa-db85c73393fe",
        "cursor": {
          "ref": "9ee4ba58-6f0f-4cac-8487-a236a7d602eb",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d03cf3c0-663a-48b4-8f22-d786b1a9b00c"
        },
        "item": {
          "id": "a98f0193-834e-4d04-b7aa-db85c73393fe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ce1d11fb-d00b-4bbb-900b-10bce78a2f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcae3335-0c1a-4b93-bbca-bc268098b8a8",
        "cursor": {
          "ref": "883fa872-f485-4e3d-8b54-b97f07aabed7",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b7ff734b-5518-429f-9bfe-980b437f26ea"
        },
        "item": {
          "id": "bcae3335-0c1a-4b93-bbca-bc268098b8a8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3d5bcb12-6c14-48ed-bef6-1e4bcd8ccac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b04950-08e8-48d5-bab5-45b1b818ae1c",
        "cursor": {
          "ref": "65b656db-c97f-434a-8182-fc75aa89f468",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a6ed830-4e47-4097-a19b-4405f1a023de"
        },
        "item": {
          "id": "e4b04950-08e8-48d5-bab5-45b1b818ae1c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06a00581-6cc8-4bfd-8341-d5b3d5db358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177349b4-11a4-43d1-8c9b-e7ed771315df",
        "cursor": {
          "ref": "b441503e-0c58-4bc0-a26c-603826a5d227",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "650649a1-5c80-4914-b507-4e2c14ba413e"
        },
        "item": {
          "id": "177349b4-11a4-43d1-8c9b-e7ed771315df",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4dfcb044-5fc3-41e3-9796-7413ef710fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acbbf0-d8eb-4386-8d9f-cba6ecea0bb2",
        "cursor": {
          "ref": "f8064692-2b85-4bd5-8cc7-f24bffdd557e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8408a0c3-ea60-41e2-804b-2be6cf4910d1"
        },
        "item": {
          "id": "e7acbbf0-d8eb-4386-8d9f-cba6ecea0bb2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c76faca4-9a09-49d4-84ae-8cef3dd7e0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089fe4f4-282e-41d9-81c6-947670ca6051",
        "cursor": {
          "ref": "c3bfa942-44c9-4bba-842f-af8229399392",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4bb1d300-99a5-44b0-afc9-2deb5b51f30a"
        },
        "item": {
          "id": "089fe4f4-282e-41d9-81c6-947670ca6051",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "16a141e0-c980-44da-bc88-32f455c0b1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784e41a-db08-4357-9745-1e76b34f515b",
        "cursor": {
          "ref": "a8c4462b-1fd3-4887-a97b-0d0ad6b44ef8",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dc1264a6-753a-4152-a6d6-816bcc5aab1d"
        },
        "item": {
          "id": "8784e41a-db08-4357-9745-1e76b34f515b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9fee5665-7332-4b98-8c22-ba0a69e320fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb63ff-981e-4def-aed5-ccb44776580e",
        "cursor": {
          "ref": "db657308-ef06-47c8-8a67-bce809f5798a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "17a678ce-7941-46dd-93d0-80902ed0ba37"
        },
        "item": {
          "id": "99eb63ff-981e-4def-aed5-ccb44776580e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "63d6dfc4-f15f-4cba-a171-ae65328f12ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e643111b-eb88-4d78-84c3-70fd21146f66",
        "cursor": {
          "ref": "4b65d530-f556-4dcf-b523-8dfde2a9fbaf",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6475150b-5c1f-40d4-8b22-cf9db93a0248"
        },
        "item": {
          "id": "e643111b-eb88-4d78-84c3-70fd21146f66",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "80918af1-4fe3-4665-91b2-4b7ea0e0f784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72876c7d-0de0-40fc-ac64-d1177383060c",
        "cursor": {
          "ref": "c0e86655-9b98-4d4f-b1a7-193161ac5f4f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf5a3a71-535e-432c-814c-ca92dbd1e66e"
        },
        "item": {
          "id": "72876c7d-0de0-40fc-ac64-d1177383060c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "00c630e2-1281-4b6e-9301-378d5f1d5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801654c6-15f9-4eb0-a2c8-2a55931d28e4",
        "cursor": {
          "ref": "55966ec0-d3ee-4179-8ce2-0dfaff1cfe60",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fac48d7e-afbc-45e7-bc24-a67f071d92f0"
        },
        "item": {
          "id": "801654c6-15f9-4eb0-a2c8-2a55931d28e4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02af55bd-94ed-40e6-b669-c93687306490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e84ff8-6cf9-4b62-b54c-aec6130a21a0",
        "cursor": {
          "ref": "45681502-1601-40c0-b50f-0b2bb41c9450",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d5652e2f-dfe1-4f94-bbb5-52ded6c68fd0"
        },
        "item": {
          "id": "b6e84ff8-6cf9-4b62-b54c-aec6130a21a0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "13a3b21e-3c91-4c9a-9f95-5dee327d2e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb91666-b325-4260-b48f-0dff418c271b",
        "cursor": {
          "ref": "36821a1f-a38b-4b65-8441-e4219af3f2c9",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cf7bfc6c-401c-4b9a-9861-a5b8ea0df402"
        },
        "item": {
          "id": "3cb91666-b325-4260-b48f-0dff418c271b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "db4338de-32d3-497e-9eac-d134a820f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f286c4d6-cfdb-44b8-989e-cb4219c857f3",
        "cursor": {
          "ref": "420dfbcb-884f-4a7c-b668-d87694b6af15",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f922ceb2-6770-4016-815d-fe54bcf46542"
        },
        "item": {
          "id": "f286c4d6-cfdb-44b8-989e-cb4219c857f3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f7c20852-dfea-4eff-8fea-3b518fbfffbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc97d4-a76b-4a58-b562-6b02f4694ea0",
        "cursor": {
          "ref": "3928bda9-68a7-4846-be33-c4fe06b1131c",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f2b30721-3cdf-4ee2-8a7f-24ca2b5ae95a"
        },
        "item": {
          "id": "f0bc97d4-a76b-4a58-b562-6b02f4694ea0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b2a754a0-d0aa-4d4c-9576-0af369e5a3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b991abe-5b25-4686-86e4-ccce9f3ec9c3",
        "cursor": {
          "ref": "68746598-759c-4e82-aa01-7767b4ad521a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc16e331-d984-4d46-af99-c5317daa2e19"
        },
        "item": {
          "id": "0b991abe-5b25-4686-86e4-ccce9f3ec9c3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "22c8b41b-73c9-4f54-8dee-0a0197c2a5e6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 518,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83713a62-fbe0-46f5-8ab4-44a9de07bcec",
        "cursor": {
          "ref": "91a4f69c-b9e0-46c3-b5a4-76a061273fc3",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc270254-d5bc-439c-8c68-c519104c637b"
        },
        "item": {
          "id": "83713a62-fbe0-46f5-8ab4-44a9de07bcec",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "afd22b9d-4f4d-471a-bb98-498027241312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69c30d-543b-472c-a96a-7a26ac241f26",
        "cursor": {
          "ref": "b2398f7a-f2ea-4199-a45a-f3d5a06dcc96",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "556f9844-3be8-4eed-9e9b-a39fa1bac592"
        },
        "item": {
          "id": "ef69c30d-543b-472c-a96a-7a26ac241f26",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "59bc561a-475c-4a8f-b996-9d9546841d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6778709f-d491-4c93-aff7-b044c7bb90b0",
        "cursor": {
          "ref": "f8e77b2a-8c74-474f-bc9a-4829ca5d3060",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "461e7d5d-3041-4832-9103-71f44d8a982d"
        },
        "item": {
          "id": "6778709f-d491-4c93-aff7-b044c7bb90b0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dda1d60e-6e18-4d7e-a623-cf40de13d72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ba4d4-c8fc-418f-9b99-e14e75d06afc",
        "cursor": {
          "ref": "726f8f98-9b9d-4af1-8308-583a27aa1e76",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0c43d23e-156e-4113-ae46-2f761db55062"
        },
        "item": {
          "id": "531ba4d4-c8fc-418f-9b99-e14e75d06afc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "675d0fb4-f72d-4ae9-a819-e72e9ea342ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24e1336-d977-4f9a-9d21-32f41b51df58",
        "cursor": {
          "ref": "8386b7c7-40de-4647-9f2f-5d3c62115b1e",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dc00aef6-c096-458f-b554-a70deb7d01dd"
        },
        "item": {
          "id": "d24e1336-d977-4f9a-9d21-32f41b51df58",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64a6d946-6663-44e3-8ec4-47191342ecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bda410-f2e2-4d6f-bcfd-1b44368a77f1",
        "cursor": {
          "ref": "344979ae-6983-4f75-8407-32e74bbcbcff",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6b04027a-0e04-452d-92cd-7ee7147b32b2"
        },
        "item": {
          "id": "44bda410-f2e2-4d6f-bcfd-1b44368a77f1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c679e488-1b0a-4fb1-b113-e992b8675131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cece9b1d-d935-4272-af43-c6bdc227f856",
        "cursor": {
          "ref": "e9608502-b4fc-4d10-89bb-fc32bc7efc61",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "835cf55a-543f-4ddf-ad28-f9f9548df946"
        },
        "item": {
          "id": "cece9b1d-d935-4272-af43-c6bdc227f856",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "00870cf8-7f8d-470e-b221-9bf24de3557a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 534,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681a56ce-dffb-4c9a-bab3-a277b0049d9d",
        "cursor": {
          "ref": "342bd151-b768-4dad-9eea-04c23c276f46",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ff8c0327-87cb-43fa-8b01-db1ee20c7d85"
        },
        "item": {
          "id": "681a56ce-dffb-4c9a-bab3-a277b0049d9d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3419107f-9a07-4004-8164-627d6b9de096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb37423-4e76-4136-ae78-2db304e91d07",
        "cursor": {
          "ref": "9b721c12-a31e-426b-b7ae-008f6397d2ba",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a21ccbd3-1bee-44f0-8d71-e92733d2b5fa"
        },
        "item": {
          "id": "2eb37423-4e76-4136-ae78-2db304e91d07",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2d7ea8b3-6417-44df-bc04-bfd435c27d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0296bd84-7fbc-48ad-8b3f-0b6a16c4be09",
        "cursor": {
          "ref": "f34dae96-562a-436b-b692-431237e6b584",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8f6c3bf-1280-47f5-8e86-8dcc63286133"
        },
        "item": {
          "id": "0296bd84-7fbc-48ad-8b3f-0b6a16c4be09",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3a9812ae-4ed6-45ac-8ecc-f63a8282ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17b441e-1df1-4307-b436-a07478ecdb87",
        "cursor": {
          "ref": "8a6261ba-4eb2-4757-a890-39789b768692",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8ad08c0b-8872-415f-ba93-fc4bfd57798c"
        },
        "item": {
          "id": "b17b441e-1df1-4307-b436-a07478ecdb87",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "30637b23-3beb-4a60-a293-485e7965d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b53bad-0a87-4090-81a6-6fb6d08f9721",
        "cursor": {
          "ref": "113f5d7d-78f7-4e13-ba97-d3ee60b79204",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fbc8640b-8ca5-4b85-9cb2-9181adf6a1ec"
        },
        "item": {
          "id": "47b53bad-0a87-4090-81a6-6fb6d08f9721",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eb0f9e21-4091-436f-b10a-2c23eafeda15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a159e-d6c3-43a2-9fa2-f0c7525f07e7",
        "cursor": {
          "ref": "1fdc302a-6c6f-4cc3-93bd-4adcd27b5041",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6dfc7595-cc51-49da-bb0f-62100bf39b8c"
        },
        "item": {
          "id": "c53a159e-d6c3-43a2-9fa2-f0c7525f07e7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8f46d529-d7b5-4722-8d06-9766adbfbe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57313d0f-96ab-4a51-a91e-c1583644ab61",
        "cursor": {
          "ref": "17c8608b-482b-4b07-bada-f2750074fd1b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91213d90-ad14-4fb4-b9ef-660bbfe66081"
        },
        "item": {
          "id": "57313d0f-96ab-4a51-a91e-c1583644ab61",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "82f85b67-666d-4758-ac02-e6d00085420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f25a81c-bcfb-4085-a42e-59b876231236",
        "cursor": {
          "ref": "07dfd698-f1bc-4c5d-b3dd-9e689d72bb55",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e81f4ce7-a9f0-4312-89fa-3fdd0dc8f553"
        },
        "item": {
          "id": "7f25a81c-bcfb-4085-a42e-59b876231236",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dfd18d4a-771b-4550-9360-3a41b9653a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caef41e-67ad-4141-a514-1cdd8adaa91f",
        "cursor": {
          "ref": "22ea4123-1d0d-4d01-8fc4-dd027318d7e5",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ddafa143-70f8-4a5f-be26-4ddf6ce200d1"
        },
        "item": {
          "id": "3caef41e-67ad-4141-a514-1cdd8adaa91f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8df0c467-d149-4706-836f-a9a79c8355f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c5dff3-3563-4b72-af7a-fb2e396ddcff",
        "cursor": {
          "ref": "141560f9-b1ce-401b-bd58-fd4e1b3a0c55",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "221f417a-d35b-4024-b9f7-cc9d056d5a5e"
        },
        "item": {
          "id": "e8c5dff3-3563-4b72-af7a-fb2e396ddcff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a76c0f01-fadb-4d06-a779-73defc15000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eabb28b-ba4b-489d-82a8-a912ebb5885d",
        "cursor": {
          "ref": "4c005a05-e99e-4df2-97cc-a7364a8859df",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d599e022-adcf-4315-ad11-61bb68d5e464"
        },
        "item": {
          "id": "8eabb28b-ba4b-489d-82a8-a912ebb5885d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ccc20cf4-7ab8-4625-a197-49cba0801f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38486bd-9a3c-49b6-a98c-5f78ff61bc99",
        "cursor": {
          "ref": "fc4d8e01-4e6f-4d0a-aa40-2f3eebd14da5",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "182ad91d-dfa0-4573-93bb-916c541df611"
        },
        "item": {
          "id": "a38486bd-9a3c-49b6-a98c-5f78ff61bc99",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e042db6f-135a-4297-9f6d-3fd0702c14d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fee2784-583b-44b2-9150-ddf946bf20d2",
        "cursor": {
          "ref": "927eae14-3e5c-4f3e-b6fc-c7bc104a722c",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f2ff3589-0263-4f57-8a38-73d9e46d18b1"
        },
        "item": {
          "id": "0fee2784-583b-44b2-9150-ddf946bf20d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "37ce6cd3-9fdb-4300-a193-a2588c6ae174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee22981-34b6-4a2d-92a8-19a06306fcdc",
        "cursor": {
          "ref": "75c526be-d3ab-4c81-a2c9-fdfb9f739922",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2873652e-8240-48a2-a9b5-3436987e4886"
        },
        "item": {
          "id": "9ee22981-34b6-4a2d-92a8-19a06306fcdc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c2a924fc-7ca0-4572-aad7-d46e153f60e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484d42f7-f75d-4bd0-84a4-78e846fff5d6",
        "cursor": {
          "ref": "f94276f6-c1cd-4d3b-ab4d-01dbc4c79336",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ce334d5f-165b-4baf-b1ca-903ab01cbc26"
        },
        "item": {
          "id": "484d42f7-f75d-4bd0-84a4-78e846fff5d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "97daab99-b3f6-493d-a053-26eee1ff62aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a305221-23d6-4b44-9e70-ecd3c0e0bd7d",
        "cursor": {
          "ref": "fad8eeeb-d008-4e5a-a97e-036d69bb7690",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5f90c626-8fc3-4091-80ca-567ee2d6df2d"
        },
        "item": {
          "id": "9a305221-23d6-4b44-9e70-ecd3c0e0bd7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1c3a1a1-a323-4a9c-895a-ef554039af8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d0e0fd-deb7-4ede-8905-4e67c07d280d",
        "cursor": {
          "ref": "0a3731a2-ace9-49f0-8355-daaef55844d8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "54c02949-eecf-41f0-943c-bb04f687c82c"
        },
        "item": {
          "id": "f2d0e0fd-deb7-4ede-8905-4e67c07d280d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b633e96e-33de-47e3-8ea2-a6a6f77e371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea675b3-49d7-4d36-ab52-85550bae3c44",
        "cursor": {
          "ref": "93b0d7cc-ad8d-461b-8fd0-3ae96039c324",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bfbc0457-4392-48aa-8ca6-2ead07bc2d23"
        },
        "item": {
          "id": "bea675b3-49d7-4d36-ab52-85550bae3c44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b6cf7530-c35b-40a0-ac72-404ff47fb55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f929a31-7b0f-419b-967f-564c2fc92b48",
        "cursor": {
          "ref": "26fd7477-7cda-4ab1-819d-e29504290e51",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "303873e3-d912-4dc2-9b60-394c3b5924bc"
        },
        "item": {
          "id": "1f929a31-7b0f-419b-967f-564c2fc92b48",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6a2e7f32-86d2-4ca9-9c13-53ed26416839",
          "status": "Created",
          "code": 201,
          "responseTime": 2329,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "096a11de-75fb-40ad-907c-d53f746457c0",
        "cursor": {
          "ref": "da56606b-143e-41ac-b5ec-8d2d628df98d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "84045989-8700-4fbb-9550-9476c17e1f6d"
        },
        "item": {
          "id": "096a11de-75fb-40ad-907c-d53f746457c0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "41eb7661-891b-4b62-996d-10f677c30cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcc73e9-18dc-43cd-81db-13e3e11ebdfb",
        "cursor": {
          "ref": "951ec8a4-6adb-4f02-8254-a6dda465f5c8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "26e20a67-9254-49b8-af72-817f19acf8fb"
        },
        "item": {
          "id": "7dcc73e9-18dc-43cd-81db-13e3e11ebdfb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3e730e5b-4f69-4df6-81e7-06f47793c11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b776976d-58d5-4f2c-aebf-d1b5b89d03b7",
        "cursor": {
          "ref": "fb5b64bf-498c-41db-b767-791e399a7269",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "411fa17e-639e-4f0e-8ced-5072535b4216"
        },
        "item": {
          "id": "b776976d-58d5-4f2c-aebf-d1b5b89d03b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "29b3cb29-dfa9-4cba-b4f1-392b9565d49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed72b9d-79e9-4d21-8a22-9919cdb25c04",
        "cursor": {
          "ref": "29570094-2f5b-49f1-99b9-b268617150c3",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50025c9b-fc82-47e2-8038-6aded279aab1"
        },
        "item": {
          "id": "4ed72b9d-79e9-4d21-8a22-9919cdb25c04",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5585a87d-7762-4588-9bca-3d15fc453dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e8604-29b2-44bb-942b-a8aa157e398c",
        "cursor": {
          "ref": "c75fdca5-604e-4d14-85e2-e36907a07ac0",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "035f429e-57ea-4b19-b6e8-0b2b4c80eb8f"
        },
        "item": {
          "id": "929e8604-29b2-44bb-942b-a8aa157e398c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eada9947-042a-4731-a666-33b95eabf5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edab366c-c07e-4a48-9ce2-a619d86418ba",
        "cursor": {
          "ref": "362681c1-96f0-4581-a763-9401069fe6cb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5ee74fcd-7a80-4d75-b9b7-371eb1ad1bf3"
        },
        "item": {
          "id": "edab366c-c07e-4a48-9ce2-a619d86418ba",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e8f3446c-3aa7-454d-b331-9a526c44ba30",
          "status": "Created",
          "code": 201,
          "responseTime": 1933,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "ef661fc5-719d-4895-8332-3518788eb96b",
        "cursor": {
          "ref": "f4780547-0f5d-4ca8-ba9a-91f1764cefb3",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "58f39547-f369-42f6-8dc6-6263e91a92a5"
        },
        "item": {
          "id": "ef661fc5-719d-4895-8332-3518788eb96b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ef5c6343-132a-43be-b155-50d38b557e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89060a9-fb4f-4637-a14c-9f966512064a",
        "cursor": {
          "ref": "900711d7-7573-4e94-9dc6-eb5e8a80cc5e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fbf5a1e9-e3b5-45b2-976a-f148c13ad8f3"
        },
        "item": {
          "id": "c89060a9-fb4f-4637-a14c-9f966512064a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "036f8f79-6b45-4c5b-89b9-7f21243deda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d4285d-5855-457e-8cc2-ae0ecce220c1",
        "cursor": {
          "ref": "bd18a001-af2f-4b42-9598-6c1086f92a12",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b8f54ad6-d56f-4ca4-88a9-9f3c6f2d329a"
        },
        "item": {
          "id": "54d4285d-5855-457e-8cc2-ae0ecce220c1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3380ccba-a6aa-4e10-a8e2-bd462dae0a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92aa351-668e-4583-91bb-a0c67dd79fc0",
        "cursor": {
          "ref": "5a465c12-5556-402c-9c3a-ecc2d14c96bc",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cbe59a0c-58e6-4158-a421-63fb6d5be225"
        },
        "item": {
          "id": "c92aa351-668e-4583-91bb-a0c67dd79fc0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e8f5feaf-b385-4ebe-8f8b-91a79734b773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b21ce9-de8a-4306-ae3b-138e44ebffa3",
        "cursor": {
          "ref": "1b0be07b-fedf-42f9-bf30-7bc87e38d226",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c9de69ba-a61b-438e-aaac-c52f11c369ea"
        },
        "item": {
          "id": "01b21ce9-de8a-4306-ae3b-138e44ebffa3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9ce9a710-4cf7-40a6-9093-ba8912948255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1bcd06-01cc-45f3-bc93-d155fd427c98",
        "cursor": {
          "ref": "25fd197b-353c-4689-9169-97c1b3314038",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0a8929ae-ed81-499b-b434-28579c05f7c7"
        },
        "item": {
          "id": "8d1bcd06-01cc-45f3-bc93-d155fd427c98",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "07c5003f-275e-4036-9335-1ec81b62944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1210,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82b8988-6175-4578-842b-be871dab3f64",
        "cursor": {
          "ref": "63874053-1fdc-4fec-9505-910083c6735e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fd78d04f-952c-48fb-abfd-793cf3f82e17"
        },
        "item": {
          "id": "a82b8988-6175-4578-842b-be871dab3f64",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6c15635-826f-4b0d-a8a5-278341cce64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b21c35-b967-482f-87c3-576ddde465b7",
        "cursor": {
          "ref": "aad770e1-da1e-4fad-89ba-88d4f62db377",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "03df0fe3-01f3-49a4-84b1-2529ab6b05ea"
        },
        "item": {
          "id": "08b21c35-b967-482f-87c3-576ddde465b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "94db6402-e0f6-43fc-94f1-0957d51cf058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b87b1d-24e3-48b2-8f22-af4a731fd114",
        "cursor": {
          "ref": "bcaaceb5-4ef9-4b68-aea8-dee69ac27c8f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4df6656a-f60a-4d78-b33f-900d21af6e6a"
        },
        "item": {
          "id": "79b87b1d-24e3-48b2-8f22-af4a731fd114",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3dc22d42-2c58-4405-9653-e27d95e70e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d36d87-acd8-4af6-94c5-bf9e5bddba44",
        "cursor": {
          "ref": "52328463-d1be-45ff-9488-a47f3c0cd6e9",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "be4eb8e4-2d6c-4f58-b104-e45540c7771c"
        },
        "item": {
          "id": "07d36d87-acd8-4af6-94c5-bf9e5bddba44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e9ec22d7-3cca-49ff-868c-f6f4ea2bbdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c1d42e-b393-4b56-b654-febeee5b0f78",
        "cursor": {
          "ref": "831688d5-0c7b-4d55-93c6-f20b3727907e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b90829d8-108d-45ac-bb0e-83f7bea4c347"
        },
        "item": {
          "id": "58c1d42e-b393-4b56-b654-febeee5b0f78",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "76a01364-bb0b-465e-a31a-5ec3811dfef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9645a9f-be6b-4c31-b9f7-0221a4efec1b",
        "cursor": {
          "ref": "90ce1d9e-6e79-4d65-9921-1c86e8212564",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "24f52a7c-48e7-4950-bd5b-bd03f53d0eec"
        },
        "item": {
          "id": "b9645a9f-be6b-4c31-b9f7-0221a4efec1b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36439310-1aa8-4ccc-8f6d-773cdef00b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa89fea0-a20a-4752-b20e-442c2596667c",
        "cursor": {
          "ref": "6b222141-634b-4023-852d-c0d17ac45a1c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "013aa115-0a85-479e-acbf-800ca9750722"
        },
        "item": {
          "id": "aa89fea0-a20a-4752-b20e-442c2596667c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "584983e1-815b-45ae-a256-08c21311bd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f48b1a-b351-4135-a16e-b29d4ad598fa",
        "cursor": {
          "ref": "cd30cae7-94e8-4d45-9f6b-73a517f508bc",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d28a52df-b09b-409d-958b-c36cea561ed2"
        },
        "item": {
          "id": "e7f48b1a-b351-4135-a16e-b29d4ad598fa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2760ad6e-d447-492e-b8e2-b560d7c5ef9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ff78e-753f-4d14-920d-0724c136612f",
        "cursor": {
          "ref": "80f618ef-f6b5-4aee-9926-2aca80d4e02d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88ae28fe-4ac9-4478-9d82-a73610eea36f"
        },
        "item": {
          "id": "1d7ff78e-753f-4d14-920d-0724c136612f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "98dbe6e6-6a90-4669-8158-ed04ee5cf314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4e80f2-7fa0-4661-b45e-3c8e8a5d6ecb",
        "cursor": {
          "ref": "a6b8ae61-067f-4fff-8e87-64fef4c2c008",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9a17cca6-6f56-4431-b1b5-394f14d4787a"
        },
        "item": {
          "id": "6e4e80f2-7fa0-4661-b45e-3c8e8a5d6ecb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "53dc32b6-a01b-4473-816c-26407ac55901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5609b94-8c0c-4990-8136-44d57c7cb40b",
        "cursor": {
          "ref": "8b16a55f-0266-4a70-99a6-2bd4a36d0ab8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d7e7b92-a5d6-4302-ba51-108b59e8f558"
        },
        "item": {
          "id": "e5609b94-8c0c-4990-8136-44d57c7cb40b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5c5663c-f389-4392-af3d-3beffc1ac946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc7158-2d1e-44d8-8706-715d1ce2bd26",
        "cursor": {
          "ref": "f971cfcd-8d39-409a-8af3-675bb01ccd94",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "72ebf4aa-e4b1-47eb-b64b-b4f05bdaef0a"
        },
        "item": {
          "id": "f8dc7158-2d1e-44d8-8706-715d1ce2bd26",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "da6e7120-0bf5-4f85-9a50-d4454f153fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9fbe16-ab11-467c-a5f3-4cc02c1f1c33",
        "cursor": {
          "ref": "0677a003-9889-4d99-b0dc-83a146b3cec4",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98a08558-cbf3-4714-98f5-65a5e4428a6a"
        },
        "item": {
          "id": "2e9fbe16-ab11-467c-a5f3-4cc02c1f1c33",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "033b5b51-2185-4acc-bb61-59402aeb430e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5efd4-8426-4629-8a32-20124b07346a",
        "cursor": {
          "ref": "9e9ffe82-674b-456b-810c-0c7de4c60582",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc154828-f09d-4041-907b-eb7ab0f3e55e"
        },
        "item": {
          "id": "19d5efd4-8426-4629-8a32-20124b07346a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9601ae5d-316d-472d-87bd-1ffb3fb68eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a07ae5-53dd-4d8d-98e3-a690c86eac02",
        "cursor": {
          "ref": "5d481c5c-09d3-4597-84a4-2eadf207e34b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "010eeb83-3c42-47a2-8e4a-2011014c9500"
        },
        "item": {
          "id": "48a07ae5-53dd-4d8d-98e3-a690c86eac02",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1d2fc2d4-9908-434e-a8a6-f9c82d292b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de667a87-0c85-431d-a122-0ff442a7c21c",
        "cursor": {
          "ref": "dc8b6cb7-dcf1-4100-a702-97ca81c2b40e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5ffe1b4a-55bf-4d3d-9ba7-a290929a1f6a"
        },
        "item": {
          "id": "de667a87-0c85-431d-a122-0ff442a7c21c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "44997282-05c3-41d4-b157-6930383a0c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774cfe55-c4d0-4e35-9412-6702e7ee05c0",
        "cursor": {
          "ref": "04889134-93a7-41d5-b87c-e52d0b7db08f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "736fa523-36f6-4fea-8d36-63c9734936b0"
        },
        "item": {
          "id": "774cfe55-c4d0-4e35-9412-6702e7ee05c0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "193ba280-cce7-413d-af8c-3271cfd30897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442745d4-2d9c-4474-8b60-7d0d527ddf93",
        "cursor": {
          "ref": "22dfb6db-e21c-4636-8395-9514b6cce277",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "57f037e8-032e-434d-bb77-bcca8c3ab014"
        },
        "item": {
          "id": "442745d4-2d9c-4474-8b60-7d0d527ddf93",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a22bb208-6c17-4bcb-a914-b9a6b47bd2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62ef7a4-18c0-41a2-a91b-ea2c4aa0e1e7",
        "cursor": {
          "ref": "c8a5886f-5937-4fa0-8f35-c8d63991ee4c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a3265558-c45a-43eb-8a81-2e86fdec6113"
        },
        "item": {
          "id": "f62ef7a4-18c0-41a2-a91b-ea2c4aa0e1e7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3cb8cabc-8b65-489f-b093-dc08fa3b6140",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134da7ad-1a80-43e9-9575-08e6f38fef3b",
        "cursor": {
          "ref": "807e64fe-6f53-4d37-a726-cfa7b9816141",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d117e9f8-2ee8-4fc0-adf9-755948a67b27"
        },
        "item": {
          "id": "134da7ad-1a80-43e9-9575-08e6f38fef3b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7f740687-aedd-4b1d-acbc-3c4568bdffa7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 456,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a4ca63-8b21-4183-bde5-16c4f984b896",
        "cursor": {
          "ref": "cfa1dd9c-7ef3-49ee-9815-9a3a3cb1cf8a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c0a4c106-f57d-41c3-a4a0-30244255f721"
        },
        "item": {
          "id": "80a4ca63-8b21-4183-bde5-16c4f984b896",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3575b86b-7b58-4c2e-b1bd-3b430a62deef",
          "status": "Created",
          "code": 201,
          "responseTime": 2149,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0de68d-eace-45cb-87cd-0e222dcc9a60",
        "cursor": {
          "ref": "0dd8706f-f560-43be-b77e-fc0b31ba3d09",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c8fc8ba6-e9b8-4d69-9990-c2a053d6600a"
        },
        "item": {
          "id": "4d0de68d-eace-45cb-87cd-0e222dcc9a60",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "5f9a1420-e6b9-4077-87aa-4e53435dada6",
          "status": "Created",
          "code": 201,
          "responseTime": 2143,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b34cf82-7b6e-4b25-8db4-33c405c1fa9d",
        "cursor": {
          "ref": "5066b5ec-63af-4035-983c-6f3648e79522",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "65b4385b-217b-4e4c-9af6-db55e064bf4d"
        },
        "item": {
          "id": "7b34cf82-7b6e-4b25-8db4-33c405c1fa9d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "530c911b-b260-43ae-9849-10a1e1d40a84",
          "status": "Created",
          "code": 201,
          "responseTime": 3193,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "785ba88a-863d-4134-bb82-35edd1f82930",
        "cursor": {
          "ref": "a4baf9b5-4276-4620-85f9-50702525953f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b1047309-3d10-4890-977c-5091ecab8797"
        },
        "item": {
          "id": "785ba88a-863d-4134-bb82-35edd1f82930",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7f9c8a8c-0d27-4085-88fe-90c1bf518966",
          "status": "Created",
          "code": 201,
          "responseTime": 2936,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caf49c4-ebf1-426e-9936-b96f8b185a20",
        "cursor": {
          "ref": "124bcd60-6920-4e8a-8881-90eba7e1d7cf",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c3c6d768-3363-42b5-85ea-c6d3a5b5f00f"
        },
        "item": {
          "id": "8caf49c4-ebf1-426e-9936-b96f8b185a20",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "27b8ea10-b7f8-414b-9a35-267fb38f1c57",
          "status": "Created",
          "code": 201,
          "responseTime": 2033,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b07ba20-0e81-4bfd-a975-27909d48871e",
        "cursor": {
          "ref": "5c23baa2-17af-4ba7-81e5-e8394a2f11fb",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "73ea7814-ef1d-4879-99b1-c1b1b44d7f4c"
        },
        "item": {
          "id": "9b07ba20-0e81-4bfd-a975-27909d48871e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd21fd6d-429b-48b6-a7ed-b00dfb16fb9a",
          "status": "Created",
          "code": 201,
          "responseTime": 2431,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c76b0a-a452-4637-9762-03249aef2692",
        "cursor": {
          "ref": "d2ec3bff-30cc-41ff-82b7-5309549bd97e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5499f155-e06c-4d27-93b6-cfd9ecda903b"
        },
        "item": {
          "id": "a8c76b0a-a452-4637-9762-03249aef2692",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "511e4a01-72bd-48e7-80d8-2a28bace6ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c76b0a-a452-4637-9762-03249aef2692",
        "cursor": {
          "ref": "d2ec3bff-30cc-41ff-82b7-5309549bd97e",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5499f155-e06c-4d27-93b6-cfd9ecda903b"
        },
        "item": {
          "id": "a8c76b0a-a452-4637-9762-03249aef2692",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "511e4a01-72bd-48e7-80d8-2a28bace6ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f029c09-649a-44f5-b32a-236ec02f909a",
        "cursor": {
          "ref": "dc0fc04f-ee07-4ed9-89a8-bc3e0eb70068",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9aeaba7b-fd99-4615-8cfb-cd3fc2da33c0"
        },
        "item": {
          "id": "1f029c09-649a-44f5-b32a-236ec02f909a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "49d09c34-8cc1-4656-b638-da1b458ad7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03703686-07e0-44cf-8746-6f896e1129d4",
        "cursor": {
          "ref": "db8a1aa2-ad15-4835-beb4-c7bd2efd5dab",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fc5ca8dd-efdf-4347-9394-4350b778f7d0"
        },
        "item": {
          "id": "03703686-07e0-44cf-8746-6f896e1129d4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "687a8154-8019-404b-a8d6-6f526dc5312e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10b554-74eb-4f86-a6ce-e5e3cd1cef49",
        "cursor": {
          "ref": "e3b44f74-cd5a-4f16-bdcb-fe7a4aab2891",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ab0354e1-c6b0-4ce5-91a5-92d7047e261f"
        },
        "item": {
          "id": "5a10b554-74eb-4f86-a6ce-e5e3cd1cef49",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d23db7d-8527-4f1d-b523-351a4cab7fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5766eb8c-0819-4f01-9200-4825ffe8b9ff",
        "cursor": {
          "ref": "4ad5180b-e244-4cd4-bcdf-bdc5a86fb591",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "097a3dfe-f821-41c1-8ee5-a37277853b6b"
        },
        "item": {
          "id": "5766eb8c-0819-4f01-9200-4825ffe8b9ff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c3439083-4ae4-481c-95e6-701d1013ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7dc991-c250-4016-82ee-6ffce96dc392",
        "cursor": {
          "ref": "5fe5ede9-282c-482f-9108-adc882800224",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "920ce6f1-5701-41b3-ab3e-21f96eb5cbe7"
        },
        "item": {
          "id": "2a7dc991-c250-4016-82ee-6ffce96dc392",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5c720ba2-20a8-4cf0-8319-218a8a9c06c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90093b69-4866-4f30-b96d-c8e9f8b2623a",
        "cursor": {
          "ref": "01322eb1-b764-4d36-866a-c4ef7e9234a9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d97e3f74-d0a7-4522-b890-c0b85129f467"
        },
        "item": {
          "id": "90093b69-4866-4f30-b96d-c8e9f8b2623a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0f325bb-da47-4d4d-ab3e-241ca6eccd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25fdf87-eaed-4160-b761-0b02ccad45a8",
        "cursor": {
          "ref": "48662386-5e5a-4083-a137-c0e345aa1406",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "54fd8e8e-9fee-403d-924b-1f55bee6edcc"
        },
        "item": {
          "id": "b25fdf87-eaed-4160-b761-0b02ccad45a8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54a77769-7de2-4c6f-9c0e-cdae9cfb43e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757f205-5eae-4e1d-9076-080b4f432a5a",
        "cursor": {
          "ref": "436eb7b9-b251-45fd-bced-a2bb9da518e6",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4459ce31-565b-4f08-922c-df867f632b43"
        },
        "item": {
          "id": "9757f205-5eae-4e1d-9076-080b4f432a5a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a17e8baf-b89b-4fa5-b38b-049629de20f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c877897-7694-48df-b844-21a72e063810",
        "cursor": {
          "ref": "4202a0fa-ab67-43a3-80e6-20783ce1a703",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "494550a7-9efc-4624-8908-76a30982a7be"
        },
        "item": {
          "id": "9c877897-7694-48df-b844-21a72e063810",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e9d82e83-efd2-438d-b6a8-de5940d488ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949525e5-20e0-412b-a846-237e802e3342",
        "cursor": {
          "ref": "1d547b47-35f3-4082-a019-b3f6d4f7c1a2",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "319802a0-0c06-4705-9326-5127347d1d24"
        },
        "item": {
          "id": "949525e5-20e0-412b-a846-237e802e3342",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5019ba70-f836-4916-9096-acfa947a11cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f328a0-920f-4c25-83b6-99a3ec1a75a5",
        "cursor": {
          "ref": "93925081-b25a-4ea3-ac20-02a7f9940511",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9168ddcc-ebf6-49e3-b6b6-378f04460a85"
        },
        "item": {
          "id": "f9f328a0-920f-4c25-83b6-99a3ec1a75a5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6bcd665-905f-4ba2-8568-f1457aa6782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee62858a-d099-4e04-9a2a-70aae1c321bb",
        "cursor": {
          "ref": "e2316c6c-6992-4c4c-a97a-7d64480cf480",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2c63db81-a9f7-4777-adc3-f770402566ab"
        },
        "item": {
          "id": "ee62858a-d099-4e04-9a2a-70aae1c321bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60f3e07c-0d96-4260-a2fe-8b04a5535d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cd1e73-8704-4f97-8023-6d916398ddec",
        "cursor": {
          "ref": "9ac3bfb1-bbc7-4f4f-a90d-f9f962d079d0",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f2f24205-aef3-490c-99e8-a3d7178de06f"
        },
        "item": {
          "id": "16cd1e73-8704-4f97-8023-6d916398ddec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "338de454-1a8d-4f86-b085-d79dd1c337fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c8b37-2c78-4e53-92b7-6ee4e8028096",
        "cursor": {
          "ref": "a22452c5-2e84-45fe-83e9-8da70a25cba6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "951c3040-ad86-4ef9-a1ba-bbde56ff77a6"
        },
        "item": {
          "id": "836c8b37-2c78-4e53-92b7-6ee4e8028096",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "57736f54-5cab-42cf-820f-9a3c672075d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb95c00-5dd2-4db3-81ab-ea238f46f651",
        "cursor": {
          "ref": "4c1a2761-3b92-42a8-b9e0-829e348cd6eb",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "60cc3d74-e62b-4663-913e-dc91943c7ea6"
        },
        "item": {
          "id": "afb95c00-5dd2-4db3-81ab-ea238f46f651",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "03d1e4d3-2c27-42db-a7e2-87d8256ddfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3497ffe0-ee87-409b-b7f0-f99ff0e7e5af",
        "cursor": {
          "ref": "8f4c7e20-3fbf-4e63-a633-ed74de5b60ee",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "25119215-538a-4d18-98ad-b9e2e003a556"
        },
        "item": {
          "id": "3497ffe0-ee87-409b-b7f0-f99ff0e7e5af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65fffaf4-5376-4ca0-809f-9652808570fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66381c7-9d3f-469a-9500-59d30df2d741",
        "cursor": {
          "ref": "979f934a-f3d4-4534-baf4-2038ebf27374",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "797cf6e1-f42e-4423-9928-e5fa6c6d770c"
        },
        "item": {
          "id": "e66381c7-9d3f-469a-9500-59d30df2d741",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9d2a15e-0d8c-4924-bc2f-c2e7142831bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af98082-1afd-45e2-b517-c43973e99f7e",
        "cursor": {
          "ref": "f1970bf2-6264-4f22-ad3c-d1fba0f5c892",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2c5508b5-b2b2-4efd-b36d-8a93de539445"
        },
        "item": {
          "id": "8af98082-1afd-45e2-b517-c43973e99f7e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2b427f9b-6295-49ed-b153-7ecfb31ef230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ce851-7787-4e96-8b59-1bcca1f2ef91",
        "cursor": {
          "ref": "3c253388-c376-4bcc-ba54-170942c8593b",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "273aaac4-3c22-452b-b25d-cc4f6bc2b429"
        },
        "item": {
          "id": "4e0ce851-7787-4e96-8b59-1bcca1f2ef91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "433b02e1-e71e-4b78-bf9e-d658c006e1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45b6cb0-a27c-4d64-8357-6ed055f8fa6e",
        "cursor": {
          "ref": "c816b0fc-8af0-4ac4-8e26-831292a8317b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e632d61a-4051-49ec-8973-d6100e5f40ce"
        },
        "item": {
          "id": "f45b6cb0-a27c-4d64-8357-6ed055f8fa6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db0166a5-3f5d-4c5c-a705-b857222026f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19830246-2bb6-4c7d-a532-83eaa304ea23",
        "cursor": {
          "ref": "c2b36bb0-bf5b-46c4-a046-d88a70721f86",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07a7421d-f18e-4a7a-a60b-1496db7f4615"
        },
        "item": {
          "id": "19830246-2bb6-4c7d-a532-83eaa304ea23",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4cf5d248-3f2c-4d97-885e-331f2fb18526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7ce1a4-5459-4b97-86cb-ea6c6d7ca581",
        "cursor": {
          "ref": "7d8f90aa-cf21-4e5c-a0a0-c7a5e268d33c",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "db6671d6-ef9d-4f81-b0cb-05c36e384302"
        },
        "item": {
          "id": "2b7ce1a4-5459-4b97-86cb-ea6c6d7ca581",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6dca9a3-b619-45c4-a384-61ffaf4ee4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea8d100-b31c-404f-900f-c663980dc299",
        "cursor": {
          "ref": "c5243495-ed61-45b8-844c-285c0e9cbd9f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b04eb7b7-6823-47a4-aed9-1167bdcdb654"
        },
        "item": {
          "id": "cea8d100-b31c-404f-900f-c663980dc299",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61f74793-92cb-40a3-81f6-ff0662779399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7610c4f5-ced9-42b1-9857-7d5dd9a970d3",
        "cursor": {
          "ref": "4d970685-05e2-478c-a0f5-0a4557052153",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "03ded57c-a432-4959-9ffb-6a7be9ece8eb"
        },
        "item": {
          "id": "7610c4f5-ced9-42b1-9857-7d5dd9a970d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "220c10ee-b532-4ae2-bd53-43c39f49974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07050086-ff2e-4795-8eac-c1f910bec896",
        "cursor": {
          "ref": "5491c082-40c2-4afc-b948-8399573597c5",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "81df4cc9-dff4-4cf7-b247-c30ce3b92c14"
        },
        "item": {
          "id": "07050086-ff2e-4795-8eac-c1f910bec896",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "533396c4-83cf-4300-856f-b61822e32cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a83ddb-4849-4c3c-8c1a-fdb7a00ec785",
        "cursor": {
          "ref": "333295e2-0c95-4791-af49-21133e914724",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d13b11da-87ab-42d3-9166-d7033112fc26"
        },
        "item": {
          "id": "c1a83ddb-4849-4c3c-8c1a-fdb7a00ec785",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6ff79aad-86c6-40ed-a119-b0fceecb0bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84ba82a-f631-485c-b13f-3217f29c5f4d",
        "cursor": {
          "ref": "93a6f677-10b9-4b54-a2c0-8e0a1ac50d55",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8f8c45f1-20e9-4c33-82f8-3a77c42a3a65"
        },
        "item": {
          "id": "a84ba82a-f631-485c-b13f-3217f29c5f4d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a0b68cac-f7bb-4e92-966d-480b2cb072da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028a22d5-668e-4284-8cac-14a5d86e5cb4",
        "cursor": {
          "ref": "901bd6de-047f-460a-be9f-86746c07abcc",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "07a6603d-d14c-4a18-b222-fd69a9a2dd37"
        },
        "item": {
          "id": "028a22d5-668e-4284-8cac-14a5d86e5cb4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fecaa826-1b30-4922-a6d7-8bea2914f89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d4d2a8-0914-46b9-b213-55a41568730a",
        "cursor": {
          "ref": "b43afc28-fa1b-47c3-a025-477ca06137d3",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "55539f73-b26e-42b3-af17-05752c80df06"
        },
        "item": {
          "id": "80d4d2a8-0914-46b9-b213-55a41568730a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7d7bff56-f5f9-4b80-bab5-2abbf0e52ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c2b77e-7858-464b-bafb-1788abc9e295",
        "cursor": {
          "ref": "3e9e39ef-b360-452b-9a2f-45c4821b15dd",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "76dc1df8-a948-4904-ae08-37abaaee4007"
        },
        "item": {
          "id": "21c2b77e-7858-464b-bafb-1788abc9e295",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fa919cdc-6a01-40f6-888c-cf558cbb6003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05da507e-6338-48d0-a50d-8e11a77a0e40",
        "cursor": {
          "ref": "f371a4c4-70bf-4ad8-95a7-2ecfc09c4f07",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6969a689-c24b-410e-8cef-9dd624af57c1"
        },
        "item": {
          "id": "05da507e-6338-48d0-a50d-8e11a77a0e40",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2af58106-3149-477a-a51a-83b10a152e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26047494-f746-4c29-a6d1-b0e7b5668026",
        "cursor": {
          "ref": "767d3d34-13d1-4d31-b58b-013d5f25c8bf",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5e38e11a-c29f-4f72-9242-0f9b02554a28"
        },
        "item": {
          "id": "26047494-f746-4c29-a6d1-b0e7b5668026",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bebb077b-865b-4e7e-9a22-5f1adf896596",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33a8ba8-3168-423d-b832-45efd8afd6fd",
        "cursor": {
          "ref": "999992ed-8153-4183-a49a-5bd74fe529de",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "27b6eaaf-6496-4140-84b1-df77e963e323"
        },
        "item": {
          "id": "b33a8ba8-3168-423d-b832-45efd8afd6fd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7501c7ee-dfb3-428e-be59-710cc0fd4b83",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 446,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef3083-08b5-45f5-8256-0f457fb9087f",
        "cursor": {
          "ref": "5726831a-a2cf-4efd-bce2-3e3baccf9c02",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89b25b22-3639-419d-ba14-f39ebb43b116"
        },
        "item": {
          "id": "59ef3083-08b5-45f5-8256-0f457fb9087f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2bcac4e8-829b-4bcf-92ef-f164e1567783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef3083-08b5-45f5-8256-0f457fb9087f",
        "cursor": {
          "ref": "5726831a-a2cf-4efd-bce2-3e3baccf9c02",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89b25b22-3639-419d-ba14-f39ebb43b116"
        },
        "item": {
          "id": "59ef3083-08b5-45f5-8256-0f457fb9087f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2bcac4e8-829b-4bcf-92ef-f164e1567783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c6f65-21c2-4036-a39a-812a31d5ba16",
        "cursor": {
          "ref": "8a71fbb9-c94c-421d-a8af-160c5c5521a4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a13982b0-2c55-4d4e-93c7-3180c7da1997"
        },
        "item": {
          "id": "4e0c6f65-21c2-4036-a39a-812a31d5ba16",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "213db6c4-79de-4c10-bc7f-b0b6c404af65",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 222,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "48941483-049a-415e-835b-f7cdff61a47b",
        "cursor": {
          "ref": "d9364be2-d035-42f5-861a-353bf431ebec",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "41666fcc-36fe-4b8a-a2de-ecc93e0a68ce"
        },
        "item": {
          "id": "48941483-049a-415e-835b-f7cdff61a47b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6cccc570-0453-47af-92e0-463039ecac34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f657c2-d4d7-49e5-a85f-19ec9897ad7a",
        "cursor": {
          "ref": "7ae23860-48b3-4f04-87e9-f564f89a3d21",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "516ab28c-135c-4600-908b-ae6d7883bc3f"
        },
        "item": {
          "id": "26f657c2-d4d7-49e5-a85f-19ec9897ad7a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5091b734-3679-4c9a-b05b-68a169c1fa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d006f4-813e-4f9a-bc62-3a2d8c483edd",
        "cursor": {
          "ref": "2dc1f089-9eee-47db-95f7-5fca5aada1b8",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "57f9da79-ec0c-434c-93ed-89bc4512bd52"
        },
        "item": {
          "id": "65d006f4-813e-4f9a-bc62-3a2d8c483edd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fa8c1f58-b9f6-425f-8b40-b63b6bb3f3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca2d4a7-9e38-46eb-bcc8-60136acbdcee",
        "cursor": {
          "ref": "659378d6-ff1c-4154-aa07-aabba522d66d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "50b2ce84-cabb-4658-8346-161f3e67529e"
        },
        "item": {
          "id": "bca2d4a7-9e38-46eb-bcc8-60136acbdcee",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "352a9fc9-5cd0-4593-8871-0686b2229c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2184a2f-5810-4996-8eaa-83e3756ce1bf",
        "cursor": {
          "ref": "7864a788-1ecd-491d-a10e-9a3be1eddcbb",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "440bb8a5-b02b-400b-a565-f5026d8d037a"
        },
        "item": {
          "id": "e2184a2f-5810-4996-8eaa-83e3756ce1bf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "75fe24dd-1737-4b4a-8cdf-6f37abb812f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a084a-27ac-4bbf-bdd7-03fdeded2716",
        "cursor": {
          "ref": "234b4180-59ed-4765-bdb1-64eb874bcb86",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "06ea482d-f153-4028-8b0a-6924a3a7847d"
        },
        "item": {
          "id": "7c2a084a-27ac-4bbf-bdd7-03fdeded2716",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d1e97612-b591-4fd5-b501-7fed90f93fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44956e0a-d91c-4d9a-8081-9b1c29a78f01",
        "cursor": {
          "ref": "b2312564-930d-4d8c-af63-4a7e0c89ea0d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e678973f-fe03-4c73-80bf-d193cb6da6e0"
        },
        "item": {
          "id": "44956e0a-d91c-4d9a-8081-9b1c29a78f01",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eca2c5fd-350a-4fb6-81c6-771356a9b769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cabbdf-f3df-4b41-944b-34eddbcd7d78",
        "cursor": {
          "ref": "99612493-d7f7-4236-bc25-02c88842ff32",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "29fb39cd-8266-4190-a30c-b6b498e79caf"
        },
        "item": {
          "id": "44cabbdf-f3df-4b41-944b-34eddbcd7d78",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "76676288-ee81-4e7d-bab0-8c0e6bec2857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4db310-b16a-4155-be72-da1a2bb39609",
        "cursor": {
          "ref": "e8fc2093-3fe8-4b87-9c0f-c56cc5dddcb2",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f5ecfff-f6d0-447d-819b-a48c124c3b44"
        },
        "item": {
          "id": "6d4db310-b16a-4155-be72-da1a2bb39609",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a7e4e8e6-1137-4aa3-a59f-c2ef2df5c754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccdc341-060b-4994-af76-5a8c32f02f38",
        "cursor": {
          "ref": "342f2cdb-76fa-482c-9c62-816f0350df2f",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fc64281c-a128-434a-9e18-7cf466985363"
        },
        "item": {
          "id": "8ccdc341-060b-4994-af76-5a8c32f02f38",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "25b00619-ad43-4eb2-aeaa-d44560e502ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9a8306-5896-48f0-abe8-6930c993d111",
        "cursor": {
          "ref": "9804d8d5-f9a5-43bd-9f6b-6e95dfce6782",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "95ed4b79-3a4e-4ec8-b1f2-efd2de693ea3"
        },
        "item": {
          "id": "8c9a8306-5896-48f0-abe8-6930c993d111",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7fa339eb-e0ef-4ca6-b3f2-5c547060e32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b3975e-e826-496c-b385-e6907b6de0b8",
        "cursor": {
          "ref": "e3fa6d35-1301-4f4a-8bb6-19cb76c46652",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "807d2e35-e94d-469e-8efb-0b713c520a5b"
        },
        "item": {
          "id": "62b3975e-e826-496c-b385-e6907b6de0b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ac641fa6-9037-48ba-99af-baac139355a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa3b138-cdb4-4cf8-9197-f644ab6d64ac",
        "cursor": {
          "ref": "3a5eef41-0347-4b1a-99d3-3f6eb97d6233",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "05f27a20-5146-45ea-8988-b64251f9be46"
        },
        "item": {
          "id": "efa3b138-cdb4-4cf8-9197-f644ab6d64ac",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cc813153-a023-45e2-9cac-7ad36d006513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2901d20f-1926-430a-9bb4-80e053254716",
        "cursor": {
          "ref": "f570d68e-6709-40e9-a9c6-dfc641c3d3b8",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c89db534-7567-4d64-bc84-8603e3269ef7"
        },
        "item": {
          "id": "2901d20f-1926-430a-9bb4-80e053254716",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cdff3166-878c-4c29-8a85-7dd39398609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e910aa-d0d8-4b27-86e8-2b694e339da3",
        "cursor": {
          "ref": "55a31fc1-f639-4c88-a52f-59376344780b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b0f6f1b-843a-4be4-b664-07630415c8c2"
        },
        "item": {
          "id": "88e910aa-d0d8-4b27-86e8-2b694e339da3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5b92f1cf-6c11-42d9-a482-46abd76b9129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeda1bfe-8c25-4ae4-bff7-e8838a574343",
        "cursor": {
          "ref": "040bfa40-b844-4126-8248-369bc0a5345a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95674d16-2547-4e39-966b-1f1059caea1e"
        },
        "item": {
          "id": "aeda1bfe-8c25-4ae4-bff7-e8838a574343",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b9ff7b64-5d53-421b-8f91-aa19eb0f499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9522915-8171-494c-a52b-68b3450f4701",
        "cursor": {
          "ref": "81e56ee4-5463-45a4-97a9-b96a182aecbd",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4a0da83e-f986-4d6a-a3b1-35d69aad366e"
        },
        "item": {
          "id": "c9522915-8171-494c-a52b-68b3450f4701",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "65e93054-82aa-4add-827c-34f048de82db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1714b2c-be49-4d6e-85f3-0e694790fe87",
        "cursor": {
          "ref": "07da3b5f-47b2-421a-b80a-3191d08037ff",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0c9881d6-df20-4994-97be-89e8abf06019"
        },
        "item": {
          "id": "d1714b2c-be49-4d6e-85f3-0e694790fe87",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b64990b2-218f-4d97-b9f8-878307437002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0ce184-bd56-4524-abda-ba42ce265cd6",
        "cursor": {
          "ref": "fb031ebd-11f1-4242-9838-a8127e18e984",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f3a4beb5-5038-44a0-998e-7753fcecf6ff"
        },
        "item": {
          "id": "7d0ce184-bd56-4524-abda-ba42ce265cd6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "86a92544-0e38-4151-bc70-4de09100bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561759ff-1890-4a09-91e6-4ca58bd2c47a",
        "cursor": {
          "ref": "7caf703e-26d9-446f-9cc1-ab09172b2501",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "628cace5-f9eb-4c19-8c9e-ccd3e9c2a7e1"
        },
        "item": {
          "id": "561759ff-1890-4a09-91e6-4ca58bd2c47a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b0b13e39-bfa0-4db7-a6f6-cec32018df64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e83cf9-a175-426d-ace8-dff5947e71cc",
        "cursor": {
          "ref": "5dc54087-b394-4740-9d44-1c80219c259f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9c391fe0-0c0b-4c36-a78c-562eb928aefa"
        },
        "item": {
          "id": "06e83cf9-a175-426d-ace8-dff5947e71cc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b4efecc-721c-436e-b549-166140190e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57957c0d-d80e-4ada-bcf0-1a12058bf99c",
        "cursor": {
          "ref": "0b752f83-7736-4b8e-bd44-0a8af483330f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "219059a2-a683-49c2-81e6-c6755c18f0d4"
        },
        "item": {
          "id": "57957c0d-d80e-4ada-bcf0-1a12058bf99c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7d7ba733-6c42-49d1-8533-cd36401a590d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a6487c-4783-4f96-82c2-e5ab0c71a625",
        "cursor": {
          "ref": "ea229ab4-f043-4461-b196-fffdf0265042",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bb5d808b-c04a-455c-89f5-5e3541f468ff"
        },
        "item": {
          "id": "04a6487c-4783-4f96-82c2-e5ab0c71a625",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7bf43fa2-cdb2-4eb0-b944-e19bc9f1bcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ec59eb-92ad-4ccd-853a-64a7db9eccd7",
        "cursor": {
          "ref": "3b5d90aa-507c-4eb0-98a7-d05dda51703c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e717ba4-07c6-4b6d-a02e-759d4111804b"
        },
        "item": {
          "id": "f6ec59eb-92ad-4ccd-853a-64a7db9eccd7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "de62cbe5-5d65-482d-a0a4-ce1eb9621994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8859462-f773-42cc-828d-7c7bfcb2d396",
        "cursor": {
          "ref": "b9c893f8-1f82-48f2-8573-30df91d28cc4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "744cde19-6a98-49ca-9282-80c8ca19d69c"
        },
        "item": {
          "id": "d8859462-f773-42cc-828d-7c7bfcb2d396",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eff5e5cb-0a21-45a4-ba6f-d35398b28ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221896a5-7146-40e4-8e10-1386fb6ad98a",
        "cursor": {
          "ref": "5d3ca047-8ee4-435e-87d0-46355c506bbf",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1d429720-3318-4521-95a8-e9ff55b52aa9"
        },
        "item": {
          "id": "221896a5-7146-40e4-8e10-1386fb6ad98a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ca46928-b319-4d60-96fb-6b9f8b5b8670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407594cf-e8a4-4279-b833-28de637f12bc",
        "cursor": {
          "ref": "ad1cb253-f102-49ae-9075-286e2ead2e20",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d162102e-2331-44cf-a1a1-d3d8343b7415"
        },
        "item": {
          "id": "407594cf-e8a4-4279-b833-28de637f12bc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c1ebd0b7-d807-4268-9a5c-06107be0ce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a98f61-e475-447d-ba46-859b46beaaa7",
        "cursor": {
          "ref": "50bc5e66-ef9d-4644-845a-6fd466b15517",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dbae2c5d-7812-4ba3-bb81-2353d3e3dac7"
        },
        "item": {
          "id": "a5a98f61-e475-447d-ba46-859b46beaaa7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2f2a91a5-8513-4267-b466-616e2efdc782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf29c39-9ace-4b20-882d-47df9a1d2fb9",
        "cursor": {
          "ref": "d2208067-a379-43b9-86de-7deef5645112",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12373ce3-7fa7-4cf4-ad93-90cd86316d46"
        },
        "item": {
          "id": "faf29c39-9ace-4b20-882d-47df9a1d2fb9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "adb05d66-ae98-4f22-a943-3340d507aff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a519cc2-f280-4f04-98b3-457c239a8acc",
        "cursor": {
          "ref": "75b3313b-1971-4f98-b3a6-57603b290a6d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bdef764b-9aef-40d5-bc14-d45b8616c878"
        },
        "item": {
          "id": "4a519cc2-f280-4f04-98b3-457c239a8acc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e0e562b9-30b2-4693-a1af-c992826d0c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0e93a9-0a30-4ace-8d96-f9788dc63da4",
        "cursor": {
          "ref": "35ca2364-048b-410b-838b-9fae6ff3c8d0",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1106f97f-0b8d-4a3e-a2e6-d71f126bdb21"
        },
        "item": {
          "id": "1f0e93a9-0a30-4ace-8d96-f9788dc63da4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9397e43f-3629-498c-a478-6d53c4a11100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3de1f2-515d-4b63-b26d-cd2b995879ac",
        "cursor": {
          "ref": "64ee1d50-6386-4059-bfe7-f8c101f63b58",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fa6dc5d8-a438-495f-bb58-23f075dc42be"
        },
        "item": {
          "id": "5d3de1f2-515d-4b63-b26d-cd2b995879ac",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "879a2389-96fe-4bc3-96a1-aa647ae4a8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0279224-52fe-4612-9c76-adf2da4ae93f",
        "cursor": {
          "ref": "9a93cad8-989b-47a2-8ac4-7d98e88c3432",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9586a2b0-ae17-40b8-b520-40ce2962fda8"
        },
        "item": {
          "id": "c0279224-52fe-4612-9c76-adf2da4ae93f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d277cba4-f439-44f2-aa51-d4c70e11b25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5173a501-4af6-45f1-b4bf-31b03bad63c7",
        "cursor": {
          "ref": "e63fa85e-d329-4d71-ae26-edb0370d9f5f",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "946b01a4-65df-4b99-87c0-c7254066c496"
        },
        "item": {
          "id": "5173a501-4af6-45f1-b4bf-31b03bad63c7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "98464da7-1539-426a-a2f7-3816e5af1077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2c749-4576-4d8e-b8ef-dc1495944673",
        "cursor": {
          "ref": "a1c2f3c4-db5d-47d9-a22f-a06e840ff39c",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b748097f-c006-4f35-a010-653ad4d4a1f1"
        },
        "item": {
          "id": "42f2c749-4576-4d8e-b8ef-dc1495944673",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9778d575-ae92-4cb1-8181-a451b3c582f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8ef8b0-5b81-4fba-9730-070d6f196a67",
        "cursor": {
          "ref": "2a2681b4-3c7c-4066-8e9a-3d64c4acb57c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b56f5652-d6b4-407b-9796-cf052d222e59"
        },
        "item": {
          "id": "7c8ef8b0-5b81-4fba-9730-070d6f196a67",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "67b19579-ad97-49e3-af95-14284ffe9242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bad81d-ddde-4964-b90a-bf01a86e68c8",
        "cursor": {
          "ref": "cf7535bb-8fe3-479e-bd09-fdba7a3a004d",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9c8df01a-3837-4bf6-82d0-68c8318217bf"
        },
        "item": {
          "id": "25bad81d-ddde-4964-b90a-bf01a86e68c8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5b13d25e-c885-4cae-a4c6-52dd5f49e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e142c92d-6f15-4a04-9f74-cb96768f2743",
        "cursor": {
          "ref": "6c19f609-4893-4583-b188-006dee7a24b9",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6831edf1-615a-422d-add2-640309353706"
        },
        "item": {
          "id": "e142c92d-6f15-4a04-9f74-cb96768f2743",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6965dae9-4442-4c0d-b1bd-b2c9207df08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4336f84-4a22-4fd5-897a-05e45487a35c",
        "cursor": {
          "ref": "1377b304-cfdf-4c57-8faf-50c73ac300fb",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "19c0cfa2-4ee7-40dc-b518-a46078b46805"
        },
        "item": {
          "id": "e4336f84-4a22-4fd5-897a-05e45487a35c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "847d80d7-acc1-454a-b93c-bc88a0bf47ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4588ca80-12e1-40b0-a32d-89f13b891f20",
        "cursor": {
          "ref": "33ae7e8d-61ea-44a3-b814-f191fdae9068",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b48d8b99-075f-4611-a2c5-7eee1b30e266"
        },
        "item": {
          "id": "4588ca80-12e1-40b0-a32d-89f13b891f20",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8a361960-5b0f-4f6a-9a61-4618f38e152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a6b87-3b09-4faa-ae1d-4fc23e112024",
        "cursor": {
          "ref": "182300fb-9aa2-4249-b2a9-cc1ad3cac364",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "895bb26f-a5c9-4e3f-b208-c52291a58df4"
        },
        "item": {
          "id": "926a6b87-3b09-4faa-ae1d-4fc23e112024",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8b2bc45f-31b4-48cb-af99-6eeafd4f1ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6242b-dbee-487f-a131-3259ab670511",
        "cursor": {
          "ref": "eff192a1-d921-4431-8bcf-7adff8c99a96",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c06b4768-d626-4772-a85c-76a60edc393e"
        },
        "item": {
          "id": "aae6242b-dbee-487f-a131-3259ab670511",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8a6d5b13-445b-442d-8105-ed9c03cefae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9d497d-6269-4cd2-bf37-b73691bfb03f",
        "cursor": {
          "ref": "4293ba0c-726f-48d2-913f-fb5af2b31715",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0cb57489-0d6f-4722-b170-f1a60f0aee5e"
        },
        "item": {
          "id": "3d9d497d-6269-4cd2-bf37-b73691bfb03f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c09ef5e7-a39e-424c-a759-f866f1094f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94962b85-0487-4652-b6d9-bc06c54ee2a3",
        "cursor": {
          "ref": "4571c579-a3d4-4fad-80e7-6db7b20eb02f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7fd3389d-4532-4851-8069-2cd496f864ca"
        },
        "item": {
          "id": "94962b85-0487-4652-b6d9-bc06c54ee2a3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d9e43a4f-952b-4898-a5b0-c6ceafb4c784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d874487c-34a6-4910-b93d-83933506028a",
        "cursor": {
          "ref": "ce1ebf80-2c6b-415a-8e87-8e7a7b9365d4",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "68bd2784-d07e-4faf-9b12-1bf91df9a87d"
        },
        "item": {
          "id": "d874487c-34a6-4910-b93d-83933506028a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9189981c-38a4-4c20-b3ab-ccd9382dcdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147aeabd-ae51-4a35-9d66-8817e0d5d060",
        "cursor": {
          "ref": "3e77d814-e2d5-4732-b2bd-619fbe15679a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "482cb28c-2da8-4822-8fd4-8386501d4168"
        },
        "item": {
          "id": "147aeabd-ae51-4a35-9d66-8817e0d5d060",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6c9005f0-44dc-4891-b240-fc83851eac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b089cc7c-2b2b-43e4-bb9e-a0999c3950f9",
        "cursor": {
          "ref": "d4906fbf-cfc2-4a59-9ac5-7d3f46ade8e8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c8c20888-d809-441c-aed1-9f3171a04766"
        },
        "item": {
          "id": "b089cc7c-2b2b-43e4-bb9e-a0999c3950f9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d9540024-f80c-4e56-a02b-a7617ebb60ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c0aaec-d3c7-4c00-ab98-03ebc0a7154a",
        "cursor": {
          "ref": "3d05ebf0-71ef-448e-be26-85f9e5173dfd",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "df5cb8ed-fd30-4576-ad94-0a4f9e6aa1e1"
        },
        "item": {
          "id": "03c0aaec-d3c7-4c00-ab98-03ebc0a7154a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a2c7d13d-f06d-4f21-aa67-27cab2026d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12c6518-565e-46df-853d-6337b7d7ed30",
        "cursor": {
          "ref": "43e6fd23-26dc-4363-8a6f-b1ba5942fbf6",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9e5bda9f-c7c8-4879-b708-eb664af4e0e2"
        },
        "item": {
          "id": "b12c6518-565e-46df-853d-6337b7d7ed30",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34785f8a-737d-4f34-a166-cd31d9477f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa27369e-9dcc-40d3-a3c0-24e16562f409",
        "cursor": {
          "ref": "33684c61-590f-4e33-8c5e-8b6789274eb0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8372f91c-8fe3-4ae8-8f2c-914b7aae007a"
        },
        "item": {
          "id": "fa27369e-9dcc-40d3-a3c0-24e16562f409",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1075d30b-6a8e-4030-8a12-795120c3ba61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c42c04-a732-4cc0-ae00-9fb5a0009223",
        "cursor": {
          "ref": "b632bf47-9a5c-41a0-8183-2f0018e5ec7d",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "280efaa8-3260-4797-8e71-fd25b93d3da0"
        },
        "item": {
          "id": "97c42c04-a732-4cc0-ae00-9fb5a0009223",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0849a2c0-bc48-42e4-9d44-03dbbd1f09a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04f6a32-f395-4f8c-8a25-ce13fee0b757",
        "cursor": {
          "ref": "6140895b-81eb-4390-af0f-eb106fd776eb",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2f6d341f-1bc1-4745-b40a-d8404fa2bfa5"
        },
        "item": {
          "id": "a04f6a32-f395-4f8c-8a25-ce13fee0b757",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69daff93-aa4a-445b-83ef-bde3918263d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3786adf-8642-4af2-b2c8-1f3a1702d651",
        "cursor": {
          "ref": "a0e79b81-3857-4c78-852a-995ca8c7bc50",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "df9625fb-2ca5-49e5-b1c7-ea65c8a0ea68"
        },
        "item": {
          "id": "a3786adf-8642-4af2-b2c8-1f3a1702d651",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f9165d49-ec62-44b5-b219-f8bbad295216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d56678-ea40-4e55-8048-ebc9d3485c3a",
        "cursor": {
          "ref": "11ed5f61-a737-49ec-a59e-d39751c0902e",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2fdb4c36-d629-4e40-bfe5-ad379629d14e"
        },
        "item": {
          "id": "f0d56678-ea40-4e55-8048-ebc9d3485c3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cf5fdbe6-2563-4e6d-a628-2878b0f8aabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a39fed-d6b3-49bf-abb4-19e76a75b030",
        "cursor": {
          "ref": "5cc18d2c-1ccf-4b83-9aa3-d2916a818011",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b095ccb-c75a-4635-a9ba-c0d0c8d2c111"
        },
        "item": {
          "id": "52a39fed-d6b3-49bf-abb4-19e76a75b030",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d5910a72-bb10-4f9a-a1d6-ca90844ba5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dd8e63-da0f-46ab-9a37-2227d68fdabd",
        "cursor": {
          "ref": "53d23e06-779d-4821-9b9a-fa79cf9d1919",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0eb29995-4cbe-4685-b69d-a324ca5eea23"
        },
        "item": {
          "id": "87dd8e63-da0f-46ab-9a37-2227d68fdabd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d856048a-ba9a-4d0a-bd9f-59ba2de93611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd72d6c-1640-48d9-8e10-1f9ecc705f17",
        "cursor": {
          "ref": "a9d7039e-5550-4c24-a2ef-c8ecc8758acc",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "320aff3c-a8d2-4861-a9d4-9ac96eb82bb4"
        },
        "item": {
          "id": "7cd72d6c-1640-48d9-8e10-1f9ecc705f17",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1cdecbcd-61e8-48c5-b33b-938e43a943ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2264f3c-b160-41fb-9662-60a8406959d7",
        "cursor": {
          "ref": "8a06b4f8-43c2-48b6-b687-69ba1cb327ed",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f5d9fbd7-7f34-48da-bf8a-22ee86ce1fea"
        },
        "item": {
          "id": "a2264f3c-b160-41fb-9662-60a8406959d7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4ccb1eca-1ae3-470f-9f44-c1337f855dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d901169-5523-4189-97ab-175dd6cb52d5",
        "cursor": {
          "ref": "d1afc1c3-4d57-4907-bd67-8a9a1a4981a2",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "86fea6f3-d6a6-45f4-8bad-d9e0bdc0c5d4"
        },
        "item": {
          "id": "1d901169-5523-4189-97ab-175dd6cb52d5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e7f769f2-88a2-49a0-a63a-df44e74407c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f15ff2f-0038-4a8a-a33c-ec3e94092be8",
        "cursor": {
          "ref": "23037ae7-f5b1-491c-b045-72a1fdf0d1db",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6941ca4f-dfe4-452f-85e5-e4fec4502b0a"
        },
        "item": {
          "id": "9f15ff2f-0038-4a8a-a33c-ec3e94092be8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a83ff37f-b251-4dd7-ad2c-35b2da5d728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d211a-ee9a-404d-a8c2-ec18f76ed8aa",
        "cursor": {
          "ref": "cc6f3283-a6a6-4b4e-934b-e912140b2446",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "258bcb49-3a51-482a-8c16-7b1db1539b92"
        },
        "item": {
          "id": "0f8d211a-ee9a-404d-a8c2-ec18f76ed8aa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "61f928c2-672e-48b1-9547-31c438f60d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb76ab5-fbe3-4d5b-96f3-ebf61226072a",
        "cursor": {
          "ref": "2f7c3663-7973-4e3a-9dcf-cb53c8f133e2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f84a51f0-2d86-4283-85b2-4b0df841dd43"
        },
        "item": {
          "id": "8cb76ab5-fbe3-4d5b-96f3-ebf61226072a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d67faf1c-8fac-4e10-800a-95ee94a4e6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d5e11c-8ee7-4e02-999d-7ae90aa927b2",
        "cursor": {
          "ref": "ecc4449f-b5a5-413e-bf7c-b4e1db591728",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cc05dd14-f6ce-41a3-a96c-598b14742276"
        },
        "item": {
          "id": "49d5e11c-8ee7-4e02-999d-7ae90aa927b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "46a2e898-cd89-4861-bc0e-52376b906459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a19e864-7254-42ad-b3be-02cdc8996392",
        "cursor": {
          "ref": "029f2d48-3418-4dd5-ac61-a37d7d6f6280",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7765915e-bedc-4761-ab8b-e9f3456d9a90"
        },
        "item": {
          "id": "6a19e864-7254-42ad-b3be-02cdc8996392",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "adb4044e-7a95-49f7-a91d-e96d5d6f4abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8196c5-9032-404e-9097-c6349efd193d",
        "cursor": {
          "ref": "fffd5cb3-2edc-468d-b6b1-5556f9eeb33b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1167a17-e5a4-4515-9166-b41af6315086"
        },
        "item": {
          "id": "8d8196c5-9032-404e-9097-c6349efd193d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "99fb4265-6f43-497d-9739-379b22819584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce223971-dd61-45f8-8b3c-d9e1845b4785",
        "cursor": {
          "ref": "d98f6f98-407f-4724-8065-995b396afe90",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0c9f7218-82f9-4c2e-980d-65575aedaa41"
        },
        "item": {
          "id": "ce223971-dd61-45f8-8b3c-d9e1845b4785",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "99d1c196-fb33-460c-833f-0c76df8e2eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6abaa9-2665-4f6a-838e-da3866e68585",
        "cursor": {
          "ref": "1bc35e78-9a6b-409a-95c7-b374c0223ab7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "35aa8e2f-a07c-4c2e-bab1-34f04f3ddd0f"
        },
        "item": {
          "id": "fd6abaa9-2665-4f6a-838e-da3866e68585",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1e075c65-9d4a-45a7-bca5-9628789b79b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f11e241-0f80-400b-a66f-f413ceee5b8b",
        "cursor": {
          "ref": "32a92f83-a5b8-456e-ad5b-dd0d969551f6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "281b81b3-e547-46b2-bb91-e3ddda3f24c3"
        },
        "item": {
          "id": "8f11e241-0f80-400b-a66f-f413ceee5b8b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aadc0ec3-cf83-4699-824f-75a6319ed6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764f5bc5-705e-4a1d-a77b-9060012ca2f5",
        "cursor": {
          "ref": "7ce05819-9efe-48b9-8471-eb34c955f7bc",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a16698bd-4fa6-498d-83fb-377b183a1775"
        },
        "item": {
          "id": "764f5bc5-705e-4a1d-a77b-9060012ca2f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "20e2d1dc-2e54-4003-9ca9-f44b619f84f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcffca45-44a9-44ea-bc8d-fa5f1f7d3c73",
        "cursor": {
          "ref": "e7e81d3d-998d-4d84-b9bd-b22b17588768",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "19ae9ba0-f356-453f-86f4-af70f398e607"
        },
        "item": {
          "id": "bcffca45-44a9-44ea-bc8d-fa5f1f7d3c73",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9b5607fc-b3d4-4778-8b57-f0a9fc37c5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9585dbc8-7096-4663-b3a4-0155456546f7",
        "cursor": {
          "ref": "62d2b84b-71bc-4cff-b7e0-7060be6cf0b2",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f76821be-a0ae-4975-9a77-a57e6e94d9e3"
        },
        "item": {
          "id": "9585dbc8-7096-4663-b3a4-0155456546f7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "684b2157-0177-4fac-88bb-2fcf36759cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b022c2a-a8f1-401d-91a1-34764ae7c2c0",
        "cursor": {
          "ref": "83c4bf2c-f50b-42d9-bd8c-97a346ffeb29",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e33ecc0-7aa9-4ba6-851e-5e58b6fd76ad"
        },
        "item": {
          "id": "1b022c2a-a8f1-401d-91a1-34764ae7c2c0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e99c30df-5079-4017-b12b-1464ab0384dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1430adeb-f0b9-430e-bd72-ac9e651fff60",
        "cursor": {
          "ref": "9ece19bf-2545-4ad7-b466-4805e8c426b0",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bdea4770-2d01-4c57-b2d1-dd2989c39f35"
        },
        "item": {
          "id": "1430adeb-f0b9-430e-bd72-ac9e651fff60",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0ae49075-70e3-4c90-86ec-f43888071ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf891ab-b106-44b7-8fcf-1465054f6b3b",
        "cursor": {
          "ref": "597b48c9-06f5-49e6-95da-7b00c349280c",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1903c60c-e07b-494c-960d-bf6eb0e18dc5"
        },
        "item": {
          "id": "ddf891ab-b106-44b7-8fcf-1465054f6b3b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "089ddbd3-7bab-49de-9ba9-a4c08942d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea2860f-2ce2-4dc9-a0c2-12e4ac7ffa7d",
        "cursor": {
          "ref": "adcddb62-57ed-44f3-8700-92aead139e32",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "78b39eea-16cb-4802-bdbf-d8cdbf436c38"
        },
        "item": {
          "id": "1ea2860f-2ce2-4dc9-a0c2-12e4ac7ffa7d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e521a1f3-f17c-42d7-b810-7e4eaced6568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff4211a-207b-4a5f-8c0e-c51a8fe3af12",
        "cursor": {
          "ref": "16270965-b71c-4362-bc70-9a42f090e736",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "34280065-d8be-4094-a995-25cad13f396a"
        },
        "item": {
          "id": "eff4211a-207b-4a5f-8c0e-c51a8fe3af12",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e67e307f-eb9d-4a19-b3e7-f732312f4c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b987c1-92b8-4f78-9d55-4b0e4ea0ae02",
        "cursor": {
          "ref": "90953bcf-2ad5-4efa-8663-49d09d5e191f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2aaa8a2c-b0f8-4fdd-9ee0-9c867157a70e"
        },
        "item": {
          "id": "63b987c1-92b8-4f78-9d55-4b0e4ea0ae02",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8401d0b7-b7ab-4263-9c6a-2481d4935c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96f4250-c440-49c1-8aa2-611646aefc9c",
        "cursor": {
          "ref": "05022a2e-6630-4ff6-9130-679abf8f86aa",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3476dbe2-cabf-4112-bb18-7968ecb430fd"
        },
        "item": {
          "id": "a96f4250-c440-49c1-8aa2-611646aefc9c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7c0765a9-2e71-489c-b664-3aed69d5afb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac51034-8270-4b42-bd3e-6ad1ef901bc0",
        "cursor": {
          "ref": "91fd0d5a-feef-4828-9b72-93709191509f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54ac983a-1110-4c97-a088-2a4d545d933b"
        },
        "item": {
          "id": "6ac51034-8270-4b42-bd3e-6ad1ef901bc0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2026cdf-dcbd-4b3e-b4b2-67b23d3d67a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2796478d-4616-41d4-b8dd-722c678d670d",
        "cursor": {
          "ref": "c8c5f785-15f8-43fe-b1ba-5d1ebdf3ad26",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7b1ce5a8-f225-41d2-a111-d936e4adf534"
        },
        "item": {
          "id": "2796478d-4616-41d4-b8dd-722c678d670d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5bc0718a-2f91-4636-ae85-76cea4bcb7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ca18fe-9c4b-47e2-a01d-9f1caa2ddc34",
        "cursor": {
          "ref": "c9a47e28-9b6e-460b-a4bc-a60dccbdccaa",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "98ba6dae-51ab-4cee-bc14-935cf3a87eab"
        },
        "item": {
          "id": "c9ca18fe-9c4b-47e2-a01d-9f1caa2ddc34",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "598f1ef6-f135-4a7a-9091-f5a0dd5399a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65ac839-b0b6-48e2-b6c1-dba75e7a002c",
        "cursor": {
          "ref": "248be84f-c4b5-4980-9e52-3b04b215f700",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c0014f26-f691-4451-b581-95ff07a617d0"
        },
        "item": {
          "id": "f65ac839-b0b6-48e2-b6c1-dba75e7a002c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6d147f4c-4b36-4607-8361-349c579b2f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3b963-e2fc-49b8-bccf-7eec4058b039",
        "cursor": {
          "ref": "e238a88e-166e-4646-901c-9d5b6623f9b1",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1b073a0d-2e1b-43b9-84ab-5cb97d673ea4"
        },
        "item": {
          "id": "c8c3b963-e2fc-49b8-bccf-7eec4058b039",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ef694b0e-f98f-4863-9948-01c6c8ca29c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7400f9f-f3d3-44eb-a91f-f346df3dcdc9",
        "cursor": {
          "ref": "35fa37a1-fe3f-47d0-ace6-a5c2bbc95bb4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "819b060b-e5f0-4d8f-b680-3770b462d677"
        },
        "item": {
          "id": "f7400f9f-f3d3-44eb-a91f-f346df3dcdc9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0be1ae3d-028f-4897-9b44-a7875c676684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed751fa-8982-40a0-b491-d056a7560709",
        "cursor": {
          "ref": "f9c61118-fe45-47c6-836b-82a0eebe35fc",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02d64212-4859-4281-a83f-dea1d348e073"
        },
        "item": {
          "id": "3ed751fa-8982-40a0-b491-d056a7560709",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0869f16c-8b3f-430e-ab71-965c8625bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b196c1ca-9fab-4f86-9c4d-d5111b60c3e4",
        "cursor": {
          "ref": "9fd1b491-3ea5-466d-a478-aa914ccd9c01",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "afcb311f-53f0-47b5-a115-4e5906d5570c"
        },
        "item": {
          "id": "b196c1ca-9fab-4f86-9c4d-d5111b60c3e4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cda91781-cd17-4bcb-badb-a96a333db3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a44cb9f-16ed-431a-afee-1d38741bc1ca",
        "cursor": {
          "ref": "cc5ab7d2-db5c-4f32-b29f-827703078a83",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac7b8345-2cac-45b7-9771-976305bf3324"
        },
        "item": {
          "id": "5a44cb9f-16ed-431a-afee-1d38741bc1ca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b049e3f-291c-4c06-b8ec-35e7355f4540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528fab23-5d93-4dcc-9078-46c86f9711f7",
        "cursor": {
          "ref": "774d12a5-bb2f-48d8-8f06-9588b7efbf52",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "55363609-a621-4a17-9dd6-a619565c3dd6"
        },
        "item": {
          "id": "528fab23-5d93-4dcc-9078-46c86f9711f7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a52949bd-83ef-443a-934c-02f1f83dbb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ea8f63-9c52-4985-9d9a-b0a030050e3e",
        "cursor": {
          "ref": "dd96db47-13f3-4e4b-89f0-29e4fabc7437",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5a6924a9-1ec8-4f43-8211-5de4bc3ce4ad"
        },
        "item": {
          "id": "44ea8f63-9c52-4985-9d9a-b0a030050e3e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c314bc49-ace6-420d-870a-6e8e9093e25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4142e817-c208-4849-8402-4d009b5c7030",
        "cursor": {
          "ref": "7c9d9e21-12ab-4fef-86e5-d4d904c300d3",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1703b3fd-d416-4415-b8d9-a4e5f0df6607"
        },
        "item": {
          "id": "4142e817-c208-4849-8402-4d009b5c7030",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "55a16e78-2f51-44e3-8001-1bc19f9eaa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06c370e-111a-49cf-bb03-dd273060cf68",
        "cursor": {
          "ref": "1d48e5fe-13a0-40d0-9f89-c84ba086fb77",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9f1b63e6-0331-4529-9cfb-d7bd199f5e3a"
        },
        "item": {
          "id": "f06c370e-111a-49cf-bb03-dd273060cf68",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9d85a5b6-2faa-4dda-8f73-7ab0b03429ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0121bc0-e318-4fc3-86a0-ba9fdd644c41",
        "cursor": {
          "ref": "a6212a41-da56-4354-b1c4-c100027a5b3c",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0e54fe52-3ef1-4236-9097-939a57f89e3f"
        },
        "item": {
          "id": "f0121bc0-e318-4fc3-86a0-ba9fdd644c41",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "db2df9d0-b827-491c-9a8a-483e5a43bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a0bec0-7b24-43eb-b9f0-e8d447b1739c",
        "cursor": {
          "ref": "f78c703a-cdb5-4b99-9ca7-e541461e4be0",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0807275d-e8b3-40c3-974a-7a771f6389d0"
        },
        "item": {
          "id": "36a0bec0-7b24-43eb-b9f0-e8d447b1739c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "516c0f89-ae60-491d-982f-5b917f1e8ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb0399e-7c2c-41f4-ad71-9f09742c3681",
        "cursor": {
          "ref": "79a71f23-3ba0-4147-8418-eff63d614da9",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "557bc444-d41b-4c6f-8c0a-b8b180f39225"
        },
        "item": {
          "id": "bbb0399e-7c2c-41f4-ad71-9f09742c3681",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e85d2027-a7b5-482b-9ad4-35df4088fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdb7253-3c67-4a4c-a7d6-fca81f148f2c",
        "cursor": {
          "ref": "aec77095-d350-43bb-a003-6a726fef757e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d2c4026-7b8a-4b6d-8140-bc97dc921ccd"
        },
        "item": {
          "id": "ecdb7253-3c67-4a4c-a7d6-fca81f148f2c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d6002d9e-fe35-49dc-8c7b-48b8d07e4c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46256b9e-372a-424f-ae89-d7debb8a40e9",
        "cursor": {
          "ref": "333a9a9b-47a3-4625-8801-f300435918c8",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e6f48d1-e405-4012-83c1-6ba277cb545a"
        },
        "item": {
          "id": "46256b9e-372a-424f-ae89-d7debb8a40e9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "83a30cc6-2805-43c2-a220-09bf24f8adde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e48dd9-6d6c-4431-ad13-a3d934044055",
        "cursor": {
          "ref": "e38e8d47-2404-4c48-b451-d1541145cab2",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "53c0a62f-0075-4942-a1bc-566fbda41260"
        },
        "item": {
          "id": "93e48dd9-6d6c-4431-ad13-a3d934044055",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "42382fd4-5436-488d-9175-7a0430b1d4ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 273,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b988a-fbee-4fd1-a096-41441d85d4ab",
        "cursor": {
          "ref": "cc928a48-0cc3-47b3-a082-83ab4198e061",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aa29f844-d506-4715-b94a-06fe63fbd720"
        },
        "item": {
          "id": "276b988a-fbee-4fd1-a096-41441d85d4ab",
          "name": "credentials_verify"
        },
        "response": {
          "id": "55bba8ec-2dc7-4110-aac4-e4ae7babec29",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8329676e-a8d1-43c7-8cb8-95575b565c59",
        "cursor": {
          "ref": "5edb07b1-e0c3-4486-9719-26067a974ff2",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a8a6d098-dc0c-40e5-923d-3c8340aa7b57"
        },
        "item": {
          "id": "8329676e-a8d1-43c7-8cb8-95575b565c59",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "a4dc63c6-ee68-4787-8a18-527d9a0a34c2",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5815ab-84e6-4973-bdbe-d27485ee371d",
        "cursor": {
          "ref": "0fe183f0-123c-4702-884a-26d871ce90ca",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "406cd706-8521-4328-a5ec-b6c1d8556e7e"
        },
        "item": {
          "id": "2f5815ab-84e6-4973-bdbe-d27485ee371d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8bc1d2a2-2d3e-41d6-99db-790570c38bdd",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
        "cursor": {
          "ref": "106ba649-4062-4f44-a099-2def822ad32f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2975d2fa-ef0f-4172-8116-f483a3864c83"
        },
        "item": {
          "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8f9767-94bc-412b-ade4-8828f66e0cdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
        "cursor": {
          "ref": "106ba649-4062-4f44-a099-2def822ad32f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2975d2fa-ef0f-4172-8116-f483a3864c83"
        },
        "item": {
          "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8f9767-94bc-412b-ade4-8828f66e0cdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
        "cursor": {
          "ref": "106ba649-4062-4f44-a099-2def822ad32f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2975d2fa-ef0f-4172-8116-f483a3864c83"
        },
        "item": {
          "id": "73d6c4c6-3676-4bf8-a484-629168064ede",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cb8f9767-94bc-412b-ade4-8828f66e0cdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ad033c-bef4-4a55-a561-cf9734f54228",
        "cursor": {
          "ref": "99cab17c-4107-4f0c-92b7-87821bc38234",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6f32e2e3-5569-4da3-a1d8-7386610a0af4"
        },
        "item": {
          "id": "d1ad033c-bef4-4a55-a561-cf9734f54228",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e80c33a6-b3f7-41f9-9edd-0f04c580da3d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 221,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06064e15-8812-4e94-83d1-7e7c7e3f0e34",
        "cursor": {
          "ref": "af0f079d-1f33-4d36-b0e5-2cd8cc332c27",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c284244e-21ac-4555-878f-73f4d25070a6"
        },
        "item": {
          "id": "06064e15-8812-4e94-83d1-7e7c7e3f0e34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "36bd8324-3002-4520-8698-8259b9c5a526",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06064e15-8812-4e94-83d1-7e7c7e3f0e34",
        "cursor": {
          "ref": "af0f079d-1f33-4d36-b0e5-2cd8cc332c27",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c284244e-21ac-4555-878f-73f4d25070a6"
        },
        "item": {
          "id": "06064e15-8812-4e94-83d1-7e7c7e3f0e34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "36bd8324-3002-4520-8698-8259b9c5a526",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84f472b-a4e5-4d16-abb8-e031e5a4b86f",
        "cursor": {
          "ref": "a1d20f2c-70b4-4dd2-a34e-657f9c1c675e",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d4ab074b-f80d-4e21-9ccb-dafd58cbcbf0"
        },
        "item": {
          "id": "f84f472b-a4e5-4d16-abb8-e031e5a4b86f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3a63c391-0bec-4fd1-acd1-274ef6f77fa9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 471,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d9cc1-f983-4c89-a479-58341bc356a0",
        "cursor": {
          "ref": "65801ef0-5fd6-4664-be3a-69959c38dfff",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e0379db7-2c2b-43f5-86db-e332a1ad4abc"
        },
        "item": {
          "id": "271d9cc1-f983-4c89-a479-58341bc356a0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca4951a5-fd88-4274-ba8f-637552c182bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d9cc1-f983-4c89-a479-58341bc356a0",
        "cursor": {
          "ref": "65801ef0-5fd6-4664-be3a-69959c38dfff",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e0379db7-2c2b-43f5-86db-e332a1ad4abc"
        },
        "item": {
          "id": "271d9cc1-f983-4c89-a479-58341bc356a0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ca4951a5-fd88-4274-ba8f-637552c182bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba741c11-29b9-4d3a-afe2-6e05959337f7",
        "cursor": {
          "ref": "b6e7ad55-74c1-44bf-bd98-da96c29ad54f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0753019c-65b9-448e-a34e-43146f5b6ed2"
        },
        "item": {
          "id": "ba741c11-29b9-4d3a-afe2-6e05959337f7",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6542ab16-e51c-42b3-b83f-6bce260ac24a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}