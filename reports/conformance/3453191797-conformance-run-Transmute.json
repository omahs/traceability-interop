{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e12b708a-15dd-4bbd-8ece-951c5d54c59f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f2a0c96e-dc17-45bb-996e-2d565ac44a22",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45c89e9c-67ab-41ae-a635-de11e1216627",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "38082709-ce98-472f-b283-c927be723efc"
                }
              }
            ]
          },
          {
            "id": "8ecb8cbe-59d0-4cc7-915f-b18c60f65b8b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "262cf37e-7fd1-48a1-bc23-92b5a57360f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a440dc53-f752-4bd6-a902-b85a7b9c480d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "51162a8a-710e-4b60-8174-568eff8478da",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7f67104c-5b3b-4c4a-a076-7a07dc0ebd9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f19a89b2-88d2-4515-ae85-af2e3dd31064",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06312b9e-0ae7-4af9-9e88-273641d1c250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "673797a8-159b-4778-b155-71af635ec794"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf891233-b58d-43f8-931b-fa88d06034f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7965e77-6ff4-45ed-8ffe-ada13140fea4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "24cdbce4-a4f7-4c21-8f1a-ec7fc7383819",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0e016b2-7a59-4d3d-bf2d-edd7f9547aee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd6076f9-d868-4369-aea9-97b8d631ecc1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b93656ef-e478-4ae5-b9d4-b80353212216"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "798453f5-60e3-445f-b6e8-d4b760fd3b18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b37ca2af-53ac-40d5-a61a-26f3fc978857"
            }
          }
        ]
      },
      {
        "id": "402bfa57-e5dc-4dae-8b09-ee70dd202f67",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e4bf6078-66e0-44de-bbf4-fdf40bd83d0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9379b5e-ddc4-4fa7-b7f2-feaee228b5ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fae1c99-eec3-47cd-be55-8fce8d72d5a4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e501f2-0260-4919-aedb-cb81c16c6880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c32e708-cb19-44d8-a333-16b2704c8437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76ba5b1-cdb9-4783-9718-8cc073077bfc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a976a9-2294-41a8-b066-e419618a23e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfd4cdee-2176-4189-879a-a8007bf8e8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed4da59-8b63-4d65-abfe-e5244c27964a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ddd8c0-9945-4a3a-82e1-f55570b3fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02609103-baf5-4859-93da-5c4fc3227158"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb913318-ec68-48a3-8723-cf3e1ee8bd3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9372b2dc-1fb1-49bf-b457-490c53628487",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4211fb9d-46b0-4ebc-a18a-50773a425d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "066bcb83-565d-44b1-8771-7a4ed02a1831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9b0bed-869b-4235-b01d-1e09498580f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f367807-d170-489f-a1b2-d7b3c02320e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6898e1-9ecc-4730-8073-f448e526a0cc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa1771-c799-4e59-92a0-f38c0f33e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d3982b4-b462-40cc-9008-db74a05ae1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17679358-ac9c-4cab-8bb5-2dee79b9b02e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5a120700-9cd0-4428-8ce8-2f676313cd8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f8bc514-7eac-4650-94b3-2543a22fabe5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94764704-b337-4a91-b48b-048d538eb7dd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12362267-bbab-47f3-86b8-18b678f0b54a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d34bf1da-ca44-47eb-a1be-f9c43b23759e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1d3bdd4-559b-401f-a39c-89fa674d6be1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b3c9abdc-a252-48eb-9bfb-95ea5c237ccd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f621353-632f-4f68-8cd0-7591b8623c13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49268ba0-0c44-4569-a955-eab60cd4ae1c"
            }
          }
        ]
      },
      {
        "id": "7036ea3e-babe-4f40-b04b-72f070bc0763",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "56eb3e42-f732-410a-ac21-87476835f784",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f2c9630-b482-41bc-8986-0869393cc8f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "31503c73-89ea-4fc1-9f0a-d5cd44a159dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fabf9c4-b963-417c-9671-04114fd5f41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704ffeb3-e278-4318-ac5a-5a90ad45aa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bf7b68-21b4-4bef-a04c-6c1eb07a8b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a9f43d-695e-41ab-bae4-d243a973d2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964f5482-eb17-4a7f-98bd-cdc18a684194",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8088a7cf-a575-4c65-b085-175e87ead4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98c7b83-8547-46f0-84f6-a388cb770c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc5bab4-b88e-47ac-9734-5b6267d9cb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68e5d292-f840-477d-b1bc-e9b09000d5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4283844-6da2-4053-ae76-46129d11c54a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e7d63c-22e8-48cb-abb8-a83ab108fd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec62e74-2475-4580-9365-ef27683282b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3810718c-c276-4dbb-98f4-7905697c6218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf419cf-5cc0-4111-9d2b-1017a4ff2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42d3c6d-dc87-4548-8ff9-5af0077a23a3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73b31e-3f1b-4d52-b412-3f5ec06c97f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0279aaa-0d66-4d01-ac87-69c221852ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd18fe65-ab23-490d-ab37-446371b93c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9799bec-b9e3-43b0-b7ae-47f7e6f77e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfbb115-3692-4e31-819f-30c944cf64da",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e2024c-758f-4a5d-b611-96ac96180bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66302a60-cd32-4c3a-b325-9123d6057bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c158736-411d-4033-8ebd-1e41e97b72ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dbedf40-8cbd-425b-aea2-91bd528d2509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b196df-ec26-457d-9f16-649af8ca086c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752f411b-0df1-4f13-a73f-0f4944e7a056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bd9078-71f0-4b05-8d08-240be3162290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da18e4e-7ac5-44b2-8e54-75f2d0e60218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0b0e0a1-d9ff-4dfe-96ec-e0be00d2eca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b383334f-c880-4b96-8987-eba2a6d1214d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f28ac0-4fbd-4cf7-a494-be7d5529f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88174c29-c706-47a6-8c81-dfdc3898ba00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155e7f5e-cedf-4dd2-b775-d1b110826075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0865c3e-7336-4d61-adf9-7edcf4b91b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfb255f-222f-4042-8b32-d012111c6458",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708e029-e1a4-4554-9078-08c3c923a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a06307-6b66-4816-8d0b-a0d154b3f043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ee2eea-8c70-46f8-9b7e-99e20bd2aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6be25e0-2f46-40ae-a2ce-c4fd2edc5668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb79108-2f72-44b2-bab7-d5e67b455245",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0cad4-7b5d-4d59-a022-88b22ec92c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ba71dd-5b56-410e-a158-3d1693c1ab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f0ea78-129d-4c5d-b237-569eb87432bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e276722f-e57e-47bd-83ac-32d77ad9f58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075ae76f-ab07-4fbf-b634-6a39e1e043a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c17181-e160-45fe-ac89-14c56270a636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88cc87f-88d3-4550-877c-5913c27fcbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7837e-e7c7-483b-8af4-20076bc208e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37012324-7dee-4cba-a47a-61fb631389b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940bbf1d-6cee-49e7-9d1a-2f52ba0cd6ba",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826373a3-add3-425e-9306-cb41e1ebb6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b0627b-278f-4051-9d5f-6b7ced4f7393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b4bb5b-153c-4a71-87fe-b03e9c9554ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b759b9f-c2b9-4118-a14f-a18a5fbd0637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05cc37-5827-4211-8340-4a8fe79c2dc0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd8debe-ed78-4e53-ac10-7843d1c6af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4891fbeb-602e-42b1-af7e-a5a269f42e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b9591-6fb8-4b28-aad0-7a31ba347a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c698789-57e4-4d1f-a9f9-445e4fa14342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182f0680-5695-48e0-a766-d98f99065de9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64864702-d3ef-41d1-945d-ea3d88153959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec97db4-3549-40a7-85e6-516d0e304f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cc0485-26d8-4b88-a9c1-ee63765d2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "478a4169-06f4-42d1-b719-055cf0391a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ba9209-5d14-4a21-b0f1-63022a9fea98",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edfaa3d-ae01-4442-abe7-b3167a580546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dc004a-9edf-48cf-9174-da0357b2ac88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ccadf-41fa-48dd-bfc6-716e5e6b9e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7609cd05-5712-4045-b04a-f0eda0ecc9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655fb04-b27e-480c-a253-28e82a7a7acd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54388521-8e27-4fbe-9162-733057add983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d4a744-ec73-494a-aeff-a545c9181f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1e94bf-6f2b-48c3-8f27-72ab4b47563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c4c084-23c4-478b-8d7b-56ce67b1358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b85dea-2c78-4898-a786-c7dd8459b4e1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b00a32f-4da1-49e7-bd7c-b7f3f3346b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9063eb-24b3-4151-b120-ffe297156651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e35c396-618b-4231-b721-e0429fa72a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a966ba2-281b-4b8f-9317-02caae5b48ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c169969-4068-4440-8a9a-39b8300f7350",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1e552b-edd1-465f-b857-8fcb3b48e50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3470be-c3f6-496c-a301-b55fa82c6f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52b9e22-a1e7-4d4b-8f11-c978da290e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f916afe1-379d-4b02-b2cd-f289b39bfe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd97c332-43a7-4692-825f-56603631df77",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c88c59-a91f-437d-a3f3-d7a4e95239f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498aa9a9-641c-458d-b7a4-d6ce0bcef173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67078127-8217-40ce-9696-83a3db32c3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f74891-d32b-4b44-813f-898560e1e150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cec804-c307-4a8b-9f45-adfb6a278256",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dfe6c1-f85d-46cb-9727-903421395d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1783d5-4434-4871-b17e-8d7472212b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3b46d1-deca-45ac-9daa-7ef48e90a859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cb0220-319b-40a2-be44-c50967a05e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105618df-438c-4b6a-9df2-4d81ac5ac45c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeec845-8501-4464-8b3f-0d4b045b45b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0791237b-7e2c-443e-8b2f-a25112c3d151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2422460-4638-43cc-b794-c0c77fb0952d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aab7b92-e3a0-4765-9d4e-3339dc4cafda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ebd89f-bf71-4eec-abc4-cf3864fd1da3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8872815e-b30e-4893-a07c-9bc6c7ed3acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474bf7d9-6054-4fbe-8272-eecac0c760b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51848676-40c3-4193-9d9d-d3aff6994416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "084f2736-cbcd-4b83-bc47-cf246ead0cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e7158-623b-496b-bcc0-55612aadea2d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771ad332-a27a-4672-8e32-737f28ccb824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debdde9a-c414-42fd-8093-570567b72c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120a2a83-b3b2-46c6-add7-b82f3f2cbd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee87c87-3b34-4577-a40a-fc31e867905e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5bd782-73c2-407a-80d0-0fdb68402adb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506dc922-b662-429d-a8c8-8c6b271802e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4dbb9b-cc2d-4ddf-85e1-2a1befe4a4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f83eae-aa97-46fa-bda3-d02f1ceee6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d755c774-b888-41b4-8399-09fc89bbf90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795aaeca-cce2-4562-90e2-5e059e2b24cd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132845ea-f2ff-4bbc-bd38-ca4b1fdffca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb6c302-0180-42da-9f75-ac542b7a6f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9827136-040e-44e0-a000-ae9d8c4ced1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3be7050-0cde-41e0-9cf6-87024dc76c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1c400b-8dcc-4d16-b274-71ba9b2aed35",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e447b5f8-6972-4452-afac-5197bdf104b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18da15bc-354d-41fe-807c-db1218a1d34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fe8106-4766-44e4-a0f3-6f04d0880a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90bd056-98f2-40b8-97d1-837ca505efeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2c4ad3-019c-40c6-8507-b135d888d7e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ec732-7857-4950-8360-644e817b37db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c260ee86-3583-4fb4-8e83-dcbe1d4d7c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6672cf8-cb71-42f4-a777-a2907c8c1038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb1657f-6b52-49fa-9846-48a3fd39acc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1034fa-98f9-463a-b71e-75717afdb23b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b377c0-6156-493b-a531-f52f01000199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f042d52b-00e7-415d-a44e-cce0ecee2be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4b4ec-d53d-46f4-8f07-f5f343057dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9480d2-4132-42db-825c-c65224e88931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8005411-447b-4623-b060-62db6062030b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34793fb3-458e-4b3c-b9c3-b0a12f39d737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78918d8-dda7-4fcf-af21-33c90160c9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7bfbd5-75aa-4473-8888-1c40f6d05103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0fd3ba-79b0-4200-812e-a3e6b0d3c5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea24c667-9487-44ad-afb4-82633744977b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd12973f-4011-48e3-8d5c-5824cf8c8684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73321e37-dcc4-4a59-b447-c0b9a7438d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d7c920-4bc6-4851-bbb2-1aeb877763ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff00d9ec-b89f-4289-a074-c32a4021f5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f846a6-7f60-42a4-b05b-0687d30f4c1c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a84ed10-f847-4860-8273-46b341a5d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfa8542-b977-4683-a754-ab8deaa0b30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a442b4fa-1937-4c8a-9aa8-0f23259706c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaf9879-2b40-47b0-9060-3bd2691eb750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8507963-67ba-4777-9e50-245c8844fa2e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e8b7b8-1f33-4993-b1e0-efa27291a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7385667f-e680-47bf-823c-4632cd91b5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cb3329-8d0d-4b29-a7a4-3d416fdaa1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "427253bc-4900-4c53-a18d-8727c77e65a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cd02b4-466b-4a5b-be78-f4ee8e71ebb0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf05559-bef1-46d7-9767-44aa85f72a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5321bc-5e17-4b7b-93c7-a193ad88ef6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00207bd4-b344-4cab-b21a-db78c59cad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f787ed2-8a09-4dba-958e-5139e3ef6bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644eab27-c9e1-47c7-bbb5-42a83be6523b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cff1f6e-5329-4c97-a142-76ac324e586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ef8ed9-bb0e-4c93-a354-9aeb075e9f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba262c8-09b9-4001-8d95-a32366f8b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a0d90b-a3f7-4ce4-bcc8-6fa633702b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912a0f49-cb6e-4043-a833-26eb9cdba039",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef25bc07-940c-47d7-9337-4821ed1e4f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd87e38-6ecb-44be-afcf-658362a662c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2a995e-843d-4792-8852-69d2309875ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8111e5c-472e-437f-9bc8-0a4ddfbaad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148f2738-9372-4ab2-8ffb-2f78a3ca66fe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4e951e-87f4-4a3b-ac76-bd1c638b1a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b93198c-8d8c-4844-9249-d99b889d8981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6114e4-fc4b-427b-ac54-643c28e9e86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5683f94d-b8ac-4df1-9b42-2bb48892ac2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb638f6-cd5a-497d-a84f-07c9fb418777",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2dbf15-338c-4e02-af6d-fe3bf87e499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdfb0da-c3e4-44ba-bb4d-ac3eb0c0c625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29faeca0-a454-405b-8ccc-7ab418a65cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d907b4f-874e-4e4f-baaa-e8b55196547f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb54424-9cd5-4205-b10e-ec06a5ab61be",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c019bfe-51b0-4cff-95c6-b12a4a598dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6475ba-ea12-4135-b86c-bf9ad56aa28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af2e9a8-891d-4762-9e92-3db18eb0ac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b23fc1-8dc0-414f-8a67-584a6cc99efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb65f2-c39c-4c61-92f0-7b23179ea0d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d55b4b-3ea1-44b5-996c-e1b4f640639f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3ece9a-61c7-48c6-ac45-34a7b9f56e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74d5770-4250-408f-8f06-b98dc1cd6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a0bac1-423b-40ec-b87a-804db417675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d1c707-592e-488b-908c-11390ab88484",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc43d348-6ad6-4a9b-bbba-8391c8a3da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72795994-72c9-4d21-89ce-6b966bfdd992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a70847-cd72-44b6-b312-cad7f2471c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f31a212-83b4-4a83-8012-a967a84f804e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d845248-ec86-4327-bbb6-f2a64c1f7922",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd37c00-70d7-4e03-ba33-f2ea3484ac0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff99c2c1-97e3-4b8e-859f-c97543fb7a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8518751-eb60-4d9a-828c-e042ca16ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8b23e6-6034-4507-91c5-c368dfe7a924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02c2bf-9215-448b-ab78-f658bd23024f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d7581-3f45-4b7d-b48a-f5e3a7adc8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162a4d4e-3896-4677-87a8-916f3ea18857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027de03c-6724-4f7f-b801-69c20a965c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d81bc6dd-946f-45e1-8a1f-3e4ca6aa42f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab066ae-5c1f-49b9-a7d7-69573f65ff28",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8022c947-e7c5-44e3-8b0a-927d22a63400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98427643-fd78-4131-8f85-ae9d765134e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91d6b38-9ea4-4ab8-89ed-e0bf1713513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "34ab1800-7fe2-4689-8e5d-c218039f8252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190de913-5bd5-4de3-a074-be74924760be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb8df2-a284-4bb6-abc2-1c363b75d6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaaf543-c8a7-46c5-bfbe-0c1ba25590d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cec0144-ac9b-4b1c-826c-c3d8b80ec5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1629934-ab44-4c31-bb73-4bb105ede8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3111673f-e1f6-410a-8839-c3b64e85f737",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e02a38-e324-4f1f-ae10-c047c83ff83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a0b355-476e-41fe-9296-0a5d397b7a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1df192a-14dd-4116-8872-1cbb483b78e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9068e229-10a1-4373-82fe-a4a918076399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fd2ff7-0f40-4454-9124-63a3a35e2710",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4abd0e-e83a-4223-9220-55aa23741ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f7b3cc-9293-4658-a42a-9f0e1acd99f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d139c39f-95f6-4384-92c5-b6bc5002d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b2fc9d-26e0-4738-a76e-4f420e5c6bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f16f22-14f3-40dd-84c4-855d91cd3c33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b59f40b-dad5-443d-923b-b39872fa4e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17548f2e-6ded-455d-abc2-a2322fe25f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ec848-3790-4a1d-9811-3156c50caa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb89833e-a8b1-410a-b398-4f2c48cb555f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424a5123-8755-4c9d-96c2-fb64fbbad857",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c819891-0f31-4637-9d7a-dab56babe9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca269a8d-6741-4c10-a6cf-a461625a46a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4653c2b-5913-4fc1-bf3c-79f6815ab3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce8bcba-7911-4f6a-9f55-51c9eece39cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8992b4fe-d85b-4d94-9dc1-64ae3e1a8df3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff367e-7c0a-4ce1-af7c-be676c2649ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6dabf0-397d-4d49-9d03-34fb34f2e920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c8bd56-d315-4982-bdbd-7ced5ac4e17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef66536-f2b1-4ade-8b13-480eade4098a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d956fcf2-9a8d-4982-a0c0-1563e3f77f34",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e2a3e4-0c8e-41b5-9972-2c88dd8981dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577bdf08-d4cf-42f0-b723-78ccc1d81db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5bc29f-81d7-4848-a233-7a720303de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9902995-c221-42e9-a051-54c58fc42027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb5838c-f3bc-4117-8102-fbca208c631d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c74b885-ee94-4a2b-a2a2-57d213d0d7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c603ef-f2eb-46c4-b7b7-4c306cfbc0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fe20c3-8d39-4041-961b-8c19510216ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6fcaac-265d-40f8-8fa9-ad58b330d339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4708ccd4-819d-4c38-a36b-037c4891dee2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b4dfc4-b106-4c1b-aec0-a79b9e95f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a6786e-084f-4f58-8f0c-f2ce6c35803a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba35c7fe-9de8-4b2f-b68b-931abb9f0d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddf6c12-04ca-4dea-a55e-8949fa8d7f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab35e8c9-960d-4691-bbe9-e1c28663193e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d972a9b6-05a2-4714-86a1-b4f206351c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a56d787-2c59-4527-9909-f1290bd8f0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d1a69c-4a7a-46be-9a87-e29e7aa53b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28cc5239-5ac8-47cb-b888-6cd40e91d19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5b9281-4de8-4fb6-86b9-4fe0f9385f9e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6e9b5a-9909-4071-b91f-fef08782a4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03e5475-4608-41d6-8143-1377cbbc8aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bcf2c0-7705-4e7c-8de4-41e3dfa7c28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7df3e56-82fc-4b22-9af9-388ae20f4367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86537d7-e7cf-4a01-80cf-e44dbf73a856",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e333fcf0-8eeb-42a6-a47b-db62c636e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cf8fa4-3244-4552-a6c3-63fc24b26f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae933354-765f-4bc3-8e3b-9df8be46a58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce2d995-2b54-4e18-8cf6-22debd75bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806e48af-5dd4-49d8-aaef-831c1f01d344",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8424bc-0c45-4fa8-8c54-3b9074a9856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45f29f2-5058-4c26-a6cf-eed09cff2427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c5b06e-507b-40fc-bac7-1b07fbb78390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35005c37-3009-49e4-a1cf-2ee04b57bab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4847dece-1c73-4250-a192-5c1c42755aed",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa1f42e-8a66-4c11-ae56-ee49fa4e2697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d69f2e-0451-4a25-82fd-f17d4d032a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2553fa-c29c-4870-ba6a-ae6af38d6ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c503c5-4c42-4d44-9cbb-926850cf2ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dee2c1b-7751-4875-ae1d-e3189e63e510",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069bbf67-6ebb-42ac-b517-b5fff811e33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a118091e-3de6-495c-8a59-b454074bacd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99d2c26-b946-4f07-8b5d-6e4d1cc7adbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b433a2-db60-434e-9c1e-4a087c35ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f4647f-d406-47ee-90c2-81623bda8adf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ca6d3-f427-4706-a5c5-f4db3c03af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e7aa2f-5ae5-4094-adb2-60773df55bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb3dbdd-a1bc-48e0-925e-0a22dba5f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "beb136c5-4499-428f-8357-3c73aa37db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c9cf17-c8e7-48a2-aee0-f6db7741557f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e43442-1843-46bb-b8bc-f945466b3a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f8a8c-720b-47fe-8528-a58c395ffbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ade274-5e93-4fb7-affb-3c76a743ab3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61d29715-4df2-4b54-bdea-402a4feaf95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9864fc97-8fa7-4f31-8644-e537570d8edc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f77e064-fe2c-497c-bb94-62c403efac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b1ae9a-29a8-44e9-ba94-c4dc11a3ee3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40918090-5cf5-4fb7-b9cc-da75452d871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b38d650-dfb7-4b67-95fd-2b4a3bdda81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ae0e9c-8220-496a-b464-2cec19e51904",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e92a443-ebc4-4abf-a014-ff79686a6bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb09b712-1e37-42db-8daa-b43c727beb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f811fa8a-5a2a-4a1f-9dc7-45414a72059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb5968c-8cdd-48ab-97cf-5c54c916e977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85aa045-6f0f-4394-b89e-2109469b4854",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060213d4-96b6-4efd-a722-b8ef624c9210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a222d399-af46-4ae8-a120-7e8fa427d767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d338fdc-a3b5-4872-8a7b-45557c2c7369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff8b255-cbf7-442f-987e-4f86f0ef48fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea484686-8211-47c4-8a5b-bdb65d02d941",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3457203b-8e48-453a-a219-c01cd3a04a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0d1a49-afc2-4518-bd2a-f6603eae0fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb3f3cc-118d-491c-a4e2-fb35f901f632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfb3616-1b9c-4d3a-80b1-75d88acb75ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924646e-9388-43bc-b3ab-bf125e8325dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dfae79-a3ae-4158-a58a-08e42a2f8c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd0a74c-92ce-4b5c-bee1-d9cc8b5f1eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced4999f-459f-436d-96ef-8bc3a90b8c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7c65a2-0453-416d-bba6-7fd65fc42aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e638945-45d1-4668-b48f-f7e7e67e1c8b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a012d1-df44-4eaa-992c-c48da63ebd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6184d649-a35e-41f1-856c-638a4f2621dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d0feb9-eef8-46df-9008-2f104a360ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd0d3fb-b8d8-481b-8fa1-f34a9fa6203e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9241dbf5-226e-4918-a352-d9b6c96d3322",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6980d677-d557-453e-bd39-abbca91fb919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd4c5d2-8263-47c9-89b4-518800677e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b575a-5cff-4e28-a4d2-969b71bea729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea22a4-8414-4752-8f71-3af2521e17cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407003bb-b925-40b0-bcde-30a8625135ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a913fa8-11cc-4b0c-ac26-279ed2e9dc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720856d8-4962-40c7-a94f-d168d72b006c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57f149f-435b-4a8b-9ce6-e9c28738d03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "478d0cb5-2c48-483d-9d5a-afad7581ddd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e8a35f-d628-4fb2-a561-795b401f8a66",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b945b1-d2b9-4e85-93ea-1477aa0c177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e656938-ea0a-4b2b-8a67-72979867bab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01300903-fa77-484f-8394-ea432236f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8125420-e8c1-4243-bff2-2d800e7c8f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd44279-01cd-415a-9565-a89451d37a1b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73a3a8-044e-434f-b286-10686554aefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec39a1a6-ef36-4ae0-98bd-39d55d77e465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be39e8-f352-4139-982a-780319c8b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f914c00-34f3-472d-a628-3f68e0ecdc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662507a5-a217-4138-9303-8a803180beb3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca42fd85-df43-4f41-bef9-6615031cc4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f1f5a7-49b5-46b4-8bf6-c668918389ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4abd8d-aacd-4113-bab5-8c9dc9b99735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a56ee8-1d8f-49cd-a3cc-155d99d9c379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6425ca4-d802-4be0-8863-a7342fa991d4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86602617-57d0-4a53-b3b6-7f2c393c9a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e1114c-b5af-4a46-a349-3e0d06dcc466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81dc9a5-e3f4-4852-87b6-754489cdd8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfc9dd4-987a-4898-bab3-f33ee93de150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b99733a-6d3b-4355-97ca-9ea1bb1209e9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fdfa0f-a9b0-4812-b4b9-b803e023bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f49366-0eb4-4ef6-99cc-7615367dd049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bdeb6b-b2c9-47f5-b3d7-def1a04544fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b8d84b-634b-42a5-965e-054efdbb1efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af2a3f5-beb7-4955-9430-7e7a82c6d609",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d363c13c-935b-43c4-a253-08be416b95ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efde925f-09a0-4577-8112-109e82fa7b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedcfb8c-131e-4dbd-97e4-f9f1378a963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11d6513-eed9-4b69-a3c7-4a83ddd32954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caabffd8-1460-4401-b9f5-174d494c1d07",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3528724c-dbf0-4e00-8e2a-a11dfe809973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a8dd35-94b8-4abe-9c6d-51a7ff9bef17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5bd863-910a-4968-925b-68ccb70260ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2d5a41-4b22-4d72-80b4-1e8740fd8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f67845-bcab-4362-a8dd-f5e69635edec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f58f046-9e03-4f6e-9735-a63b04b1c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89af3a2f-b1df-4f81-8857-32c5fd3903d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3adee5b-f2c0-4ab0-bd34-2cf293444831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4679a5-4070-4fd6-80e0-599d19c9f0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff29893-0c0e-40d9-9423-76718e95b71f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e06d09-daaa-42f3-8ec6-33debb59a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68745946-beb9-4e13-bca1-101e753fa1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaa4f1b-d817-4d5b-bc43-046d0c41a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb29541f-19c9-4b77-96fa-d77e8c3e4710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45d7a6-c973-462d-a50e-65a7491b54fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a2b424-42f7-4464-8fff-1baf779427b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc58867-7018-4f8c-aecb-58d3a8726a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba33cc3-a51c-4c8b-896c-e1dea9b273a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6164d68-eb97-46ce-8354-7d1802522a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52443e13-63e1-440e-afb9-b61485483528",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea04612e-5c6c-4353-a9c2-be7e5423dee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03359c08-53ea-433b-83d4-d95c98500ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022d068b-fb48-4561-a23f-3a98baa8276f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8681b132-cac1-4d45-8c91-442848d866c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4c2967-ddb6-4ff8-b19f-f8aee6fca3fe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61950bdd-4d79-4fff-a24c-7514efd70811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536d46c6-5bcc-43b9-a52b-7d364b071723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe00bf6-04fe-406b-8259-d6141dd38b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee591a9-7950-487d-801c-f77a333587ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166acab8-6891-4b17-affa-e0afc50b63e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9436126-0aab-4106-ac81-95fcd8878755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee01ea1-15c4-4df1-b87d-6c06254b2a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35787b00-6e97-4028-b750-ccc4903b6983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5c14b2-f01c-45a7-9ad4-f0e147f12e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1043d6-f16b-45da-9af2-21335d85de7b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2360fe1f-b019-44c9-808a-9db4dd0d86ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a02da3f-375c-4b42-b3df-720dc7c24e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c5d265-8d4d-48a8-a7bd-dff7db20a9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e216abf-b4b1-446d-89c7-1273af36e82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80167233-8511-4553-8b81-21a47d213a30",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b1df39-0f9f-412a-8808-33409b83ed33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c1f875-ee40-4822-82ea-d5b782160195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc482764-589b-4ab5-999d-df45cb177cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "670d6f7e-fe6b-4761-bc95-c1b16bbe95a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7bd7dd-9780-42d1-8bec-2c3d42c2b714",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22372d-80d6-4891-84b9-95b574426a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98db8b8b-3ff4-426e-8ada-4ef8b50eef3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158fef17-ef68-458e-b32d-2fe7a1a2ad33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "405d016d-962b-4452-8567-c9a295df5c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1703f671-3e1d-4f7f-b36b-6d0a768037b8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1700c0e-4e8f-46db-b7d8-03939091d398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86f7aa8-a11d-4ace-b931-12eca0eaa71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a9493-0986-48ca-a180-4b91a1cdf6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "387723bc-b7b8-47d5-b1d4-9245235b4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3d331b-8cb3-47d6-9f71-1a52ae0b363c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79edea74-0a71-4814-b211-9f68e045f3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c033a64d-bc96-4236-9703-1854bf4ce92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb00a826-c356-46e4-a704-9df5874354b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d01934-5323-4e31-83ac-459c90609fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01885644-e750-4321-9287-83ff116cdbfa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c335df5a-90bf-453d-9c25-b69135a3b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ff9bb8-83ca-4e1f-8064-68bb11c1045e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442bcf78-a87c-443b-bf03-8bd5ff53de41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23a356ad-aa59-48c0-9f43-d9030cfc7da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c945368d-b429-4b5a-b62d-1762b7583d29",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee85878b-9f8b-4541-b76a-7f4a99793e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408fefd2-f3da-4894-bdeb-49d177460f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442d0b69-e690-4787-b1ec-8796a8ba9a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e603d5f7-b467-4a3e-99a5-f7909fb8b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afde80e-dc4d-41d6-ad3c-204d98e0d516",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03474d1-dd29-4bfc-a335-3b143599d2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3158a4-231c-4d52-bc1a-0d2d56d1396c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0ab4b3-fe1e-4595-bd2c-e62528cf1c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80d8b668-0c4c-49db-a891-bf679677247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c0e583-3b2f-4290-ac8f-db1115c4d373",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9622b873-c11e-4e45-8d9e-c1ab5d98befe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008caf0d-6f19-4ff5-b25e-92c7d84b2b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af43953-e76d-48fe-98f3-ad597b7d2940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df321b50-0108-40f5-996c-b94b632304e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2b1590-4722-4d7a-8983-ef90be26f940",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e69dcb-6f5a-4985-a85c-827db5828a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4c4fa7-b1f9-4403-b5d8-a492ecc8e3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8069246f-5f4b-4847-b018-8b81292cab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0658a64c-1329-4514-bdcb-010587577917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88697ef-cfe0-4c38-b521-da4fdde139f7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6581a6-03f4-4ab1-85c6-df2183ac002a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa7a2e1-2d5c-414d-8680-346df7ec9e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530c9d14-05f1-49f5-99bd-a5e6dcf61c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdcd8d1-581b-4d83-8778-2f87a56e5d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4071d6ee-301f-46be-a97e-24cc7fa508c2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977f36c7-5549-4507-b57b-c83d589617eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a019100-9c56-4f65-b492-a4ebc20d48d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643b823b-ea5c-4308-92ee-2653241d7e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb308c3-b326-4d67-8554-c81515093779"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d158331-ebe8-48c7-84f4-cd2fe745e4c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8ac2d5a-d482-4f7f-96f3-3e0537426669",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902d714-a298-4062-a2d7-a999a62cc402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f6d44b7-a8ef-416b-88f5-cb5998fb1747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88351d86-d303-43c2-b218-2157e574d99e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4e375f37-d44e-4d42-ac29-d200b151f676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d299c1-b05c-4633-9c69-de9cea4bea77",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb93f05a-57fd-4f99-b305-681ba604b060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13b47167-20ce-46d3-89df-7c5100b4ac67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04e832f-22b5-4818-9345-d2e8d4a03e13",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c9869bb6-13f5-4363-b797-ef819dfa3e46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ab8c493-c62f-4611-9f57-94529cfd3171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc0bd59f-dfaa-44ff-9cc5-07b6589a69ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99a91681-edfc-43d9-9599-80670dfe2c52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6701907-a861-4e18-b0c0-f7997ef57d2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85d8d2c8-f9c8-460c-ad07-24a5582fe6b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a1a56c0-1e86-42e3-8bf5-f55cd656dbf8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11c917b6-6b91-4c03-af62-d253d0eac4a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ed870aa-fb90-4fa3-b0d0-6df9904546e6"
                }
              }
            ]
          },
          {
            "id": "c86db2a4-0e93-4918-8c06-d1a5c3fc4b57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9334584e-085c-4e89-8bd9-93be5185b5f4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efc622d-f23a-4ed3-bfd3-e5886d5a64bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "698d058b-6172-4efc-bf1d-3b832d1ac978"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c57d91cc-7d54-44d8-b66f-60ed62a4fad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0a20588-f0ed-4292-bbf8-f9b153dd55c2"
                    }
                  }
                ]
              },
              {
                "id": "53afe313-f044-42e0-8299-d03c1495fe08",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b39873b6-ead3-4f12-ac55-0f1ddf0aab15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aebf9dbf-6f56-423f-898f-ba0f0c794be9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ccfbcf2-13d9-442f-ab39-c299d73c3984",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1b27d36-185a-4850-b1cd-938fb5e05b2d"
                    }
                  }
                ]
              },
              {
                "id": "283e3232-ecec-4959-992f-709880425cf4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f5d5aa-d89c-40f0-8090-454eb7c5305c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bed66d05-f964-4f0d-9ba0-cc48a09f6cd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d05bb433-69f2-4058-b30a-bcac83a26005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72614196-7de4-45d2-89fa-914e26626917"
                    }
                  }
                ]
              },
              {
                "id": "e243add9-abe2-483a-a44c-ea55088c1997",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2beccf36-5667-45a4-ba14-4bd8338ae260",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4107c90d-dd8d-45ee-9304-7b114434f8e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12125a9-7ae8-41d3-b8fd-0a6005337aef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55d35c9a-4379-48c7-96af-fb179745e098"
                    }
                  }
                ]
              },
              {
                "id": "59544a47-5932-4a5e-869a-96111fe00cb4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b05e2151-f0d9-4abb-86e3-2b527372235d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc5f8a9-bb2e-4750-833a-c27e50f7be9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc7b4553-c913-44a0-aee6-9c50e664427e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b38d655a-e13f-4b38-a30a-f7b838538f66"
                    }
                  }
                ]
              },
              {
                "id": "8143c152-add9-4660-b1f0-794bd209c0fe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b94bedca-1236-4f29-b864-0bf879a38ca6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6c4846c-2c4c-4477-87d2-45c93ae9c406"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5da302df-d216-4b23-aafc-68536ffd49b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "437724a9-6e2f-49c2-85c6-426c4e544da1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "985adf6c-353a-453e-915a-0fbf231f915f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2111f43c-0d4e-4d20-a988-e0cb413c6b64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "259f928c-4560-4944-a1a5-814822776795",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed9c31dc-f561-4c4a-9a24-befdecbc72f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0281a87f-0014-40e9-8348-d43bb9ae5749",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "13399de6-8930-4387-acd4-6b7e0a6c1305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b20d8fad-be30-4e43-a18e-c8ae1e05c26f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c71f1c8-1773-4237-b119-b3c8b87c4216"
            }
          }
        ]
      },
      {
        "id": "f28e5ed2-6f37-41d2-b67e-8558a6aa9ccf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5a1772e0-5438-47dd-a9cd-f7e57befb8a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acb8a36b-2acf-46b8-aea6-c2ae88348eae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02e9829e-65e2-4761-8041-864a7fde5fa6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c28dc7-b8e9-4a95-942b-81ab4db077ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8675949d-3982-4c4d-89ec-89f78e27d8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e4735-a439-4b40-95ff-d8f9a5d9cdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "384048f8-6886-46ea-a601-3466720e85fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327fd2de-be8b-45c2-94a3-be15d05e7665",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a712feda-6bae-4020-8f39-3e71f6624df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d9ed4c-b57e-4a90-b79b-841475324d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d4017d-628b-42d0-a91a-ec577f41a9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d631ad20-5a19-4c4e-91f9-44548c27c6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0066b69-1f83-40cf-812e-b3dfcac36181",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a912d7-dd70-4970-bb30-2a799ee3551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c25d8b3-546f-422b-8c91-eb52e061e23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28181a00-cb81-410a-93dd-8ef47834500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24df07fa-fc5e-40aa-a833-08b0e87af2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c696cc-5c17-40cc-855a-78ffb58d37f8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab566e14-4270-4c5c-8b01-e4b1d8a23e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512edaa4-6215-4d1c-997e-a22b559f4c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02cdc16-d4a8-44ac-8dc4-79bcc00701e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3963fc-c6bf-483e-a7d4-82d45424c07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3cd8bb-0688-4337-a2a7-dae0551f3730",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac4725-f548-424b-b110-2ea4ebdc1494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a655f32f-4e41-4b1b-bdd4-4f0d6ed8ef2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b41b7-22b3-4906-8348-0cf13d1f8164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5485881-a3f6-4ef0-9252-4384b7ca2096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855c815a-73df-41d6-b668-78c147483961",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c36b2d-c488-4e8e-aaae-5a8ef912c635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323ba9a1-4b15-40e7-8417-ca61d2cb9f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8993ec8-8a47-4ea7-b8fe-b8efc74c3e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e8d874-7dcb-432c-a232-83de4f03b216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c1cfeb-1beb-4ced-97f4-e271ea6624d9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdd4b7c-6122-45b6-bcaf-81e25671de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b09016-09db-41b9-902d-dd497f1ad4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e77697-4840-4d34-9b61-4d1eff57528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a390d19-ed9e-4f5b-8fd2-0e9b2cee1959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24725519-4ce1-465c-a36f-aab34b9868d1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b04b58-9941-4f33-825e-7f046a1e21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920efe9a-9ff4-48e5-b248-057118627e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775dfef0-4dca-4298-879c-218de9edc5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb735aa0-9c6b-4f93-9e9a-191a9551fe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9ea29-8f3d-4d76-ac95-9c7b1042e26f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1087b55a-6036-4350-ad99-428a021de278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec5760c-c209-40ea-b52b-6d7acd74ab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77acc639-82b8-4a84-b592-aea33c33c7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e55de6d-b930-42a6-81ed-6542749be3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cdaf71-8495-48c0-9355-a45563c11a04",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb2254-609c-4bfe-b14f-0875a77fe871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed4f0c6-8447-4e2b-95d6-5fbed240a973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80f10b9-14cf-435f-971f-0dfa133bbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5ec470-6515-4619-bced-15bd1dc0dab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f6dd90-5585-4505-b904-d50301ba2ca2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee27bbd8-532b-4c9b-97ca-bb1e18d23447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b549355-2e2e-473e-8166-29749d7a1b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9582934-e39f-4cb5-9511-849fa926e7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d780eaf2-9158-44df-82ce-8b18180cbe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a88de7-79b4-4699-b191-eaa6fe5d8082",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae31a1e2-2c8b-493e-832a-931a3e0d9463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec18ab9f-23aa-4580-8c47-b32a09496658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35779847-3780-48f1-bb9b-4e2c32beb9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a47295d2-e2ee-4db2-8a8b-52ff9b17cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb7372f-fcc4-40c5-8fcd-3853886e93d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb615b22-37d2-47da-b17f-31b45ab6540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac48e50-b232-46db-88cd-194fdeaf295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eefc46a-667c-4121-a3e7-b76381db5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9891191f-c0bb-44a9-974e-b93fc67371f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157560f-869d-41b2-b9ad-186cb46fcb51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136b82e8-6bbc-4c84-b812-ee22b6df932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4b34ee-5990-47b7-9e25-a129b37edfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980dfa8c-aa23-4690-9426-5165232a6960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab2f628-2348-4054-a79b-27aabfc620a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e370e-fdaa-44f3-8496-61dd3456526a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8df276f-7719-4169-8ebb-dec2051ea7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b2638c-6251-4a7e-9414-cc960b97d011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385f334e-2139-469b-8bd6-92ff28d9c76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c7a6b8-338e-40a6-baa1-2d9f4c9c9805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb4100-0363-458e-b254-3bf2dc00d27d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaa13dc-aab1-44e5-9078-77fe003cbeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975b5199-fad2-4747-a11f-2a5d7b496d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f17064-e115-43dc-a3d7-fa12fcd4eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "80876d6f-21b5-42f0-adf7-c60ab78e07ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1715e6-fe30-4517-996c-14090a1e9678",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40cdfeb-abd7-41b8-ad99-49fdc85ecc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb29861-886b-42d1-aa51-9f946daf9c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ae1634-7d79-4230-b267-0110618b96d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "384d08c3-a3c9-4a39-bc5d-4ca5b4095890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d4c5d9-676d-4121-ab5b-37c1fec247ff",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7954dc62-27d8-4b5e-a912-6472ab9ffcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25686d38-4f8c-4255-b080-a18b7a301740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7435b6-454f-4b60-a2b0-d6160157f32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6775ff-f631-4dcc-86a4-e901ee0ee017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6621e65-e5ce-4187-ad8a-eac8c2603c15",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41653d62-138e-4670-b0c8-47c5c5a93a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76be59aa-b0a8-42b3-ba39-c2d4bfe69f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87492bf3-e58d-459e-ba0f-7f4927da8f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ab8d23-97a9-49b1-a2af-f63c9d6aed66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc31401d-47d2-4f37-bda3-235164576531",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74294ad-b282-438a-b280-91762bd1c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34955ab-34c1-4c13-b14f-8c38587abd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4161cc05-6516-4f26-b3f8-5b4f541c5512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c0e081-dad9-40cd-9d13-37e971310a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b6ffb-29ee-43f3-b8be-ed686b0c697b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093b097b-a575-4503-81be-ae8fb8104ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f084e044-34be-4571-b5f8-e122f3e808f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de94414e-b169-41b6-9d5b-7acd1eec40e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9972c096-ce39-470f-90cc-1ca720e69139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a34bc3-9cc7-4577-876a-aeaa08a15d71",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65320ff0-dd06-4e7c-a283-92495007f463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad0664e-e062-4f6e-ab8d-31cc7f88aa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a508953-3d72-4e23-b53e-3c6c40349c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d04d25b-4f79-4e5f-bdbe-0e7dcee121dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff5110d-2f66-4149-b7c8-6d30f5fa2555",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317f02f-48ef-4aee-b202-23bef543a00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c673bb-610c-43b4-8e72-83415b0f241e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496f59e0-4ebc-4d33-9f58-92bfe3ad54de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd820251-1491-44ff-b187-705bbc24c491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71fe726-6ecf-4174-b2fd-424dc02743a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9cd800-8fb6-4faa-9488-9d4f62685714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51a2d83-11a6-47d6-9b8a-c9e5d7f867db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea81fa85-1ae0-479f-8df1-f315edac4f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "985ea81b-bd0b-4fc7-821e-0a118e31cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce6ca4e-8345-44b4-bfa2-5a19119e6e78",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8293dd14-0a34-48c7-b58d-5d12b5071bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9262609-9c5b-4440-a52c-833c6770ee89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b782df-0e4c-4842-b1f1-2c40f028db5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6f48d4-56c6-42de-be95-ecf0fc70651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab3362e-1686-4f1b-a5b2-78d625848344",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e61dc5-01b4-42cf-b4f6-028a6bd96854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f699a41-d3f0-44d5-bfdb-5bc76a7cf885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4637ae03-b8b0-429e-ba67-744bd5753993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "358dd92b-cb8d-4efb-ab31-38d56024b8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193c0445-5659-4d5f-9589-82f082b9f77b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35138a64-7e6c-4a9f-a9ef-e45e03de677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5af89f-aead-41d3-a36e-29fd21f8ce2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6f5d0-7c27-4c17-b62d-7786d73e5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7720e3e2-09a7-4f36-86ed-a831e1f074d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72849271-bb0a-46e4-92af-9525e8e2d7a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdbc19b-a1cd-44bc-9dbe-26efa3d258ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44a9375-61bd-4733-a8b6-a96d5104904f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6b0b56-7456-4c81-9d4a-bc13238f1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fd25fd-6867-4602-a460-83f0107e4273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614a40a7-e44c-458e-9d93-4f7bf5239607",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c7924-7d2e-4f6e-a910-7bf48d61240e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af226ad-c4ea-4973-b998-7df0ae93f6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16c9c74-b0a0-4924-92d1-90c6460025e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9496dc3b-6fb4-4c87-9464-1c280bcd8247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b64b8c-8693-49b1-8bd3-33271b4bab8c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d3bd9b-c8b6-40b1-b0a9-0d1c8e622ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e15bc3-adec-49af-88b4-ddc88f6f89b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d239a3-5c78-4aec-959b-10ba3ea2c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d3c79b-be38-4059-844e-5060cc2c97a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9903c4-2866-4cde-bc52-c9d75a520c19",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d69e63-1d21-439f-8dbe-d83e0eecb537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88194a09-c595-49b6-a611-bb2aa823fd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987fd280-7e5c-4402-b861-448189c2e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b272d69c-9c3b-47e8-96d2-0b66ff9e9bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150dd0c6-af90-4afd-a6f7-ffe631937014",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba4cad7-24f8-413d-8262-ab41a040f5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631a85d2-3fe1-4674-a2d0-95e7972fadd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faddfeb9-fb8f-4611-959e-debf54984fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2333b9-2e02-4fbc-9a96-7818484c1d26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c915d037-c367-41d9-b88f-554eb7887be7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67cb2e62-64bc-4b27-8053-ad3c53ae5ec1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651e63f5-ab63-4035-ba44-e66131229dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d91e916-0e50-4e3e-9bad-a4dc756da63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d54e05-4a1a-4f2f-aa69-fd34aa705ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebc1380e-7876-4273-a170-03573489790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f0ba1-3b95-42e0-8033-262756a498b5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09930f4d-7e49-46aa-af68-131ac2f36e95",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "16b5cc5c-3753-4ff8-a3ab-2e140f08bc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb540e08-d1e5-40e9-9f5c-866b09084b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d454e0fe-79c8-4c54-80e3-462cddeacd54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bc46a88-e1ea-4ec6-ba1e-604e1cf3a8dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c16d63-106d-4342-b6df-74724c8d3f51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f35b7d7-b292-4411-a22a-a7797572c3b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7d03688-3051-4086-ba95-a0e0c6d6f7da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86f3ec59-3e8a-4ed9-b188-8781185d2539",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e28e5484-825c-417f-a7df-62d05ff2c869"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd932524-cf0e-4937-8948-ca044ee85f1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45772d60-77cf-4eab-b383-c74751777ed9"
            }
          }
        ]
      },
      {
        "id": "f8f5dae9-d861-4a4c-9d3e-f221504695dc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b0304580-8028-4f7a-af1d-d706a19dabd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a60eccb-2e31-4b66-897f-5eb0c453fb32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e22847ab-923a-4103-9a1c-0e3aa54fb96e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a225b84-09bc-4145-aa48-4b4c726be4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1d8b57-0f2d-4252-9af9-1a01fdd39ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb90de0-4c8d-4c1c-818d-a3a6a1f32873",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70483d3-66f9-431a-8bd9-d8f425be1c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63666e63-d108-4cd6-b76e-a1877bc1c68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0781998-fb45-4d47-9c48-f37c1b059b72",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6c1d59-596d-42f2-86cc-9a83bc9550fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a1419b-984c-425a-bd36-ff6c720fe7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6e72f0-d0f5-4b37-a5f4-b30d19dc93e7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c991ae1-3a09-4803-ab78-616f4221cd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ec55e8-f177-46a2-9a29-17599b75cdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9e9eec-2573-4164-b2d6-a795589911d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19580b60-84d7-4182-88b8-1b78a5d13358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d925085-25f1-4a1c-a74f-71e5d3f1a244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d0fca3-53f2-47ae-a73b-969ea014d12e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b6c9f5-1f27-45b1-ab89-179f7ed732df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f644518-b6e5-4460-b4b7-806aceecb4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268d1394-67b9-43a2-b470-b92a5af2d3cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e43a92-b73b-47f6-bb8f-1f2b4ed6207b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10befd91-d52b-4e85-a982-2928726cdc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26579c47-3e64-41e5-a5d2-ce3d85f47ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067d9dfe-0d71-4650-b53a-12606a565f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc2ca27-c0e1-44c7-bb34-ac90eac84ab3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61070be7-23d9-4375-ad8e-1098ebc4b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372a39c4-300a-4c36-af26-8d36b7fed996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115331ba-a835-4bc9-b568-6ddb62d46f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55afb48e-0a6a-477d-b529-8e68a7f8db38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe07ae0c-1e7a-4fa3-85df-fdb9c6c7607b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767980f8-b03d-4aff-a4ae-c03a66fe5bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "149cf6d5-89d8-4c7c-b8e9-7d68b8ec7d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d153d4b-422e-4dc4-a81a-5bcb18715238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9567b81-6c93-40f1-8f85-2ae2439a96ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cccf6ae-2cec-4572-9512-cbd2f0d15774",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f166cfa-9b4f-4c97-9c67-f0284263a19a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d305ca4-18b0-4d88-a658-d0e52a9a6ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4941d-6d3b-4ead-a890-c1169f110f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66d4036-51ab-49fd-8366-9a72c290c55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a57161-0070-4615-a999-75f6977dcc8d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd77bf8-19cb-4797-9aa0-db54f896046a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1657dd-6f66-4287-bd0b-9425c0087d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05796eeb-abbb-4e7b-a76a-e45fbc8e7490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5eb379-d559-4523-8ffb-295cbba45b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda1cc14-b00b-404d-8967-4dcbe5d33025",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06527245-9b23-490a-a073-b4aa0bc9fd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55017be-ad8a-47ef-8a5d-0cfdd5cf5deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3277e0ab-1757-496d-bde8-e7ed4a566c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675c3272-d442-459d-b19d-319570296cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbb494c-f4a1-41f7-949f-6b0d6d6fdc91",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1139d3-1907-4cdb-8682-2c4f1cd6c88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8573d5b6-3ad0-4dcc-ac53-d5e27386dac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a903c55a-8392-49f0-9b9d-54322516cc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aee60d0-d9b9-4d7e-8a53-05f4139b9e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dc3fda-cde6-4996-9e71-c0b711ef049d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dced95-1f33-4bc8-b0a4-ea4505a49771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9388dfcd-6a75-4b35-839d-039dd634f4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb2bb71-dc86-4415-9431-429a0793121f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae18419-e619-4caa-8ed4-47c9ee3ec6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c715f2-cd4b-40a3-a06a-e275d99b6732",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e83b8b0-dbac-4cd5-a007-04fc624ec1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713ea037-5cc3-4307-b049-3603bb6dae21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f02452-32b9-4a2b-ae2d-e66f58cf07d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fe8765-e286-449c-a355-9ea4f3560acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245ee97c-824f-46b8-a087-068d9e9a66b7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6569f18-1b19-47c2-bee0-c58919248d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64ff875-fa73-43fa-8d89-4b3238f39f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c39dd6c-2893-45b1-9de7-703de75ef32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5afedd-e0e6-4b0e-ac50-622ee6762264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321eb659-27ae-4000-9580-d69e24e70c5e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef26d9e-0d08-4ff3-9ffb-03fb4656979e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bedb98-33d6-478d-af28-3436c79782fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520a2563-c8e9-4a23-b346-20a5c53f9928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd9a047-5870-401d-a509-6150ef6c6839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3733a711-67ae-41f8-b5fe-ec60f6846c44",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d26e3-3402-49fe-a0f0-587db9b5888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1e528d-52e4-4791-9fe4-b76d9abbe3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63fa66c-6c0f-45fd-ade6-c3ddfa9788a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09efcca0-8925-4316-858a-7da9e00828aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab5d320-8418-46b2-a68e-d5e19dd9d90a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2fe270-acdb-40f8-8e81-0927874fbf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14d198c-3187-4ee6-9fd8-286cb6da3de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2511dd-7ace-4fc9-ad29-f86aab007392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd8fb31-79a7-47a0-ad1f-a69c8cdd0072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192bbb17-dfd1-4cab-9481-733e9274faaf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2ff881-2c19-4455-8c7a-afced8272b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b315ec-04f7-4195-a5f7-f39b42f3bbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ec5cea-f819-4e65-b9b1-fd713a0c0cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11975cc3-3d4b-41b3-a162-a44987bbf91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e969c00e-0a44-45d9-9e5b-59711bbec8d0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bee72e-8599-41b4-8556-b571e5496ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb5a794-affd-47fb-92dd-1d5850fa2a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e176046f-3f2d-42bb-abe6-314624eadf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02172d2b-1f3f-4275-9810-3a17565ecaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48ab3f6-d368-4ca7-9957-ce405676545a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adac17d9-536f-46a0-bb4b-454b345781d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534c251e-fe1f-4171-93d7-16ccb7e07ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a19aad-f586-4e28-a773-e6c7f7991859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1b0684-d79c-4720-be3e-a14645711474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df831036-c2b7-4340-92d3-924b9cc7a5c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea8735b-919d-444a-ae6c-811d82bd8490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1faad5-af5a-4d6a-b9ac-3768a3b4991e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143c1b73-521e-450a-b0f1-5a1bafe9eb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d6b10f-8040-4da2-ab66-455827003876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d700994-694a-453d-9dfa-1a949621cf3b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0ffeed-84a3-460d-b275-d65b49125701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360a5cbe-8a0b-457a-a9da-b1c0e889d16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9583b6-50aa-4ab9-8fd5-102f345afb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d2c9f-75f1-41ab-b217-b08d87fa26aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f32a3e5-94e2-4c4f-9911-0f1137fa89f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7bbe11-acc7-4964-8dd6-dd79a6a1994b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2b7863-b4ed-4bf1-93e0-bd209d60c128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51cfef7-93b2-4234-b62a-cf2859c60283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3707c8-32c6-47b7-8b85-e266ec205c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0d4db4-d532-4abd-a405-0f28a541af01",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1f1a7b-db9c-47e7-a471-a97b667e20e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d20e69-15f9-4a1b-ac9a-fd143dfd31ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56799c12-b656-4538-a2cc-916bb8c1bd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6f910e-5bcc-418c-8cf8-cef335470cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f757dd-aafa-4173-bd6a-ad75baf35f5c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74269163-e10d-4dd6-83b2-106bd10cad87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de0424b-a70b-4829-90f2-e25d817d7a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7db9dae-63dc-4b4b-bef6-09833d34433c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd64ce99-d6d5-4c17-97a5-ac288945d698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd526a89-e8b5-435f-b0c1-c947556a5497",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f980173-0d41-4644-956b-ad873e1712e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e193ed-42e9-4d51-8154-516bf40d7237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09186a03-8732-4061-a91d-14ef5c9a4fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bab1a2-afde-4d57-a2f0-9cfe45ba6ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec4a2e1-5b91-470f-9892-b713a2a909d5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad9e88-e3c8-4ed5-b0ab-c8d5ffece46a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c240c49-de4e-4032-aa72-d6119121b8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0ca505-5cfd-409b-9845-fc4452ab1474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931f59bf-3cf5-464d-a94d-0c8dff1f2db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2caadc-3bf1-4538-9a59-a37d8cc7dd4b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edc9472-1e63-40d8-87b9-72728e5ae6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96488693-b9fc-4982-ad10-ff4bf9beadd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7f0f22-4bdf-4bd9-9689-b5554bac2b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97395ece-8261-4b89-90d3-1ceedd1e9c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1459f-1be2-4214-b6e0-eb6fe8846125",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1458fc3c-23a6-457c-a132-bb5c47bb54ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc405b67-e6b2-4e2e-9d3c-f203c2074db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f33351-489f-427f-8a7d-7834a3806936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fdf55c-3b97-4d4f-8974-b7df7df07dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fa3fa-a1e6-4a16-8834-e4ed78a65ace",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36f896-dde6-450c-b15b-ab2938679a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ccea9a-9415-44d3-b13e-d13f7056674f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fdc8ac-d81e-4f4e-8e7e-f4f658b18a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d9f191-0278-4e01-a534-5e78334f5266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa73d4ba-4b98-4066-a2d0-887bd1d4d20d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a966327f-588d-444e-bea1-5446fbf7629c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbcbca6f-9a96-46bc-aeaf-886f22c9190f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58b096-e4e4-4705-85e2-6ba8ba4094a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738b2c4e-ed5f-4578-9074-5c99266d7b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de469bed-1d72-4b61-b4a1-eb597569f979",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7215f327-7b10-4445-bc5a-b288efc150f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc17b22c-7fe2-434c-ad0c-cc1e98a7084a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1b2387-c08e-4b88-86e3-e317dedce894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff0467c-7698-4353-80ba-9323b0bdfec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09331f3-5716-4946-8010-54bcc32a7a38",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26efaa45-4ce8-40bd-9b64-afcc52e35169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1074af-af63-4508-a500-af77b669f7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfdcf03-570e-4d10-84f1-ebcc3022640b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079afe5c-5c0d-4075-9540-7905bbce0f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5d215b-d4da-4cce-a70b-653715c8a78a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1695e261-eafc-4ef1-8492-69dd2d815fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3576f462-3f0d-436c-b951-34e52de0f33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b13ea8-258d-407a-8b59-28e5b4743f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca747ac2-07fd-48d2-9073-83d7b48eb5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6834f71b-742f-4cb4-8179-b861e81fc426",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfff0bea-bfc9-4af5-a898-134f4ea574a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a289393c-97c1-4505-918d-eed4d0433f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff920d-70a1-4672-aa4a-17c5399c2b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6908063b-c798-4e44-8858-08fca62d80ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95f9969-98e4-454d-a529-19c8fb4ceb06",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c0efec-ca14-4beb-bf17-3d2f81ef93b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5dbb147-8460-4680-8508-03b6e3458192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befb7fe8-9e4b-42a5-97b3-40da84212bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf09fa7-599f-4aa9-bf79-d27f08237ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e970736e-4af7-4db3-ba3e-1a27e252b3ff",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45246e3a-2130-4a19-9f60-8502355a97d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce31f0-8e3b-4cc8-92bb-20f1344bbe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126147b4-83bd-466f-9ebd-65fc315add05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde7de31-d0b4-4753-beb3-cda923c9eddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3d82da-ad4a-49cb-a85b-67821075dba2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0da8d3-09be-40c0-84be-549e5f9f002e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8df9f6-cc59-4bc6-81f6-839fe1b6b65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5adde6-253a-4d26-9dd8-8f3db1dd5cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff06e582-6863-406b-b0ba-451cfaad46ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1674b4-e4d7-4cbe-b47e-5862cff8ac59",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3db59f-00f6-467f-bffd-9fc864cd1470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acade017-e09c-4605-98fd-b2ca8b72883e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b320b5d-fcbc-4bbb-8fff-fcdec781dc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfe181f-4c88-4f65-bf8b-07d793126ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07953c0-0716-4740-9493-0664fbc11b76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e4c84-a38c-47c8-8cf7-e026ef242251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0ccc17-4d97-49e7-b04a-c6edeb608001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e1d25d-bf58-4eac-b687-daa1c4f3f85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d391a4-5be3-4253-8ca8-f812aeb5c09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5770520f-9c3c-4176-8924-1f2aafa7f4bb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4174ba0-5a7d-423f-baeb-16433cf09634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae35ed4-5fe7-409c-9aa4-0be3f769bebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0e395b-9c15-4be2-bfed-0cf44feb7947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e568c7-aaf3-474d-b800-af217fadda89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9a1087-feb9-463c-9310-68f93920c940",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248efe94-6945-446b-897f-58c01684ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29e3085-2df0-4b9c-ac70-15038124f75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1cd8a7-1ef4-42d5-bbc8-5ae3be71d4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424bbc3c-f6ef-4412-86c0-6ab76f603d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce0994-92f8-402f-9b42-3cafa8b18044",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577f3489-4698-443b-ad28-07f1b5caa952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eaf917-6f5d-41f7-be99-fd27ec786fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151fb85e-b8ba-4a43-a492-41e0572945b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ba816f-2d32-449b-90f4-08d2ea809841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53b734d-c9f5-412d-92fd-6b8b4de90344",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8e6c19-b4a9-4a65-9a30-cadca46900f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef4f7e0-81e7-4575-b767-def07f9fbd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c316ff-fd24-4f3f-9b20-44e72f252389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0287d9c-eb86-4d72-81a1-46e8cef2442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9618a256-057b-4a0c-bcc5-f69e50e21e8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4ea5a3-02ba-4acc-b836-9764cfee6936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bff03a-304e-42e7-94bc-1648ccd5a2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6352ff3-d58b-4e96-8fd7-960f02aec3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0f4ba2-995a-460c-a8a6-52c946d70529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8863dd0c-e82a-4ac7-8279-e4653314fc2a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e418d8e-ee90-483b-ad7d-b877b1d571e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6f7eea-a303-401c-8072-001237db2c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4d66c6-04ac-4dce-8834-f2594b91ba6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9829e6d1-aa8a-41fa-8095-6a96c147d6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628decce-b3b3-4fa9-bc96-b981695b072c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8d10d8-4440-4624-86d8-c04a4adc9bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c3adeb-f118-4850-8e01-cef6259dde8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70653f4-7e3b-4069-88ad-a8b8a64cc58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960ba865-2dcb-4334-8c0d-2a5f3fbd007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d501fd-f9b3-4e3f-b462-a039eae6acc0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe662d-6055-48bc-a10b-14742a61e33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b61fb29-20b0-4ee5-a3e9-f54ed2027d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7b6745-399c-4652-8b56-201ffbb625f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e226dede-b92d-46b8-857a-a64919821099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549270a9-7faa-4be6-a7f3-b2e30863741c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903f4d35-40ec-4cea-af6d-5c3977bd5343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3981bce-e34b-4a2a-a28c-8484bd944037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5317c7f0-c2e5-447b-86a7-61e0c8a68e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174ff2b0-0d81-45b6-8a9c-5f5915b34d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bdd5b0-a9e6-4169-ac45-c9f4d220090a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cff9c1d-130d-440c-83f5-74742998972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa144bc2-70fb-4ee3-b811-136c71fbc828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318447df-415b-4491-b72b-c0e05cdcd71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411ca9f3-02fc-4225-a506-340390cd113e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3b617a-10a2-4174-b118-6f8274d9e57f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce41767b-b0b0-4003-9e7f-3b5283f20a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d62fa71-7c23-4710-9699-215231e632ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817bfb63-cdbb-4355-a947-70cc9bb08ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bb9ce9-5282-4c65-ad0a-75e0d1c1c876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b8ed97-2077-4dc3-9d7d-82f7aef91f15",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaef356-a1f9-408d-97b6-cef102a0ca03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892731ed-3cf3-42b9-b4e9-1d3a78967463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16a14f1-1af1-41e0-9a46-f47d369fa114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab747c5-4cf7-4cd0-b727-74c927c325f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bb400a-f28e-4584-879f-a9f5315c2ff2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ec9d59-6a28-48f4-ba2a-6a18f8c249a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329c4695-d767-4f0f-adc6-985e18d26db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e3c6f8-5830-431a-b598-0d506cc7310b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962a2f3f-2858-4970-aee0-b40180864704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d5317-826a-41ac-b5b3-efad3da94062",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7504dda-d46b-4cb1-ac47-2264a86a3f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68d14d-21b1-4010-9a4a-8377035dcb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4806a185-4680-498a-8c55-d265d214fbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd15a6e2-9024-470a-98ce-d8ef52f9abda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a5cfc0-a169-4b41-97be-2a1101a41c9a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cce592-9a13-43a7-85cb-0f2209d70a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0f77b6-7b68-4692-bdc2-941261185fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e5a429-f096-4f9e-ab57-543003b9430d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aed3f7f-c9ef-4492-ad61-3ed800128134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174bd561-39f7-4b69-96db-98e03540a918",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba3320f-4153-474a-8b17-f3b2aebf7f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f90104f-3574-4b46-a797-94dd30486227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd4cf90-2640-4cda-8072-9d661edf735e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99efb72c-7162-46f4-8d43-f2cb40189f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f552021c-d53b-40cf-8d59-ccf6d45157b4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f983ed81-6273-491d-ba22-d158f8b64362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573d0aff-61ff-4f9a-a0a4-de70c0423d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7557c55b-b19a-4239-937b-00ec424c7a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cb6bb3-a7f6-4fd3-a977-5cdd2c8dfcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b7007f-7bf5-492d-ade4-1c72c6581f95",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c72552-ae6c-4110-9b87-2de03074158b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363fbe37-9ee4-4225-bf39-12781c4c1ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad3f4d-8605-42f0-83db-25256c96423b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59b23dd-e6fb-47ce-ba3f-d756cdfabb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a1ddf9-9884-4de9-b1b8-687ff42f9368",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45e5c51-e105-474b-aed1-fe7dea45556e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef327cf7-3ab4-4d75-8c63-ef98a050e7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b123791a-c66e-46a8-b979-b65da7f4ac83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f71d3cb-69b6-4b82-811a-10001b0f6737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2a630a-f103-49ce-95c4-3f40b63c6e3b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe15134b-12f0-406f-8458-310d217fb0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104adf7e-0dcb-402a-ab5a-f1ae482a03fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca5c752-1bd8-43cc-b812-4bd10a6b0088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da1ed68-c510-464b-b0dc-2cbb9d7eaa85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeb451a-e18e-49da-8239-00522f876969",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706b6804-aed2-48af-8fb5-1dd72c04ccbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7307c94f-1087-4902-acd7-cb0f8d284052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0325334-5a32-445e-8fcf-7639523918d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284f9581-11a4-424d-bdf5-fdedcb700991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b425882-a43f-4dff-9eac-8a54a24649f9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f02086-946a-42bf-84ec-9413f70794a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d7f5b6-af67-4271-9d50-0bfb6989efe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051f0315-1c18-4e85-a0a4-d0a6ddcfca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ed4a72-ee8d-46e1-880a-0d04b90a9586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c259a11a-3ed5-431c-90c4-6b8a54463b27",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f89f557-0797-4a3a-846c-7b783f0a3a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd85301-2809-478c-ba89-892ef1f971d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc3d5fd-0b79-4323-942d-95961018cd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08a0f4e-5bd8-467a-8eac-d30bcb945d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b278c7d5-a331-464f-b82c-4c50f3ae71cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3c8ede-ff22-4a23-8ad1-a4f9d61f3153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e9e0ca-5bb6-4bbc-a01c-16579c25ec30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625222d1-387f-42a2-937d-c52193a2edc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df930af9-cec1-40bd-a89a-f8ac0cbdec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e53f80-d557-451c-8f11-22508a261fbf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78da214-7333-4b2e-8bdf-8e95d03251ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faeedbc1-5c6c-4315-9ffe-e9c15c8c0adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2d4d00-e533-4017-8a98-d2eeaf9ee433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01bf3bc-1323-4893-81a5-2db3bfdcf61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd495043-a9b7-4170-ab24-0a8c0b7bfd39",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60637063-f62e-4cb6-b08e-cfd1ceeb7fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9731ebca-4e01-4a5c-9b54-68a8ab3152e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a8df34-5f6b-409f-8c82-33c0153aba65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7854ee5-18f2-411a-8029-891f97724727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c585f7c-1a73-4669-a09c-b482b0d546ba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2442395-e037-4b0b-97b8-18a211d0282d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0818f320-a167-49f5-a7d3-2980b62a9400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18954731-0c41-427f-ba34-01c7f5f86f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94cfee0-1629-4359-af5f-7fe66d29f1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d3155f-b8fc-4615-a6f8-ff9358fcb6ea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f403eb0d-aeb7-47ce-88e2-b6b9b95d2996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71822d2a-a893-4e6d-853b-20468a9c6d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f198a5a8-faef-41f2-89a4-97fac5af485d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f504648-98bb-49b4-8ff8-0b6a549e05cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fe3df1-cd3d-4313-b9f4-50cefdbc415c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04335a0-1cf4-4805-98c7-996775e43383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58d6362-0788-4286-b6fa-c16d3c858ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b5837f-07b4-4895-9f45-410ebcfc409c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a27c79a-6d04-4570-8c85-a7ad9be5c9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ff680-d04d-4389-b968-df4edc5b239a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a71427c-99a6-48a8-b9a9-80f52be7a435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842de6c7-5eb4-4183-a0ec-a92412411130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c07ae71-9180-42a2-9f0e-a51f7208fdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a57444c-3958-4d36-bfbf-681d2cde9ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20243003-382c-4508-a8a0-58277a3e5dbe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3120833f-546b-43b3-8550-2d4ad8d402c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020d0c1a-afa7-40ac-b6e7-c59de71ab187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b70bc5a-2ac2-4f2f-8d41-e9e7c1aab0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f0b7e9-1d2d-4e66-b71a-063bd3d659ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1b4d53-9a32-46d1-b459-9e99b3898681",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefb1d91-630a-47cf-b5f0-3cb045eaca3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2439b9ce-8d6e-47a0-bd8f-322d91c7d3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9c449-9f7c-4b67-810c-75f59bca711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd533d1-39f1-42d2-b064-20f239c2cd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29475303-1f92-47af-843c-50915b5ecd59",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4d9424-2ad4-4a2e-bfd9-976260a9f678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e682eeb2-41ea-468f-93f9-0086507358b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0b2480-415f-4860-ad28-d57febfbc3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c74f11-e2e3-4b18-9f75-093ed1c4d172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67506f3-422a-4aaa-a0d5-f79e561e78d9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119a6f75-d928-487f-9a2c-efecd54b2a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8e5452-5344-4973-8a4b-dfe2928f3643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da87c2a4-8733-4e39-8a39-c12be0b4aa61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e1bc7f-b5c1-470b-bf7f-d6a0f1a872f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60741231-75fb-4d30-8ff0-166806a85fe8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebebeb96-e529-49b6-b73d-ea3cdcc572c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c41840-1b77-43fb-841f-5bb5f8973f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6a25e6-5959-497c-b75c-b2c52cc3d223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24612a5c-fd7c-4edf-ab9d-c3cced85ca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9599ce-26f5-445c-b341-08225a509798",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa4dc5-b92c-4897-8084-2cad5b6b1eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae8fed51-55c8-4755-b508-ba7a0925f3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc29db4-6e9c-4e45-ac27-d3310d447feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fde89b1-7939-49aa-a14c-1c9ab92ffe4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1a383f-9700-4d07-bc78-3d01460ef17a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9fd28d-88b8-4ad0-a432-2c35397042a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "733827d5-aaa3-440a-857f-d3289416b4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda75cfe-be45-441d-af18-d9ad2dd644c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99b46b4-6b56-45a7-ad6d-3d5bb2b907c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6bebc8-23b8-433f-b528-88e8fd6adee8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d265bc81-db88-4e50-809e-7e3f742e7fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59fa8af-7f8a-4b88-8204-0d571c809273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baf60d0-bf6b-49fd-9a25-65bc0e40db43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50297163-8175-45a7-8ecf-5270dd861646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43059b6-3970-4ed3-85f9-64c02dad50c5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732e5b0b-ad94-43f6-90b2-7f6a05122643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f10425b-345f-42c3-9a6e-cb1e04b3682d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc0e51-5643-4f3f-bd7d-82e0ccc47a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c43e8f-2279-46ff-981a-e777f102752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11165659-3fee-4b7e-9582-c2466655d6d5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829d3939-cba3-4c99-aed7-567bf1e19748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273d26f4-f3c7-4980-aa12-55abdcac7be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87cdf22-31a8-4944-b22b-03dabf8b1813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4b681f-6344-4dec-ab4d-232b742190a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0df9a14-9ff3-4446-871b-a3bbbbd027ee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc381d66-319b-498b-b2ba-45be6565e753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "030fd0d7-2dc1-4509-b511-31da6b3b784c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9382cfb5-4a44-47ed-b6f8-bae3758278fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ca9fff-0481-4204-b22e-e6f3e763defd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f2dcca-28d8-48e2-8148-df477d80b1df",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541df46d-31ef-42b0-8fbb-da67efed2770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef45ecd-a2f6-4148-97d2-b5484c8a1681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a39c61-0497-4da6-ae90-0301ad844172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1386f9c0-5a94-44be-95bb-c0edab1404b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c271114b-12d4-4892-8a4f-e7402f4626c1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d2399f-25e7-4e73-816c-95a0418d1410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5566f7b0-1fb8-4dbe-b105-b88e31b2d7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1142622-df92-485b-b7dc-8357ffa6eeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f55726-ab80-44a8-9cf6-ce1d312f5fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72befe52-4895-41e6-86ac-6044482b5944",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e28f838-1e66-4ff6-9362-cfb6386a46a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0751dd-40ce-4d41-90a4-60a8583662b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d31ce81-9679-47db-a571-c993a26ae00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da51910b-fed4-46e3-9af7-f6f2267abbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32843891-7ba3-4367-96b0-9487c3f6bbf5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eef039d-6d6b-41b9-a1ac-dc33e0e34f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95683ed2-c8d4-4a17-b2c6-a9647cb50d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb703f1-72c1-43b7-977f-6e81a6bb8227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da38c51f-d5f3-47b4-9a85-876070000137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425fc318-fb5e-4cbd-8f92-d771c390b9fb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9047e6f7-64e6-4ec7-a918-b6dc26118181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31489ae-786b-4ddf-880c-6f2d35a83d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38eb6f1-d086-47c3-b925-ed01f5a1694e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d099f3c-3805-4e3c-8aa9-e2200e72c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e13984a-ee50-465a-ad30-27219cf332ae",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db987d39-99cb-4389-a88b-1532d36ec260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f8e968-a6ce-44a0-b838-91879d0c4949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12767daf-5f56-4f91-acb3-532448a23be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a39aad-16de-43a8-9c15-60fce9c98f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ae7799-7f13-4389-aa16-18e7a0901932",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bbcf23-f0a1-45d0-a89b-2ae1ae7419e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be3ee43-0720-4d94-ba86-0ad0b26334e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0048a637-6293-4669-bea1-e24f2485e50f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eb1d77-7a3f-4534-a018-1eae670fa148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982ebc51-fb9d-483a-9130-eb54341a5947",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56393e3-632f-4e94-81d0-4d1f48413867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b025f8e-b59b-418c-85a5-7297fc927970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b838137-d449-4ed6-8625-178c0e399d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b653f0-50fe-4656-9fbb-62b0d1110bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869407b0-8ea3-4c9f-b7e4-c02fadb3eb8e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ab97b2-d54c-4736-9828-5fe22da778ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc16f1e8-6628-41c9-a159-fd2626248a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f3d7c-60f3-4868-9907-5f0918b497d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed5d246-3ede-44b3-8a13-3e240846f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e078ca8-d609-4843-a78b-64e9e889dfb1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44321519-91c9-40a0-b5e1-db6a03f9b783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f0996d-170b-44bc-96b7-5ec657b8decd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d702408-30ed-44cb-a20b-02dd7ab17cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f888c103-507c-4cf0-b60b-7641a0237734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a4ca9-3361-416d-a7a9-70b9c95d173d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51490d6e-0f38-40e8-9017-74598405bd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e95b48-4ed4-4466-b303-74acae4783e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d959b330-7305-4afc-b58d-3b3efde2e95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff58289-b28f-4ca3-b758-fb043962b3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6aecdb-f701-42fe-ac5f-0495ffd9c28e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5610e606-d504-43c9-9432-43461d0bb7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "802264f3-4c16-4103-83f7-f8ffa0ada418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7551abcf-fadb-4852-a954-1763e4d95244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ab3d1e-ee0e-4708-ae7b-1c956de4dbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd42ce2-ff57-4165-a299-a8169d6e993c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33443f24-2b78-4a63-a86b-5f2675449128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf76810-69d4-4674-a6f2-243e095a3fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c99a76f-43ce-4586-90c5-3d539e80da50",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5423651d-8e4b-4fb5-abbd-eb99cd7c02e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb61595-ac20-4825-8cf8-1923433164e9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2a1481-525f-438d-99a3-5431114ce1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf79d03-0016-4bb8-a925-6c359ffe3924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89f3a4c-f1de-4360-91ae-fe71bf3f46ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eac441-e146-48a7-ba27-308310573e5e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c06c7e6-717c-4506-b4e7-7afa9ea2a8c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24bdcbad-cdd2-4d66-81aa-d8d6967617aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cae61251-3848-4734-ac5f-14d4f7aefcd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd575aad-a883-40fd-a5c4-fd798dc9440f"
                    }
                  }
                ]
              },
              {
                "id": "7eaf0ed5-4f46-410e-a659-bb77e705637e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbea2af5-782e-4c57-a968-0e465ed48f1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69da472-ec66-4225-a890-744cf1793389",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0157fed7-27ad-497f-99c8-c54865a12e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c563624-b59a-4293-8104-2d0ddb131c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4147b7db-d8cb-49e6-a0e6-f72bb82b26c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc0dc6-d390-40c5-9002-aa036fae7d93",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed005aa-540f-471e-b2de-2ac8610fc30c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5313d428-912f-435d-a6f0-bc1abf5761b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26413e2-3f85-4aa0-8ea8-f241698e6e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84efa0c8-9a9c-457f-b377-7811aa1617c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cf65c9a-2a34-4d27-8f9c-63b01770e046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3371911-2093-4663-a2fd-59b55acf51d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2d33619-0677-4273-8dfa-c044e94c2f63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02e20143-d169-4e82-9797-d5c0ea4b4ed9"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "17b2db63-4ccc-4b5b-99d5-e2caca868d91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7f44782-9cf6-48f0-9530-ea91afd10439",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd50d935-986e-49ed-9e96-69350a70248a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6a3be4d-7f49-4a17-a616-3d3eba4ecd18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb87bce9-7d9e-44cf-ac38-bd8e84626411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a158f0aa-71f5-4aca-9c62-206730c7a13c"
                    }
                  }
                ]
              },
              {
                "id": "fb973aa4-98ac-4554-8aa4-87f1cdd7b325",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f0d35cc-0803-4bba-9d7a-78c0beee4a91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9216d4a4-dfb1-4a69-b25c-7a2a5cc82b8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17f0a0bf-cb34-40ec-9563-3a8f4746d157",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4202a666-b645-4843-90e6-191486d767ff"
                    }
                  }
                ]
              },
              {
                "id": "50baf934-6e63-4f17-a00e-4379f6368de6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53ee90b4-d578-41b6-a04d-b8ad6f0ea41c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c9e4deb-6f8e-43cf-9d61-c9fa0efc7cee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c218a01b-1285-4c27-95c1-8a5337bddeb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "054ae939-7eb3-468d-9a55-de79c0c089b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1116190b-4ba5-4205-b350-35bfa3717f80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a749fdbd-0653-4e23-95a9-0fb208dd8ad8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aa2a80e-568a-4de6-9641-2bc2177831b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fef7726-944f-40c4-929a-bdd01960b4b7"
            }
          }
        ]
      },
      {
        "id": "d83f6295-5d85-4856-b62a-6fdd67fbdea9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "63fe065f-9c1a-4fa6-a698-7f7f91b6319f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b83c4d4-134f-45e9-a427-2fea6f4f3eff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3f6dcd-4edd-43ba-b786-0d6bba321b21",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6b7a1683-c8ba-4c4b-b18a-5563e27b7138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33082625-3fab-4c12-8ce7-29880fc9c740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81da4dcd-8f70-42c0-b669-8f9609012810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad3177b-9de1-42ee-ac0d-64e218a2b069",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dcce48-fd15-4fc6-a9a6-77fef2bf38fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "26ec28b0-ed66-4606-8f3d-5d09eec2fe18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53abb3f9-4293-47fc-8ff0-d2c4a6f54671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1cb0d3c-4e1c-4c13-a7bf-334540315b89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c965aa46-ed95-4b9a-9f6c-95bae9df7bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "004651f1-40b0-41fc-bf34-ef9ddb687b09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57c3eb46-f14b-4f23-ab7d-66b75fc0ae00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c71edf1-4c36-4ee5-b2d0-6aa82cf8d76f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3b7d557-81ad-4fe3-a7a9-0512733c8a72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3d955d62-0700-471e-a3fa-9d62be29c836"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d10163ed-f261-40b4-8050-c3f1e506788f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec9a954c-7237-48c8-a8bc-0495a4aa980c"
            }
          }
        ]
      },
      {
        "id": "88bd4205-bddf-436c-89ad-1229d0ba4b1f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1d0348d9-c4e7-4e98-98b0-2b5f6ce11ed6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f044a515-a80e-4c9c-9590-235759e349b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40756a34-1efa-4a2c-ac12-0e70098a8ec3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92437557-cf95-4e62-bab4-8a5b348c05fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4a4bf232-c802-4476-81fa-2d7718682be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc6b6a0-013e-4d60-88c9-258d8721aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "335df849-a3bb-4a6a-b0d8-1c4b8530fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b87c6df-1e1c-46d1-b51d-fc9f0ccb2018",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128dcd44-67c2-4f7f-9b8d-3129250b5d83",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7a910ad6-a591-4abb-898b-e23e04f5a36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e305520-cd25-4b5a-a954-37eaacedf19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc920d41-7e44-432d-bc65-edf8cceb9eb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aada5e3-ea1b-495e-ab33-067786d3a929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a09f8b7-74f7-432d-a59d-8d1b5ad53bae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75f5cc3e-d0f8-409d-8961-c5f72d4d2f4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c900dc76-b907-4feb-bd9d-e90bf6ec70a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ee6c620-dace-4697-9905-0354844f76cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ae861d47-c734-46c7-8ace-f00864c24cd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20224865-4b56-4ec3-8efc-f49bc31bc59f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3c49f4d-524b-4cb6-91c8-8a138b45318f"
            }
          }
        ]
      },
      {
        "id": "09d64b55-36f9-492e-9733-ba42e90e98ec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d0384516-5823-44eb-8402-ee1465c8778e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87e0bcee-e506-4365-af92-354e791e465c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5751353-550f-482c-8c82-d1425b5a7448",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aa3e11-a802-468f-9b4a-7c8713b1f936",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "819229b6-808d-4c74-baa2-95e72c5e34ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4a76b0-ebce-45c0-b214-ab74916f52be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7170c93d-4b24-48f8-a677-289a210014ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb14e7d-d3b1-4724-9a06-b916829ac16e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90310b1-cef4-4917-9c34-505b15db4e4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6a55ceea-2962-4a63-b75d-54dee2163b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6948b2d-d440-467b-9b90-3b624cc6b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e56a71-284d-4f46-a733-a95369c4375b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42d23334-3745-4888-b849-27e27405a0e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9d9016-0ca6-4b4c-a1da-d22e02d9ab50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4f54933-9e4d-4c92-be50-eb3cc4d55c53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfe33bab-90a4-43aa-bfde-ed181b8e3309"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ead6621-0ff0-4abb-86cc-ebf7f978fef6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7220f126-89f4-490d-b9b3-f129126641d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e06dd5ec-5b45-4961-960e-f795fd4bf954",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55f15522-0b81-4677-a5f4-e32f9ba6722a"
            }
          }
        ]
      },
      {
        "id": "90b0f232-aefb-4dae-b73c-18203021bcf2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3890dab7-38fd-47ef-bc89-25bec45f56e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc47c24b-684f-4546-b3dc-0ede2f0473b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "25d15f99-7229-4fa8-990a-029e2acfde36",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ab6b1eb-a994-4056-9e6e-7a8d1b89f52b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68909692-61af-4fdb-aa25-1ff0c5dfb0d9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 493.0576923076922,
      "responseMin": 15,
      "responseMax": 9003,
      "responseSd": 614.8214504247281,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668300287842,
      "completed": 1668300426584
    },
    "executions": [
      {
        "id": "f2a0c96e-dc17-45bb-996e-2d565ac44a22",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f09e0d55-1a67-4cc4-bee1-4410786dfe60",
          "httpRequestId": "683655c4-f8b7-4d1b-9e7f-eb5d2e381e3d"
        },
        "item": {
          "id": "f2a0c96e-dc17-45bb-996e-2d565ac44a22",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "09d2287f-6a4f-4335-a17a-5c0ec3183118",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "8ecb8cbe-59d0-4cc7-915f-b18c60f65b8b",
        "cursor": {
          "ref": "da113ac9-3201-4e36-9bd3-912a1d04332f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f2d7846-32ff-400c-8467-d6ebc22a0cca"
        },
        "item": {
          "id": "8ecb8cbe-59d0-4cc7-915f-b18c60f65b8b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1e70384e-1902-434c-8199-1b6aaa789011",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "f19a89b2-88d2-4515-ae85-af2e3dd31064",
        "cursor": {
          "ref": "f8c6549d-d313-4f91-898f-e84c1f9b20ee",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "08a100f7-9ed4-482b-bfbe-4915359beeed"
        },
        "item": {
          "id": "f19a89b2-88d2-4515-ae85-af2e3dd31064",
          "name": "did_json"
        },
        "response": {
          "id": "835cfe01-065a-4a04-8345-a00c8bd3b290",
          "status": "OK",
          "code": 200,
          "responseTime": 891,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fae1c99-eec3-47cd-be55-8fce8d72d5a4",
        "cursor": {
          "ref": "9b89c326-7d34-4b08-803d-0b8b6e490ba8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8690e85-b518-4442-bef1-abda7b0e3181"
        },
        "item": {
          "id": "2fae1c99-eec3-47cd-be55-8fce8d72d5a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a0e31e9-4996-4d5b-b1db-500f164cfc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fae1c99-eec3-47cd-be55-8fce8d72d5a4",
        "cursor": {
          "ref": "9b89c326-7d34-4b08-803d-0b8b6e490ba8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a8690e85-b518-4442-bef1-abda7b0e3181"
        },
        "item": {
          "id": "2fae1c99-eec3-47cd-be55-8fce8d72d5a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a0e31e9-4996-4d5b-b1db-500f164cfc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76ba5b1-cdb9-4783-9718-8cc073077bfc",
        "cursor": {
          "ref": "a88ff9df-218c-448b-a71e-0e4eb60e8d39",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "01494512-7e34-48f9-b702-1128d4e07955"
        },
        "item": {
          "id": "f76ba5b1-cdb9-4783-9718-8cc073077bfc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "063291d6-b917-420b-874f-b7e26e7dbaa9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 507,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed4da59-8b63-4d65-abfe-e5244c27964a",
        "cursor": {
          "ref": "93b8ceec-7026-4e77-82a8-2c22a650d207",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b772ebd-aaa1-4e1b-82b1-59742b4097d1"
        },
        "item": {
          "id": "8ed4da59-8b63-4d65-abfe-e5244c27964a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "58480567-277b-43d9-8feb-57796549545a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9372b2dc-1fb1-49bf-b457-490c53628487",
        "cursor": {
          "ref": "9dfb3a7e-aa14-4d60-8bfd-74a621b84e17",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8bc89cf0-ef9e-4c2f-a255-f95fc9075bb0"
        },
        "item": {
          "id": "9372b2dc-1fb1-49bf-b457-490c53628487",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "de7589c5-3f03-462e-8df1-39f1b3f6d790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6898e1-9ecc-4730-8073-f448e526a0cc",
        "cursor": {
          "ref": "a6bc6be9-5b8a-4ed8-b42f-7b66ab29d7de",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d457d236-c3e9-4113-b065-8a0df07796a4"
        },
        "item": {
          "id": "5f6898e1-9ecc-4730-8073-f448e526a0cc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "98ccf7ce-14fe-4954-b6c8-6aad267d4ed1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6898e1-9ecc-4730-8073-f448e526a0cc",
        "cursor": {
          "ref": "a6bc6be9-5b8a-4ed8-b42f-7b66ab29d7de",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d457d236-c3e9-4113-b065-8a0df07796a4"
        },
        "item": {
          "id": "5f6898e1-9ecc-4730-8073-f448e526a0cc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "98ccf7ce-14fe-4954-b6c8-6aad267d4ed1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 824,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94764704-b337-4a91-b48b-048d538eb7dd",
        "cursor": {
          "ref": "1537c3cb-41de-4f7f-bf17-ce5da7ccb0c7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7e9e8a43-7a24-43fe-b2f0-a4950004f492"
        },
        "item": {
          "id": "94764704-b337-4a91-b48b-048d538eb7dd",
          "name": "identifiers"
        },
        "response": {
          "id": "4efba060-2a38-4e25-8790-369f9bc7ab3c",
          "status": "OK",
          "code": 200,
          "responseTime": 1796,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31503c73-89ea-4fc1-9f0a-d5cd44a159dd",
        "cursor": {
          "ref": "bffbc93d-898c-43ce-9757-2101039610ca",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85ec5b32-4d3c-4ba8-8a89-9732b99de995"
        },
        "item": {
          "id": "31503c73-89ea-4fc1-9f0a-d5cd44a159dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67761ef7-f279-4394-af09-7c9501effb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31503c73-89ea-4fc1-9f0a-d5cd44a159dd",
        "cursor": {
          "ref": "bffbc93d-898c-43ce-9757-2101039610ca",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85ec5b32-4d3c-4ba8-8a89-9732b99de995"
        },
        "item": {
          "id": "31503c73-89ea-4fc1-9f0a-d5cd44a159dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67761ef7-f279-4394-af09-7c9501effb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 946,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964f5482-eb17-4a7f-98bd-cdc18a684194",
        "cursor": {
          "ref": "9e1fc7b5-f74b-4e71-a247-e5c9988bcc0f",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "78772d0c-3349-486e-ac8f-09556b6b2b48"
        },
        "item": {
          "id": "964f5482-eb17-4a7f-98bd-cdc18a684194",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f6ede07c-df1c-4c72-96d2-ab03cb370824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4283844-6da2-4053-ae76-46129d11c54a",
        "cursor": {
          "ref": "c495ad42-e103-4d13-9596-75dbc77ddbf6",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6b6888cf-205a-4ddf-a90d-e6bf6c4a78ca"
        },
        "item": {
          "id": "b4283844-6da2-4053-ae76-46129d11c54a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7b4bdb9e-3907-4d63-ba0d-df4eb1cc246e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42d3c6d-dc87-4548-8ff9-5af0077a23a3",
        "cursor": {
          "ref": "96ecfcac-0679-4c45-9f43-e52d2d49fa8a",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "07194044-2a1d-4a38-97f4-0e9722f7e4e3"
        },
        "item": {
          "id": "b42d3c6d-dc87-4548-8ff9-5af0077a23a3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1ebe7fb5-d7b8-40ed-bc74-cd6a539096e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfbb115-3692-4e31-819f-30c944cf64da",
        "cursor": {
          "ref": "c684c2cd-06af-4b2f-8c8a-b16c3aa988ab",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c7f410f-bea9-43c9-8784-d1de091ce39e"
        },
        "item": {
          "id": "0bfbb115-3692-4e31-819f-30c944cf64da",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f376e97-366e-40f1-bf8e-b99ec7c42a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b196df-ec26-457d-9f16-649af8ca086c",
        "cursor": {
          "ref": "ace931a5-d290-424e-864d-f15244373ba0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1780bba5-9cf7-4f40-8386-61a4b8c87675"
        },
        "item": {
          "id": "92b196df-ec26-457d-9f16-649af8ca086c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f55036d7-6783-4b4d-806f-9e944fce7f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b383334f-c880-4b96-8987-eba2a6d1214d",
        "cursor": {
          "ref": "9657d86c-d826-44c2-8999-f7edaae9395a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a8dc0aff-79ae-4dfe-8d6d-01bf368be8a4"
        },
        "item": {
          "id": "b383334f-c880-4b96-8987-eba2a6d1214d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a21c3e11-6bd4-4487-bbbb-33c2d1a10a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfb255f-222f-4042-8b32-d012111c6458",
        "cursor": {
          "ref": "ef55e241-cf1e-4903-a78c-9b1cffc7db79",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "170431ce-6c51-4207-8f0d-868af12a2cc9"
        },
        "item": {
          "id": "9dfb255f-222f-4042-8b32-d012111c6458",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "96eef0a7-c682-4538-b2b8-fdd0e46d2106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb79108-2f72-44b2-bab7-d5e67b455245",
        "cursor": {
          "ref": "e4512d11-6870-49ee-a8d1-57ba69fbc7fd",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "930919de-5aaa-4d85-8794-47798cad287f"
        },
        "item": {
          "id": "6cb79108-2f72-44b2-bab7-d5e67b455245",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "feb55e80-04f0-49f4-bdcf-0b0b9ed91e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075ae76f-ab07-4fbf-b634-6a39e1e043a3",
        "cursor": {
          "ref": "def25c83-b6cd-4f3f-9ba9-304d69bb8c78",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "65287421-5064-4d81-9614-42299ecd77e8"
        },
        "item": {
          "id": "075ae76f-ab07-4fbf-b634-6a39e1e043a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "94ccb3e7-2869-408f-ad1a-114fea3d6a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940bbf1d-6cee-49e7-9d1a-2f52ba0cd6ba",
        "cursor": {
          "ref": "314ec5b7-070b-4a3a-9105-7e6dd7bf6385",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "135d4c2a-2881-4c7f-971d-560f48394fb6"
        },
        "item": {
          "id": "940bbf1d-6cee-49e7-9d1a-2f52ba0cd6ba",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fac5100f-06f8-4a7b-96a6-bcdd38c27e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05cc37-5827-4211-8340-4a8fe79c2dc0",
        "cursor": {
          "ref": "eeb00359-a5c5-4240-9b65-4ca42a279f9c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f45f016b-d7e3-4f22-8ec0-9c052b2d0808"
        },
        "item": {
          "id": "bc05cc37-5827-4211-8340-4a8fe79c2dc0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e827d300-5e5d-418f-a07c-ee1b74296d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182f0680-5695-48e0-a766-d98f99065de9",
        "cursor": {
          "ref": "b619bf2c-4930-433f-9e46-398b4c5efb2d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "141cb183-71ca-4d3e-ab7b-da18374d70f5"
        },
        "item": {
          "id": "182f0680-5695-48e0-a766-d98f99065de9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "66213685-9239-455a-9a53-901c388cade0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ba9209-5d14-4a21-b0f1-63022a9fea98",
        "cursor": {
          "ref": "ee047577-4ce6-4bf8-ba68-4a89cf352677",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c88c3b00-3f0c-47bd-9e28-56b833780afd"
        },
        "item": {
          "id": "60ba9209-5d14-4a21-b0f1-63022a9fea98",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ae7c6053-07c5-486d-afc5-144c3a766f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655fb04-b27e-480c-a253-28e82a7a7acd",
        "cursor": {
          "ref": "23fdb550-3429-4992-a91a-9f5aed06bf06",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64f8d34d-edb5-4f17-a457-b4a69d1e26fd"
        },
        "item": {
          "id": "b655fb04-b27e-480c-a253-28e82a7a7acd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a04e350d-95c6-4ad8-9dca-eba1927c21f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b85dea-2c78-4898-a786-c7dd8459b4e1",
        "cursor": {
          "ref": "0e81e4ac-f6d7-44f7-9aa5-4cff128474bf",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "68ad4dac-a7d8-4389-ae06-135013a8eb2d"
        },
        "item": {
          "id": "d8b85dea-2c78-4898-a786-c7dd8459b4e1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "970cde4a-6353-441b-a7ae-5450c1475650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c169969-4068-4440-8a9a-39b8300f7350",
        "cursor": {
          "ref": "f185efd6-93e1-44d4-808a-a0518ddce5fe",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "90830f0e-93e3-45cf-95ee-aa8d45f52db0"
        },
        "item": {
          "id": "0c169969-4068-4440-8a9a-39b8300f7350",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "636c49b4-d282-4925-9f49-d2e4ae2bc43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd97c332-43a7-4692-825f-56603631df77",
        "cursor": {
          "ref": "6bdccc56-460d-4258-946c-d44688d067d9",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ce2c0f0-cb19-4b46-96c9-2f29801642d3"
        },
        "item": {
          "id": "dd97c332-43a7-4692-825f-56603631df77",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a6d804eb-5bed-46cc-a763-380c22470214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cec804-c307-4a8b-9f45-adfb6a278256",
        "cursor": {
          "ref": "e70591f0-fc92-4391-bbb3-36f3ae99e783",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a7c57a63-9171-4fb2-9288-790223c761d1"
        },
        "item": {
          "id": "c5cec804-c307-4a8b-9f45-adfb6a278256",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a291a033-8d0c-449c-b316-c97d10d2dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105618df-438c-4b6a-9df2-4d81ac5ac45c",
        "cursor": {
          "ref": "8f2db0ac-af86-46be-8d40-1a6d6f38d980",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6fcd042-1840-4c0e-80f8-ada857ab1d82"
        },
        "item": {
          "id": "105618df-438c-4b6a-9df2-4d81ac5ac45c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b6d5d62b-793c-4b9b-99a5-1f2a11014198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ebd89f-bf71-4eec-abc4-cf3864fd1da3",
        "cursor": {
          "ref": "88e32bc9-95b3-455e-8588-bb2d1ed73e6c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "470fceb5-9671-4332-8b36-fb9422606af4"
        },
        "item": {
          "id": "86ebd89f-bf71-4eec-abc4-cf3864fd1da3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a07a0da2-5cc0-4f85-af1e-ec990dc3924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e7158-623b-496b-bcc0-55612aadea2d",
        "cursor": {
          "ref": "ed4ea21f-0446-4cab-bc67-aada8228e4c8",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba1533ce-31ee-4033-9d46-e2caecc159dc"
        },
        "item": {
          "id": "0e1e7158-623b-496b-bcc0-55612aadea2d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ca66f98-2978-4020-ab5b-01d8cd33e33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5bd782-73c2-407a-80d0-0fdb68402adb",
        "cursor": {
          "ref": "c3a4f8d4-aad4-4518-82f9-efad388bad0c",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "09771b20-6299-4746-9951-18c8384aadc6"
        },
        "item": {
          "id": "fd5bd782-73c2-407a-80d0-0fdb68402adb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "421aabad-7ba0-44fd-8d8b-21f53409b184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795aaeca-cce2-4562-90e2-5e059e2b24cd",
        "cursor": {
          "ref": "91d61136-149d-4357-bcf7-39ebbed278b8",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6475a5f7-d321-477a-afb6-600a2731287b"
        },
        "item": {
          "id": "795aaeca-cce2-4562-90e2-5e059e2b24cd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fa570fc1-75e1-4472-87a3-982e39cd5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1c400b-8dcc-4d16-b274-71ba9b2aed35",
        "cursor": {
          "ref": "7d1bebb2-321b-4c0a-9224-f607681221c5",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4dcef6f6-cbb3-4579-9b0d-e8ba6bed460b"
        },
        "item": {
          "id": "3c1c400b-8dcc-4d16-b274-71ba9b2aed35",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9d4a9270-7450-4f2c-b299-9308d8c9133d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2c4ad3-019c-40c6-8507-b135d888d7e7",
        "cursor": {
          "ref": "ad9f825a-3822-4b2b-b3ec-e4626837b0ec",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2964279c-4faf-439d-8876-ef1eb7360df6"
        },
        "item": {
          "id": "8e2c4ad3-019c-40c6-8507-b135d888d7e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1879bc14-d97b-4155-bd13-1286c0db73bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1034fa-98f9-463a-b71e-75717afdb23b",
        "cursor": {
          "ref": "7b5b50f8-13a4-4953-ae9e-3539563a34e5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "241fb3db-8395-4532-9787-bb557e933a0b"
        },
        "item": {
          "id": "1d1034fa-98f9-463a-b71e-75717afdb23b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0cce9ece-0bb8-4a9c-891a-849194b43b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8005411-447b-4623-b060-62db6062030b",
        "cursor": {
          "ref": "96de8bd4-c491-4541-98a8-646d076a8054",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9e13ee01-f272-4ae6-85d9-5bbfd58025d7"
        },
        "item": {
          "id": "e8005411-447b-4623-b060-62db6062030b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7348f71e-b389-43b2-ba05-3fe8a992963b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea24c667-9487-44ad-afb4-82633744977b",
        "cursor": {
          "ref": "06878858-b31b-4f33-a0b8-e3aa84b77fad",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "73f62e98-7854-410f-bc3c-91cc780158d3"
        },
        "item": {
          "id": "ea24c667-9487-44ad-afb4-82633744977b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "46112c1c-df71-49e2-ac1c-5dbc99d48ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f846a6-7f60-42a4-b05b-0687d30f4c1c",
        "cursor": {
          "ref": "c1fd8997-9e39-493d-b278-419df29e8a5c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9e0a544e-5151-4aa7-94dd-6b251b16d85b"
        },
        "item": {
          "id": "81f846a6-7f60-42a4-b05b-0687d30f4c1c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "df750e1f-c717-4265-b129-ecb7fbc90289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8507963-67ba-4777-9e50-245c8844fa2e",
        "cursor": {
          "ref": "446e8c6f-3b24-4df5-a834-9ec3c8bab02d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2fe27b74-938e-4e02-91bb-132ed8617ec8"
        },
        "item": {
          "id": "a8507963-67ba-4777-9e50-245c8844fa2e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dee1f219-3e30-4e53-a6d3-9d5e487bea4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cd02b4-466b-4a5b-be78-f4ee8e71ebb0",
        "cursor": {
          "ref": "0bccc7ef-5ab5-4413-a539-84bbcec8b311",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9f0d2a05-dd95-47bb-a0aa-7b3847be9afb"
        },
        "item": {
          "id": "01cd02b4-466b-4a5b-be78-f4ee8e71ebb0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5425e4e4-16cf-4d9b-b34d-34e10bd3dd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644eab27-c9e1-47c7-bbb5-42a83be6523b",
        "cursor": {
          "ref": "27f989e7-4b29-450d-8186-9bb0934f9c15",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "536c0acb-0a75-4715-b50e-dc8b03c499b4"
        },
        "item": {
          "id": "644eab27-c9e1-47c7-bbb5-42a83be6523b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "687aa49d-43e4-43df-9fa0-82a5a7d85492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912a0f49-cb6e-4043-a833-26eb9cdba039",
        "cursor": {
          "ref": "2debbf6b-22ab-4144-8988-899570181b80",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0455afa0-a7ab-41b7-9b59-54ea4de00e93"
        },
        "item": {
          "id": "912a0f49-cb6e-4043-a833-26eb9cdba039",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ec12bfba-0ab5-44b1-93c5-b83d29ef1368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148f2738-9372-4ab2-8ffb-2f78a3ca66fe",
        "cursor": {
          "ref": "cda15846-75ef-411b-8fbc-8f4e98f2061b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "371e1de6-ad0e-4563-a23c-dae3e30dee1e"
        },
        "item": {
          "id": "148f2738-9372-4ab2-8ffb-2f78a3ca66fe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e2e4015-0bde-41ba-8184-9e41fc09bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb638f6-cd5a-497d-a84f-07c9fb418777",
        "cursor": {
          "ref": "d40ce440-4e03-424f-9919-8948af2cbc4c",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "243a2a49-4c3f-4b5d-9d1b-2537545c5eea"
        },
        "item": {
          "id": "9bb638f6-cd5a-497d-a84f-07c9fb418777",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "94542cde-aa84-4276-aff0-ec43128fe62d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 564,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb54424-9cd5-4205-b10e-ec06a5ab61be",
        "cursor": {
          "ref": "977b53f3-ba5b-4240-81ee-cb707e9cd5b6",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "55b6b7ab-4267-43d2-973e-a74ea5bab110"
        },
        "item": {
          "id": "0fb54424-9cd5-4205-b10e-ec06a5ab61be",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0613c517-1e8d-4d03-bc9f-76f0f4198c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb65f2-c39c-4c61-92f0-7b23179ea0d8",
        "cursor": {
          "ref": "8718fbab-4ac6-4f0e-bd3f-d91342a0ff21",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dac1ed79-36a5-43a1-b2aa-9457b115ad65"
        },
        "item": {
          "id": "12fb65f2-c39c-4c61-92f0-7b23179ea0d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "18a95987-64ea-4edf-a66a-0a37f72e768b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d1c707-592e-488b-908c-11390ab88484",
        "cursor": {
          "ref": "d26e5f6e-3bda-476f-8462-5d667cb7129d",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "79edd7aa-1fb5-4285-943a-cc4695f0f1be"
        },
        "item": {
          "id": "f3d1c707-592e-488b-908c-11390ab88484",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "771bd7b5-f33f-485a-8d86-2969670b541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d845248-ec86-4327-bbb6-f2a64c1f7922",
        "cursor": {
          "ref": "b51f7810-a500-4976-bd92-64e6963838bf",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7cebff23-ba36-46d2-a541-75e015febe33"
        },
        "item": {
          "id": "2d845248-ec86-4327-bbb6-f2a64c1f7922",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4d161274-e7f8-4601-94dd-9b08fc188207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02c2bf-9215-448b-ab78-f658bd23024f",
        "cursor": {
          "ref": "885b5f57-21db-4b9f-82fe-0e44cf8b866a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b419493d-9075-4f82-922b-9533b1471fd6"
        },
        "item": {
          "id": "1a02c2bf-9215-448b-ab78-f658bd23024f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "887898c1-92db-4612-a8d0-35f3ee460685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab066ae-5c1f-49b9-a7d7-69573f65ff28",
        "cursor": {
          "ref": "7af558b4-93e4-43bc-b751-5b6b86b427ef",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5fcaebea-3f2e-407c-ba8c-76da93fc23b9"
        },
        "item": {
          "id": "3ab066ae-5c1f-49b9-a7d7-69573f65ff28",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7e8fa970-f44c-4498-b3bc-1eb89a3a92ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190de913-5bd5-4de3-a074-be74924760be",
        "cursor": {
          "ref": "a6a3ca7d-de57-4b27-bb80-b587a6c028af",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "34337f83-91c5-4fd4-bc1f-a57d43485b6d"
        },
        "item": {
          "id": "190de913-5bd5-4de3-a074-be74924760be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7a7baf8d-64b5-40ce-b589-dd75f57a25a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 540,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3111673f-e1f6-410a-8839-c3b64e85f737",
        "cursor": {
          "ref": "d41d05b3-0822-4fc2-8810-ee52f99e44ac",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1ceb024a-a87c-4e83-b68c-882c7ae6bf6d"
        },
        "item": {
          "id": "3111673f-e1f6-410a-8839-c3b64e85f737",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eedcf71e-8c68-4522-a9c9-784b6d661ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fd2ff7-0f40-4454-9124-63a3a35e2710",
        "cursor": {
          "ref": "3b3bbcbd-a2a3-401b-96ef-82f9c91df668",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "400d6cd0-7d99-4101-bf5e-35948cf503e0"
        },
        "item": {
          "id": "12fd2ff7-0f40-4454-9124-63a3a35e2710",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c75b117a-8278-4411-95f3-a09222bb6e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f16f22-14f3-40dd-84c4-855d91cd3c33",
        "cursor": {
          "ref": "9d0980ec-8c6a-4b10-898c-4211004805c9",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a0f2194e-641a-4e8e-b57b-999ede88083c"
        },
        "item": {
          "id": "15f16f22-14f3-40dd-84c4-855d91cd3c33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee8d9749-ef6b-45db-9c48-1778743fbb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424a5123-8755-4c9d-96c2-fb64fbbad857",
        "cursor": {
          "ref": "d8ead471-aca0-4ae5-991b-923225b5e8ac",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8f686ed7-4d22-412d-b09f-000dc4a3d281"
        },
        "item": {
          "id": "424a5123-8755-4c9d-96c2-fb64fbbad857",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ebd807a3-8cd8-4a8f-996e-0cb9825e9ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8992b4fe-d85b-4d94-9dc1-64ae3e1a8df3",
        "cursor": {
          "ref": "cba6067f-4870-4dca-9a6a-0a82c65025b3",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "edc5454e-cd61-4f35-9e2a-573d10987eea"
        },
        "item": {
          "id": "8992b4fe-d85b-4d94-9dc1-64ae3e1a8df3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "28b4ab20-bba6-47da-8ffa-831ae2e00e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d956fcf2-9a8d-4982-a0c0-1563e3f77f34",
        "cursor": {
          "ref": "96e309d7-1d95-408b-933e-7fd55c5c4038",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e802caf6-0997-4fe6-8e12-11e2f6325371"
        },
        "item": {
          "id": "d956fcf2-9a8d-4982-a0c0-1563e3f77f34",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d5356c61-caf5-435e-bb64-c939859c3e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb5838c-f3bc-4117-8102-fbca208c631d",
        "cursor": {
          "ref": "2fb989c7-4798-4f94-a4c9-67756a1e4d54",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e42deeeb-49fb-485a-86b1-be912a06d479"
        },
        "item": {
          "id": "5bb5838c-f3bc-4117-8102-fbca208c631d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "245ae984-b946-4c3b-9e92-95b549fbe48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4708ccd4-819d-4c38-a36b-037c4891dee2",
        "cursor": {
          "ref": "78ae46d1-e252-416e-8823-8bd4b50e53e5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9aa536f9-e39c-4ab6-bdf5-7722bc08d18f"
        },
        "item": {
          "id": "4708ccd4-819d-4c38-a36b-037c4891dee2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a3df3156-fed3-4c66-ade8-1014747a682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab35e8c9-960d-4691-bbe9-e1c28663193e",
        "cursor": {
          "ref": "e2bdc869-f70e-4b34-8f1e-6df94f1fe31b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c6c5ce41-0753-43df-b0b5-249693dd0437"
        },
        "item": {
          "id": "ab35e8c9-960d-4691-bbe9-e1c28663193e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f62e1740-e517-4d4e-9a80-6b2050b123a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5b9281-4de8-4fb6-86b9-4fe0f9385f9e",
        "cursor": {
          "ref": "e946e984-566c-4580-b451-8ce80936bddd",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dd896444-293d-4f4f-bd12-bd619611767e"
        },
        "item": {
          "id": "7f5b9281-4de8-4fb6-86b9-4fe0f9385f9e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a694fc79-86d5-41e3-9206-6b0f566687d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86537d7-e7cf-4a01-80cf-e44dbf73a856",
        "cursor": {
          "ref": "ba16e0a2-6449-4fb3-8be5-08641264ccba",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2b85dc5d-1932-46a5-9f65-a5ba712a35cf"
        },
        "item": {
          "id": "f86537d7-e7cf-4a01-80cf-e44dbf73a856",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9f897ccc-5f7b-4acb-b113-a7868565d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806e48af-5dd4-49d8-aaef-831c1f01d344",
        "cursor": {
          "ref": "eff0931f-87eb-49a5-a9b6-a926d1567ae6",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8da519e4-6cc8-478b-b0c2-3820b34ac35d"
        },
        "item": {
          "id": "806e48af-5dd4-49d8-aaef-831c1f01d344",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "af0f3506-a229-435c-8171-cfe4f37538aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4847dece-1c73-4250-a192-5c1c42755aed",
        "cursor": {
          "ref": "ef305d7d-e3cf-450f-bac3-5c1a72636ce4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "18f09f5a-bb99-421e-8d63-249b7c660226"
        },
        "item": {
          "id": "4847dece-1c73-4250-a192-5c1c42755aed",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "10895f51-1bb7-410d-8833-28189682e537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dee2c1b-7751-4875-ae1d-e3189e63e510",
        "cursor": {
          "ref": "0c2ee3c4-40ed-4e30-8c6d-1c949aff8178",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68b1c223-29a8-415b-9c61-b207509ea637"
        },
        "item": {
          "id": "2dee2c1b-7751-4875-ae1d-e3189e63e510",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "95af1d1f-829e-43c1-b485-35ad78deac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f4647f-d406-47ee-90c2-81623bda8adf",
        "cursor": {
          "ref": "e5e9db43-7449-46ac-be81-7e5af911e78e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e19dcc9f-ca79-442a-9765-c785b8e4ade3"
        },
        "item": {
          "id": "c1f4647f-d406-47ee-90c2-81623bda8adf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bc2f94ce-7861-46e5-9be4-e749fccd5e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9cf17-c8e7-48a2-aee0-f6db7741557f",
        "cursor": {
          "ref": "2dde32d1-d6d4-41b9-863c-79797f445bc1",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2302bbe2-4908-4681-8ae5-0764082895e0"
        },
        "item": {
          "id": "18c9cf17-c8e7-48a2-aee0-f6db7741557f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a70a9653-b7d6-4b7e-b92e-b993bc877c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9864fc97-8fa7-4f31-8644-e537570d8edc",
        "cursor": {
          "ref": "3c96db3c-e51f-4592-b06c-394eeef49b0b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6190943d-d4f4-4782-86e4-cb8069384b9b"
        },
        "item": {
          "id": "9864fc97-8fa7-4f31-8644-e537570d8edc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f4d856db-2e7a-45bb-a2fc-3fe26b32e99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ae0e9c-8220-496a-b464-2cec19e51904",
        "cursor": {
          "ref": "8fe8bba3-3406-4658-9c23-652d05525db1",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "282af99f-40f8-43d4-8dca-7ce036b97f1a"
        },
        "item": {
          "id": "f9ae0e9c-8220-496a-b464-2cec19e51904",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "53fe8860-729a-491a-887f-ce81472419a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85aa045-6f0f-4394-b89e-2109469b4854",
        "cursor": {
          "ref": "47981c1d-5ab6-4ae0-b7c9-8a799d0a1d4b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34b8016d-ae63-4e95-96d3-372335f0fa7e"
        },
        "item": {
          "id": "c85aa045-6f0f-4394-b89e-2109469b4854",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dfd2c45e-265d-40e8-b1dc-eaa3062d1e2a",
          "status": "Created",
          "code": 201,
          "responseTime": 1917,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "ea484686-8211-47c4-8a5b-bdb65d02d941",
        "cursor": {
          "ref": "25b5aef1-df5a-4a71-845c-6bdb8f97d8f6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8726fe31-65fe-4b15-990a-aa6dd2b8abe5"
        },
        "item": {
          "id": "ea484686-8211-47c4-8a5b-bdb65d02d941",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "46cde633-2a2b-438e-8b7c-33e5ee2097fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924646e-9388-43bc-b3ab-bf125e8325dc",
        "cursor": {
          "ref": "e2a304f9-ad5b-4129-9502-00318f517902",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "826032eb-1d0d-4a09-9172-a3035ed97e9e"
        },
        "item": {
          "id": "2924646e-9388-43bc-b3ab-bf125e8325dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eac2f90a-b468-4543-b086-f703710099cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e638945-45d1-4668-b48f-f7e7e67e1c8b",
        "cursor": {
          "ref": "758b3fab-6518-496f-8309-5239fa5d5f76",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5feaaebf-4c90-42c4-97c6-62750c611159"
        },
        "item": {
          "id": "0e638945-45d1-4668-b48f-f7e7e67e1c8b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "34ed27cd-1ed9-4575-955c-231f4bda9d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9241dbf5-226e-4918-a352-d9b6c96d3322",
        "cursor": {
          "ref": "e77d701c-d62e-441b-8d81-af8d998beb1e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c378b732-c200-4f29-be8b-a04d8275d64f"
        },
        "item": {
          "id": "9241dbf5-226e-4918-a352-d9b6c96d3322",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3bd71f98-10c8-40b8-9842-6f915b9fb2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407003bb-b925-40b0-bcde-30a8625135ea",
        "cursor": {
          "ref": "a11dece2-0e51-4acf-aa95-2629f06dda8d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80d84dd5-cf80-499b-82ca-93189dfb5131"
        },
        "item": {
          "id": "407003bb-b925-40b0-bcde-30a8625135ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3869b286-b60b-45f9-b3df-78a770e8df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e8a35f-d628-4fb2-a561-795b401f8a66",
        "cursor": {
          "ref": "108827e3-a5ae-4340-ac94-ea7f41d902b6",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d37b61ac-429a-45e7-a5f7-8212e409e1bc"
        },
        "item": {
          "id": "54e8a35f-d628-4fb2-a561-795b401f8a66",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d29d541-b393-42a2-81cb-9792b5871313",
          "status": "Created",
          "code": 201,
          "responseTime": 1947,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "2dd44279-01cd-415a-9565-a89451d37a1b",
        "cursor": {
          "ref": "5b4ea32a-f890-4515-b730-2e3232ef980f",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4d3fec80-ea06-4ac2-b97a-b3320075f0a6"
        },
        "item": {
          "id": "2dd44279-01cd-415a-9565-a89451d37a1b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a50d0d84-6c21-4a8c-9db3-317e68efecfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662507a5-a217-4138-9303-8a803180beb3",
        "cursor": {
          "ref": "f6c9a961-7b59-4f89-ad52-be6d4b0d8e15",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24021fff-3fa9-4f7f-adae-d8f00f5dceb6"
        },
        "item": {
          "id": "662507a5-a217-4138-9303-8a803180beb3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "50f9b973-ea77-4717-8a0b-1bbbc78552ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6425ca4-d802-4be0-8863-a7342fa991d4",
        "cursor": {
          "ref": "3ad0aee4-5530-42f7-9d09-46b435568685",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1966d55c-154e-4987-9d87-6d46c1262c35"
        },
        "item": {
          "id": "d6425ca4-d802-4be0-8863-a7342fa991d4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0a7d952b-246f-4a42-a942-e91d10d99c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b99733a-6d3b-4355-97ca-9ea1bb1209e9",
        "cursor": {
          "ref": "c0654998-9edf-4680-8f8e-da3ef731e944",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9547920a-1f4c-4e3a-a07a-9ed5e6a97938"
        },
        "item": {
          "id": "1b99733a-6d3b-4355-97ca-9ea1bb1209e9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "83a4443b-8136-495b-bdc2-36a82446a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af2a3f5-beb7-4955-9430-7e7a82c6d609",
        "cursor": {
          "ref": "cab7c6c4-e3ef-43c7-9884-834edbd18724",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b37082dc-6ab3-48fe-a13a-5f1ecd4465af"
        },
        "item": {
          "id": "4af2a3f5-beb7-4955-9430-7e7a82c6d609",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0e9b6ae3-f907-4b92-87fd-fb24be5d0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caabffd8-1460-4401-b9f5-174d494c1d07",
        "cursor": {
          "ref": "e605efb8-75db-483f-a033-b6cddbf1dc45",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fb38a58d-423e-4926-95e7-2977e2cb0ac6"
        },
        "item": {
          "id": "caabffd8-1460-4401-b9f5-174d494c1d07",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d035de5-6455-4af3-afa4-feb2627be9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f67845-bcab-4362-a8dd-f5e69635edec",
        "cursor": {
          "ref": "6d472f17-c66d-423c-a037-7e525491023b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10433b18-d717-4709-93ba-8b5aa8e154a4"
        },
        "item": {
          "id": "98f67845-bcab-4362-a8dd-f5e69635edec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a440c429-36d0-4250-84b8-348a9eca676b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff29893-0c0e-40d9-9423-76718e95b71f",
        "cursor": {
          "ref": "6e34c82c-cce7-4b58-9dba-27c86701cd69",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "897be6d3-b472-48e7-bca2-655e8bdbcfce"
        },
        "item": {
          "id": "6ff29893-0c0e-40d9-9423-76718e95b71f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7825315e-66d1-4cc2-a357-20d5c9dfa923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45d7a6-c973-462d-a50e-65a7491b54fc",
        "cursor": {
          "ref": "5c4cd677-6410-4719-8a8f-a38b3341c846",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fc653acb-46c7-47c0-8072-3f9ffe24ff3b"
        },
        "item": {
          "id": "4d45d7a6-c973-462d-a50e-65a7491b54fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bbb019e8-6601-4c3d-9585-4a277d988fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52443e13-63e1-440e-afb9-b61485483528",
        "cursor": {
          "ref": "2cb52fcc-1bca-4a4d-99f0-8225a32fba16",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4bb9ae6e-723a-4c98-95c4-fcd3dab48f26"
        },
        "item": {
          "id": "52443e13-63e1-440e-afb9-b61485483528",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e3c95649-fc98-4de8-82b4-14670e9f81c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4c2967-ddb6-4ff8-b19f-f8aee6fca3fe",
        "cursor": {
          "ref": "5c76e549-4c26-4a00-abef-ccbd85eb723f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f1fda796-4abf-4a50-8889-d473bc332f1f"
        },
        "item": {
          "id": "2b4c2967-ddb6-4ff8-b19f-f8aee6fca3fe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5a3d2450-7dff-48e6-810b-c529a465d0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166acab8-6891-4b17-affa-e0afc50b63e4",
        "cursor": {
          "ref": "eb954c3b-8cae-4aac-a5b6-c4ae94a7b36f",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "35cc2bbd-850c-46be-b16d-cffe68c913f4"
        },
        "item": {
          "id": "166acab8-6891-4b17-affa-e0afc50b63e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "738e48a2-5b4a-44be-ad13-b14d04c33a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1043d6-f16b-45da-9af2-21335d85de7b",
        "cursor": {
          "ref": "675ab392-2409-4640-b3a3-539049587bd8",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8e8d7801-d731-4e1a-8a92-c768d54e4e58"
        },
        "item": {
          "id": "4e1043d6-f16b-45da-9af2-21335d85de7b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81716ae8-a29a-4af0-b331-4e20bf31e165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80167233-8511-4553-8b81-21a47d213a30",
        "cursor": {
          "ref": "4fc6c3b0-2abc-4588-b683-a586b8c40224",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4d897970-8c54-40e0-aee9-e6614ef8f947"
        },
        "item": {
          "id": "80167233-8511-4553-8b81-21a47d213a30",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8610b2a6-13ab-4c62-b997-a99587b200c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7bd7dd-9780-42d1-8bec-2c3d42c2b714",
        "cursor": {
          "ref": "5149ba70-53b1-48d6-a9a8-642feeecaeed",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b859a424-4acb-4f9d-8436-ad8601bf4c02"
        },
        "item": {
          "id": "9e7bd7dd-9780-42d1-8bec-2c3d42c2b714",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2c5f9c69-6a22-4fa2-bf22-f56262d8a24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1703f671-3e1d-4f7f-b36b-6d0a768037b8",
        "cursor": {
          "ref": "01357b6a-4935-474c-820f-22b58b955428",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "09195a97-d690-4c28-9897-fc5b48104761"
        },
        "item": {
          "id": "1703f671-3e1d-4f7f-b36b-6d0a768037b8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "585ee48a-715e-4a62-987e-398bcb29d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3d331b-8cb3-47d6-9f71-1a52ae0b363c",
        "cursor": {
          "ref": "d07bde06-1467-416a-b510-ff9ca9d2584c",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "becf0d31-e050-4041-8bdc-7f79d0783e80"
        },
        "item": {
          "id": "7e3d331b-8cb3-47d6-9f71-1a52ae0b363c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9189b5f2-4299-4d02-9b30-050f3e8fa825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01885644-e750-4321-9287-83ff116cdbfa",
        "cursor": {
          "ref": "384a86b4-4f78-4f61-b3aa-1cae66f0b09c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "429969b3-8178-4533-946a-95a77a27d44d"
        },
        "item": {
          "id": "01885644-e750-4321-9287-83ff116cdbfa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "75f96466-aa83-4f07-86ad-7352866046a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c945368d-b429-4b5a-b62d-1762b7583d29",
        "cursor": {
          "ref": "6bbb2ef3-ed76-4559-90f9-587b5f214af1",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0d3a6cb6-f052-4c95-a18a-a2a0a853e63a"
        },
        "item": {
          "id": "c945368d-b429-4b5a-b62d-1762b7583d29",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b73742d2-b633-4bf8-b181-cf759129bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afde80e-dc4d-41d6-ad3c-204d98e0d516",
        "cursor": {
          "ref": "c584ac02-9062-451a-8927-ad18bef16b21",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2920785a-318b-4980-bd74-a740020f4a4e"
        },
        "item": {
          "id": "5afde80e-dc4d-41d6-ad3c-204d98e0d516",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5d743459-aef1-4518-9f2b-68c589d892c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c0e583-3b2f-4290-ac8f-db1115c4d373",
        "cursor": {
          "ref": "77992660-fbcd-4ad1-bae0-f54861f67b97",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4c7db828-c622-4718-a8ed-075a2b692549"
        },
        "item": {
          "id": "b1c0e583-3b2f-4290-ac8f-db1115c4d373",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9fc804a6-3ebd-47b6-84d0-88bbb984a529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2b1590-4722-4d7a-8983-ef90be26f940",
        "cursor": {
          "ref": "e28478fa-6080-4f16-9230-4e785196ca7a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bb9b4637-0013-4cd6-a7cf-a4ef932e9357"
        },
        "item": {
          "id": "dd2b1590-4722-4d7a-8983-ef90be26f940",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d1f29bd-3ca4-4cf7-af1a-1f635fbdcf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88697ef-cfe0-4c38-b521-da4fdde139f7",
        "cursor": {
          "ref": "68035024-d447-40eb-be92-623a8ac7a683",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1d59f325-037c-448f-9b04-b335a61645fb"
        },
        "item": {
          "id": "a88697ef-cfe0-4c38-b521-da4fdde139f7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a395f07a-5f8e-4adc-b4b1-fa20ca7d209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4071d6ee-301f-46be-a97e-24cc7fa508c2",
        "cursor": {
          "ref": "c59bd65b-99e2-47de-9d5c-239383468557",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0208d43e-19c3-492c-aad3-94fcf0bd0f11"
        },
        "item": {
          "id": "4071d6ee-301f-46be-a97e-24cc7fa508c2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2594e601-07fd-49ff-b59a-363713537502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac2d5a-d482-4f7f-96f3-3e0537426669",
        "cursor": {
          "ref": "283e3025-f1f0-4c17-b5f0-6c7e28f42a3e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e7e08ba-9741-4291-b269-4ce8f0b20ff8"
        },
        "item": {
          "id": "a8ac2d5a-d482-4f7f-96f3-3e0537426669",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bbc7946b-8fe8-47bb-94d9-8c8811196836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d299c1-b05c-4633-9c69-de9cea4bea77",
        "cursor": {
          "ref": "ef2d5191-1fc0-4e3a-96b6-22786fe91ff5",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a198c821-a659-4c7a-877e-eeb1b833c94e"
        },
        "item": {
          "id": "d1d299c1-b05c-4633-9c69-de9cea4bea77",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "241f2c9d-54ab-4feb-bc5b-4a32c0084047",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 449,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9334584e-085c-4e89-8bd9-93be5185b5f4",
        "cursor": {
          "ref": "d34a39a0-b329-4451-9c53-1b61396760f0",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1334bc55-19a5-46fd-9177-4d5b8f0ab801"
        },
        "item": {
          "id": "9334584e-085c-4e89-8bd9-93be5185b5f4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e187bd96-0070-4656-b9f8-f8a596c3a488",
          "status": "Created",
          "code": 201,
          "responseTime": 1860,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "53afe313-f044-42e0-8299-d03c1495fe08",
        "cursor": {
          "ref": "c24b9ba1-712a-4deb-a700-fb6ec06207e7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "93ccc03a-24ee-4085-b15d-f03662acc8d2"
        },
        "item": {
          "id": "53afe313-f044-42e0-8299-d03c1495fe08",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "8593b563-4650-47d9-b078-c93e4f3ce91a",
          "status": "Created",
          "code": 201,
          "responseTime": 1914,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283e3232-ecec-4959-992f-709880425cf4",
        "cursor": {
          "ref": "b1d0c2a2-3a1a-44ab-9d77-d515e9306cb6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "58d215a3-3033-4a56-8917-655603640b0b"
        },
        "item": {
          "id": "283e3232-ecec-4959-992f-709880425cf4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d2568372-5942-4bb8-b26a-c4ba6f7e5844",
          "status": "Created",
          "code": 201,
          "responseTime": 1978,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e243add9-abe2-483a-a44c-ea55088c1997",
        "cursor": {
          "ref": "fdf6044d-3051-4df7-ac53-a361f2a04766",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1df6834e-8364-4a14-81a0-2d3f095a22de"
        },
        "item": {
          "id": "e243add9-abe2-483a-a44c-ea55088c1997",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "901a3851-d822-430f-9dad-3bc0cce1140d",
          "status": "Created",
          "code": 201,
          "responseTime": 1962,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "59544a47-5932-4a5e-869a-96111fe00cb4",
        "cursor": {
          "ref": "1142ba88-6bf7-4c43-a5ef-dd081a4cb0b8",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e377d70c-2eb0-4441-a350-f0d51c990d41"
        },
        "item": {
          "id": "59544a47-5932-4a5e-869a-96111fe00cb4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "deff4e6e-8068-4b14-96da-e51fb51e0d36",
          "status": "Created",
          "code": 201,
          "responseTime": 1942,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8143c152-add9-4660-b1f0-794bd209c0fe",
        "cursor": {
          "ref": "4fc77e79-8911-4511-a856-5a6beeeb5c18",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab1240eb-985a-470a-9524-a04d96793883"
        },
        "item": {
          "id": "8143c152-add9-4660-b1f0-794bd209c0fe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8842777d-a27e-4866-911e-418a5dede2fc",
          "status": "Created",
          "code": 201,
          "responseTime": 9003,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e9829e-65e2-4761-8041-864a7fde5fa6",
        "cursor": {
          "ref": "e5d8f630-a3fc-427a-8be9-57bba0bd7703",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "982e6212-b0ba-4bce-afc4-6a5d5a0f6e4a"
        },
        "item": {
          "id": "02e9829e-65e2-4761-8041-864a7fde5fa6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8cc4e8a9-e1e4-425c-8a02-7324823bf678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e9829e-65e2-4761-8041-864a7fde5fa6",
        "cursor": {
          "ref": "e5d8f630-a3fc-427a-8be9-57bba0bd7703",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "982e6212-b0ba-4bce-afc4-6a5d5a0f6e4a"
        },
        "item": {
          "id": "02e9829e-65e2-4761-8041-864a7fde5fa6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8cc4e8a9-e1e4-425c-8a02-7324823bf678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327fd2de-be8b-45c2-94a3-be15d05e7665",
        "cursor": {
          "ref": "0c4ec294-0109-4ae3-8add-cb32ffdcb050",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "316917e7-c196-4ef3-a713-da3509ca9cb8"
        },
        "item": {
          "id": "327fd2de-be8b-45c2-94a3-be15d05e7665",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31b722e6-551e-470f-aa8b-0cb1808df220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0066b69-1f83-40cf-812e-b3dfcac36181",
        "cursor": {
          "ref": "7bf83502-1f25-4d03-a09c-48dc41782834",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f014e6ae-6341-45d9-8885-08e4f4df11c5"
        },
        "item": {
          "id": "c0066b69-1f83-40cf-812e-b3dfcac36181",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc820586-9cbd-4d89-b660-b31d816e4b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c696cc-5c17-40cc-855a-78ffb58d37f8",
        "cursor": {
          "ref": "c8cf0fba-6765-4888-b980-57ea328c04c0",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "98caea12-d352-43ad-bcf8-be008830f485"
        },
        "item": {
          "id": "f5c696cc-5c17-40cc-855a-78ffb58d37f8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "708b5e88-96a1-4598-90c6-aec66d42363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3cd8bb-0688-4337-a2a7-dae0551f3730",
        "cursor": {
          "ref": "121a448e-af95-41a8-86c1-8b080bdd92eb",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50233560-1780-4c9c-abc4-3e60c1e0108d"
        },
        "item": {
          "id": "ce3cd8bb-0688-4337-a2a7-dae0551f3730",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9d37597-5c61-4f9c-9ac7-868e7fb07afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855c815a-73df-41d6-b668-78c147483961",
        "cursor": {
          "ref": "76e80244-a66e-4298-980d-cf556bfd97ee",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4cec9720-71f9-481e-bb0c-bf198dacf859"
        },
        "item": {
          "id": "855c815a-73df-41d6-b668-78c147483961",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a80ee877-2bf0-476a-ab75-fdb90617a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c1cfeb-1beb-4ced-97f4-e271ea6624d9",
        "cursor": {
          "ref": "cd2a1320-5308-488a-89a4-4d124bb6e455",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c3cc697-b091-46c7-bd12-753884b03ba8"
        },
        "item": {
          "id": "08c1cfeb-1beb-4ced-97f4-e271ea6624d9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7a2a81fd-c34c-42d1-bf77-a85e5e99a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24725519-4ce1-465c-a36f-aab34b9868d1",
        "cursor": {
          "ref": "b102c870-37f2-477f-bd3f-623e568e7158",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "511ec03e-868d-408a-aa4f-da517359368e"
        },
        "item": {
          "id": "24725519-4ce1-465c-a36f-aab34b9868d1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6aeb6b03-ac1a-497a-999f-11ec5d4a6014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9ea29-8f3d-4d76-ac95-9c7b1042e26f",
        "cursor": {
          "ref": "f71a2932-3534-4fbc-b316-2f8f16933f77",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a0dc622c-89aa-4c7b-9327-74215bcddd7a"
        },
        "item": {
          "id": "3fe9ea29-8f3d-4d76-ac95-9c7b1042e26f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5255fb52-4559-4296-99f4-253f87e66da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cdaf71-8495-48c0-9355-a45563c11a04",
        "cursor": {
          "ref": "b5ef40d9-9149-405c-864b-cca08990cef9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "26e47b41-1eb7-4bdc-b626-6b913a258769"
        },
        "item": {
          "id": "d6cdaf71-8495-48c0-9355-a45563c11a04",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48fdb4be-7258-4897-b2ae-cfe847df88f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f6dd90-5585-4505-b904-d50301ba2ca2",
        "cursor": {
          "ref": "47bf38b1-b54d-4b60-a04f-2c2239684e00",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "188128b5-be07-4ac8-b272-d932f826311e"
        },
        "item": {
          "id": "e2f6dd90-5585-4505-b904-d50301ba2ca2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "efa93754-3154-478b-9bf9-af2e37279083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a88de7-79b4-4699-b191-eaa6fe5d8082",
        "cursor": {
          "ref": "873cc590-0740-4e66-b087-48ab7fe1436c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "818566e9-3441-4931-8656-b4466dbf864a"
        },
        "item": {
          "id": "e0a88de7-79b4-4699-b191-eaa6fe5d8082",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "faf70d6e-8c82-4c65-a5fa-19b4f9531163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb7372f-fcc4-40c5-8fcd-3853886e93d7",
        "cursor": {
          "ref": "27b401d2-64f8-427d-8f45-49a49c22ed83",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7624198b-db3d-4bbf-971b-ef540a2ceb1d"
        },
        "item": {
          "id": "3cb7372f-fcc4-40c5-8fcd-3853886e93d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6cb6617a-5a51-49b8-aaa5-bbf9052fdcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157560f-869d-41b2-b9ad-186cb46fcb51",
        "cursor": {
          "ref": "53bb09e4-f443-45e5-b371-5fc3fe53c9d5",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4dd551ea-0575-482b-b66d-86e4dfccf798"
        },
        "item": {
          "id": "b157560f-869d-41b2-b9ad-186cb46fcb51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7160a59-1383-4cb6-81df-67d52134e497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e370e-fdaa-44f3-8496-61dd3456526a",
        "cursor": {
          "ref": "fb204142-ad52-42f0-892f-94a2866292b6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ad4af1f2-3650-489a-8389-2aea1f189ef1"
        },
        "item": {
          "id": "532e370e-fdaa-44f3-8496-61dd3456526a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2acbdc8d-00cf-4b22-bf3d-ee1a96fbd323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb4100-0363-458e-b254-3bf2dc00d27d",
        "cursor": {
          "ref": "4099408e-b7c2-4944-9417-e3293bd15a84",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ed462f9b-d306-49ad-8ce9-408276e38c6c"
        },
        "item": {
          "id": "1ceb4100-0363-458e-b254-3bf2dc00d27d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "32828e99-cc81-4380-b704-70104a5959d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1715e6-fe30-4517-996c-14090a1e9678",
        "cursor": {
          "ref": "64cd6b59-9124-4ba7-9c21-b4c486a9c1f0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cadc5754-e1b4-4aac-b684-e4157f00f4ae"
        },
        "item": {
          "id": "6e1715e6-fe30-4517-996c-14090a1e9678",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0caf6755-1b23-4375-87a5-7b8e2f283294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d4c5d9-676d-4121-ab5b-37c1fec247ff",
        "cursor": {
          "ref": "3fed237c-3dd8-42b3-86fe-9bf8b5d66c53",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "78f22535-0638-4a4c-804a-6a12a743d79f"
        },
        "item": {
          "id": "65d4c5d9-676d-4121-ab5b-37c1fec247ff",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c39f072-7864-4827-9d43-0a761ded7eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6621e65-e5ce-4187-ad8a-eac8c2603c15",
        "cursor": {
          "ref": "a65f16f9-f8f4-4553-9355-a4b3dffd1465",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "949539ef-1e11-4cba-b04f-8bd3f2fd44d7"
        },
        "item": {
          "id": "f6621e65-e5ce-4187-ad8a-eac8c2603c15",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce065418-a747-4777-a469-16f855b5631b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc31401d-47d2-4f37-bda3-235164576531",
        "cursor": {
          "ref": "50b4fec2-e01e-4d30-8b84-1b6eeec3d4ec",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9f84bac6-d08a-4c7a-bdfd-9263abda2504"
        },
        "item": {
          "id": "fc31401d-47d2-4f37-bda3-235164576531",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6af29d9-1bcd-4285-b180-8ee5ccee4bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b6ffb-29ee-43f3-b8be-ed686b0c697b",
        "cursor": {
          "ref": "dc348a7c-a68e-45d6-a000-6574536bdab0",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7fae808a-4a14-4cc8-b5bc-641afd9d5106"
        },
        "item": {
          "id": "953b6ffb-29ee-43f3-b8be-ed686b0c697b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "235c2763-7e05-46e1-99e6-4ef32181eba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a34bc3-9cc7-4577-876a-aeaa08a15d71",
        "cursor": {
          "ref": "c1cb10be-7837-40d8-9bf7-1b4d2738e8eb",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a5bf0e6-e81c-417d-97cb-6f99ac2f3c1c"
        },
        "item": {
          "id": "a3a34bc3-9cc7-4577-876a-aeaa08a15d71",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "afc9ae28-6a70-4bca-b4e7-afb957b2b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff5110d-2f66-4149-b7c8-6d30f5fa2555",
        "cursor": {
          "ref": "59e8dc83-e890-4e36-ae03-a04e492c3e1e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "014dc5a0-ce5e-486d-b654-fdc2b231cc7f"
        },
        "item": {
          "id": "6ff5110d-2f66-4149-b7c8-6d30f5fa2555",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d618111a-675d-45ce-89f9-f67aa65a98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71fe726-6ecf-4174-b2fd-424dc02743a1",
        "cursor": {
          "ref": "adc03085-b435-449d-a1fb-02c768974a23",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a587fd24-a777-435f-96c2-54422dd4b992"
        },
        "item": {
          "id": "c71fe726-6ecf-4174-b2fd-424dc02743a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ae2dd2d-7fa5-43ad-b344-45b557d23ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce6ca4e-8345-44b4-bfa2-5a19119e6e78",
        "cursor": {
          "ref": "a87b2358-0aaa-46d0-a4eb-4b28b47e4516",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8fba6985-8c87-45d1-8ce1-8c6de21bcec4"
        },
        "item": {
          "id": "fce6ca4e-8345-44b4-bfa2-5a19119e6e78",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "95d15a66-a01b-417d-8ec0-fb4bf8ebea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3362e-1686-4f1b-a5b2-78d625848344",
        "cursor": {
          "ref": "d980eedf-f866-4ced-b301-63b559e19fcb",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "750256d0-2543-4d5f-b394-5fd97346d7d4"
        },
        "item": {
          "id": "8ab3362e-1686-4f1b-a5b2-78d625848344",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b92d5dab-4cdd-455a-bc20-b669def58c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193c0445-5659-4d5f-9589-82f082b9f77b",
        "cursor": {
          "ref": "55bc0bbb-fa4c-47a3-adee-756547aa4be2",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "89e9db99-b015-4cb2-a592-347b91e7ebcb"
        },
        "item": {
          "id": "193c0445-5659-4d5f-9589-82f082b9f77b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f3e0aa13-a883-417a-95e9-a04bb21eda67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72849271-bb0a-46e4-92af-9525e8e2d7a8",
        "cursor": {
          "ref": "ec98019e-7be5-460e-8d1d-fd582b14db02",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e3fcacfa-574b-4a6c-ae2e-aef3f41fcc4d"
        },
        "item": {
          "id": "72849271-bb0a-46e4-92af-9525e8e2d7a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e9092c7-ea3f-4793-b6b3-87f03be297cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614a40a7-e44c-458e-9d93-4f7bf5239607",
        "cursor": {
          "ref": "881bdd57-5954-42f8-b8ec-776aea5fccd1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "47a21ae9-00cf-487a-8a6c-5252f8c8cbb7"
        },
        "item": {
          "id": "614a40a7-e44c-458e-9d93-4f7bf5239607",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8aee9a5d-167f-4792-a8a6-3206bcf5cfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b64b8c-8693-49b1-8bd3-33271b4bab8c",
        "cursor": {
          "ref": "f5df6674-6da2-4638-b4ef-839e0a67d949",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bbe2c726-32e1-4ccd-9a7f-a261b91124a5"
        },
        "item": {
          "id": "f1b64b8c-8693-49b1-8bd3-33271b4bab8c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "93af73a0-d4c9-4986-89fb-9d1c5292b8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9903c4-2866-4cde-bc52-c9d75a520c19",
        "cursor": {
          "ref": "5144d6b3-d79f-4546-afb7-61aba31a4922",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c92f7910-78ac-452f-b3dc-5263ad92182c"
        },
        "item": {
          "id": "fc9903c4-2866-4cde-bc52-c9d75a520c19",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a76d3b6d-eb00-4a1c-ba0d-42808c7b874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150dd0c6-af90-4afd-a6f7-ffe631937014",
        "cursor": {
          "ref": "95db18a5-18f8-4e63-ac13-4a39903854a1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d5e85ad1-8603-4361-98e0-0ff932cbe7d8"
        },
        "item": {
          "id": "150dd0c6-af90-4afd-a6f7-ffe631937014",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6282eb98-709f-48b2-8cd5-8ad5f296aa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cb2e62-64bc-4b27-8053-ad3c53ae5ec1",
        "cursor": {
          "ref": "efe88b5e-373c-423b-8213-8ea708262664",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a859d4c-06d3-4863-968f-45c4706ac88b"
        },
        "item": {
          "id": "67cb2e62-64bc-4b27-8053-ad3c53ae5ec1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a329a3ce-cc9d-43d0-b3eb-fd6b5a107fb3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f0ba1-3b95-42e0-8033-262756a498b5",
        "cursor": {
          "ref": "73ad8437-e5d6-4ee5-af64-7d0f748c8e0d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "85897771-54c8-43ad-bad3-cb8bc188f729"
        },
        "item": {
          "id": "6b5f0ba1-3b95-42e0-8033-262756a498b5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "c87f7327-dcb7-4726-9881-e18da0140344",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 468,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22847ab-923a-4103-9a1c-0e3aa54fb96e",
        "cursor": {
          "ref": "90ff06e2-bb92-470f-8d76-bc3d8edc1dc0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ff1a694a-074a-4429-94c1-866164512d91"
        },
        "item": {
          "id": "e22847ab-923a-4103-9a1c-0e3aa54fb96e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9bcc27d3-572b-4604-a42c-b4b632cf143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22847ab-923a-4103-9a1c-0e3aa54fb96e",
        "cursor": {
          "ref": "90ff06e2-bb92-470f-8d76-bc3d8edc1dc0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ff1a694a-074a-4429-94c1-866164512d91"
        },
        "item": {
          "id": "e22847ab-923a-4103-9a1c-0e3aa54fb96e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9bcc27d3-572b-4604-a42c-b4b632cf143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb90de0-4c8d-4c1c-818d-a3a6a1f32873",
        "cursor": {
          "ref": "5e6053db-5e36-4194-9d53-421732f062e6",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1eb784fa-b988-44c1-8a20-2eeecace847b"
        },
        "item": {
          "id": "adb90de0-4c8d-4c1c-818d-a3a6a1f32873",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3aa11160-d4e8-4d73-833d-8c055f4c2d21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 250,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c0781998-fb45-4d47-9c48-f37c1b059b72",
        "cursor": {
          "ref": "2c66e033-a01b-4827-a136-b08e08324e81",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7d4cbb34-2db7-49cd-ba5c-452535a610b2"
        },
        "item": {
          "id": "c0781998-fb45-4d47-9c48-f37c1b059b72",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "324bd001-4d60-4be9-b63e-c0405e27747e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6e72f0-d0f5-4b37-a5f4-b30d19dc93e7",
        "cursor": {
          "ref": "cea92a53-9cdb-47c2-a69b-9dcdb639612c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f5f79a6-623f-40b1-b82c-9fdb76e4f767"
        },
        "item": {
          "id": "cd6e72f0-d0f5-4b37-a5f4-b30d19dc93e7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6b7eedd9-2ad4-4827-8faf-b768a6691d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e9eec-2573-4164-b2d6-a795589911d4",
        "cursor": {
          "ref": "ba3ef669-bc3b-4382-899c-fa07b010d339",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "36b291fe-2895-4872-a287-3453657979ef"
        },
        "item": {
          "id": "0b9e9eec-2573-4164-b2d6-a795589911d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "95cf6ab9-d8ab-450f-bef6-d506a2520370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d0fca3-53f2-47ae-a73b-969ea014d12e",
        "cursor": {
          "ref": "ee43a1a4-8fef-45df-a998-ee94e4b25b13",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7beac3db-0afe-41b3-9e39-11a8560e4b4f"
        },
        "item": {
          "id": "e2d0fca3-53f2-47ae-a73b-969ea014d12e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8d28ecab-192d-49d7-a20f-f671334516d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d1394-67b9-43a2-b470-b92a5af2d3cc",
        "cursor": {
          "ref": "0e590761-6e38-4c5c-bd36-8952cd529cab",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3be169c0-06d2-4192-8b74-d8f0863172ad"
        },
        "item": {
          "id": "268d1394-67b9-43a2-b470-b92a5af2d3cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e52fd156-784b-45fa-9d37-f00542102bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc2ca27-c0e1-44c7-bb34-ac90eac84ab3",
        "cursor": {
          "ref": "0f43fb69-83dc-4b91-b516-0743ef3c2e83",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ddffbd61-67be-4b85-8730-7dd6c29f6f8c"
        },
        "item": {
          "id": "1fc2ca27-c0e1-44c7-bb34-ac90eac84ab3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e0730d2c-5331-4178-bddd-c306ca13e38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe07ae0c-1e7a-4fa3-85df-fdb9c6c7607b",
        "cursor": {
          "ref": "3a10673c-d418-4548-8820-2550c83dcaba",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f62b181b-8b33-4129-bce5-6b086a41f7f0"
        },
        "item": {
          "id": "fe07ae0c-1e7a-4fa3-85df-fdb9c6c7607b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1b756a4c-f1cb-4a7b-9ac1-068f17832a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cccf6ae-2cec-4572-9512-cbd2f0d15774",
        "cursor": {
          "ref": "6dd520c6-c6cb-491b-bd4b-0971c1a3d38a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "35909f27-f590-4d53-901c-4107b737704e"
        },
        "item": {
          "id": "5cccf6ae-2cec-4572-9512-cbd2f0d15774",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3c0b5669-71a9-48dc-b90f-757743576a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a57161-0070-4615-a999-75f6977dcc8d",
        "cursor": {
          "ref": "7440bb19-1250-47c1-af5a-02694c4cf4a6",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff80ef58-8374-4589-b7f5-ae1ce2b45085"
        },
        "item": {
          "id": "e6a57161-0070-4615-a999-75f6977dcc8d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "52e0c512-4918-4556-9877-a0ab4d029e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda1cc14-b00b-404d-8967-4dcbe5d33025",
        "cursor": {
          "ref": "af731b2a-516b-4d64-b59d-254979d6a705",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "96cfc3e5-fd96-47c9-a080-edabc314a073"
        },
        "item": {
          "id": "cda1cc14-b00b-404d-8967-4dcbe5d33025",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7ecd5b2b-1c40-4070-8fa2-580ddf1da039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbb494c-f4a1-41f7-949f-6b0d6d6fdc91",
        "cursor": {
          "ref": "6463482f-6357-41fc-aa92-40ce44c94a9f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "78971af4-49e6-4e89-94cb-4ca40dab792b"
        },
        "item": {
          "id": "cdbb494c-f4a1-41f7-949f-6b0d6d6fdc91",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3bc8201a-ad8b-4ef8-8e74-ac7ccb35ceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dc3fda-cde6-4996-9e71-c0b711ef049d",
        "cursor": {
          "ref": "eb60d57f-e41f-46df-8da4-95b59052fc4e",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44d65e55-b92e-4902-b341-cedba54d5d6e"
        },
        "item": {
          "id": "d0dc3fda-cde6-4996-9e71-c0b711ef049d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3dfbd688-9266-4203-b898-8e015a163965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c715f2-cd4b-40a3-a06a-e275d99b6732",
        "cursor": {
          "ref": "31c72497-5728-473a-8148-9211a9be35f0",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "58b4f3bb-fb4b-42f7-9256-269e079388c6"
        },
        "item": {
          "id": "b8c715f2-cd4b-40a3-a06a-e275d99b6732",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0fcdc38-2f38-4e1e-9f4f-0685d56dd04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245ee97c-824f-46b8-a087-068d9e9a66b7",
        "cursor": {
          "ref": "cfd6e0d7-b4b3-4d28-ad0b-2c1da0c521a6",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "00cf169a-20c6-477a-95e9-b438461547bc"
        },
        "item": {
          "id": "245ee97c-824f-46b8-a087-068d9e9a66b7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8b2ad62f-dd70-401b-81b9-1bba3d247f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321eb659-27ae-4000-9580-d69e24e70c5e",
        "cursor": {
          "ref": "12b2e8e2-eb85-4151-a34d-6f4fd8c45a38",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a8a4dec8-c726-4a52-aa62-f40c9621c836"
        },
        "item": {
          "id": "321eb659-27ae-4000-9580-d69e24e70c5e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1861149f-4d16-4ba8-819e-e25af4252738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3733a711-67ae-41f8-b5fe-ec60f6846c44",
        "cursor": {
          "ref": "faf73ff2-1973-4679-94ef-16ea917a3827",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "009d8174-a3f6-4f17-933f-1bdf855ab5b9"
        },
        "item": {
          "id": "3733a711-67ae-41f8-b5fe-ec60f6846c44",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0af02c3a-6bc3-4eca-b89e-01b54c26b916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab5d320-8418-46b2-a68e-d5e19dd9d90a",
        "cursor": {
          "ref": "d217ad37-3cb6-4f9a-8c10-bf97614718cd",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4594fcc5-3c8e-4dfa-b2b9-237c822f8581"
        },
        "item": {
          "id": "5ab5d320-8418-46b2-a68e-d5e19dd9d90a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9da66ca2-eb27-42d4-89f6-7f5e27d59220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192bbb17-dfd1-4cab-9481-733e9274faaf",
        "cursor": {
          "ref": "d2ad962b-bd07-4a08-b65b-83706609a4e5",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e94fe14-20dd-45bd-a499-a05cde9ed6e0"
        },
        "item": {
          "id": "192bbb17-dfd1-4cab-9481-733e9274faaf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a9e090bc-9466-4c80-bd52-b6ede2dcd8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e969c00e-0a44-45d9-9e5b-59711bbec8d0",
        "cursor": {
          "ref": "adab3398-85e7-42cf-812e-f89af7cff868",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dc933843-da45-4fef-8b34-70763410b388"
        },
        "item": {
          "id": "e969c00e-0a44-45d9-9e5b-59711bbec8d0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2fb3df5f-a266-41c8-904a-ff6fc355703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48ab3f6-d368-4ca7-9957-ce405676545a",
        "cursor": {
          "ref": "58149f2f-0ad5-4eae-8e31-fdfa7a35efee",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a5e4162b-76dc-4179-9149-d60c00f19903"
        },
        "item": {
          "id": "c48ab3f6-d368-4ca7-9957-ce405676545a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61872a7a-be20-4a3e-9a4a-da08478994d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df831036-c2b7-4340-92d3-924b9cc7a5c3",
        "cursor": {
          "ref": "3835a89e-98e3-4328-9310-97115fa80def",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d238988f-dca6-4ba8-bb93-a8f86c06655f"
        },
        "item": {
          "id": "df831036-c2b7-4340-92d3-924b9cc7a5c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7558d343-e3ce-4c3f-b13b-1248be866f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d700994-694a-453d-9dfa-1a949621cf3b",
        "cursor": {
          "ref": "f602e6e1-90f0-4b4d-8576-14f2b7f73ff4",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1bdde86d-8177-405c-bbc5-03eec309e9c2"
        },
        "item": {
          "id": "9d700994-694a-453d-9dfa-1a949621cf3b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d192e146-0b8d-4aa4-8e47-1e2af233f420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f32a3e5-94e2-4c4f-9911-0f1137fa89f5",
        "cursor": {
          "ref": "d5dec43d-c74b-4a31-a4a7-e21e255b4299",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6c6ab295-e75c-47dd-a7ca-1dca773ba341"
        },
        "item": {
          "id": "8f32a3e5-94e2-4c4f-9911-0f1137fa89f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2b5d6b73-b006-44f1-8bb0-38b3ba2366c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0d4db4-d532-4abd-a405-0f28a541af01",
        "cursor": {
          "ref": "05b16ba4-98f7-481f-a0cc-96cc0fd892e1",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "66486d43-91fc-4edd-812a-a5266feddcb9"
        },
        "item": {
          "id": "3a0d4db4-d532-4abd-a405-0f28a541af01",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a5768cf5-8510-483f-8a20-66f9331d65b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f757dd-aafa-4173-bd6a-ad75baf35f5c",
        "cursor": {
          "ref": "d6f3cc47-351f-40b4-b952-439a2a6dbfa5",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d41d9d0b-17f2-4a4a-ac51-66fd2b4b0a4b"
        },
        "item": {
          "id": "33f757dd-aafa-4173-bd6a-ad75baf35f5c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b3e12cb6-7238-4b91-a85f-4aa3ba88a8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd526a89-e8b5-435f-b0c1-c947556a5497",
        "cursor": {
          "ref": "90c1dc14-683b-4243-9785-ed4f686aa579",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a2896c28-42cc-4827-8335-874b6cf81170"
        },
        "item": {
          "id": "fd526a89-e8b5-435f-b0c1-c947556a5497",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7f05c076-f77a-4549-9899-1a83ad318a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec4a2e1-5b91-470f-9892-b713a2a909d5",
        "cursor": {
          "ref": "dfb58621-4d95-4b75-8932-9b972f16579d",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "40445add-7f52-43e4-b4aa-687b15f2668c"
        },
        "item": {
          "id": "7ec4a2e1-5b91-470f-9892-b713a2a909d5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d12542e0-bd79-40c8-a194-975aa2bd85bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2caadc-3bf1-4538-9a59-a37d8cc7dd4b",
        "cursor": {
          "ref": "2b02ae6e-8735-43e8-92f2-aa3e142fe9ab",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "061244ca-9bda-4c92-84b6-ce9a0d467c62"
        },
        "item": {
          "id": "6e2caadc-3bf1-4538-9a59-a37d8cc7dd4b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "36e44df4-ad54-4a21-ae6a-af1c9082f96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1459f-1be2-4214-b6e0-eb6fe8846125",
        "cursor": {
          "ref": "2a5c506c-288d-4918-9c0d-a1acef7a48a0",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9dbf4065-a54d-41c1-b44f-b8d6438d7a5c"
        },
        "item": {
          "id": "00b1459f-1be2-4214-b6e0-eb6fe8846125",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3391f8fd-c64d-4536-8576-a5674b80816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fa3fa-a1e6-4a16-8834-e4ed78a65ace",
        "cursor": {
          "ref": "e14fab66-164b-454c-9331-5008053b2442",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "49b9c090-4b51-4bb8-a4c1-c712bec4acc1"
        },
        "item": {
          "id": "547fa3fa-a1e6-4a16-8834-e4ed78a65ace",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3c81be1b-35fb-4e6d-a62e-9fa5dab5fdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa73d4ba-4b98-4066-a2d0-887bd1d4d20d",
        "cursor": {
          "ref": "cbaf2222-a478-411b-95fb-3e57fb31a579",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39319fa6-1539-48d2-881c-b26aeaa839b7"
        },
        "item": {
          "id": "fa73d4ba-4b98-4066-a2d0-887bd1d4d20d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "41de16f0-fa72-4fe1-9b13-41bf8b5a1cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de469bed-1d72-4b61-b4a1-eb597569f979",
        "cursor": {
          "ref": "4b6bd7ac-6dde-4782-9702-755b05686f93",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2d1ec883-5143-4e9d-a8fe-daf7eaec1342"
        },
        "item": {
          "id": "de469bed-1d72-4b61-b4a1-eb597569f979",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d587fa3d-7358-4c7a-b5dc-928e21a9709b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09331f3-5716-4946-8010-54bcc32a7a38",
        "cursor": {
          "ref": "73f6c9c8-7cb5-4fe1-8bb1-eac385a5c90b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "45425c95-fef8-4876-b8e9-a013a1d9df6e"
        },
        "item": {
          "id": "a09331f3-5716-4946-8010-54bcc32a7a38",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1f5c096f-8d8c-406f-8054-0c3af982a0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5d215b-d4da-4cce-a70b-653715c8a78a",
        "cursor": {
          "ref": "128e91be-b243-4b22-8918-a5c07650084b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5f9e35f1-8501-4653-a1e6-9a92ed854d06"
        },
        "item": {
          "id": "2f5d215b-d4da-4cce-a70b-653715c8a78a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29943c5f-d130-4234-977c-516d8566f069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6834f71b-742f-4cb4-8179-b861e81fc426",
        "cursor": {
          "ref": "b8f70134-1bac-48a5-bf28-de953de6d555",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78ac7caf-d6aa-446f-89b5-e965a1959834"
        },
        "item": {
          "id": "6834f71b-742f-4cb4-8179-b861e81fc426",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bdf795a3-5740-4b7b-bd6e-86c35e96f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95f9969-98e4-454d-a529-19c8fb4ceb06",
        "cursor": {
          "ref": "f66354ac-7b2f-4b14-9300-262dba5abeea",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "64383dd2-44eb-41f1-b465-e81b5bded384"
        },
        "item": {
          "id": "e95f9969-98e4-454d-a529-19c8fb4ceb06",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "edcb216c-ec75-4711-b45d-7abb9c15e50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e970736e-4af7-4db3-ba3e-1a27e252b3ff",
        "cursor": {
          "ref": "c7d7ba5a-3ca3-44a6-aa92-0457bd279d65",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3ada244-8ce6-4f28-9455-23e94ac3a001"
        },
        "item": {
          "id": "e970736e-4af7-4db3-ba3e-1a27e252b3ff",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "297e522a-fa7b-4688-b8c3-14bb07254979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3d82da-ad4a-49cb-a85b-67821075dba2",
        "cursor": {
          "ref": "a62a1557-93be-4855-91b7-e2cc88d8dcbb",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f90dc4e-4d88-4edc-8c01-507746aaa59b"
        },
        "item": {
          "id": "2b3d82da-ad4a-49cb-a85b-67821075dba2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6aba0cbe-42a3-4485-8007-41620a74fa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1674b4-e4d7-4cbe-b47e-5862cff8ac59",
        "cursor": {
          "ref": "47b6ebbc-4f46-48f9-b50c-c4e5f07e6b67",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b23cd9fc-fe21-4aae-9ccb-fdee59c83bc1"
        },
        "item": {
          "id": "2c1674b4-e4d7-4cbe-b47e-5862cff8ac59",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1dfd3aba-44b2-40e4-9c6e-d24f932fb661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07953c0-0716-4740-9493-0664fbc11b76",
        "cursor": {
          "ref": "c84b3c22-d71c-409e-8965-a37c364b241d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e7d4c7ed-d011-40af-a9a3-fdf14a4f223c"
        },
        "item": {
          "id": "e07953c0-0716-4740-9493-0664fbc11b76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9bd7ccb6-8e70-478c-a4bd-661a3b9f6dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5770520f-9c3c-4176-8924-1f2aafa7f4bb",
        "cursor": {
          "ref": "4e2b0ecf-284b-4b4f-b588-3afaec9b671f",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "16188296-9af2-4ee6-90fb-0e1ee09e6100"
        },
        "item": {
          "id": "5770520f-9c3c-4176-8924-1f2aafa7f4bb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f2da3eef-0aab-4f9e-9853-c8afb7bfded3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9a1087-feb9-463c-9310-68f93920c940",
        "cursor": {
          "ref": "6711817e-5d7c-4953-83ba-eb9c2dd75f0b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e8db06eb-4e15-4bc7-a985-f871ee8e12ce"
        },
        "item": {
          "id": "5d9a1087-feb9-463c-9310-68f93920c940",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c99cfa74-4bb5-42b3-a475-0947a75a5f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce0994-92f8-402f-9b42-3cafa8b18044",
        "cursor": {
          "ref": "baca1957-5a71-44dc-a6d0-68588a9e1e6c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1b0df28f-e2d9-454f-ab53-2e6d469c9c76"
        },
        "item": {
          "id": "7cce0994-92f8-402f-9b42-3cafa8b18044",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b927005-3fd4-43e2-a12e-a966570dc543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53b734d-c9f5-412d-92fd-6b8b4de90344",
        "cursor": {
          "ref": "116b1369-133b-48c3-9802-04961d050466",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "87565194-de82-4d59-9824-8aa480c3d606"
        },
        "item": {
          "id": "c53b734d-c9f5-412d-92fd-6b8b4de90344",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3bbea369-1702-416d-bad8-a22999ede0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9618a256-057b-4a0c-bcc5-f69e50e21e8a",
        "cursor": {
          "ref": "9e2e4fa1-d183-45ec-8b34-365445b0a83d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c6c05a0-eb25-42ce-81c6-9374a62e2b81"
        },
        "item": {
          "id": "9618a256-057b-4a0c-bcc5-f69e50e21e8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0091a2df-0c83-48d9-a72d-0749589da7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8863dd0c-e82a-4ac7-8279-e4653314fc2a",
        "cursor": {
          "ref": "24337d4d-bb6e-4a3f-9960-5378fbdcd541",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "bc947c90-e78a-4bad-801b-7e01aea57d63"
        },
        "item": {
          "id": "8863dd0c-e82a-4ac7-8279-e4653314fc2a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e65f4040-bc06-4486-8051-15ae73f00d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628decce-b3b3-4fa9-bc96-b981695b072c",
        "cursor": {
          "ref": "7baf2c00-b443-410c-b65d-f13931c49625",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4bce03ef-f9a6-43ae-ba7c-93e214792427"
        },
        "item": {
          "id": "628decce-b3b3-4fa9-bc96-b981695b072c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3d48534e-350a-41bf-b87b-b5defb8f6a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d501fd-f9b3-4e3f-b462-a039eae6acc0",
        "cursor": {
          "ref": "47d75542-8862-4b0c-b6bc-0649e5baae2d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "040482eb-bf2d-4992-ab95-90126e515ee3"
        },
        "item": {
          "id": "f3d501fd-f9b3-4e3f-b462-a039eae6acc0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eee2ba91-6672-4f2d-b4a1-3ab7e7a4a354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549270a9-7faa-4be6-a7f3-b2e30863741c",
        "cursor": {
          "ref": "7f82bd55-2556-4e4e-844f-bf97cc5a9385",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4ed0bdd1-c592-4072-83da-534387b24427"
        },
        "item": {
          "id": "549270a9-7faa-4be6-a7f3-b2e30863741c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "15dbaac8-e959-4d53-9f0e-c19b22bf86f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bdd5b0-a9e6-4169-ac45-c9f4d220090a",
        "cursor": {
          "ref": "77581055-fb27-4c5a-a123-ba184e2af9c3",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8dcce9f4-433a-409d-bdd4-e5d20fb3fc9e"
        },
        "item": {
          "id": "a1bdd5b0-a9e6-4169-ac45-c9f4d220090a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bd352c77-d8f1-46c3-9e40-00b6b1c76744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3b617a-10a2-4174-b118-6f8274d9e57f",
        "cursor": {
          "ref": "3d9bc1e3-ac5f-4222-8c61-6ba4d159b22c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d29bca3-daaf-4024-b623-57ec490f9713"
        },
        "item": {
          "id": "df3b617a-10a2-4174-b118-6f8274d9e57f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4317debe-e7b3-4adc-8068-943dcd783958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b8ed97-2077-4dc3-9d7d-82f7aef91f15",
        "cursor": {
          "ref": "65add720-f479-4c82-aaa6-868dcc94ed84",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3548d6f-e7ad-4662-b7c7-b221fb2f3638"
        },
        "item": {
          "id": "d9b8ed97-2077-4dc3-9d7d-82f7aef91f15",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "55d3f723-9582-4946-9e05-e7c54d42a73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bb400a-f28e-4584-879f-a9f5315c2ff2",
        "cursor": {
          "ref": "44895c36-e309-4833-8336-08b8a32deca6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "15dd915b-6bbe-4177-8a9d-6a3d077d4988"
        },
        "item": {
          "id": "e1bb400a-f28e-4584-879f-a9f5315c2ff2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "902388be-49b9-4274-85ad-347492459d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d5317-826a-41ac-b5b3-efad3da94062",
        "cursor": {
          "ref": "e03c7e81-639c-41c2-8d79-aeef82b1884c",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4af0dd19-0dd7-4011-9494-437b7895c785"
        },
        "item": {
          "id": "e53d5317-826a-41ac-b5b3-efad3da94062",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4390a177-c845-4408-9452-9f25007e2817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a5cfc0-a169-4b41-97be-2a1101a41c9a",
        "cursor": {
          "ref": "060ef3b8-c293-498c-b8c4-191436a80b0e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5faaeb48-d1da-42d1-abb6-51f0108d7d71"
        },
        "item": {
          "id": "19a5cfc0-a169-4b41-97be-2a1101a41c9a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "878bd76e-b50d-49b0-a991-e026a436c62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174bd561-39f7-4b69-96db-98e03540a918",
        "cursor": {
          "ref": "5e02f2a9-01e3-48b6-844e-8c3cab34087b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1e52bae1-ed29-4094-8f14-349899da5981"
        },
        "item": {
          "id": "174bd561-39f7-4b69-96db-98e03540a918",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3abfbb04-d218-4804-bdf8-fd217337eba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f552021c-d53b-40cf-8d59-ccf6d45157b4",
        "cursor": {
          "ref": "e3266d25-f125-4bf1-94d1-d0638c35e968",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d97d67ac-0609-44f7-9a28-e4a4aa01de34"
        },
        "item": {
          "id": "f552021c-d53b-40cf-8d59-ccf6d45157b4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7e2c97f5-2351-479b-acef-7a6e63f45e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b7007f-7bf5-492d-ade4-1c72c6581f95",
        "cursor": {
          "ref": "45f8990b-f5f4-44f2-986b-2581b6a88c9d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6d0aedcb-aa96-49f7-9df4-47fc77f7db12"
        },
        "item": {
          "id": "31b7007f-7bf5-492d-ade4-1c72c6581f95",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c3f922e3-28e4-4230-8de5-6d64aff912a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a1ddf9-9884-4de9-b1b8-687ff42f9368",
        "cursor": {
          "ref": "4449c489-aa34-4fab-9261-22416d49c533",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "512c05bf-0680-4da3-bb33-0e8fb2bd331e"
        },
        "item": {
          "id": "e6a1ddf9-9884-4de9-b1b8-687ff42f9368",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fa6d61b4-55dd-4e78-86f6-2e0f2265e3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2a630a-f103-49ce-95c4-3f40b63c6e3b",
        "cursor": {
          "ref": "aabaf665-c979-4cb8-96dd-68fc6e979ebc",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f9fb3aa1-f744-46fb-b899-e9b38ce4aed7"
        },
        "item": {
          "id": "2e2a630a-f103-49ce-95c4-3f40b63c6e3b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "22080167-32b7-4966-a06e-07fb8219acff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeb451a-e18e-49da-8239-00522f876969",
        "cursor": {
          "ref": "b3d16323-1eb9-40da-b4da-cac60d12fcbd",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "82314007-f53f-4084-8062-a8dea497967c"
        },
        "item": {
          "id": "ddeb451a-e18e-49da-8239-00522f876969",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ff70ac7e-9de3-4344-b941-11e06794ed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b425882-a43f-4dff-9eac-8a54a24649f9",
        "cursor": {
          "ref": "103aad95-2d23-44c7-b24f-0b8c5fc61183",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f8d80b98-965f-483b-b24c-3b3621cc7142"
        },
        "item": {
          "id": "6b425882-a43f-4dff-9eac-8a54a24649f9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2472defe-95e7-4433-a421-d378a24b061e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c259a11a-3ed5-431c-90c4-6b8a54463b27",
        "cursor": {
          "ref": "cad80991-4cff-4e1b-9e95-84829ee2fb96",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "535d99c1-c13e-49a3-abb1-d471bc3e417e"
        },
        "item": {
          "id": "c259a11a-3ed5-431c-90c4-6b8a54463b27",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4bbae3bc-65a7-479d-81b3-44b5ccdbdd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b278c7d5-a331-464f-b82c-4c50f3ae71cc",
        "cursor": {
          "ref": "db09e0a3-95c2-49fb-afb9-c67e4f1a91c5",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56ff8462-e9c2-47fb-89ce-8325ea06bbdc"
        },
        "item": {
          "id": "b278c7d5-a331-464f-b82c-4c50f3ae71cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fd118f2-a99d-4998-8769-bb39557c840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e53f80-d557-451c-8f11-22508a261fbf",
        "cursor": {
          "ref": "7894997f-6ecc-45d7-b9b9-1f127e3052eb",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8849bc55-ab8c-413f-8e47-f9a0301e8685"
        },
        "item": {
          "id": "40e53f80-d557-451c-8f11-22508a261fbf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec7fc2ab-ac9d-459c-9559-368c32a7a65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd495043-a9b7-4170-ab24-0a8c0b7bfd39",
        "cursor": {
          "ref": "ef390ad1-7653-43b8-a8e7-a8c7d637135b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d8938dc1-8f5d-4049-851d-896a4cc1e328"
        },
        "item": {
          "id": "bd495043-a9b7-4170-ab24-0a8c0b7bfd39",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2937807c-408f-495e-b477-13c461a29dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c585f7c-1a73-4669-a09c-b482b0d546ba",
        "cursor": {
          "ref": "3504283f-06c0-4bfc-9c78-ce00f9ee147d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a6a07ce7-543d-45ee-9d72-f154ff8d5dfd"
        },
        "item": {
          "id": "6c585f7c-1a73-4669-a09c-b482b0d546ba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5821b487-f768-42f9-8bc0-12fdf963e4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d3155f-b8fc-4615-a6f8-ff9358fcb6ea",
        "cursor": {
          "ref": "d02db662-43fd-46be-a8cb-eed2679125cf",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4d2e793f-05f1-455b-9853-a7e4277139dc"
        },
        "item": {
          "id": "55d3155f-b8fc-4615-a6f8-ff9358fcb6ea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7ec68b12-b5cd-4974-a55d-7b69a146cda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fe3df1-cd3d-4313-b9f4-50cefdbc415c",
        "cursor": {
          "ref": "bb00386f-2fa1-4c44-b962-4e27b468dd88",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "85e38379-fb0f-4423-9090-950238263776"
        },
        "item": {
          "id": "43fe3df1-cd3d-4313-b9f4-50cefdbc415c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aa3a0e0f-3df3-4079-b83d-7f44255b0938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ff680-d04d-4389-b968-df4edc5b239a",
        "cursor": {
          "ref": "04bfb683-178d-4b62-a78c-fb8ee4c3ad27",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8751c982-6d5a-464a-a5bc-28d229d106a2"
        },
        "item": {
          "id": "ef1ff680-d04d-4389-b968-df4edc5b239a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "027a6b0f-6a6a-4368-a440-561ad59f9077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20243003-382c-4508-a8a0-58277a3e5dbe",
        "cursor": {
          "ref": "fad05b45-2392-4cc7-9601-67f6534d6d8d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "998867c5-f423-492b-8e95-d0677118fb12"
        },
        "item": {
          "id": "20243003-382c-4508-a8a0-58277a3e5dbe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21bc4a6e-6655-40d7-9ee2-96d5bc68e452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1b4d53-9a32-46d1-b459-9e99b3898681",
        "cursor": {
          "ref": "764c14d0-4521-4ae5-8801-a4f5373593da",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "39e9ab48-b251-40a7-9e90-36057783580e"
        },
        "item": {
          "id": "ca1b4d53-9a32-46d1-b459-9e99b3898681",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "21e3bbcf-a036-425d-b723-06fb3454e941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29475303-1f92-47af-843c-50915b5ecd59",
        "cursor": {
          "ref": "dfd240cd-7f04-442f-bda8-18ee1ed41d37",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4aa58cb1-d334-4fe8-836e-5f7f66be6626"
        },
        "item": {
          "id": "29475303-1f92-47af-843c-50915b5ecd59",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0b6cd066-be9e-4883-8f65-c0983b7ae8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67506f3-422a-4aaa-a0d5-f79e561e78d9",
        "cursor": {
          "ref": "29bb3d1b-362e-4027-ac0a-3d837ce21299",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3998c83a-6952-4ced-8ee7-34b7c1c9681a"
        },
        "item": {
          "id": "d67506f3-422a-4aaa-a0d5-f79e561e78d9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "30322705-3a4d-41d9-9598-861fbf7c7b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60741231-75fb-4d30-8ff0-166806a85fe8",
        "cursor": {
          "ref": "2c36dead-10c2-4b23-814d-c844bf6b0558",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a71e80d-880c-4a24-962a-8bab42bdc7b2"
        },
        "item": {
          "id": "60741231-75fb-4d30-8ff0-166806a85fe8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9ec532da-74a4-4127-80de-c1350daf6b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9599ce-26f5-445c-b341-08225a509798",
        "cursor": {
          "ref": "843e3f91-547a-4ee3-aeb1-9f4a5d3cb2cc",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e8ec87e8-85df-43b2-8ac8-34ad294a206f"
        },
        "item": {
          "id": "7c9599ce-26f5-445c-b341-08225a509798",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dfd37a61-f481-4eba-9fe8-b989274287dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1a383f-9700-4d07-bc78-3d01460ef17a",
        "cursor": {
          "ref": "c28847e4-4d37-4a4d-86a6-8a2ae3fc7015",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "973d9777-6cd9-44f0-b8a7-aff0455d53fd"
        },
        "item": {
          "id": "7f1a383f-9700-4d07-bc78-3d01460ef17a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f383db5f-2a12-4e4f-99c3-d3c1228f9781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6bebc8-23b8-433f-b528-88e8fd6adee8",
        "cursor": {
          "ref": "e931098e-4950-4254-ad33-33746562fdf8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "615f68f5-a3e3-499c-a2bc-e007c674c0f2"
        },
        "item": {
          "id": "ec6bebc8-23b8-433f-b528-88e8fd6adee8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "efdcf051-4ab5-4ebc-99c6-32d7f5739be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43059b6-3970-4ed3-85f9-64c02dad50c5",
        "cursor": {
          "ref": "44d7c14a-cfa3-494e-b7ca-bccfa930b0a6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f29db5a4-60f3-4b28-9030-92b2a40db765"
        },
        "item": {
          "id": "b43059b6-3970-4ed3-85f9-64c02dad50c5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5357c01a-1bb7-4075-8366-a01cedcb4818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11165659-3fee-4b7e-9582-c2466655d6d5",
        "cursor": {
          "ref": "78c2a75b-6aab-4d2d-9ff1-63c7a84d970c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7c57d903-a3b8-4c6a-b222-2a94a4c8ee4e"
        },
        "item": {
          "id": "11165659-3fee-4b7e-9582-c2466655d6d5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1ddf6d4-9a63-4b03-804a-56dd86bf208e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df9a14-9ff3-4446-871b-a3bbbbd027ee",
        "cursor": {
          "ref": "0cee387e-c7c1-45d8-886e-ab50aad0ba34",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "69d5da58-0766-4d98-9937-a6dffd0d7fc8"
        },
        "item": {
          "id": "d0df9a14-9ff3-4446-871b-a3bbbbd027ee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "659eb6c4-5263-48e8-bda2-686f31214248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f2dcca-28d8-48e2-8148-df477d80b1df",
        "cursor": {
          "ref": "0124fed0-d946-4ab1-9020-8ecc74534a32",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "198ba3c6-af79-407c-851c-88e247144f0e"
        },
        "item": {
          "id": "64f2dcca-28d8-48e2-8148-df477d80b1df",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "012165ae-09b6-4e5d-9e9d-b8ea6efad101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c271114b-12d4-4892-8a4f-e7402f4626c1",
        "cursor": {
          "ref": "23bff304-2004-4445-be64-f9814eb57df3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "16f2795e-c750-49d5-b8c6-92b20e69d742"
        },
        "item": {
          "id": "c271114b-12d4-4892-8a4f-e7402f4626c1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "43118ef8-70d6-49c5-9f8a-b99ff6dcd048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72befe52-4895-41e6-86ac-6044482b5944",
        "cursor": {
          "ref": "a0522179-25fd-458f-ae59-9cd07c54f549",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4c2dcef5-6234-4380-b8bc-75971bed47d3"
        },
        "item": {
          "id": "72befe52-4895-41e6-86ac-6044482b5944",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "71810e7c-5df0-4cb4-95cf-f81f9d5a5f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32843891-7ba3-4367-96b0-9487c3f6bbf5",
        "cursor": {
          "ref": "bfdeb8f5-8ecf-49dd-92a0-9f0e2f8892a8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "598d57c7-20ba-491e-b6b3-0c06ecf37bea"
        },
        "item": {
          "id": "32843891-7ba3-4367-96b0-9487c3f6bbf5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a15074ff-f660-430d-acca-9f8f166a6867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425fc318-fb5e-4cbd-8f92-d771c390b9fb",
        "cursor": {
          "ref": "0afee8f5-8710-41bb-b3e1-f87aa8eb6f9b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "40f05011-1b07-47d5-a216-9d88215f8444"
        },
        "item": {
          "id": "425fc318-fb5e-4cbd-8f92-d771c390b9fb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cdb6ba36-89e9-484c-b483-fbf45376d7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e13984a-ee50-465a-ad30-27219cf332ae",
        "cursor": {
          "ref": "6bfc0d42-5253-4c5d-b40a-87cff7e7dc41",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e4d1a5dd-cd2a-4cb8-abbc-51cda9497fdd"
        },
        "item": {
          "id": "9e13984a-ee50-465a-ad30-27219cf332ae",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d0879b0a-b5d7-413e-83b7-4df340799f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ae7799-7f13-4389-aa16-18e7a0901932",
        "cursor": {
          "ref": "7139ee66-f07c-4648-8726-a25ff45ed8a8",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e18b50a6-2b35-47bd-8bc7-c4fe12f0f321"
        },
        "item": {
          "id": "29ae7799-7f13-4389-aa16-18e7a0901932",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ec276f80-e44b-434f-8677-0f71fbe81dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982ebc51-fb9d-483a-9130-eb54341a5947",
        "cursor": {
          "ref": "fc5db78f-937a-461b-84f5-2cfdf1245fe4",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6bd71ab3-0624-438f-be7e-d38a62b13ac7"
        },
        "item": {
          "id": "982ebc51-fb9d-483a-9130-eb54341a5947",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "470bf3ae-cea0-44aa-bc1a-b7c0ea4e3ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869407b0-8ea3-4c9f-b7e4-c02fadb3eb8e",
        "cursor": {
          "ref": "101194c6-58e0-44eb-aaad-9fb41f12001a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "29df6839-0dcc-425a-8bc6-f69f2aa1c663"
        },
        "item": {
          "id": "869407b0-8ea3-4c9f-b7e4-c02fadb3eb8e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1bc36662-0cc7-46f6-92e5-c0366309f7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e078ca8-d609-4843-a78b-64e9e889dfb1",
        "cursor": {
          "ref": "771549b4-0e0a-499e-87cd-4fd695f64d76",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d3b561e3-a4b3-4511-b8c0-7261b9a8de64"
        },
        "item": {
          "id": "5e078ca8-d609-4843-a78b-64e9e889dfb1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f0d9f073-3dad-4d46-9826-5fbfe35487a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a4ca9-3361-416d-a7a9-70b9c95d173d",
        "cursor": {
          "ref": "7e4c05b6-ddfb-4cef-81e1-2b2f860e4372",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f815b12a-bd44-4b76-aeec-1944476c56a5"
        },
        "item": {
          "id": "736a4ca9-3361-416d-a7a9-70b9c95d173d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f5f53af1-c236-4a05-ba26-10fba69f0623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6aecdb-f701-42fe-ac5f-0495ffd9c28e",
        "cursor": {
          "ref": "f8184ae5-1387-4331-8035-5816486c4d74",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7fac44cf-c432-4d18-86d5-25d8ca8d9501"
        },
        "item": {
          "id": "2c6aecdb-f701-42fe-ac5f-0495ffd9c28e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e796e021-45b0-4412-9fec-6f8bd370986f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd42ce2-ff57-4165-a299-a8169d6e993c",
        "cursor": {
          "ref": "5ad0068a-c3b2-4140-b86c-075192970e25",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "14c914bb-f59b-4b9b-a191-afeee7b84e31"
        },
        "item": {
          "id": "dfd42ce2-ff57-4165-a299-a8169d6e993c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8b36061f-91c2-4325-bb7e-e55a29742793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb61595-ac20-4825-8cf8-1923433164e9",
        "cursor": {
          "ref": "80cb2e56-ff45-463b-8963-7647503d9d49",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6040b24-cae2-45d8-a8b5-594a9eb7f5fe"
        },
        "item": {
          "id": "7fb61595-ac20-4825-8cf8-1923433164e9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c8cf245-0eb3-43c8-8ee1-fcaea497a93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbea2af5-782e-4c57-a968-0e465ed48f1a",
        "cursor": {
          "ref": "b3d3ec69-e7d3-49f8-8179-a338bf96aa10",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dd2dcb34-607e-448b-bfa0-9e7c1224db84"
        },
        "item": {
          "id": "dbea2af5-782e-4c57-a968-0e465ed48f1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "614da655-d487-4835-91c9-8d54d539b7f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc0dc6-d390-40c5-9002-aa036fae7d93",
        "cursor": {
          "ref": "89786780-7c99-45d5-9500-37e17074fff5",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8852312-0984-4e8c-8f84-0f3b4d2bcd2f"
        },
        "item": {
          "id": "c3cc0dc6-d390-40c5-9002-aa036fae7d93",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c7487a8f-60bc-400c-9fd3-ae572674ede6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 348,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f44782-9cf6-48f0-9530-ea91afd10439",
        "cursor": {
          "ref": "c27cea6a-1bb2-4dbe-a7c7-7b5e0a6ee9d1",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c1879a7e-597d-42e7-9ec5-dbc725655d88"
        },
        "item": {
          "id": "e7f44782-9cf6-48f0-9530-ea91afd10439",
          "name": "credentials_verify"
        },
        "response": {
          "id": "17076bf6-6e68-4e44-ae19-cd7282701b01",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb973aa4-98ac-4554-8aa4-87f1cdd7b325",
        "cursor": {
          "ref": "3905ca75-7c83-4a26-9aac-1bc07a715234",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59d8b8d7-6efc-41ee-b155-372993e0bf3c"
        },
        "item": {
          "id": "fb973aa4-98ac-4554-8aa4-87f1cdd7b325",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "242a539e-949b-473d-832f-10c91f2a7178",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50baf934-6e63-4f17-a00e-4379f6368de6",
        "cursor": {
          "ref": "3851c926-5fb4-4919-9ff0-9a8d5efe2875",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a8240f1f-581e-40d0-a4b8-b0a1fd8016e6"
        },
        "item": {
          "id": "50baf934-6e63-4f17-a00e-4379f6368de6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "57de15e4-89b5-4be8-8108-0dcf691c80f2",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
        "cursor": {
          "ref": "5ca0a257-53da-470f-aa3b-dcd5724e3266",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3aabb1fb-836a-4184-89a6-4310d0b67d90"
        },
        "item": {
          "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adb7c3af-ed14-4d6f-81ed-7a2ea7a4ae52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
        "cursor": {
          "ref": "5ca0a257-53da-470f-aa3b-dcd5724e3266",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3aabb1fb-836a-4184-89a6-4310d0b67d90"
        },
        "item": {
          "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adb7c3af-ed14-4d6f-81ed-7a2ea7a4ae52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
        "cursor": {
          "ref": "5ca0a257-53da-470f-aa3b-dcd5724e3266",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3aabb1fb-836a-4184-89a6-4310d0b67d90"
        },
        "item": {
          "id": "79ed5414-38ce-4fa6-992c-aa5117f08d05",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adb7c3af-ed14-4d6f-81ed-7a2ea7a4ae52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad3177b-9de1-42ee-ac0d-64e218a2b069",
        "cursor": {
          "ref": "182f9c12-b336-4547-8dbc-78133394c638",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "47512af7-d09e-4237-b4ae-733714c4487c"
        },
        "item": {
          "id": "0ad3177b-9de1-42ee-ac0d-64e218a2b069",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c6a85eb5-ca60-476d-b513-13b2f1997c13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 277,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40756a34-1efa-4a2c-ac12-0e70098a8ec3",
        "cursor": {
          "ref": "d0ec062e-32f8-4062-beca-f77053f1d1af",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bbac0c6d-ce34-4e26-af3e-e62aff2fb4d5"
        },
        "item": {
          "id": "40756a34-1efa-4a2c-ac12-0e70098a8ec3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "01aeb6a9-1c8b-4d38-854c-1727ebc30761",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40756a34-1efa-4a2c-ac12-0e70098a8ec3",
        "cursor": {
          "ref": "d0ec062e-32f8-4062-beca-f77053f1d1af",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bbac0c6d-ce34-4e26-af3e-e62aff2fb4d5"
        },
        "item": {
          "id": "40756a34-1efa-4a2c-ac12-0e70098a8ec3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "01aeb6a9-1c8b-4d38-854c-1727ebc30761",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b87c6df-1e1c-46d1-b51d-fc9f0ccb2018",
        "cursor": {
          "ref": "7fa2bbd1-2aff-4eac-b53d-e782d4dd1551",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2d22b97e-a315-4f42-a2a7-34bbbe753288"
        },
        "item": {
          "id": "0b87c6df-1e1c-46d1-b51d-fc9f0ccb2018",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d842c490-51f0-4758-98e4-e063d5ca2a06",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5751353-550f-482c-8c82-d1425b5a7448",
        "cursor": {
          "ref": "6200778a-fa4c-4ee9-a7d5-203274ffbd82",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f7df268-10bd-4749-85b3-9fa6e503e1b9"
        },
        "item": {
          "id": "b5751353-550f-482c-8c82-d1425b5a7448",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "933ebe44-776f-4d26-a8bd-34ebfcb516bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5751353-550f-482c-8c82-d1425b5a7448",
        "cursor": {
          "ref": "6200778a-fa4c-4ee9-a7d5-203274ffbd82",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f7df268-10bd-4749-85b3-9fa6e503e1b9"
        },
        "item": {
          "id": "b5751353-550f-482c-8c82-d1425b5a7448",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "933ebe44-776f-4d26-a8bd-34ebfcb516bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb14e7d-d3b1-4724-9a06-b916829ac16e",
        "cursor": {
          "ref": "ea017fd6-dc2b-4268-a155-8545d27d331a",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "489b652a-d06e-42e8-89f7-16277f12e7fc"
        },
        "item": {
          "id": "8cb14e7d-d3b1-4724-9a06-b916829ac16e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "977d7d54-a98d-4f98-9a1c-8f964f0d9c04",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 694,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}