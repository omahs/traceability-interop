{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d4e18680-b343-49c1-8013-43c77cc9ef59",
        "name": "Clear Cache",
        "item": [
          {
            "id": "de126a84-a28b-43f9-90b3-88f57960a8a4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e333cc11-456d-40d4-9f53-a6df4e2a43b0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c14684a5-c99e-473a-a313-eecd730ce573"
                }
              }
            ]
          },
          {
            "id": "0eb1e348-a43c-47b8-b831-db00a3a0e4dd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78fa1689-8f0f-43c0-852e-12541aefee5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "50d256f5-aeef-420a-b696-fbcf5e8b41d9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cadef3a7-be6f-4154-bcea-6cf03ff1cbde",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f20ada2-9407-4cf4-93f0-e581e0752e05",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2c03528-cf0d-49ad-bd1b-082375ae19b3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39157911-db40-45ff-a4f2-3156ca788639",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9c5ce08-9769-476e-b481-5d5573ce9384"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8201045c-b6c3-40d4-bb9d-df7e70772e2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77b57e8e-2115-4f05-acc4-1474c4231aba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "226caff3-bd4f-4e80-8adc-29228c8d7d9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65eaada8-4b1a-48a5-a266-6b8f6e2cd53b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2f98d48-0c6d-4f75-826b-583a6001d546",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b20f9cc5-955a-489e-84be-33a1ec3c13f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d74d2cbd-86f1-4e6d-a85c-1d28063768c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fb39953-4f25-4a64-82cc-dc6af5934390"
            }
          }
        ]
      },
      {
        "id": "de3afd96-2a6e-4f50-ad7d-93252a5a103e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b14f763-0498-436a-a36f-92e60b060a5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc3507d0-58b5-4099-abe4-644748c70678",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "900c0bb2-f7fe-4dd0-aefd-2a29425e2b66",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abb01ce-ab08-40b5-ba6c-4982382aa4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a15fef20-ef3f-461f-ae96-30dc7b337cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378917c7-facf-498b-8d00-b9de27d22490",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7b20d2-24c3-4eda-ab82-ba86b53d97df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47f57c3c-5404-4c3b-8b8a-e0098aa2a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d755ccf-e01c-460c-b482-14a035fad399",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0494c7-4341-476e-88a2-636dd7494acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "319c8c21-b9f7-4abf-9cc7-df44c661cf09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad085179-b6a5-4960-9403-58b79359d68c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33df2658-75eb-4e7c-a9f3-05832cd3b1e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6b3a18-1d2c-463f-91a1-91402264a15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc8a7c30-e382-4b4d-a288-78e959de1e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b082a75b-33fb-41b0-b4e6-80723835a730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38d0dc7-e692-462e-9938-7246d98d4189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee5668e-753b-4d8a-aa91-ebc26cd904b6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309067ab-98f1-4aca-844e-7f522d662fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "586fe6f7-a924-46b2-b105-2cea51aae7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e0a23-0a6f-4195-82ba-9827bc0f0eec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "950c1ed4-d03e-44c6-bbb6-059ae5c8ad9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "230c9d7a-6140-43b9-8b47-2e61268ab8c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9f94507-8143-4b73-899a-b10d15d3e587",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52507a62-5d0f-4d3a-a12d-3182a56b38f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d973a65-3b1c-4418-a32c-0663e35065db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14cd47c1-2055-4df9-a9b9-e582f3a41bfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a587bc46-1351-4506-bbe0-77eaef722819"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f964bb0-b726-424f-ac3d-43fc33f35a31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d07a30a4-aa35-46b5-a052-ba6ed93e5dff"
            }
          }
        ]
      },
      {
        "id": "a16f4be2-1881-4e73-9d30-ad5b03f16418",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8aa1a4a7-930c-4955-9af5-23b113848d11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ca6834c-2e52-430e-ae02-b4d668fb1104",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5f1142b9-dc5c-46a3-8171-a55b1223c208",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da26d53-96bd-4f1f-9066-5101f41391ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af497aec-9780-4d55-9f5f-d80ab7f18ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22560560-b500-48c4-869e-85a08599b6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a3f950-ebc5-4b97-b956-3c4039467d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64f7ed6-93fb-448a-89a6-e1a14d1bd9bf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb27916-639b-43a3-a281-c6bfcd797629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeee224e-892c-49f5-a34e-c93c355f1a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cb676a-1409-48e4-8f0e-9fe1f1bc87c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3844add0-d53a-46fc-a8c5-e76a2dd8a3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077ea652-a9a2-43c0-875f-ccb2947e2f68",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faf7be7-f5be-44af-8010-ee82fd0f2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b39e5fb-48eb-482d-b794-cff2b46141f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b218ce-209b-42b5-a1ef-52aef6c32568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "447b3a28-5179-4166-be2a-53fdd783bde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4e6f50-8bbe-469d-9082-c425b59024e6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0815c0-98c2-488b-ae0d-3f34308fa7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91526b21-8769-48bd-97ae-52cae9c699e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ba5742-79bc-4443-8415-63b483a0a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d855127-a4f5-4bec-b677-a1849e31c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d8a8bb-1345-4165-ba68-4b00a43a6c65",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b096920-8533-4a79-bdfe-b874b54c4253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3e32e8-7527-459b-bfad-74f7af07622f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dad0c7-87c2-49da-aea4-cdbc42a76a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f8a522-2cc4-47eb-a41d-7afb4efe0b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4308dfc1-01db-4990-a770-bf77ca08d4cf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ef312e-b601-4e94-9c79-8aa94c8b403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532afc2a-3a83-44d7-b3ad-35c510af1dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b487efa-4693-4dd1-a8b0-65225f750abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4014e00-90c2-4823-8bac-760e8940eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee999bbf-4d63-425d-96c9-13bf54b363dc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978637b2-bf73-4088-be11-a60c52355595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4007bbf-e047-45fc-89e5-c64b177b2e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfacfcf4-02f0-44e2-88ba-a964f1bc38c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e57122c7-4ac7-4566-aeb5-16d7cebdb8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09935a99-06ec-48de-997c-8c9033e25778",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45062eda-65e3-42c7-beac-579c091c587b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8fa263-553d-4fb3-9516-a36bdbebaa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65251c31-4651-4ca2-a42b-010a4c1f337c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac4e130-092e-440d-9da4-695d3f9c2cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d54f90-4c86-4a1c-8364-0a90287c1f62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e605ce-5ca4-45bf-af23-7eff92834cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fb2559-8ea8-44c7-96bb-6c52da6ff0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f15aee-f039-4c1b-a293-e781b010aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab894df9-2504-4bb2-a61a-694f458902db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418cc83b-1bc6-48bb-81cf-70de15a429bd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3fffc0-f6dd-4925-9688-6326025d9234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad8c38d-f09e-4a70-8e81-9c8100e9920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d349fad-8ebc-4795-90d6-cec512bf3825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "876e433a-bb4c-46cf-a55d-bdcb70767b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3818fd-63ac-43ae-960d-363d3e74b85b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a49b045-4eb1-46b7-9d6e-7f93eb2d446d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa5eb35-957e-4461-a3c9-8d205e6603a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3a4eaf-5997-48b9-a204-cb55195434c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d25394b-4adc-43de-b34b-b5676ac3d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfb17ef-7502-473b-928b-8a4834dca3a9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b6609c-c701-486d-ae76-a8a69dfb7dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8c5d92-7db9-4ef9-bb79-9923a3f6f6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe5d6e2-18eb-40e7-80f7-cb41e58cd436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "712263a9-51c6-4710-817e-6011b7b8d072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b689de4-38bc-48c5-80c3-e94490adca52",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca457529-50f5-4ec1-b378-ac9a4a740107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a88cb32-2bc8-459b-b0c3-b23ba1a6a003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c212dc8-77c8-46b7-8286-2602bd98bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1367259d-0fa6-4737-b33c-4a0100e210f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d76aab-dead-4c87-a76d-6b1c1fdf7bc2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8519a16a-aede-40b4-897b-3d3b653eda51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f62b19-c77b-47f0-82d9-f3a490a3bbbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5861a2a-773d-440c-9ee9-760efada48d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89581ac4-e91f-4951-95fd-17f42c23e467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355277f0-8b29-4b3d-bd50-dd38018d01d1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbecd41-a9c4-480f-a2c7-331a8b96b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75296989-e612-45fd-a058-99048cc5c469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8226d8-d6e1-45a0-a36d-109c6058df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83e13f19-d2cc-49c5-b0c6-105191e6c616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c68544-fec8-4630-881c-76db10686b9b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32436fb-957d-4ce6-8b4a-295be0935ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04e0024-ff23-4685-92aa-c39ae23d6d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9f4ca9-f3e6-48e1-9937-bce3ecf114bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cba2ebe-ba03-42db-953d-b0484d7a4153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6273178-f58e-4c7c-a67b-b109cd4f74a1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6064ba9-b986-43af-a71b-c1badd3af282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dff577e-ff13-4135-98ae-76c0fac23c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d4361a-e8fc-4f97-85d4-a0e7335013c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f7693ff-a9fa-4a89-84d9-2eae1ae8355e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d4fff2-e4e8-4156-9009-1d937beef7e2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aebd8a8-1e89-41e6-870e-71f2c12c7df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a3b371-2dff-4550-9542-23084b67bfc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5fc61d-0d1f-441b-a3d2-41b924842168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c559786e-4e18-42ba-9ecb-505f529080ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e8cd0b-4eb6-4209-a83e-a3291f8a8379",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9980f52-424b-48aa-9a91-074a163af2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa754a2-e56b-4616-9d87-0662b32b0a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbc1426-5cc6-4829-8278-8c00ba914a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5c0ba8-f3fa-430c-a608-b42cba6ea333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d201524-8d1e-4078-add3-9811e9350dd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fd6a42-e920-4420-b8ca-06ce9aff801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca70736-d48d-47d4-88ef-a95bd3430fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90c1e56-990c-4284-ab8c-28a0054044fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "925e2a1d-03bc-47de-96c9-696f71cd3f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2d9169-a21d-48c7-b663-1c4278884237",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fb1409-7c43-42fd-b070-6e375940750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0274805-b01a-40e2-ad5b-cc9b47b6c537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1f59e3-0af7-43d3-bbf3-7d08cf59a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a6a583-c8b4-4d9e-9479-29787c8bc313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee565f-57c6-47ae-8c83-a2bca2bafdff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e302497-c6aa-4a9a-af7a-17425fe229e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc19df3b-609d-4d36-9ce2-b6351c40fc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6375b2-b45b-46a0-a6bc-7ed22550be93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce54ddd-31a4-4e2a-8723-0b58af665096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03ef774-81a7-40e7-9153-27b49e1fa6f2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617aa75a-81ff-48fb-a143-e02d2f242abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dc6353-da71-4d24-b719-ae02b3cf12bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656dbeed-23a9-41a2-a2a7-6dd25c34c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6726c190-8b16-4936-8f5b-14c011f169d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c9d45a-75a2-4542-a947-117c0d7f7b09",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3da654-0285-4f22-bb04-0c2232b2fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a761d68c-3856-4a11-8f95-f89619a2bf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda89071-5916-47ac-90ca-69db65e7fbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e5301f-d073-4ed6-ba35-387c738c946d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03b175c-9956-4c84-9a17-9e98b9d9ef59",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1600719d-f8f9-4d4a-a205-91335665e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75069a1e-213f-4ddd-af39-1040047eb450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f62a4a1-e142-4f8d-886f-9928d9997402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "289439e2-fa7c-46d8-9fa4-9c3de7b6dd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9aca68-dc02-46bb-80a0-10b0d82c28d5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d411c0d3-e295-41bd-b8cb-486e710b89c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c217d8ba-3ed3-4f03-8ea7-da816a445782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16051a30-53ce-47e7-9ae8-cd6bbd37537c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcec04ac-6cd8-45eb-bcc3-31d335b0d9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7aa255-6b9f-4cbb-8bd6-d947b039948d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55835cc3-1bd7-4cee-abfc-0d9f98c638ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e10ae4c-a869-4a97-b50c-dc495a5aee30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf6e1d7-a305-460a-ae91-a7ceddaf2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0926f3-9515-4163-9a21-80f7561ce164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2e8d6d-80a8-4982-85b9-d187f40688c8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80abd0fb-057d-4a6c-8b93-b5cfac57c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f30b6ab-886e-4313-b28d-f57ec11a51e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d65667-c46a-4de2-a2f5-91c5edd71785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f4c85e-eec6-46e3-81ba-aa63c1f293e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bfdfec-84bd-4a42-971e-828c8ab8f7f7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6979a6b3-9ee0-4db1-b89f-67c3b74ff477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62db959-9826-421b-9bd6-a0cb41d246eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dbfee4-743a-4d8e-94ca-e1e44dee0031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4722becd-6aa6-45f7-b76a-a7dffab3dbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0998da-d498-4f7f-9fbb-b8000dbe4aac",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad3cf71-2efa-4a78-a585-bac35ce7539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478282da-5cbd-4fce-a385-75d7c4fdff19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6446a6-9df7-4f73-bc00-9c3555a00892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "73d1e4f2-5c87-4be5-9ca1-947675353233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8bfee-9682-4311-8adb-8b4dc3421544",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f997f4e-b908-4f84-8e46-715b8eb02b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d1c97d-9dca-4c93-8be4-5f8b5c3e1c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ccca15-b3e4-4076-b8f8-5f1600638533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9e0896-0c97-4a36-be50-917e35d435d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94654278-86ab-4b42-b211-89efc5f3a72f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2918cc44-54da-43e8-ab16-9ff6e4e3e943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28b215b-702d-430a-907d-529a4a707a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01438f0d-ab32-43c2-bab9-0facfd55891c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78127c8-7910-4cd5-8c61-cf4e003f26cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e197362b-204c-4315-8769-aef712673dc7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68b7270-7b13-4474-b443-4574b1d7dba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d160aeb3-0bb4-4653-8484-425a1e1b69ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cabe86-c5f8-4aa7-b249-5f17126e72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a557999f-b6fc-445b-948a-8951b15f11d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38ac352-cd4c-4ed2-8f89-34ad04629190",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3934b28f-d179-4ffb-b060-17a3d16704fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ed8595-a5f6-4013-99ea-991d0821f6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f044b49-d322-4304-bc5a-2e4f096b92eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c39d4a-7ece-4087-8612-51ae4bbb35e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0013f8-b40d-4caf-a3f2-1fb68a43c7a3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdae5af-beaf-44d8-87ce-47c214dad272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82510438-5023-43a4-9e06-24a3dab3331a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdfed7b-d296-424e-8044-9872e3e55546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "08ed7bdd-e361-47be-9c3c-48b374fd02cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97b050f-596e-47b7-bb0c-59aab1a11949",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec608fe-2e5e-4e14-9aa0-122a559a5fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "810c727d-9b04-4af9-b06b-78777b6d0a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43105b5-22b7-42ac-a385-4c648052d147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7138c7-f7d4-48bb-b2d1-44f67e51b845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d615024b-d98a-46b1-9fd7-ea2d062bdf28",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f883acdc-12d3-4be7-84aa-ffab8b5ac9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30e655c-e930-4482-a187-c7ab4ab27e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e6aab8-6772-4c1e-80cc-c7387c947a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ec5061-827b-4914-b023-90141c23abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20df1c6-2b75-49a5-9ccb-10d9ad9e44a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1537c5-331b-410a-b60c-ce0d427c8e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769fda59-b2ad-462e-8069-8ef8d96df6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6eef61-83b7-45d7-a340-af30d91fb52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c120dce-7892-46df-ba9e-d3d2c2764f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b0f96a-c4bb-4436-bdfc-964593e79e8a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d03c01-1466-4282-bb81-74b77298facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2147fc3-b060-44ce-a6d6-9c99782c4c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf34f1a7-f0fc-46b6-a7f9-303dbba5e2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ddc5c0-5856-432f-b18e-cd5424c99e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6e5b30-1d13-4bec-b636-476f943afe0a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec88b9-fac8-4970-8abc-7053acdb6d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfe802f-54f1-4b7c-8ed0-7868c8badda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ddb696-dc2d-41ff-87fb-a5e84c3f7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e527a720-e3fa-4348-ad38-77e69efd6212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c856a74-8dcd-40d2-b579-a7cb767d6104",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f924d2ee-6986-4341-83eb-b7ca0939e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5976b144-299b-47ff-b5bc-f2b1f9d0195a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee16fd4c-2478-49f9-8485-db909c831e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b671f141-cd24-4d72-919b-2967d45fd2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb3a38c-7b34-4679-b678-cf99dcabc347",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b3228f-a38b-430e-9ace-faec9c09e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0b6926-aab0-4f49-a084-b35980e8fb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096b5023-525e-4e7d-9a97-304a05b1ac27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "59eb1841-0fb7-4aec-ba05-f71417449734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a10415-95df-455b-a685-8abdb4d1ccf4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1505188c-db80-4652-8274-edcf82350769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a46ae10-c345-4175-8150-5b46f7677601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020a1af3-a9bf-4750-bfdc-f85d7879017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a71eca16-d086-46a2-bdf0-57402c657cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ea0f32-fa8a-4b57-ab91-afc54132321f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1406a84-56c5-43dc-9db2-18c86eb2c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96cfb92-1813-4091-ad75-2eb9d2918feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567acb9c-abae-4120-92b2-7c646f51c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52e2427-766f-4aaf-b687-0d6bc4613265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dcb768-39aa-4a41-91e2-361809e849fc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65af13b3-5cd6-4715-b4fb-76d6574e3a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d9f13a-5338-40cd-8268-f1c7ea3df2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56abb47e-4826-45ee-824f-b29082b831b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1656aeb3-f6d0-492e-af4f-450f9bedcb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e08c374-d42b-4ce1-a1f4-4d0e9fc7363e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa23aca-4766-4a5b-9837-0c77405956fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c87dc2b-f4a0-436c-9198-33ebd59ba165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c776af64-de8d-4ab2-9c1c-755c9f0252d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70cfb86e-2ec2-4c28-9b24-484d2ca29b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aacc71-7cbc-43e7-8adc-8edd676e5a91",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e3a2a3-98a1-4b50-a267-c810ec749850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba2cc11-f84c-456b-bda8-cfa92ef2c639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c616e8e-7b30-4640-91e9-b34b3e3fefaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "766b6818-acb4-4e56-a733-aa1d6b2c343f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb6da0e-aa08-4530-99e9-061f9712e41e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beaf9e0-4acd-404f-82a1-7fc1fdc96d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e6922d-acc8-47a9-a753-de28049cd10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c0753-68a4-45d0-8dca-e1ba731fb8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "469cf265-7021-4501-908d-2c22f62f4f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe14774-d617-41d4-ab70-11b43387690b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9650b327-e5ed-4a48-bf58-0470c6d3f7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6231f219-32a4-40d8-80e8-7e9c08822912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d40c1e4-27fe-4262-a457-fc9bfe17da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c46e8abd-d901-417d-b920-e350ddd80db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cbd964-0c0e-4d1d-8f4d-51329a5b5bf1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d11f083-72ef-4dc1-81e1-e51c4631da4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9a9175-e08c-4385-b813-ef4b79fea019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9838dd-6894-4156-9ac5-ca285d0a71fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4baac73f-a8c1-4533-b520-2bd1ad6190e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b528dd-798c-4ec5-92b0-852f4e81db24",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6045847c-2322-4ea1-8ff8-2b38785760cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4129645-6b69-47f1-8153-f6428ea4fc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0787dd-a464-4762-bf6e-52b7e70e0184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed258ad-6cba-4796-ba67-dfb2a868b2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf78c144-f7ba-4bca-8ca4-6cd4b851acb5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d670ab-be43-42b1-8677-626c67b0d259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127922f8-e31e-42a5-8fdb-6e052fb31640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcea159-65a0-4a13-b918-d2d3e0f54c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50582ed0-3327-4b83-9523-d980718c549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2fba6f-1864-4e1f-8df1-a8fab962fa31",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37daa6b5-7134-41a2-b3a6-8458ba3dd490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48cfb5f-cae2-44a1-8199-762ffd770a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d93fa27-53cd-4ef1-8244-c9232a1ab8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f93059b-254b-411f-8472-67f9b2e3368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289f79fb-d6e9-4483-9842-1af96247c9e1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6887f1-6b32-47c6-8770-9aff4d90b294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c601b5-36cc-4b6b-b9f0-08809db84702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd4c8d1-e738-4239-94c3-326fcc9e9d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "047d51bf-3750-43ba-a274-d90d2b88cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077a2ac7-de9f-486c-b57a-f78c8a90e694",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30464255-39e4-477f-9b3f-92a37a6495dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f5ddd2-d0dd-4093-ad8e-57bccdd13d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d577f7-8d7f-4069-aa5f-04ecdca43ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd879416-ee17-45dd-9ba5-c129793bcb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ae044d-42b8-4843-84f2-892ebc9d5813",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e2067b-4e0e-4539-8f8d-d70f79127564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a6d617-0e19-47d8-8968-14411dc72f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7435d4-a5a0-4841-94e0-5f055bbd41c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fe45a969-7519-4867-8947-910512ef56c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da0a311-edf2-4b2c-a00c-1b890a39bb27",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8559da-48b1-4930-8fe9-4b258542cba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a3ff3d-cb22-42d7-b31d-0b10bd25ed5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297dcab2-86b9-437a-b7cc-f4fe0038a333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9de8d6-ebad-4aa8-8e84-98e12e18ece6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518a4bbb-b2f8-4a58-894b-97d87ede9c11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5caab3-5b8c-4417-b8c2-1353b60bf634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f94598-f30b-4a68-b6bb-48056123c067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84c8bf-41da-4116-8270-075db9ba438b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "45bf00f0-d06b-4737-8db9-95bcda9b3807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c82f422-06f6-4a4c-966d-b7608045edff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311f1eb0-7d19-499d-9b86-056a7a722a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57b08b-8c73-447c-8afc-a5d263339e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf07dc76-90c5-4c80-82e9-bb82d736a830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b02bf22-d4ad-4ca3-9100-d73ac82328b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d787319-8636-4d70-96d0-4ec44f2569d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0015de-69a2-47ce-83de-deae87659a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18495be0-9451-4b3e-9b9b-902d9e90c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7558fc9f-9d69-483e-9e1a-52ccfeb484a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfd4af1-fda9-4989-82d1-fad5622efc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330fe073-c909-4430-9b62-109e14244e4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461ca090-e113-4bd2-9f8e-87c67b64f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1efec68-fc8c-41fc-aa45-46934db2d35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca597c8e-0ecd-4b40-a654-262c6ebff971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7f36c7-2313-4343-af8d-a5f367187969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638d4db-1b61-4d13-b3fc-915460030fb3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4794fbbb-5b94-4ebb-b652-108d83228f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0292fd-f4eb-4666-b38c-671997719eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e753d4f8-b72a-453b-9d61-cfde2e94a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47600f1-d6d9-4059-ad25-21083bca1bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf1a1a-395a-442c-a91a-177364874a15",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15df8d6c-f415-48de-aca8-330b6c9ab941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55f025c-c719-48e7-a729-95ed72f687ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287a045-5da5-4883-a18c-4ba6b35ef5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2bc7ec-f047-4069-bf10-68690ca4ffdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a87c1c-c876-4bcb-a10c-efa9aeb3883a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0421b69d-6635-4744-8709-1b3180ba623e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220c3ec7-a065-4418-9a87-1b08e5410e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1176e248-8189-49dd-bc7b-cec1f740c385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1749cc56-537d-488a-a185-9ee07b9bfa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c0bb0-1ac0-41f1-a678-af6257ea6469",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e25052f-c347-4a23-87f3-a74bafc1956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad222f5-f485-420c-a9b4-a19374b89a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb11370-a28d-464a-abe1-be3ce180e67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09bed44-5b25-43ae-a94a-e6068080a9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da535bd-0ae1-4f00-992b-fa735410e2cd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbe7592-bc04-4857-a8bb-a72833a56529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32135d15-9d0b-4bcf-9b4f-4fad2f051498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5f3455-54b4-4467-b59e-3cb6f63463c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "371cd073-0a22-4650-8398-2748728f9594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1041b277-7787-4b56-9540-41997eabbcbc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56677d2-64e7-46cd-aa36-cbae67f2bffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e65a5a8-73a5-467d-b389-cd4cb0953bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335cdf0e-178d-4c8c-a3a8-41477d8d95af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2b9798-3670-46cb-b7de-76a03cf66bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02852eb-4abe-4fbf-9f07-9dccde95b541",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4ab745-451c-40bc-84f9-0b72910b205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33751362-ac43-4d5e-b211-2adfe5e57141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98737c70-8e90-4580-9e53-858b79af346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c00206-a58c-4847-b8ec-c04208853503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5812d78-e326-418d-ab15-bda1dda5e034",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164e3deb-79ce-43b3-b5c0-f8d71ff7db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af04d10-f986-45eb-87c3-705dbfdaa8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06391c3e-488c-4800-b845-0cad6cb7ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcce8cf-7e2f-4347-a75f-5820a0c6144c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a628c1-5539-497a-b146-3baf336afb82",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08135943-bb04-4d28-b45f-bcefbc78e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55293518-3d67-40b5-a96b-1465f004ef62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212fe968-f1af-4ec8-b0ba-22d009c31914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e52cac9-dccf-4941-a090-01075fe69c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee33d9-6620-4a40-ab90-15adbfc42696",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73699914-fe08-46de-94d9-7e93e2936f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31132a0d-53b6-47ab-802d-bdbce321812f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674198a3-0465-4009-a7ae-7f280220d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4e9f69-ea63-4fc1-a5c8-4d24d9afc526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a06893-6f46-43e9-be97-dc3367c3dce3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608d9483-3671-4fa7-9f14-5c1dd23b3a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f455c2c-1371-47f3-bff6-2f8326e7a43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc60431-dca5-4f51-8ca7-4a3a443d4bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4d2d2f-1115-4add-8cd0-4d095f4689d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98833362-8f0b-4135-9c34-9889b7b29e07",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538562b3-8e14-4848-ab9f-e35511899c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f28a3f-84dd-4714-8d53-98432c5d8ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89b1a55-1e26-481c-810b-03f6725a8fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a16986-2c8b-414f-a565-1918b167e29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b67a3ca-3f17-4923-8d6c-aa7180bff4fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08fce03-3534-4c9e-ab76-b2a7f75e99a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ca6c63-a30e-4823-9a87-8b50f346aa5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae0ad0a-d291-4c64-822f-6c59a8cf4dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17cc34aa-0942-45da-962a-5ebc34ecf917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6544b8-fd43-4b1e-8548-c3a8e3e65cb4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88eaac0-89b8-4ab4-ab60-06c91d9a2d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10391ce0-e788-46cb-a630-3425e7b0782f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15ed4e3-2060-4204-8285-cf6d91c3a07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde59a8e-b8c4-441b-9ace-b69c1993a4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778728f9-5182-4cb7-a025-b0217e7abaa5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26ea70f-d1cd-4dc1-a201-9b98f65ae105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9623585a-b1fa-4fa8-aa72-590d14f3fac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dee1509-dd6e-4cf8-9833-ada0ca885619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0216c88-b84f-4d21-8db4-4354a8d6d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ad6c7f-1e60-4eff-a955-2d5baed2b044",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178572b3-a409-4122-a9c8-9af958b8d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28c7e90-73c1-46d5-be4f-64e7f2940e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e497d54e-903e-4a54-9555-6180c9314c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea6da3f-fcf9-4e42-a511-f3ed438ed294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9895c2ec-47a4-4617-a617-65ab8cf1f3a7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd744327-e2af-4580-bd89-9235c290777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a76981-d73a-44ab-a4cb-eebabde6c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d92213-c71a-4f1f-92af-d37ffd06d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7001536-1bfd-4b70-99b5-3dee07622bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55f5aac-97e6-44f8-afba-d4ed07a051f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d41ac-856e-4a58-83a5-d3374cf56dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961e283c-cebb-4c4b-b48d-b10e13e4d60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b866904f-b366-4555-9127-89a684180085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce93c0b-03d7-4424-b369-bf1437041ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b4cad8-74e8-4c4f-9230-b93ea07e42e2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a1c110-26ed-41dc-a651-e526381808f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc880622-c523-4dcc-ab72-3efe4c16b154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a4049-af47-475a-878a-6ce47cda3816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf734ed1-bfa8-4d85-bac8-8afae42fa6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0693bbd8-43fe-4d6e-b1d0-b69371b11871",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b90fef3-ef85-448d-86c8-e78998ab6fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88a58e4-72a2-4712-a587-aa0831c2bd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae844cc-33e4-4276-b210-534a751e1ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e0205d-b512-4930-a750-41dbfce9c67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcd0d5e-ebfb-4b40-a006-270f7a74abe1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281d680e-e6ea-4af5-9283-3f69c3333319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6dd922-4655-47e8-8dcc-a04dc4952bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d143d61-81d9-4953-873d-9cb5a7323f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1f509b-8430-423e-8930-f75c8fa423b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8decc68-1677-4127-a676-42c574af8800",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb49942-5d9b-4291-8c83-f25056cc8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968b2da8-bd7a-4abc-9638-bb5f9dcd1f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0498599-c72a-42a3-b500-6210129e6c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc06c79d-77da-4688-b8fa-4dbdc3f3c4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8161122f-4e40-4eb3-87fd-4d752cdec587",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b9eef8-caa5-4faa-b53d-13fed6255b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a352d7-10bb-4d29-9f3e-d2644f060e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8c51f3-8ad5-44d8-ad5e-3e50c62cc39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad9b970-b3dc-4310-8668-de0694bc7903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f12b89-2714-4869-963c-65f1919a59dd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44d36ca-2773-4aa4-a4a0-c29073511add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95f1104-68d1-4ee5-93c0-b78e86dd8bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7826f8-0f77-48bb-b070-ecfa3671ef49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d70c918f-9ad6-4a87-aa3a-ef3b847f0cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57adcf88-85d5-43ec-b854-068ad5e10278",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386e24af-cf9e-4de4-9398-a97145374db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44f2b5f-4568-42d9-93e0-ccfefe1c93ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f2237f-807a-4142-b593-10f3c6c0c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dec5067c-dd62-4af7-ad45-93a91a6a7561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defd28c4-6f8c-4ffa-a0cc-78bf277f073a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a6f267-de74-4a68-b285-50ccb0773649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affecbc3-41e6-410b-876d-7a97d04c8cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c58336-448f-4ec2-983f-4ba4fd4733a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0237f8dc-d70a-4a74-bdf1-94944b7b5c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7950a1d1-49a4-4625-a0b8-a67dea6602d7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f096d0-131d-4589-833e-87d1e8443801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a77d7bd-8985-47f4-8e63-437580ae9b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5a0fc0-6cbc-4042-88eb-881a34c2228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd305a1b-d2bb-44f8-b432-dfd771c8d4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c10ffa5-03a8-4fdd-a8c2-53b4497b6efa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacda5d8-ca2e-4c34-b0be-df0a9a449ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d79ef8-b3e4-43c6-8c55-24c18cbe1093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea10cadd-e906-438a-ac74-af7f1382d22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfd33cc-d1bb-4824-a480-8c9b01554ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14114698-7bfb-40f2-99cb-87f3f29d4fea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1ebf51-bf69-4ff0-b21a-2c225cbb0d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59e7884-ca9a-4856-9780-f29e8296d465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f272df-bd15-4a81-a016-356f0b4a3c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca876bc-f753-4da8-ada6-559716040373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85017909-c3c7-463c-a5c5-1891690c8aa0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7309ec7-7aa4-4936-8417-3719206faca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd3927d-1894-41d8-86c5-f22b735224b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf6da2e-e24a-4452-92a9-07c8778b4ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e91d8c4-f500-4380-afde-e137d4bae646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e2d94d-81ca-411a-ab07-ab4e5613000b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dafd44-7a87-4334-b7a9-d7cf7e4170d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "020490b2-5ea6-4e54-a5a9-34d068198ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d428f1c-5cce-47c0-b41c-e718b89726d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee6e8d8-0fc6-4cf3-a8f1-afc8320ce1f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b9aa572-859c-4a7b-888b-66ec19068e24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d9c4059-95be-4df4-8a86-289bc3a2c405",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76146608-7a0d-46d7-a45a-90d540574c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "282ce799-49c9-4ede-8675-3ee17f6efb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec478b97-0365-49b5-89d8-dc698ea077a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d367ef1d-4e6f-4c23-a357-94fa54468e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0ad991-46e5-4f25-adba-7707e955045b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506cf7b9-8e61-47ce-b783-d257efe18512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29eed8c0-c4ed-419b-aff2-2cbebfca8cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860993c5-e0df-45c1-ade4-aea0af65f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "789579cc-fbc5-4a36-abaf-826f72478dee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "986ad403-57bf-4dc2-a9ef-91ec93568fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4de0512-e06e-4d90-ad48-e1717f6411ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea62073-62b7-451a-a6bf-9f19126f6da1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7cbe484-3ab2-437d-91d7-277ac8c99833"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "317d06b7-63e8-4e22-ab67-3a63124ed5e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b382d7cf-9eb2-416e-a7a0-f38fde060ed1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f4fb6be-a48b-486c-a49f-d1b26f037cdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "517cbb58-59ed-43a6-9acf-306f37d6ae86"
                }
              }
            ]
          },
          {
            "id": "b4ff08db-63c8-4daa-8824-ba06064914cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "628cb652-f563-4b77-a062-53137b6f980e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d486f2ff-d0f1-4641-a5a0-61a1f8df2af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "589840ac-8686-475f-afc9-f9b07f65a53c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194ed122-8b06-409d-befc-6cdf7d6aa7fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6e5a9bc-e3ee-42ed-aa58-9ce2461d1846"
                    }
                  }
                ]
              },
              {
                "id": "c0989c80-6524-4f82-8c70-d06332308ae2",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a81a3b34-bd30-47ac-889d-02abe8270b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c2989bd-78c1-49c8-9dec-1307f488c9c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f82ef93-f4dd-411c-bfec-6c257c3398bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4bedcd35-fc0c-43de-9c0e-ad02d94c5a25"
                    }
                  }
                ]
              },
              {
                "id": "9a811047-a13a-4f22-98ca-52dd0760fa69",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2be68c98-54ab-401b-9015-4d16bf40608e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "beafd4af-5d8b-439e-a4fc-eb3ca47c1623"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a0c115-daef-4237-a978-e8a30f966c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3e4da78-d1c8-4e61-9396-19e77a310436"
                    }
                  }
                ]
              },
              {
                "id": "2258af0d-437b-4941-80bf-e80eef765e09",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b06ea22-3d5a-4195-a4c8-e9b5882c02ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f89a818-a532-4235-87ff-2d312b5ccfc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bde2bf23-3e9e-4343-89af-a6c6b94128e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "85731561-593a-4db5-b795-f2b7170fe5b9"
                    }
                  }
                ]
              },
              {
                "id": "c28ec0e4-6327-4ad4-8114-59464d9aa77d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "402b3cf6-fa65-4580-8d3a-e782dff2e855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf7d68de-5f72-45da-bbd5-a73c1e17dfcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3da3d3be-cb54-4880-998d-eac486cff2f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "918bdf4c-58bc-4c8c-9f5e-591b5c2230eb"
                    }
                  }
                ]
              },
              {
                "id": "d3a01cdc-039b-4b44-a08f-a68da951ca78",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f972b73c-775d-455b-87df-7b57b89a68af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d3c4c9d-91f7-4e9f-accf-39d2c287f0de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a07f1e7-466c-4672-ac09-c3242865bfc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "366968e7-1888-4bd1-a04e-923f80c1ae3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f0cd247-6768-47f5-89e0-72d9720fd568",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed57372c-395d-4f21-ba60-ea070aa19445"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "067c1e69-545a-48d9-aab9-6bd7045f2b8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "431d1fd2-d3bf-48b7-a899-aa7bbf72e5b0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "227f3e3b-ac94-4764-a963-f37383178c4b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c26340d-3d5f-41e5-bf27-7100ddb70cd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3082f762-06ab-4107-b2d2-9aa6c76e47e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc4fd13c-63c1-4cbb-89cc-82a401aa3348"
            }
          }
        ]
      },
      {
        "id": "f617a06f-fd6b-4726-92c8-0fb380eba4ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1129d573-87e2-4341-abde-5fe698771f52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ad015b4-718a-499f-8566-c0b2c423ec29",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12d77b3b-fd66-460d-a397-cca251302173",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daa8d4d-bc7c-4d0d-9dee-20f1ade13f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611c19e2-0856-46ac-8692-cadf84c7ff18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c541fab9-9118-473d-ae41-2957ad620cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7909ef89-b68d-4ef1-a1e3-11f6ee8d9d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f4621-359c-4821-a8b5-16198ad00094",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ffba01-bdeb-4c3d-9e86-e2416131addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233eb155-3361-45c4-bc9f-ff7c911f4683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ab51e6-adef-44b0-8d7a-e3c2e648af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "418486f5-a6e0-48cb-b26f-dee87f08673d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b3e32-a12b-42de-add9-3c5656e1f82b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5e9cf5-8b8b-4f26-aa03-9fc7606c5e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd691a65-2628-403d-b77b-358b681b3b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c74757-9202-475b-bef6-74c970c35a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae79a2d-b4c3-45b7-a235-943c2a24bcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62668eb8-7ab6-4c38-906b-bbc3d61a18cd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b6a352-2c0e-47bf-b85e-411f62ad7a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4747f966-865e-423e-98bd-43f28eca3308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2526e0a1-ee2b-4a7e-889d-ab903d2f7b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7b2099-47b3-4164-afba-8abfa5a3de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bc51ac-ebd8-450b-91ce-af25d7f8c98c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7109d53-ef9f-47fc-ac6f-c5e65a63cee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090b7498-eeb9-4f92-b031-6213e9c21395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e2ba48-d14f-4053-9bdb-cc35abd097c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa044798-8e91-426a-b1e4-c96a92ea3d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af2d829-0274-4848-b9e1-9e0498e39268",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebd29f-006d-4a76-844f-c2cb62c1c4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c86679a-27b9-415b-80d4-a1ec65b9ce7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bffa51-b754-40fd-974b-bd8fb8e54edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b999e27-e8af-4d7d-8236-66a40c60bd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8452cb9f-f50b-492a-a8be-85e22029f215",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e061a671-46e0-48b9-8e49-ec9ff561ead9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419fa55a-920c-4f7d-a045-24387d89673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de8ec5b-26bf-445f-8745-24a67d5bf082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "613c2584-169d-4fba-9c80-d6890a9d3e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3edc60-aa9d-45b4-b4f5-db31ec6cc295",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7075e5-6d42-49f4-9df6-fe5d14375bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b59971-dc49-4e41-a3ca-6f85c271242d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdb048d-8721-408e-befd-c9977b99faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33c528cf-2a41-4227-9783-85f50e00a302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030ac5e1-8f27-413e-8003-a0c01e093f53",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b589f896-a9ed-45f1-8b97-76fc1d3961a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a336921c-8972-4b3b-bd75-91186185daa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddaf9bb-043d-4596-aec5-b9d6bcf0b1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1dcf8d-daa9-473a-8ac9-4d0f6dedd132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5605d31e-dc9b-4530-bd9f-5789b86d8adf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2060f066-019c-4ccd-9b2e-821d25c8da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc6fb17-45ce-46f7-9ce2-2027a1baad02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1b03dd-71f7-4bf6-ab31-586630b7e185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da6bcdb1-541e-453c-b598-071def7e8176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0c8291-5658-46ce-8a37-eb2a69f1f5ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c367eeb-5e89-4bf7-8399-96632e08c2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135ddcbd-9fba-4bb6-bf46-e38f372a9c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde898f8-cc05-4104-b305-3bbb30fc4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "707dc5e5-ba3f-4300-a3a7-423e0ecba039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37071772-51c1-4b3c-a20e-f0d4b9cab3cf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6120a20c-18a0-413e-824e-e51f06c01ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67d71cd-a6b6-458d-b491-a2eaa2f6b713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d51cd3-358e-4a6e-9fd0-1be3e4f103eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a86d539-81f0-41e9-b3d6-4980b10fa5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cc14f2-8f68-4e54-bee9-0af4358b4a5c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca362c4-84d7-4bc0-a380-1b18f16b5344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3f28da-c6d0-4ca8-86a5-02eb89162404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8914d443-6e4c-412a-b01f-6ecf1ce80842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b19dc73-fa60-486d-a238-08950159b6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578fbaed-1ede-4029-a5de-cfab114a37f9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb00910-be1b-4af5-a1d9-558caaf7adac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd39cd39-314d-4b23-80d1-edfd3e510245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4463729-bb3a-46c0-ab9a-9051ccd667f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae851e1-c847-46e9-98b8-390aafaacd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb8ec9-4c0b-405e-8dca-e3917f880348",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb970dcb-da6f-485e-96f9-607fa5832e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c339672d-72e8-416c-8cb2-34fa0a589d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff3ff15-635b-4fdc-b841-f97e90ebf236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9e88c4-77d7-4673-af89-3b0c06c13607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee63787e-fc6d-41e4-bdae-98de510c1e55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c836b4-c49c-4d8f-86fa-9063dbf078ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069f9788-8f68-4c51-a00c-17e2c47d0935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400be1c-ca49-416c-bbbb-8c607d28f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d369d3e-7f7c-4bf9-bb45-9e68a3e4d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886ee16d-383a-4038-99d6-ede997e9ccd7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795d88e-9038-43a5-bac5-de6c45960c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c64d653-9beb-4b2d-bd65-51278a51898c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405447c-0949-4bc6-af29-cd983a2c0812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a9f8bb-2e6a-49a4-ade9-2de0696ad552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886466a5-44ab-4892-b1cf-2c69d3ca981b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57332eda-2438-45c4-9463-39c48c716d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b8f98c-1f5b-42fd-9933-2296bd06b2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebed5b1-965f-4b03-b436-158803083154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a49033-0bfa-4665-b5a1-3ba22888328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df544b3-06d7-4b7c-a93b-5d5ae28f3194",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b822e04-52e7-4df7-b0f7-8bf806725d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac14299e-32e4-40d4-a308-9a6b217b38a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3617005c-9e58-4b2f-b3d7-61dd45780b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1253c6b-ad2c-45c6-84d7-12cbdb6d09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe59bcd-0fe8-4ebd-8b93-de90cf571952",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc7ab71-f22c-4bfd-9a12-aa33feafba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a813f381-3e39-4ad8-b2fe-98d6d6609e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ebda4e-017d-4796-8b06-bb95d7cd09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c35fa2-f623-492b-b3f3-5d4dd7a28b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83932b-5a0f-4ef2-890c-9f0e4149ae9e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e436d027-6f85-4613-9ebe-b6aa9a41eb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90c486f-ec4e-4b75-b3b6-30865282eeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d99093-da63-423c-a7ee-6dd2a46d18d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6548f117-0bcb-4698-b856-7661e88fe66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b1a429-99a5-4e2d-9c78-664325282b83",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0a308c-2cb6-4e37-baaf-4d3bfc948cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04906cee-3e63-4554-b31a-83686a084f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0b3079-8e0a-4eb6-bd7d-eaf81d551db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f751fe27-1851-49c5-97d7-af945574b77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac64ccc6-8c59-4846-ab54-a9c3d05ed2ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3c33bb-cdc8-484b-b407-a033a9b3a222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae9877b-d4b7-4ae9-9e31-8c3c6279cb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7466f2-a32b-437c-9dda-6ab2ab33ae68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2be169-c597-442a-ba72-5d5cb26c0082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96debe0c-ab40-4fcf-9f2e-e07fe5605f59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753a852d-ab3d-48d4-81fd-d23d37d4411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4720d10-a41f-4f4c-9590-3d3665aa9bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b5fe7-dda1-44f8-b6a6-ab31bb9fdeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9737b062-eaab-4df3-9f75-a8f0b3c12fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fec1445-bdc2-4df1-ad58-98f6206efc30",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd600758-31d7-4dc7-bb38-b37b8add395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e263039f-4709-4bb2-8e2a-c5a22c799265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b574a9-de6e-452b-89a6-01fb4ca00cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b35c2a3-1b81-4f1d-9bbf-91a51355560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6698d96-9e71-438a-b431-ce9b2679a3d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1e5f0c-7b01-405e-8d0d-96ee57432e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5cc12b-7e32-4666-abd6-c26d8e4c278e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8280cdf1-356c-49a2-91b6-80380f76b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2250401e-8269-4a8e-b55f-df6abf770647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfa46af-0de6-446f-8158-9548ff4da90c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bf2941-6e82-46ca-94e8-2883c2581e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3da1b43-f757-422f-b3a1-8c523d9268e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae4bd8b-f83f-4425-9498-a5429c607dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7d6d8b-d5cf-454d-b291-41ec4582b0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c4461-def3-4dbb-8e04-a4c523e4a779",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae677da4-4c10-4630-933b-3971efc58a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b14264-5f1a-49d5-8f1c-bf8a5ec24955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c606be36-62b6-4e5e-9920-8e4f0b53c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78573f79-6fb6-4f3a-90bf-a839ec79f49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada8fb82-5653-4cd7-a276-d05bb3ad7515",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbbd939-95d0-4d51-8f95-5754eeb24cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb1abe9-65c4-4c7b-894f-ec97f0fe63a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b98bcf8-c7d3-4274-bcf4-674796ec809e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "046505a4-c6b0-4efa-b368-6852c3079988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481faefd-c888-4765-a91c-ce55cfa6b019",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f3fa8c-0e76-4943-890a-7004fc4433d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f5e357-f81c-42d2-959c-95e9c9cadb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729e15a2-9b01-4f3b-8edb-3a55804da244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b5baff-d671-4d3c-b4b6-13cca8289586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed78979-9fa4-408b-a854-2599c922159e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c8b37-ff99-47c7-9825-a60f0ac6dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47743fb-9a16-499d-96c5-d3448c72ab6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67e8d34-d06b-4efd-8cc6-229fab0484b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68736b89-5e4b-4073-b8cf-bfbc66ece70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaf6b5e-1aa1-4762-8d14-116ee66a3a93",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf50b5-c9a2-44d3-a4ab-9accea8ff398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494c417b-247c-4c8f-92cf-9f62c041ab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235d25c4-f091-4ab7-8ca6-6e47a48f11cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa72a0bc-e00c-4bf4-a0e1-cec84359c60a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68dec9cb-3e5d-49c0-8aa5-103b25f94f71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fa196b6-09a5-44b7-99f2-4e7463f873f6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af84cfd-a2fa-4a48-9cc6-be6e60adafc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ab20f9-975c-427e-8d08-3b2a45a272dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13801ad4-cc34-4a87-8bc2-b3a1e3898317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5521fdfa-59a8-460b-9446-5cebed85cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf13fc-f307-431f-8d30-4ecf9190f58a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e19b838-f25a-4864-af75-287eb007fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a0595684-d6dd-4c12-b766-4f37ac1293a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e41d48-caa6-43e0-b023-f7cd94bb0514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ceb8b69-65ae-49b3-bd24-173ae56982de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83c8c348-e7f4-4779-81b8-9da78692599c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43236d01-e116-4cdf-b6d9-0beaae0998f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e70475-1aae-4555-9936-5da0ca84d97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d5be17-98c1-4079-b0b2-28028feb395d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6be3a05b-8ff2-4c7b-9640-e64dd6c66a85",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f358a49d-83ac-448a-88b0-c8a089c59305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b40315c3-d75d-4990-82dd-e9ff397d8ae4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa4485a-bb6e-4bee-873e-d63c39ce5b45"
            }
          }
        ]
      },
      {
        "id": "414f202a-587a-4237-8ed7-00c49daccbdb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c87dafe3-4f2a-4b74-9176-816ff2e661ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e76744f-74d9-49d4-85c5-cbdc6ff5d090",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45997139-00fb-4d49-adae-fd875143a9b2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7617fde1-a523-4b58-aef7-876da70d230c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48100cd3-bdb9-4ba5-ac73-9e10bbc209b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df49310a-2290-4ff4-bad0-70879f059571",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c93bdc-bb59-4051-a8dd-2fc9409040c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f17b989-1535-48ab-a7f6-df7dca02a515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8711882a-af10-4581-beff-65f66d5fcb90",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfb322b-a917-469e-8bf0-4d216a743412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f89cad-07b5-4804-a75b-09d8ebbb087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1477a13-6e1d-4a3f-99f0-c7be870e0125",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d410bc15-3d2a-4b66-848a-33bedb19d30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec37f6fa-0424-4a7f-95af-2e723285e2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966004cb-2b0a-4a9b-8af3-3c433561c4ea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abd9592-dafb-4dd0-bc51-4bd86a7f8492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5979ac9-8d74-4508-a02b-34661c2b1604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb2e2bc-90dd-4ab6-aaa0-1ab235232454",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c713817-d2c7-4afb-a11f-7e8922fbff42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5cc7a5-7131-4e68-8743-5aae0e9ab452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e5f5c7-1421-4aca-8c1b-471a93b6471c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2946942-a51f-42e3-9d6e-515032f63d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ca077f-e4b5-4e38-a7b4-03a82c5eff2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a41555-8f87-4417-8eee-df944dbc2b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b05fa63-3de8-4f19-82a5-9894f99120f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaaff56-5465-4408-b772-a904a40c9eda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368205ab-a133-49a9-ab0c-c0ed4645ff21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616ac2ff-b508-4553-89f6-7a246f0b498f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e3f864-ab1c-4cbd-aaea-39843f36ebd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa11680-8f95-4fd7-80a5-90b7bcbcc338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d07eaa-16be-44c5-9884-d6e059dfc694",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08923d2a-f9ca-4f61-bc57-e872a76cc635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4fcee5-5727-49e4-80d1-f2b632db0a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b15fc1-3ed9-411d-b160-e08fbb86147f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d65ce0f-2cac-4b4c-a665-72266a50c42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b3697f-3533-4a1f-a013-d49ce50e0c5b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279ba97f-c6ce-44cf-b1f0-e5f3aeef1975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a542292b-bef6-4fa6-93c4-6dc13a2a50ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd45acc-bb8d-40d9-9f5a-39f7bd3c5dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde6c235-b9fa-43aa-91e6-d55c5323ad6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9c92e6-f4b0-43c9-a942-6aedfdeee063",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda3ca6a-5f7f-42eb-9400-1a56ddc1003c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473b52a4-bf8c-419e-84f7-40f5bf401719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995822a1-7072-4adf-bcd0-3a3417835268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a32a1f7-1fc5-4d9d-bc16-d94f59f39272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99678cab-f0c4-4ed5-a587-5c069fb7d723",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf766210-090e-4e7d-a54f-14e83ce4a8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c2888b-e17e-4235-af5c-9b741c015174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d308d36-64a1-4efa-b75f-527058b5eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecdc9a62-b0c1-4c8d-a13f-61d2609958ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c955789-c9c2-4782-a1bd-b1602e915272",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007f24f6-012c-4174-9951-d870d0f265ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e579baee-ddf4-4a5b-aae0-1fc5d16265b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c640e9a2-9cbd-439b-b2ed-7f7df31ff292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8e6ebc-c6b8-405a-8c2a-c46bc25363f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b418dff-d893-4c4d-9c47-a168b0356fc7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c0501e-1f20-43a4-a39b-e7015f9a45f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea1d599-1770-4800-9478-c73e46c4f915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526814c5-7a25-4d1b-a9f4-2c700a917619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6f6a98-eb49-41d9-8322-5760c1d4ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce9aa98-be2b-46dd-802a-925738c4b59b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417c91b1-b9af-492f-968f-7b979cb26ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cd4e83-9392-49ea-87c2-524cf6989436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60304869-2e19-4661-b671-75d5e6f4cb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cb84ee-c9c2-4071-91ac-bf8665f17ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016c6c02-e787-47e2-8098-6bbc15989f42",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5d5367-cf6e-4da0-be44-8b15d3136b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48befa22-3ad2-44a8-aefa-c2e2572bf2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6893795b-b51c-48e5-84d2-acb192e18113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03754705-4a28-413f-9391-408aa825b857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00436a80-ddd0-4a38-8301-290221bd1e8e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372b0c8c-788c-4623-811b-8edd76ad1b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0a2b31-1f44-4497-bdd2-8420a378c459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3b02b0-c273-48ea-bec9-fb399036323c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616ecdd9-9a48-49e3-bd41-52e8bdd92e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282d2784-e91c-4100-8904-0ad4e26426a6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54f962-33d1-4b8f-a4dc-219093ac48e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0675382f-775a-4b5b-988b-5c3e7247034e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a7892-d719-4a93-baee-2ef174610bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1ffcfd-b5ee-4140-ab3a-2001188b9380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7cd687-2ffc-4678-9f1b-9e7de78092f4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3579e6-11a9-402b-a233-dbf42adb7027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7404597-da14-4767-8924-c7b7b964078c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa24b78-052c-4684-963d-f6e4fe80aad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa49e4d0-004f-4fe4-b8f1-43ac6c4f2dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0681e6c3-e435-4c51-9860-9eb296e53ac0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d098227-caf1-4d78-a429-0670d38be445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4603432-caad-45d4-8ace-80d0928435b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4c12de-be3e-40af-bec1-b4a511df69ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2427d7-1481-4b74-af95-42e15a92e9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1f4b8e-68aa-42b2-9f0e-b2858b369866",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbbd0e8-6f82-4407-bdd9-43f67c9371e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff35709-96d4-4bd9-a423-6a2bb3a4028b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b649de3-fbd9-4bea-a56d-9821a9da4e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63036037-233c-452a-889c-7e699b155f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba2a86a-b58e-4463-aaad-a15d90734245",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0299ed92-9054-4e74-982b-a116bd41d4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99770118-9460-45e1-9c0f-ba571724a64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296828c5-32f8-4d80-ab44-feeffe9a225b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e312be6-21c6-40f1-b2e8-2e73134fa792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d53f1a-cbf1-46dc-b747-12d900a42d42",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d281d4-f385-4d98-8ebe-a28bb98e3a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccf042f-fe75-4440-98a4-12b256396dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7c5923-66f3-4315-bccc-d44af36464ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d6535f-6f99-4148-9ba1-f7bfdbc69cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af96680-e271-43b1-acbe-765faad31321",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4292296c-5ee4-4748-a97e-c85ac45a34db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f10b38-9df8-4197-980e-44a9e37b0bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46970c20-1282-4717-9b6e-05383053ce25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffd6d27-16d5-4504-bbb4-eecdee904f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa50114-74f4-4b06-984e-f3107eed55ef",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae61ef98-8fff-443e-8ea7-bfd0f0d78805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57235a67-46b6-4733-84bf-ad24d4b2f08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a72cf-aced-4398-b81b-04b289c2d99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b34464-cc90-444e-91aa-e573925d9d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027a4983-adc6-458b-83cb-35b999b58936",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc26ec4-b257-4a97-ab46-953b74fc6c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebe4757-462a-4442-a44c-34c81dd7fa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4661e012-f0b3-4aa6-b610-f52bd029d378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6b9425-4234-448c-be51-3491611a8c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f09236-163d-43e0-974e-99d18c7162bc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23243c84-4fbb-4b09-a8f0-5c5f4f553c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a849bb-78cb-40dd-81bb-a89434300f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba39a91f-66bd-4e67-bad5-027645621c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92f6dc7-610a-4312-b36d-29b0bfe9d1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94597075-0909-42b0-8b72-5a507f593d3a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7794dde1-39cb-46fc-b47c-338b817eff35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1094427d-788c-4492-9884-19c32e596a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0b5180-ac1a-47e2-b313-b584378c868d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43348b17-e24f-4415-b6cd-fef23a7e646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02243bad-265d-47a9-9f82-b677d06e96f3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1b7c21-2481-4739-a8af-6104f2098c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa040ccc-17f7-4064-b2a1-1711fcb11b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7e53ea-db47-4d9f-8e35-d7d3ba7edfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdefa831-a91c-43f5-ad17-f03c49e108cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494208b5-ffbd-4bc5-9b45-27851e515f92",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb934aa8-88f6-4927-934e-4ca1d1a2f400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf49ad43-bda6-424e-a6a1-8a843e9b38f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaea3303-d645-4b7c-bb1b-467373a82354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a29ba05-fa0a-4a64-af2e-f29fa562c073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bb9156-b35d-4ea4-a584-4dc5735f6041",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114848f-bc42-4cae-a0aa-219f25313b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0e535c-f220-4d53-aa2d-9477354fe870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145e11ca-fcf9-4f01-b14f-e71d2497e6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb490d6-92bb-4c79-b098-2bd0a957cbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5cea79-346a-41ab-a9d7-a4bc6d89256c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04995e5b-3b68-4277-bba3-9e8eb31996b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ea10c3-2ec6-461b-b0bf-7cad4a86aa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786b63a8-5674-45dc-b339-019c76983230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff52868-9f6d-4cb3-adfc-7963c5dd5700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd45f0e5-3c2d-4013-b6f0-00448be49274",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672c3fc-6a10-4d31-8dee-bc17829ae649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc841b6-9eaa-422c-9687-235c6f7d1c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f392026-0614-4376-9419-d30726fae68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda20ae1-3315-4f23-ba73-94d5e779fd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88def26-f1bb-440e-acb6-0647f949ec6c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc2d155-c454-4246-9aca-7aa087c19285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99245b5c-0302-4510-b967-ef1503e2af6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdcc3ae-5b2e-4873-9372-25e3d60879b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6330dc-541c-42a2-84c6-8b8c48314293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622fc0a6-b80c-4b39-89f9-822eeb89d516",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e4821c-34d5-447d-9e40-9aed2051c31c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50fdb315-13d2-4c07-873a-cd43d22318e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebab0cb1-c979-4812-ab1d-0f8b00776408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee239782-2fa2-4b5e-8317-392bde1966d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a57209-e329-4f3d-bab9-c91f0a097f62",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ebd440-1579-4809-b991-f94b1ae32e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360e0c76-7a9c-4327-8959-2da8a17a4f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631524ff-5fb2-4725-a0db-a12e1b891dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e40896c-46c6-494d-819f-b2ddfc31daf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cee885-2cf9-43c1-9a2a-fcfcadd342d8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee501da-1cd3-4e4c-9246-09fcfd8b8032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8137006b-027c-4a7c-9492-4c98589b84ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b585bcbc-6f72-4c9f-bb32-bf962a309daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1e2c12-52af-478a-b453-d01ad1ae00b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5a3a7b-2a51-4882-a519-7519e5513bb7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95da4e6-9ad1-49b2-b57e-c1196ca66cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2136cb-684d-4481-adfb-169addc68438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4afc355-d034-429c-9701-284c2f954994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a7135b-0c42-4c49-b809-0c0ffe2167e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e5808b-903d-4900-b484-fc0050c7a662",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489f338d-9b6a-4458-b387-b647bd968b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cb89f1-4d52-471f-8c54-b6893838e256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b92fb0f-1b08-4ec8-b8f2-f1b1fd946a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a02b722-e923-4cbd-b13d-edf73ce07fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573f499d-2221-405d-a931-1ec792e184aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07748487-b479-46f2-8cbf-7c2ae2d9bb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbd4f20-1a37-4f65-b76d-a26ad80440d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae2d5e-2e84-41bb-ac9e-ee305c268acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d90965-d8c5-4d79-a907-e64f78b44802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066c670c-33f3-4358-8e39-6dcdae64eb11",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59e5291-2366-4df0-8b94-752c558c203e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165e593f-917b-45f2-9b33-a68a26af2dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173bb0b6-f3b0-4372-8c7a-33b349159934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3536924-5161-4ff6-bc39-0047c9ea2182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040140a2-4720-4f58-a197-afac78ac440c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dae5c6a-4144-40cf-b503-1c472354310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc1dc71-ec28-4b85-a2d1-f713f841988d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643dbb97-9871-4cda-b56b-937011cf320e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d748f37f-97fd-4f65-b2f0-786ae8e81384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92847f6d-a876-4182-a67f-cfd80035e66e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247e35d3-ee65-484d-8a8e-9f736580d24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe5bb7a-52dc-49fa-8dbf-0375a58aaf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0d3f4-5a25-43d4-9d48-5e03c7802040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0e791f-eab7-4e2e-a235-8ae0ca7a9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f2b8d8-cb6a-4e17-8797-49ee24d3059a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d98c0b-0999-49c1-a6ab-cea077615c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e23410-4442-4eef-87fb-346f4545b0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ad4915-8ae9-4b40-9318-b6403414632c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2d3c81-376e-4a8f-a986-8bd8e46919f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f555f8-01f8-4a66-b537-f23ec49eb36c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ff20f8-2f9a-450d-89ab-7ff39701c876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5f6d64-6656-44ed-8315-23e853fe3004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b1084c-3f13-48bd-afc8-0ecc5f061324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf0e3f8-78ea-4a6d-b1cc-03ac75839f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ee2254-6c56-4e74-a1ac-d836606872d9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51aea3dd-df5e-436b-a860-6a799c3d19a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d664433a-7606-49e6-899b-d006bf78008c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a533e69-ae7a-4778-a898-f11d9876c14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55fe5e9e-db5d-43f1-892a-ee0b675c3270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979050ab-c5f8-4e6f-af01-e569623c6fce",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c39bbe3-1845-4a65-bc13-f05f02a47053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff3ec3b-6931-4d6b-851d-74cc0c4125f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70461ef5-70a9-413d-8963-a72be4ec182e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0678cc28-c008-46dc-a526-27f845db3be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a22b0ec-8049-47fb-b087-dd64e4e7421f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f053f94-dca8-4b38-b5a3-0ca4834086d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea84469-b09e-41dc-b229-03c9d0360626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed1199c-5360-4d07-a376-b7a4df16a00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d10df0-0bc4-44ec-a1af-4f372acf0e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5154d9b9-e509-47e1-bb87-6bcdf07afe4b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ec9c50-be93-494d-b8f9-3590272078d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439242c3-5ace-4652-810d-12b312e2241c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c206bc-16d2-4939-8544-cf8a2cb3262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7932b840-0bb4-48c4-9d26-47880bf19da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1fc8d0-a537-4c01-8301-42e3169f807d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e2ca2f-da8a-4f76-a22a-f190678baf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4259d890-92a4-4cc4-b031-4d80565f1f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2836f2-535b-4fe4-8d3c-ea18c69ef91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211613ee-08d1-41a1-b209-3f96ef2febdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f98e24-35c5-4343-b1f0-1ffe159587e9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d365699c-a883-4f45-be68-060c6aee94c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a123ee48-af64-4603-917a-73999847748a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f577be-69a6-4e46-81ea-d28ca4747e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203ee0f5-393f-4dac-a13b-5603dfe10348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f2cb03-b6dd-4def-843f-f0d3418506a6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e1436e-8185-4180-920a-ccb7680ad086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09b6382-4240-40d3-8356-3e36b5ca0069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5682b7-b3a1-4857-b9e1-293dba2f15f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b10ff73-2690-46e2-9dc9-1271da7d1b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c94d4-dab0-45fb-889c-aa6838be7e95",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34833091-f26b-4bfa-90c7-b590544d9674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d23c0a-b766-409d-9b2c-ec6a105c6970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1145a82-1f92-41dc-b991-4b9724770e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6814367f-76b3-45fe-960d-95eef2bc146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b99b01-83cf-4eb2-83dd-8546a0e6649b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3bb16c-ffa6-4af8-8ec2-f7c2ad263104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98e96ba-7403-4316-922c-dce62a5233a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d114f54f-6610-48f1-8a32-8f48594617f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2d1e0-352e-45f8-896c-fa62fea3a423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ac315f-0b27-41c7-8342-90fe9e89b693",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcd4eca-0433-4000-9902-10dd4113590a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b074966-d238-4c1b-a35c-44de88a2e84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47510ae-9bd8-41cb-8373-9cef21368c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c70dbeb-0706-4c49-9999-a98cc19f115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb09f82-b5de-4421-9d66-7b7d4984c30a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d84c78-b22d-4c00-b26d-cf18bdaf3596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ee7145-6815-4ff7-8165-6844b6a4002e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d4b4e-1247-43e2-8b14-1bb40c2802c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea1751a-5ddb-4a20-8720-9e206912c5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a3b421-4052-4f4b-a8cd-67d900a2d53d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a191dbf-3013-454d-b5cd-cc2748a5d014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a238d-ac23-49b5-a65b-43c8209345ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b88a23-6ab2-4ac6-8186-639e82c4d660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27364799-8413-4c6c-84a2-5348629127e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65b29c1-f46f-455f-91dd-9d3dae9b364f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1643ecb-b760-4e7d-8ed7-769b4a6f0955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd0ee66-a937-4eeb-b92b-aa79f3eec34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2644c82f-abe5-4b38-921d-ab13cfa4e5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e749c4-4820-4c08-bd30-2a74125af65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f0fa4f-2455-4949-a41f-6218c945d608",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a259ef7a-931a-45f5-bf98-98be19ecfe7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e6d687-1716-408f-99db-1d2b11406b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c81faa7-a210-408f-83b1-b6fec8b19fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b522f51-9377-477e-ad34-ff5952f4b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5af86-b577-4693-bf21-0fe90991db5a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bd1790-905c-49c1-897d-dcac6585858d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3177423-b0c2-49dc-8f51-7d1f7a5d6122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b030fb-aa98-430f-a2c4-ee5e23927d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593a3c4a-d490-4fff-9cbe-7b2550ed0287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa5128c-ae8a-4780-a943-59be889b8d0e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7123f4f2-8923-4022-956d-05e88f022545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5932052c-496a-4a16-8fc1-6821ff6de590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed8645e-ccf2-42cb-b16d-eaa4d7ffc0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be5d4a1-92db-4d47-bee8-f95cdf086a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ee48bd-e937-47d3-893e-9e6afb954391",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac849521-4692-43b1-9113-82542d131813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b18615a-98e4-4c87-982f-601428c286a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600c634d-53be-409e-bdb1-27e202ee84af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74c67ed-08ae-4af5-85b2-53903d219b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf822a-9c7d-4568-831d-75f783ab9dc5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d590957-f313-465c-ad8f-57a61771a0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ccb8c5-f159-4e12-aba2-3ef35d2523ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617b1be1-85ad-4b42-9300-28f3f17974b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de361bf1-d0a9-4fc3-a966-15ad9350cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8404f0-59bb-44f2-86f2-11eb1ff0e29d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58537aa-9b72-4720-9f75-0f11fcfcbcb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab945f2-ac4d-482b-b3d9-c73387b336b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896afae9-3480-48fa-a94d-b10bd8c73b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de86c3a-b7ee-4801-974b-1992aaeeae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b2b74-ae8d-4649-ae91-146164a2a827",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0980ef8a-edcc-4fe7-b840-01e03ad59759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59707cc5-fb91-418c-9a89-4d87c3b50492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c3415-d14b-4c55-9d25-4a88b835c0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056b952-15ee-4731-a3bf-f4190ba14d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f8b452-1b3f-4cb0-bd3c-738d5615237a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b28e060-813e-48af-ba81-2d8e462b54ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34c8bee4-d274-47d6-8dfd-9deca3cd7639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c3b90-ab25-401e-a63b-b5dc1baa12b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d705dc63-414b-4e90-a9ee-bc4d9ab98b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292410d-c14f-4fea-8b52-8c15029bc3aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c2277-16f8-4f5c-965d-7ad9cd974be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a590a9bd-3d78-450f-b3da-ceb15bb83829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4ce854-f7fa-4d03-9dc2-ea47293c90f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea6f6f9-e576-4010-ba69-bc9264d169d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d79a6c6-8e8c-4348-8974-d3c5387385b3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64b9b98-526e-49de-a295-1c81456022ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a7fb07-3cb5-4217-80fc-de34fde06e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88c9f9-1267-441f-9737-ee759e62fa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c30c336-2cfe-4d6b-bcc2-7025aa6c9288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e155c860-1124-47ac-910e-39e021f23f3b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c523d15-9e39-4e4a-b493-bbea07a8b5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb172dc4-2f31-4716-bbd8-4b3da443be4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12956480-9020-4517-978b-d83c1456e620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b866d39-7dc1-4ce4-8650-0364d26197a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3fd5b0-240d-45d3-b194-26013cdfd7fc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d2d24-6b0a-4388-99c8-0db4be3e5d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed75b94-326c-4ba9-921d-70c8fcf8523a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ed5077-baa3-4b32-a8e7-05495e7fec49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758a072e-17a9-4536-9e88-e5d28286442d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d01636-71b7-49c3-a78b-1566e60825ea",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe80a73-9206-48b7-9468-37d9bbb81481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad7bed2-ad02-4abb-aef7-a64a0b3bc0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1afea8-131e-46ba-b6c2-f580a27806af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c6dea0-d155-48b3-9aab-89197372c839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3303a0-645a-451e-a9bf-06abea72b8c1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b49fdc1-644b-42da-9681-39f7e3526788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163e141e-bb43-4a02-92c7-5736ad5807eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40888321-a722-402b-a699-93c1551a34e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a490b2-1e22-48ae-a39e-86b36f98b376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fa02e2-92cd-4e25-ab8a-da9e0f2ca06d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c942573-1e1e-4310-955d-29609a1e156a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bb80a4-a0e8-41d9-9beb-3e0426cffaa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6880ae-2041-4f07-bb99-99d61c6d6a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e207b0-2bce-4cfb-82c6-e439e882b73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137e11b4-ed28-48ed-b365-80256e1507b7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2812aea3-3ed0-42da-83e1-fb74d7191e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6953027b-83cc-476f-af88-03510212f954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb98406-ff73-4fec-b455-74c109c214c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5cbe3d-62e2-41db-a4cc-7b8253dfe1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65413dc-2631-4147-9866-78f57ff4b73f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a759b010-7d86-42b3-a61d-62eb6f9de267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98c0f0a-d1c9-4d0d-af2b-81853c5573d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b38e59-1a5c-4b1c-aad5-c0a92441f948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0824eadb-ec15-430c-929a-81992649fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98a8fc4-f04d-4f1f-a34b-51794ebc5225",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e0ab53-2d1d-4ee4-9614-12293a4a6a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f368984-53ba-4fcb-bf71-e3d153bf0da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694b0f65-51e8-47c8-9f4c-d6267c58b724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7d916a-ea3f-4cf6-a4e0-c82b93ca0a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d6e80-9d7c-4a9d-9033-86719d67d76a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfb48b9-be75-40a9-8fbf-bce84f819779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661ec99c-2e18-455d-ae93-d29af4d5743d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274115f2-0947-4b79-9b5a-44aaf5ba249a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13941100-ada2-4276-9cca-c63992b4e89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056bd92b-30c9-4199-964e-37a4d612e386",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756332e-bb85-44f7-b322-614251769b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b01192-cb27-4f35-94e4-0847be4b6cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3d21f0-47f9-44c6-826f-c8d8a3092b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3aa874c-240e-4a67-a32c-b8cb25e1d6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d111fab3-79b1-497f-9384-4e6149642e1f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd4d304-aff4-4da1-87a2-5ade648d3b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a7933b-e757-42ab-95c3-459d5fc423eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90730bd2-bc8e-488a-9557-2ba9524ca536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a72e16-e6e6-41af-a559-104509198a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf9dc24-c7d4-4bc6-a733-8d470c591331",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a6f0c-5e10-44af-989a-c2b640837577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777e379d-7c3f-44fb-b932-23d0210735ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc5b1e1-c6ca-4033-90d1-76566041e0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0584cc3-cee8-400b-8550-25b3ffbd9a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ea6ce-8207-4c30-90dc-d17f14770306",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6571e6-9e73-479b-84ef-b5196f91c717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e261587-dbac-4370-becd-33805d3c9c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41d4a28-127e-4e89-94e1-a51f8788b5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0883b09-7d72-4973-af31-57ad6cdc8655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ac289f-7884-40ae-b5c7-4ad952dd1029",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fe17bd-c242-44ab-b408-a40a3b2180aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "671b891f-dff3-4e71-93e1-c1023921ad58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68539c17-2f84-4876-9387-56c8eb1dbcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba34db7-7bd6-46f6-8348-d2298d54f4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f68e8f-5f1d-4a67-93af-2c8d2f444af6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea903b29-71c1-46aa-8626-b56f871400a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ecaea2-ad34-4266-b770-a8c832724822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6098e92-6d7e-466d-b4d8-26737ac6fdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdbab02-a665-45b8-bea8-bfb994230f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be5993c-2ac3-4b63-a82a-c46c86136804",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f21b9-6c01-4015-8fd2-508308754bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52de67bd-634b-472b-9eea-d95f0f5becd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb819627-552d-48bd-a5df-627a9c90024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f376ba82-8819-430c-bfdd-4cdfbc7b4aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0600cb8d-9206-4675-bf39-2a0b221366e2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399c6c3-976c-4e93-a327-d05fe10ffb02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2d85fe-5b6d-4f3c-b5be-834cdb99ab3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51d3202-205e-4131-89f1-54b63e85892d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfc23ca-0a53-42f2-8668-afa64fa9e91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8a9150-1b66-487c-89d9-33241287ab6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bffd36c-d6b0-401a-b2e7-93308e268a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da087753-48e7-477b-97eb-a99aced52612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b422d-08a5-4056-9205-6e5fe620eea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdd97e0-6167-459b-8059-7069d54592e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1fe755-0c94-4ef2-9c34-f9717f8d0e23",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfffbe0-db59-46f2-8da3-42a033cccd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0e64f8-25ac-4456-b038-7200b1ff9aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f64138-6971-4af9-a008-83bfc22711f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84a7521-cf53-4d98-95fc-c635c5bb620b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68c3000-7d20-49d7-b44e-d9483228130a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe016ed-906e-4e95-9964-3be34dcc1690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5877d1e8-9ec0-434c-a27a-883e13207c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc0167-09d0-4911-b107-cfd0cd0f0290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df98247-2f09-4cc8-b275-8bfe4781384f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749f4399-53f6-43ac-b2db-00cfc682f280",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199050c7-857a-4309-861e-6fb87a8a65c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b74b484-8635-4f0a-bbed-990598a418fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf810eda-efea-4418-a3a1-9a5aa1f8a584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fa0a25-04aa-4b6e-8def-ad398fb5b1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38849c92-6c10-4ef1-a8d5-e7f01d79bc82",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa5efd9-2131-45a9-8aa5-4adaac9b1281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871add8a-35aa-458e-9672-bd2f516d7441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a627606-3681-4bed-be86-b847efcebeaa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3150da0e-7745-4d32-b5f2-1c4b52e3db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaf876e-f426-4b7d-9ee7-82cbfb74ae78",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc47b5a-b1c3-411e-9527-b9657d04f3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c652701-9891-469f-b8f5-e5fab98932e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1225ea48-ebe9-40d4-b275-9aea5ddd71f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f37b8-0f66-47cf-be71-3730b8392b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64057468-e779-4ab2-bc2a-2d697e14cd46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52683c23-1e71-4062-b9c6-95d588ec134d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df02ef8-ad84-48fb-bc99-1732265e3bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4248134-784d-4230-a2c2-6d94f6b87e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813e9126-a270-41e1-bdab-9cb7afd09661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e9940-d409-4b31-adb0-d5b7f4db86a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f7998a-baf9-494b-997c-b88793394cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90bd4236-9e0b-4619-a88f-c411182d68c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc82673e-fb6d-4e52-a62b-716b3d6c63a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74a441a-898d-4076-8335-93f22ada3e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978e9c7c-7bd7-4eae-8bbf-63dddec9dd74",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89243b07-e24c-4414-ab65-7de87dd79417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30589a3e-3ffb-40ff-a26b-b634ed9cce78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8ab01a-56bd-4955-98e1-b5eb380eeccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4155562f-5e97-411f-9942-95550087001f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c8613-26be-4e49-acd1-ffaf1a6bd84c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f581b1-451c-43ff-a6bc-279a477c2669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca278b14-fbc8-45c6-9cc8-cf928d937d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac781f0-2713-4874-ab04-a3bae28e750e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8378f46d-a769-4279-9b57-db3f6105c230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4df18b-afa3-4419-acf8-9f79a45525b0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e4c120-84d3-4e67-9507-5dab2f55d9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d6598f-cbe6-4389-8885-2c35e97cd42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae613f6a-f648-4638-ab84-18deedbabced",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e51858-7237-49ef-8e52-28d1dab7fcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde9b132-5034-46ba-af13-0e02b3821651",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edb045a-1b50-4c10-a486-a0ea004dc08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3382cf8-f866-43d5-a15d-a253c143f135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56014079-52fc-4b39-90d8-5299773777dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b407b7ae-fd13-46fd-94b0-e02775f81a72"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5a19d64-f74b-46c3-8add-10331c3b947e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35dc582e-23bd-48a8-8c0a-aa3a03aead64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2d28f6-1d5d-4b24-966d-3de789cb3543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6456a7ae-e865-4624-9022-6dff9da0265c"
                    }
                  }
                ]
              },
              {
                "id": "f1298ae8-7623-4a67-8a80-d1890b654c9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2239edd9-b6c5-401e-96a4-b57ff13b7c03",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d5dfb2-da17-4554-b8dd-9cb3392a74b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "13f683d2-c1b8-4cd3-b451-7ef5b9589edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28284d51-9882-4d57-8b04-818bb1dd5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9ba63d9-a213-4451-9a51-e46139f32835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc48853-dfb9-4930-8af0-07725cf7ecf3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b5ff41-7141-4e91-995b-340280bc3496",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "38259baf-879b-4498-9879-5619e27f2888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7769852e-998e-4cbb-84d1-7df2e819b74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1300412-69c5-46db-8579-38d64343de9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20d924f7-84c3-43e5-8fe0-9b7ca6ada284",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "633aa5ec-c112-4a46-be44-914cb5a113df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8af41309-88d0-4862-95ee-abd61a3d441c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8f06574-5155-4454-bfc1-46088c12aea0"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "529786ab-3767-480c-ab60-f25b19760d7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a72247c5-a84c-4e25-ad98-744515437925",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6872da5-f0f4-4135-b359-8e883fe56492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a89e0a2c-8bde-4c94-8f8c-6f19e1fd0b26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2265e0a0-840c-4725-b532-72310130318e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fddfee16-21c4-41d4-8602-49395b0e4182"
                    }
                  }
                ]
              },
              {
                "id": "6880657a-582a-43be-a39c-56118e9f947a",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1804aedf-d016-4c1f-8771-125591f34941",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83fff51e-a836-4f5a-bfaa-b8d79f0c69c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "467063e1-546c-4cbe-b0ca-a7d597241702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e14f9cfe-5b67-4430-8a3b-199d829f102f"
                    }
                  }
                ]
              },
              {
                "id": "a1bbefd1-a491-4d25-bf70-5b86556a955f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd7db7eb-c2eb-408c-8d6d-832a25ae6232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8dc84314-006c-445b-b13d-438e4f0e34a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef9ef4a4-9127-4d1b-9378-0fe245924c0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ef2c075-0eef-4e2a-bbae-c938852a0068"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acfb70fe-12c0-4f37-94d9-b635b81ffc19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "effcaa0c-23c9-46b1-8760-b03c8e407298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "108babef-6524-4c72-801b-6a33f2bf3919",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc6daf43-94d9-4615-afd4-b94018adff52"
            }
          }
        ]
      },
      {
        "id": "34ee50c8-4cc3-4bea-9111-6480b02144b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8b3b33d8-e17f-4f4e-8a07-becd191c7d1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e9e0a76-856c-4a12-a1c5-db0b3325546d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687eecc5-afe7-4fad-9fd0-b7eed6e00aab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c58b728-7fe1-4178-a162-d725c4adc5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df578c34-3a76-4eee-9434-dc446c41f3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c32f441-907c-45d8-8307-838aadf02963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a80ba1-bf9f-4c59-968a-497f4a13e598",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d14ed32-695a-45ba-900b-805eb0c70b80",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "836fcbe8-f264-4fb0-a6af-748c788ac2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5a0501-d8b7-44fe-9064-f69d46d9f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2e5eb03-50fa-4cc8-a585-fe3eebeee976"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b9d39eb-80ec-4440-ad8c-a8dc2dd5703a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8966beb7-8aae-459e-a041-dccb8f2ff6b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b109b723-11d4-4a38-9a19-50791c62a10b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0508465c-a8f7-4b4e-ad10-0d26cb8aecf8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0bd2f5b-331b-4017-ba6a-e72a0bf73c00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "58aef372-c9fb-4071-86ea-7dc36730f6ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8281e26-fdf7-4f80-ac29-b07dbbb9053d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b80731d-4763-4a05-b764-f4c38feb5699"
            }
          }
        ]
      },
      {
        "id": "e2a5f8a4-9dc0-42d3-b459-4f28bd64da7d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b53c6bc5-7d59-4a23-9257-558c3b4d8771",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0656be90-46a3-49d5-a079-b8502d02eb8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83408285-e27a-4270-80ae-7fb6da9f6586",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6633b31-b7c5-4259-a54a-388c8739d9ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8da7e8ae-c307-4215-9d95-99afa5808e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a3a07a-6c12-4fe0-be62-0df8d766d656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca52f1a4-7416-425c-97a9-569192f05ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b54f62-2b0f-43c0-98ac-68835dee4f2e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55d36a-920e-4c96-8f82-31c968b5e525",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3b352a3c-142e-42fd-a0c5-4a681e19693b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a88902-d5c4-4dac-a52a-421854833dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e780095-7b9a-4c83-90a6-5e308009eec3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b22da38-3b52-4bcf-8c05-3f03b6a72bf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5953b37-26e1-47e1-9b01-9ab2ff3b91ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f65975d-2770-4ebf-bb10-2228478b73fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b70ce5fc-eaa0-4017-9cc1-a3064b12b86c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7ff7697-67f4-4f01-a537-9b02c5763182",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c294bc78-d1a8-4d3f-82ec-e8a88944bb35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75447efb-a19c-4950-aed6-14d51f85a1e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb7976ab-9308-4ffb-a015-0c3c05e9abf1"
            }
          }
        ]
      },
      {
        "id": "bd29ee75-08f7-406b-aeae-ea85286eef4a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aab70830-c19c-4343-baaf-16e367993060",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e37017c6-f004-4100-b605-8dbbad3270e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaa1f1dc-b153-42ae-b378-c1a784c61ba7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d1eb66-a5c0-4fce-b6be-81fc172b36c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b79df4b4-9543-4081-9e84-a45c376ef108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a81193-015b-44fb-9565-5cf95f995e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb924c8f-9cb6-4d35-95eb-57bd1619e0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e7d913-27f8-4593-81aa-ed0e936a55cc",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863211a2-1d1e-4930-8607-fe4fb6eebc85",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "71c875f4-abd3-48a3-9ae5-6a20272d4bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6a2dbe-d87a-42d0-b520-97c75f6857a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c07288d4-74d6-46a0-81d4-b3ceb2add792"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50080b8c-b565-4e83-b675-c4c11ab30d6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46dc0dec-608e-4bb8-b1eb-2956bc91511c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59dbd562-b8dd-41ff-9f4e-1d5608ae8183",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d3624cb-8112-4910-86b7-9d090332236d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "939c0ae8-1f0b-48b8-b77e-3bd254a05e8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cf214ea3-e674-4698-ad7f-fdd88707cdbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "970fad29-d8ea-4056-9375-f242bf9dcf77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20e5e01a-276e-4578-8a10-64ee3d51ffd7"
            }
          }
        ]
      },
      {
        "id": "8704f84f-0a02-49c4-909c-2e2260975e5e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0715a8f2-5077-42d1-b244-15cfa7bf23f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb39ee72-a6c7-409c-bb1d-46bf71cf7443",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "705bea41-4c1e-4016-925a-dd33bfcab68a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaadb975-483a-4cc7-b7ae-e71575809743",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3eb1c4c-59f2-4fe2-a803-a10df1d0766d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 394.4807692307692,
      "responseMin": 17,
      "responseMax": 4299,
      "responseSd": 397.8152494652521,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667091426930,
      "completed": 1667091537683
    },
    "executions": [
      {
        "id": "de126a84-a28b-43f9-90b3-88f57960a8a4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "47d5ff2b-3e7c-49a2-bcfc-acbb4b36825f",
          "httpRequestId": "40316ce5-5567-4d73-b328-25a875f990b7"
        },
        "item": {
          "id": "de126a84-a28b-43f9-90b3-88f57960a8a4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6591fb50-a3f1-48cb-946d-25d5e91ea0b8",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "0eb1e348-a43c-47b8-b831-db00a3a0e4dd",
        "cursor": {
          "ref": "15b3acbf-b999-430e-a6eb-79014c7fd193",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4d4bc781-44e4-4e07-ab81-959cf81e0988"
        },
        "item": {
          "id": "0eb1e348-a43c-47b8-b831-db00a3a0e4dd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ab8f22b7-5dfd-47e4-a54e-d556cde93d8e",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "b2c03528-cf0d-49ad-bd1b-082375ae19b3",
        "cursor": {
          "ref": "78b7ac19-bc86-4aea-ab70-3a8bd8edc560",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e420629e-5869-4024-8fc6-d8c1acab753e"
        },
        "item": {
          "id": "b2c03528-cf0d-49ad-bd1b-082375ae19b3",
          "name": "did_json"
        },
        "response": {
          "id": "da32bc02-e491-48ec-86f5-92d9c1429dcd",
          "status": "OK",
          "code": 200,
          "responseTime": 1269,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900c0bb2-f7fe-4dd0-aefd-2a29425e2b66",
        "cursor": {
          "ref": "300e5146-4b17-43ec-90da-e57147ee0385",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87b0f636-2765-4c40-9e10-fc2007b5af78"
        },
        "item": {
          "id": "900c0bb2-f7fe-4dd0-aefd-2a29425e2b66",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed00ac5c-3911-401c-8858-ec74fd9d88cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1259,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900c0bb2-f7fe-4dd0-aefd-2a29425e2b66",
        "cursor": {
          "ref": "300e5146-4b17-43ec-90da-e57147ee0385",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87b0f636-2765-4c40-9e10-fc2007b5af78"
        },
        "item": {
          "id": "900c0bb2-f7fe-4dd0-aefd-2a29425e2b66",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed00ac5c-3911-401c-8858-ec74fd9d88cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1259,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378917c7-facf-498b-8d00-b9de27d22490",
        "cursor": {
          "ref": "bd70ec93-319c-4264-bbcd-b9e7a2a56c29",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c5527554-b2db-4da2-9d6a-c94dc2752936"
        },
        "item": {
          "id": "378917c7-facf-498b-8d00-b9de27d22490",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e40db416-90ca-4566-984d-bb1c9fda5cdb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 516,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d755ccf-e01c-460c-b482-14a035fad399",
        "cursor": {
          "ref": "cf0932c8-cbbc-41c3-9e37-58d5dc39f629",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "77266304-ab22-4bb3-9053-710fcb0d786c"
        },
        "item": {
          "id": "6d755ccf-e01c-460c-b482-14a035fad399",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cdb294de-2926-41db-8a5b-b23e26dd6676",
          "status": "Not Found",
          "code": 404,
          "responseTime": 403,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33df2658-75eb-4e7c-a9f3-05832cd3b1e1",
        "cursor": {
          "ref": "ab4e1410-945f-494d-98d4-d6d937ed5b49",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0bb6a7b7-1d59-4609-a5ef-35e454b07cca"
        },
        "item": {
          "id": "33df2658-75eb-4e7c-a9f3-05832cd3b1e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "830320aa-b99a-4c22-b15c-22e43e9a63dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee5668e-753b-4d8a-aa91-ebc26cd904b6",
        "cursor": {
          "ref": "ed1c3e02-5f0b-42da-8a52-57d6bc27f9ea",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c925c1b8-edfb-4ee6-be27-0205ec8fbbe5"
        },
        "item": {
          "id": "aee5668e-753b-4d8a-aa91-ebc26cd904b6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "41cdad07-7dbc-4948-89d4-69e6d3f55c6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 396,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee5668e-753b-4d8a-aa91-ebc26cd904b6",
        "cursor": {
          "ref": "ed1c3e02-5f0b-42da-8a52-57d6bc27f9ea",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c925c1b8-edfb-4ee6-be27-0205ec8fbbe5"
        },
        "item": {
          "id": "aee5668e-753b-4d8a-aa91-ebc26cd904b6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "41cdad07-7dbc-4948-89d4-69e6d3f55c6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 396,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f94507-8143-4b73-899a-b10d15d3e587",
        "cursor": {
          "ref": "44a0d12c-567a-4258-9d6c-8b82ed29b7a0",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e16d370c-f7d1-4b6d-a382-613faa17e324"
        },
        "item": {
          "id": "e9f94507-8143-4b73-899a-b10d15d3e587",
          "name": "identifiers"
        },
        "response": {
          "id": "7016629b-17d0-4980-ad58-5bceb52c92ce",
          "status": "OK",
          "code": 200,
          "responseTime": 627,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1142b9-dc5c-46a3-8171-a55b1223c208",
        "cursor": {
          "ref": "45517af4-63b3-4a26-af66-54606b250b09",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c8ec1eb-1795-4697-90da-51152b27ed0e"
        },
        "item": {
          "id": "5f1142b9-dc5c-46a3-8171-a55b1223c208",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62de868f-ce79-48e9-a5c4-33ec66023793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1142b9-dc5c-46a3-8171-a55b1223c208",
        "cursor": {
          "ref": "45517af4-63b3-4a26-af66-54606b250b09",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0c8ec1eb-1795-4697-90da-51152b27ed0e"
        },
        "item": {
          "id": "5f1142b9-dc5c-46a3-8171-a55b1223c208",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "62de868f-ce79-48e9-a5c4-33ec66023793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64f7ed6-93fb-448a-89a6-e1a14d1bd9bf",
        "cursor": {
          "ref": "6236411f-6af6-46cf-afbd-4f214456d0cf",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b56dc185-bb28-4503-9ab2-32479b57b69c"
        },
        "item": {
          "id": "e64f7ed6-93fb-448a-89a6-e1a14d1bd9bf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73cd4a39-0d7f-4910-9e02-4cb900476af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077ea652-a9a2-43c0-875f-ccb2947e2f68",
        "cursor": {
          "ref": "6c81f1af-322f-4205-b25e-97ce9260394a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "004979c1-adea-42cf-8536-09161ddd6bd2"
        },
        "item": {
          "id": "077ea652-a9a2-43c0-875f-ccb2947e2f68",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fd987e76-6217-4a29-b619-cc365a5f7ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4e6f50-8bbe-469d-9082-c425b59024e6",
        "cursor": {
          "ref": "2868ec82-1f2a-43d9-aba6-15cb9342d550",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3b288275-8f48-40ee-b704-d33e1d75943e"
        },
        "item": {
          "id": "ef4e6f50-8bbe-469d-9082-c425b59024e6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c100400-48d8-4225-b5f5-657b2f552c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d8a8bb-1345-4165-ba68-4b00a43a6c65",
        "cursor": {
          "ref": "a08d82fb-d7ed-4c53-93c2-c48d90dc6922",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d6f46d59-c73e-4b47-ad48-e0d08afcd8dd"
        },
        "item": {
          "id": "e7d8a8bb-1345-4165-ba68-4b00a43a6c65",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f4e9393d-bf38-4e16-8545-9d858ace984e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4308dfc1-01db-4990-a770-bf77ca08d4cf",
        "cursor": {
          "ref": "9fceb25c-5dc6-4ef7-9664-79bf6e6a667a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a6ecf6e9-d1b9-4e71-a729-a3228847e388"
        },
        "item": {
          "id": "4308dfc1-01db-4990-a770-bf77ca08d4cf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3d824a94-a317-43de-84cd-309eb9ae4230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee999bbf-4d63-425d-96c9-13bf54b363dc",
        "cursor": {
          "ref": "ea85d294-03bd-48c4-beaa-28a509b4656b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b7255fcb-45f0-4f7c-96bf-be567ac20f1c"
        },
        "item": {
          "id": "ee999bbf-4d63-425d-96c9-13bf54b363dc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "34aaa93a-4a86-41c4-9486-7e5fbdeac041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09935a99-06ec-48de-997c-8c9033e25778",
        "cursor": {
          "ref": "c3d43f9c-ca70-4ee1-ab42-386df4371636",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1ac1dcdc-b249-4a62-9b08-7ab281556c29"
        },
        "item": {
          "id": "09935a99-06ec-48de-997c-8c9033e25778",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "de0cbfae-f432-41e6-99ce-3e02c1c4ed56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d54f90-4c86-4a1c-8364-0a90287c1f62",
        "cursor": {
          "ref": "a4adabab-6686-4752-ac03-e4d16e8f4742",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "28295d8a-d99e-481b-a46a-ef7d59a8c708"
        },
        "item": {
          "id": "14d54f90-4c86-4a1c-8364-0a90287c1f62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "20656bb8-d186-442f-a33c-de319e9da4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418cc83b-1bc6-48bb-81cf-70de15a429bd",
        "cursor": {
          "ref": "25a36903-5a44-48e1-9ca4-02e47f747832",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d3ca51d0-ced1-495c-9ca5-5368c40ba080"
        },
        "item": {
          "id": "418cc83b-1bc6-48bb-81cf-70de15a429bd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b8dcb4a4-dc49-467d-a6ad-4a7e1933268d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3818fd-63ac-43ae-960d-363d3e74b85b",
        "cursor": {
          "ref": "143ee002-13e1-4dea-aa8b-ba9f4c315116",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7d9dc788-28fb-4349-8eea-9909f5b9ceaa"
        },
        "item": {
          "id": "9f3818fd-63ac-43ae-960d-363d3e74b85b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0c920f29-841f-4a29-a32f-2189f194abd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfb17ef-7502-473b-928b-8a4834dca3a9",
        "cursor": {
          "ref": "85c45380-becd-4ac1-98de-94bb8ce95a70",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8d06c2a4-8e9f-49c2-8e4a-5aa22d0f13fc"
        },
        "item": {
          "id": "adfb17ef-7502-473b-928b-8a4834dca3a9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5746983b-1958-49d2-9b42-2bbb6ff15b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b689de4-38bc-48c5-80c3-e94490adca52",
        "cursor": {
          "ref": "d0166529-a9e8-4d31-8cae-b207fc2b616f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5b8b40ee-0112-4548-b806-089bb136511c"
        },
        "item": {
          "id": "1b689de4-38bc-48c5-80c3-e94490adca52",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c8106883-6158-4687-9630-c18562089c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d76aab-dead-4c87-a76d-6b1c1fdf7bc2",
        "cursor": {
          "ref": "4a1a3f53-95fb-403c-a4d6-5c9b99edbd12",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c1812cc8-6268-4f1d-ab47-dc465cdee157"
        },
        "item": {
          "id": "a8d76aab-dead-4c87-a76d-6b1c1fdf7bc2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bb31cb95-9499-4b5f-9463-63597d2c5a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355277f0-8b29-4b3d-bd50-dd38018d01d1",
        "cursor": {
          "ref": "b80e6d98-daf6-4ead-9d7d-a3f9f861b5ef",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f7b6fc8d-4e17-4402-b9a0-d8b9a2bf625d"
        },
        "item": {
          "id": "355277f0-8b29-4b3d-bd50-dd38018d01d1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "faf33fdf-f301-488e-9100-663e36c4eb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c68544-fec8-4630-881c-76db10686b9b",
        "cursor": {
          "ref": "ce08a675-7391-4217-94f2-641b9ca83017",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d4615f16-90dd-4e8c-8c50-fc211acb0061"
        },
        "item": {
          "id": "03c68544-fec8-4630-881c-76db10686b9b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1db5adc2-1477-4006-aea6-3fd8c25939fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6273178-f58e-4c7c-a67b-b109cd4f74a1",
        "cursor": {
          "ref": "9946ea67-b5c9-423f-bd6a-ecf9ea99d19b",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db1b7ece-65b2-4933-b52e-c99dfd552bfe"
        },
        "item": {
          "id": "b6273178-f58e-4c7c-a67b-b109cd4f74a1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5bf0b62-c5aa-49d7-b216-49f454f0eb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d4fff2-e4e8-4156-9009-1d937beef7e2",
        "cursor": {
          "ref": "cb759b50-1f8a-47bc-9ac4-73975a4e7a90",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cb6175d8-9b68-407f-96ed-1d63da5612c3"
        },
        "item": {
          "id": "e0d4fff2-e4e8-4156-9009-1d937beef7e2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "20d7b318-528d-4b01-8f3b-41c1bdc88286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e8cd0b-4eb6-4209-a83e-a3291f8a8379",
        "cursor": {
          "ref": "69e925ee-1463-45f8-93c9-1c6fef73de7d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bca740d1-a8d1-48d4-89c6-2575a259606e"
        },
        "item": {
          "id": "23e8cd0b-4eb6-4209-a83e-a3291f8a8379",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e4691ad9-46a4-456f-a004-71dc3ef67cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d201524-8d1e-4078-add3-9811e9350dd7",
        "cursor": {
          "ref": "c2e0eee6-6c85-4993-b23c-2779e52455f9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a201ff9d-576e-4d8a-9c28-377725e2f38b"
        },
        "item": {
          "id": "5d201524-8d1e-4078-add3-9811e9350dd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "01615269-fd33-4741-be8f-e46fb0c6d8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2d9169-a21d-48c7-b663-1c4278884237",
        "cursor": {
          "ref": "20c23381-f55d-4918-b9fd-ab22b0046a4e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "22e424f9-fc44-411d-88cb-06fcac43fd10"
        },
        "item": {
          "id": "0d2d9169-a21d-48c7-b663-1c4278884237",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aa3eebb3-9a09-4743-a746-0d3e4d3198f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee565f-57c6-47ae-8c83-a2bca2bafdff",
        "cursor": {
          "ref": "f4543586-8cb1-4e1a-a83f-3ecbd3d8d7ec",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d0e305f-4036-45b9-b6f6-8a20c4ade135"
        },
        "item": {
          "id": "9aee565f-57c6-47ae-8c83-a2bca2bafdff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2d806557-e374-4293-a019-102905f9b4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03ef774-81a7-40e7-9153-27b49e1fa6f2",
        "cursor": {
          "ref": "fdc4a46a-95a6-480d-b3de-6dfee193fddd",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "be802238-d169-45b0-9dd9-223b8046e27b"
        },
        "item": {
          "id": "e03ef774-81a7-40e7-9153-27b49e1fa6f2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "edf669c3-d531-4c1b-b423-75f4baec161a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c9d45a-75a2-4542-a947-117c0d7f7b09",
        "cursor": {
          "ref": "c88476c5-b921-49af-97ed-0f76ae5eda4d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "746bfaf2-aa72-4cb4-92e5-88d812a967b9"
        },
        "item": {
          "id": "b6c9d45a-75a2-4542-a947-117c0d7f7b09",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "131b1316-93f2-41ae-9682-bf5dd6a21e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03b175c-9956-4c84-9a17-9e98b9d9ef59",
        "cursor": {
          "ref": "9c08a4bd-fbf8-4357-8d2a-4f6a1c7a061b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "306064b4-7662-4244-8650-ca372f01fbd1"
        },
        "item": {
          "id": "a03b175c-9956-4c84-9a17-9e98b9d9ef59",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "019e71a4-e5aa-4770-bf52-7de372bd53f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9aca68-dc02-46bb-80a0-10b0d82c28d5",
        "cursor": {
          "ref": "ecf19ba0-85cd-489a-8f2c-4661a542a3f5",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a203a2dd-e252-466f-9e5e-06d1b47b9ec6"
        },
        "item": {
          "id": "ea9aca68-dc02-46bb-80a0-10b0d82c28d5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "92724083-191a-4390-9c27-2059864c1b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7aa255-6b9f-4cbb-8bd6-d947b039948d",
        "cursor": {
          "ref": "1ec89848-b54c-4d3e-b117-25e92bc7d661",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b4aa2ee3-435f-4f72-be90-ec1b4f371240"
        },
        "item": {
          "id": "3b7aa255-6b9f-4cbb-8bd6-d947b039948d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f76672fb-6a70-4cf6-b8ea-1749aa9fbc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2e8d6d-80a8-4982-85b9-d187f40688c8",
        "cursor": {
          "ref": "fd77549d-1b71-4de7-8220-0425661027b9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a85165fd-f78e-4352-95bd-e4a0e92fb525"
        },
        "item": {
          "id": "ca2e8d6d-80a8-4982-85b9-d187f40688c8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1b5cae76-b430-4174-bbba-b5a9ebf954bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bfdfec-84bd-4a42-971e-828c8ab8f7f7",
        "cursor": {
          "ref": "9a6fb05c-3de7-40b3-a140-a816d670750f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c4845b99-c3e9-4b4d-8125-055e8ed32ffd"
        },
        "item": {
          "id": "65bfdfec-84bd-4a42-971e-828c8ab8f7f7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "059759a0-16e6-4d79-926e-3b14504d9598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0998da-d498-4f7f-9fbb-b8000dbe4aac",
        "cursor": {
          "ref": "242b0cf9-05b0-426b-a896-f4f6dfe6e42f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "35c721dc-a7b7-4966-80f5-89064e684a6a"
        },
        "item": {
          "id": "cd0998da-d498-4f7f-9fbb-b8000dbe4aac",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bed98fed-bad9-4203-9d29-c24c31cad723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8bfee-9682-4311-8adb-8b4dc3421544",
        "cursor": {
          "ref": "acbf1a8a-25e9-4e09-a16b-dfc60c1ffbc3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df1ac978-f2d1-4db6-93d2-db21f23cef17"
        },
        "item": {
          "id": "aab8bfee-9682-4311-8adb-8b4dc3421544",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "60d2aa63-3a50-4e73-8bd4-d5240ad28ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94654278-86ab-4b42-b211-89efc5f3a72f",
        "cursor": {
          "ref": "fba2d87f-66dc-42c4-aff2-1c351fce0f5e",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4f33d9c0-33ea-47e5-9f69-810b1c9f0a88"
        },
        "item": {
          "id": "94654278-86ab-4b42-b211-89efc5f3a72f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "487006b5-a71a-46a4-93e3-b4b32920684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e197362b-204c-4315-8769-aef712673dc7",
        "cursor": {
          "ref": "c8089bbf-f766-4b20-98e6-76e3a00fcd9e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1eb13c42-e513-4ba7-948b-5dbf6a8bf7d3"
        },
        "item": {
          "id": "e197362b-204c-4315-8769-aef712673dc7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ce8c8b40-04b4-4113-9ca4-7a2306cc9bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38ac352-cd4c-4ed2-8f89-34ad04629190",
        "cursor": {
          "ref": "f44fcbd9-1e7e-46cd-9833-0a14132bb647",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a0d54100-639e-4645-8fc5-9e3c8f3e34dc"
        },
        "item": {
          "id": "f38ac352-cd4c-4ed2-8f89-34ad04629190",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59506449-7dca-4615-8f84-5d9220e35ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0013f8-b40d-4caf-a3f2-1fb68a43c7a3",
        "cursor": {
          "ref": "c826bf42-b04b-40db-8a19-87a94d239960",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "308a4644-ce3c-4160-b0e3-2d43e66c1dcd"
        },
        "item": {
          "id": "1e0013f8-b40d-4caf-a3f2-1fb68a43c7a3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3f3d4b4d-a869-4249-b61a-a764d5286f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97b050f-596e-47b7-bb0c-59aab1a11949",
        "cursor": {
          "ref": "69b11bea-6611-46fb-b63f-5db4419391ea",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7736860e-af12-4498-964d-55885a3b0358"
        },
        "item": {
          "id": "f97b050f-596e-47b7-bb0c-59aab1a11949",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c31fc1a-d3cd-492f-9ac2-72b19c5e6827",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 454,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d615024b-d98a-46b1-9fd7-ea2d062bdf28",
        "cursor": {
          "ref": "880fa444-ee10-47d7-987e-c82746a06e80",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c48f6dd-0c30-4e6c-84a1-1f3109c6d013"
        },
        "item": {
          "id": "d615024b-d98a-46b1-9fd7-ea2d062bdf28",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "62eccdd2-ae42-458b-a941-1c6851746041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20df1c6-2b75-49a5-9ccb-10d9ad9e44a4",
        "cursor": {
          "ref": "0e94e2fe-b357-470c-91c4-1038da3f51fa",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8af031d5-b23b-4801-8eed-86d5d4c7732a"
        },
        "item": {
          "id": "c20df1c6-2b75-49a5-9ccb-10d9ad9e44a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d9cee7dd-6e74-4eae-b688-9e14e9194396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b0f96a-c4bb-4436-bdfc-964593e79e8a",
        "cursor": {
          "ref": "9eb13eb9-e2b0-43b5-b7d5-fcc31b5610e9",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0980d045-0148-419c-b430-e19976611e81"
        },
        "item": {
          "id": "17b0f96a-c4bb-4436-bdfc-964593e79e8a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9a468042-da95-482c-92cb-b0bb7d25aa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6e5b30-1d13-4bec-b636-476f943afe0a",
        "cursor": {
          "ref": "25b40b63-e2ab-4919-bd7e-3cff3f55e898",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8a68197b-2611-4764-ba22-8e62dbca3997"
        },
        "item": {
          "id": "dc6e5b30-1d13-4bec-b636-476f943afe0a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f2b64da2-5b6d-4712-8bc0-6295eddedf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c856a74-8dcd-40d2-b579-a7cb767d6104",
        "cursor": {
          "ref": "107ae8be-dbcb-452d-ade1-8b60c2dcd3af",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "10f920a4-5646-4775-a055-5ea7bf420f93"
        },
        "item": {
          "id": "1c856a74-8dcd-40d2-b579-a7cb767d6104",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9272c8cd-ffe5-4443-b046-995db979d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb3a38c-7b34-4679-b678-cf99dcabc347",
        "cursor": {
          "ref": "3edefd74-278d-4a20-9eda-156d8ef30616",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "123825c6-6b19-4c70-97db-679796999bfa"
        },
        "item": {
          "id": "4cb3a38c-7b34-4679-b678-cf99dcabc347",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6d895e4d-1f22-439a-8889-ae33d717d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a10415-95df-455b-a685-8abdb4d1ccf4",
        "cursor": {
          "ref": "34acb2a4-944d-489b-824d-178b928a914e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9fe6c6c6-59af-4c87-b00f-744e8f639174"
        },
        "item": {
          "id": "d2a10415-95df-455b-a685-8abdb4d1ccf4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5a8f2695-77a0-4978-bdc4-df0895aa2f8f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 451,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ea0f32-fa8a-4b57-ab91-afc54132321f",
        "cursor": {
          "ref": "5506cd89-8ef6-4075-a6d1-e5feb719e5f1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a05ca9e4-8437-48a9-8614-c515c7f24458"
        },
        "item": {
          "id": "66ea0f32-fa8a-4b57-ab91-afc54132321f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fcf82b85-b247-4f07-b230-764899866952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dcb768-39aa-4a41-91e2-361809e849fc",
        "cursor": {
          "ref": "7821ea91-3f69-43cc-83ef-a53efeebaf81",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e8163b81-12a1-46be-9635-178d379363f7"
        },
        "item": {
          "id": "73dcb768-39aa-4a41-91e2-361809e849fc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "489c7c33-bfa7-4241-99c7-aa35ec224745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e08c374-d42b-4ce1-a1f4-4d0e9fc7363e",
        "cursor": {
          "ref": "3c25b438-3422-4ef4-a198-5d95de0561ac",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "843056fc-1a07-4a9b-a8a6-61abb3e68756"
        },
        "item": {
          "id": "4e08c374-d42b-4ce1-a1f4-4d0e9fc7363e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "109dafff-8907-42dc-82a9-b8851fb853f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aacc71-7cbc-43e7-8adc-8edd676e5a91",
        "cursor": {
          "ref": "391a2675-b1e5-4470-9c61-3d80cf5c8141",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8849502f-b790-446d-ac52-01a645ca86a3"
        },
        "item": {
          "id": "f7aacc71-7cbc-43e7-8adc-8edd676e5a91",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f56fde3c-0417-4791-b55d-051608410886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb6da0e-aa08-4530-99e9-061f9712e41e",
        "cursor": {
          "ref": "e18683b6-eca1-4908-bfab-6fa8c2ce924b",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4be738f-8547-489d-b05d-f2c7edf77918"
        },
        "item": {
          "id": "bcb6da0e-aa08-4530-99e9-061f9712e41e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59e41f38-462c-47af-bbb7-7e61e3c54886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe14774-d617-41d4-ab70-11b43387690b",
        "cursor": {
          "ref": "248a9ea6-9d85-463f-96bd-4d04c58335d3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9cbb5bde-9f8b-40d9-8b56-199d8f31ce8c"
        },
        "item": {
          "id": "0fe14774-d617-41d4-ab70-11b43387690b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "513e22d1-31b5-42bf-84a3-714d69530f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cbd964-0c0e-4d1d-8f4d-51329a5b5bf1",
        "cursor": {
          "ref": "b62596c9-6201-4d06-8a8e-61d59e08ec15",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c2fd5c3-e0d8-4950-9f5c-891f4729ee3c"
        },
        "item": {
          "id": "a9cbd964-0c0e-4d1d-8f4d-51329a5b5bf1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3eaf4a62-7a58-4064-8bec-6802adfe8ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b528dd-798c-4ec5-92b0-852f4e81db24",
        "cursor": {
          "ref": "a54948bf-5f9b-4e42-a11d-8bd153656a05",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c4a1c5f7-502c-48d9-8234-573c17a0de6a"
        },
        "item": {
          "id": "a8b528dd-798c-4ec5-92b0-852f4e81db24",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "741f8d98-ecb0-4cae-a215-205cc800705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf78c144-f7ba-4bca-8ca4-6cd4b851acb5",
        "cursor": {
          "ref": "66b1d8c6-5ae0-427a-85e9-3586348b21ef",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "15312d73-a13e-485a-997e-753d24544efe"
        },
        "item": {
          "id": "cf78c144-f7ba-4bca-8ca4-6cd4b851acb5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa5d8d05-64db-47b2-b0e7-e7b6f7993cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2fba6f-1864-4e1f-8df1-a8fab962fa31",
        "cursor": {
          "ref": "cc466c4b-5c8e-4a4a-9047-8bbb9e41a0a7",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df7ebbb1-e31a-48cb-9ba7-e0de21b81cec"
        },
        "item": {
          "id": "8c2fba6f-1864-4e1f-8df1-a8fab962fa31",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "048e65c0-8797-4859-9af5-ffac33f3c853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289f79fb-d6e9-4483-9842-1af96247c9e1",
        "cursor": {
          "ref": "dc6b043a-a1de-4293-9bfd-e293e8e87fab",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f2aee60d-eae1-4c0f-a87c-7108e6dde965"
        },
        "item": {
          "id": "289f79fb-d6e9-4483-9842-1af96247c9e1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6aa81a4a-2b6e-4000-9b4e-509598dc9b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077a2ac7-de9f-486c-b57a-f78c8a90e694",
        "cursor": {
          "ref": "e0d519ec-63f0-4fad-b442-87bf79cf47f5",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "832cfaa5-5791-4fc8-8c59-1edc07482016"
        },
        "item": {
          "id": "077a2ac7-de9f-486c-b57a-f78c8a90e694",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f406beb7-67e4-4a80-955f-0506dc2d50a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ae044d-42b8-4843-84f2-892ebc9d5813",
        "cursor": {
          "ref": "5ccff195-a052-47fd-9c68-9fb6383ece77",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "17a13cd7-aee8-4a5b-88ea-3e4983e95d65"
        },
        "item": {
          "id": "61ae044d-42b8-4843-84f2-892ebc9d5813",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "12a2a7b8-4783-4397-9597-87319770d185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da0a311-edf2-4b2c-a00c-1b890a39bb27",
        "cursor": {
          "ref": "14a45192-ccae-442a-bc86-3eb07eb2616f",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ebecb463-a801-4004-9e37-e99654b328c5"
        },
        "item": {
          "id": "4da0a311-edf2-4b2c-a00c-1b890a39bb27",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b7152ec7-7318-4401-bf31-316b391ebac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a4bbb-b2f8-4a58-894b-97d87ede9c11",
        "cursor": {
          "ref": "7aa296ba-670e-48e5-a5ad-7617f4f0b3be",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d67fe4d1-2447-4f70-9d78-6fdd16b6f121"
        },
        "item": {
          "id": "518a4bbb-b2f8-4a58-894b-97d87ede9c11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38e66e1e-ffee-465e-ba55-143883dcb780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c82f422-06f6-4a4c-966d-b7608045edff",
        "cursor": {
          "ref": "19bd05df-ecde-4b4e-a214-1fb23d497f17",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0b54156a-b06d-4aa8-9083-13452112f3ed"
        },
        "item": {
          "id": "1c82f422-06f6-4a4c-966d-b7608045edff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a9df6874-01e2-4cd9-8505-63a68e308909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d787319-8636-4d70-96d0-4ec44f2569d6",
        "cursor": {
          "ref": "5e0f2eca-92e8-4c75-b41d-2346258d092b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d0a8fe16-12b1-4b4f-a53a-7ff8374ce9d7"
        },
        "item": {
          "id": "7d787319-8636-4d70-96d0-4ec44f2569d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e57e2c4f-c9ab-46f7-bb2e-feb57f79d767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330fe073-c909-4430-9b62-109e14244e4a",
        "cursor": {
          "ref": "84c52f6b-2083-47ad-8d82-c569d407bd38",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "327cdb3d-4213-421a-bdff-8b36dd2c714d"
        },
        "item": {
          "id": "330fe073-c909-4430-9b62-109e14244e4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "98678ec0-cf2c-494a-a236-c448256473d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638d4db-1b61-4d13-b3fc-915460030fb3",
        "cursor": {
          "ref": "a094a8ca-571a-4852-b454-a652af982f0c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4d5009f0-2017-46bd-8339-9576babf0edf"
        },
        "item": {
          "id": "a638d4db-1b61-4d13-b3fc-915460030fb3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c5ad82a3-214e-4328-ba7d-bbf931701f93",
          "status": "Created",
          "code": 201,
          "responseTime": 1873,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "9fdf1a1a-395a-442c-a91a-177364874a15",
        "cursor": {
          "ref": "616be7f5-dbeb-4311-a2eb-e9aa70df4627",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f14780a-f9c5-47f0-9f76-1e66a1ceffbc"
        },
        "item": {
          "id": "9fdf1a1a-395a-442c-a91a-177364874a15",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "25c2fe95-5b26-4600-8cf9-597a7766bcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a87c1c-c876-4bcb-a10c-efa9aeb3883a",
        "cursor": {
          "ref": "11e44de6-d211-4192-9fc5-d51de9fbd925",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f397827d-c55e-4a6f-9ffa-47437149b661"
        },
        "item": {
          "id": "21a87c1c-c876-4bcb-a10c-efa9aeb3883a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "67cc8214-2c75-4ae2-8e9b-cafef667f70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c0bb0-1ac0-41f1-a678-af6257ea6469",
        "cursor": {
          "ref": "d98c9ef6-c086-4a5b-b9a2-e8fb7699c7dd",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8452b92-6bf2-4944-b86a-70d2c00a72e2"
        },
        "item": {
          "id": "6d8c0bb0-1ac0-41f1-a678-af6257ea6469",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b8683d1b-eee1-491d-8700-76e7a8987eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da535bd-0ae1-4f00-992b-fa735410e2cd",
        "cursor": {
          "ref": "52d50b20-7dd4-4d4e-b85a-fb47b5ea676c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5458e1fc-ac72-4e65-826f-028cb2b7b739"
        },
        "item": {
          "id": "4da535bd-0ae1-4f00-992b-fa735410e2cd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "70c50c1d-008a-4062-8dff-8a098643d83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1041b277-7787-4b56-9540-41997eabbcbc",
        "cursor": {
          "ref": "9fe22973-c493-4a4d-8221-b79a2afa1573",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9791fb1-d1b0-4e4e-951a-0804a75cd9de"
        },
        "item": {
          "id": "1041b277-7787-4b56-9540-41997eabbcbc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e6bffd37-9902-49b8-b64b-cb853d95ceae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02852eb-4abe-4fbf-9f07-9dccde95b541",
        "cursor": {
          "ref": "881f0b2b-3833-4d33-bafb-6f8713d56dba",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "267050f6-9c05-48cf-9a62-109395f0240b"
        },
        "item": {
          "id": "b02852eb-4abe-4fbf-9f07-9dccde95b541",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c6335561-c445-416e-8a93-c622433332c7",
          "status": "Created",
          "code": 201,
          "responseTime": 1693,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "d5812d78-e326-418d-ab15-bda1dda5e034",
        "cursor": {
          "ref": "7bec861f-7541-4772-bc07-57e236b2b043",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "028341dd-ae24-475d-9aae-8bd28ef3a8c9"
        },
        "item": {
          "id": "d5812d78-e326-418d-ab15-bda1dda5e034",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "18428f57-9ca4-4a74-b101-732b5051b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a628c1-5539-497a-b146-3baf336afb82",
        "cursor": {
          "ref": "c9dfe6c1-da4c-4486-ad85-7cb19f98ed69",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1283a0d0-7696-4200-9923-35d4b0057406"
        },
        "item": {
          "id": "67a628c1-5539-497a-b146-3baf336afb82",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7839ace6-ece1-4c26-89be-cdb610fbe8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee33d9-6620-4a40-ab90-15adbfc42696",
        "cursor": {
          "ref": "c09cc702-63f6-42ed-b9e1-43e8ec9e1bcf",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "674bf75c-ce90-48da-a2d8-105d507a4496"
        },
        "item": {
          "id": "60ee33d9-6620-4a40-ab90-15adbfc42696",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c6658be2-94a2-486c-a36d-cac275775960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a06893-6f46-43e9-be97-dc3367c3dce3",
        "cursor": {
          "ref": "9ae44740-e9a1-4f51-82bc-9111bfc08b71",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1771067e-fdcc-4e44-885e-6dde4a16f02a"
        },
        "item": {
          "id": "76a06893-6f46-43e9-be97-dc3367c3dce3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8e0c014f-4feb-4c56-9a8c-9e0491a8e8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98833362-8f0b-4135-9c34-9889b7b29e07",
        "cursor": {
          "ref": "69def76a-8b86-430b-8ec3-cbbdc46557dd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b4dc48b1-e460-4866-b2b1-7c2ee11ebd1e"
        },
        "item": {
          "id": "98833362-8f0b-4135-9c34-9889b7b29e07",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6742d377-1d0c-4c90-9252-070d84103ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b67a3ca-3f17-4923-8d6c-aa7180bff4fc",
        "cursor": {
          "ref": "57ab22c3-eac5-475d-98e4-26d3c55bc5e1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e6fde0d3-5610-4e26-850b-487daa63954b"
        },
        "item": {
          "id": "9b67a3ca-3f17-4923-8d6c-aa7180bff4fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b8123c6c-0484-41bd-8572-71fed4dc432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6544b8-fd43-4b1e-8548-c3a8e3e65cb4",
        "cursor": {
          "ref": "051dcdc1-cb79-423b-a6e4-aaf7c7507764",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7eaf6529-c5ae-4c01-9d1a-459f4d4c07d0"
        },
        "item": {
          "id": "7e6544b8-fd43-4b1e-8548-c3a8e3e65cb4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "35efe427-75d7-4a98-80c2-720f23d0194d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778728f9-5182-4cb7-a025-b0217e7abaa5",
        "cursor": {
          "ref": "359724ca-5ef3-40cd-819e-5067fef960e1",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cf044ac0-c289-49ac-8e5d-bf886f0b58a7"
        },
        "item": {
          "id": "778728f9-5182-4cb7-a025-b0217e7abaa5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "785bdea7-0699-498b-8701-11b8c55fcb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ad6c7f-1e60-4eff-a955-2d5baed2b044",
        "cursor": {
          "ref": "153a46c2-04b8-49ac-b5d5-760e4a5fd782",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3294772d-f530-424f-9905-f3cdce41b7c3"
        },
        "item": {
          "id": "01ad6c7f-1e60-4eff-a955-2d5baed2b044",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "60cd7949-c3e2-40e6-a23f-cc843ff33f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9895c2ec-47a4-4617-a617-65ab8cf1f3a7",
        "cursor": {
          "ref": "d2cce48c-725c-49ba-b5f2-c1ca5f2acb33",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0890df8b-9bc5-4a37-8817-b601d3240da7"
        },
        "item": {
          "id": "9895c2ec-47a4-4617-a617-65ab8cf1f3a7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "757e2546-c135-401e-86bb-b66020ef17aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55f5aac-97e6-44f8-afba-d4ed07a051f3",
        "cursor": {
          "ref": "e17cfcef-9c10-4645-9016-ac7de9af10bc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9f7cddeb-8191-4529-8916-b98f96885883"
        },
        "item": {
          "id": "e55f5aac-97e6-44f8-afba-d4ed07a051f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f8d3a90d-e407-47cc-a27a-68bf29d96e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b4cad8-74e8-4c4f-9230-b93ea07e42e2",
        "cursor": {
          "ref": "1bd13060-c068-4961-926f-347b9b772e04",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0a2fc3eb-302e-46ae-b0e7-c2c39374e6e2"
        },
        "item": {
          "id": "e6b4cad8-74e8-4c4f-9230-b93ea07e42e2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f2b89cdb-5bb0-426a-8e2f-c3b90c825f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0693bbd8-43fe-4d6e-b1d0-b69371b11871",
        "cursor": {
          "ref": "23afa624-cbbe-43d5-bc76-f5a9c25de228",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4b16e413-be6a-4131-8800-bd301530a8d5"
        },
        "item": {
          "id": "0693bbd8-43fe-4d6e-b1d0-b69371b11871",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5773965b-1b7b-4fda-b26a-11a910ed59de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcd0d5e-ebfb-4b40-a006-270f7a74abe1",
        "cursor": {
          "ref": "312d077c-0307-4ea7-bed6-4134780d3055",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a2e488fc-a3e9-46dc-a027-3b9e1367e241"
        },
        "item": {
          "id": "bbcd0d5e-ebfb-4b40-a006-270f7a74abe1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2e646a6f-950e-4d21-98c0-57f061185645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8decc68-1677-4127-a676-42c574af8800",
        "cursor": {
          "ref": "04170b17-989b-4a9e-89c5-dc18d8cc6560",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "330b11d2-91c6-41b5-adb7-5eed9184d0f8"
        },
        "item": {
          "id": "b8decc68-1677-4127-a676-42c574af8800",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c32a1f06-bb5d-4dec-a10f-3fde7170a111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8161122f-4e40-4eb3-87fd-4d752cdec587",
        "cursor": {
          "ref": "f895c861-7862-40b2-b12e-ebf798e78510",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a8f17c02-5863-4241-9d6b-43f26d72de8b"
        },
        "item": {
          "id": "8161122f-4e40-4eb3-87fd-4d752cdec587",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1a4a20dc-946d-4ba1-852c-92fd7ba8bb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f12b89-2714-4869-963c-65f1919a59dd",
        "cursor": {
          "ref": "5b3731d1-24bd-43fd-9781-f41be710791b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6f03a013-b049-4c66-a3be-6e7866614464"
        },
        "item": {
          "id": "62f12b89-2714-4869-963c-65f1919a59dd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ef346f38-342b-4306-8de4-203c617c33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57adcf88-85d5-43ec-b854-068ad5e10278",
        "cursor": {
          "ref": "38a972cc-ecd1-4a8e-8d27-d281eae32871",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "db1eabcf-e86e-4408-92ea-1665f18f707a"
        },
        "item": {
          "id": "57adcf88-85d5-43ec-b854-068ad5e10278",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d5a12a2b-782c-4650-b0ef-adeb778af539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defd28c4-6f8c-4ffa-a0cc-78bf277f073a",
        "cursor": {
          "ref": "d8b22f91-245a-49ee-a152-9a3b8a14583b",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d8a9d6ac-305e-4ca5-9beb-53b239e35884"
        },
        "item": {
          "id": "defd28c4-6f8c-4ffa-a0cc-78bf277f073a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e01a4f2-1feb-43a0-9059-8719d7ed0d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7950a1d1-49a4-4625-a0b8-a67dea6602d7",
        "cursor": {
          "ref": "64ad4ad8-d495-49f0-9fd4-c325e3c3f8cb",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6d34739b-003c-4163-9f47-d32a21794a87"
        },
        "item": {
          "id": "7950a1d1-49a4-4625-a0b8-a67dea6602d7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2876613f-d132-40a8-a2de-8db817baa744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10ffa5-03a8-4fdd-a8c2-53b4497b6efa",
        "cursor": {
          "ref": "65a1fa2c-d9ba-4983-baea-2ca4671cada3",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f60ce99-e6fe-4329-b842-3ea49d53c273"
        },
        "item": {
          "id": "5c10ffa5-03a8-4fdd-a8c2-53b4497b6efa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d516e3c-8e77-4a82-ae14-d67449e9d9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14114698-7bfb-40f2-99cb-87f3f29d4fea",
        "cursor": {
          "ref": "887e63c2-de40-4edf-a816-2b3b92e2b1c4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8be09b20-bb35-49b1-8af4-5da7d7be16d7"
        },
        "item": {
          "id": "14114698-7bfb-40f2-99cb-87f3f29d4fea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "145d67e9-a900-48bb-9d1a-06248e07e7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85017909-c3c7-463c-a5c5-1891690c8aa0",
        "cursor": {
          "ref": "8233485a-216f-4e49-ad0f-9a1b79b49c7d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "93a70bf9-c7b3-4eda-8fbc-43eafbd2493b"
        },
        "item": {
          "id": "85017909-c3c7-463c-a5c5-1891690c8aa0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d889ef17-3955-47f8-98dd-6104dabe56fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e2d94d-81ca-411a-ab07-ab4e5613000b",
        "cursor": {
          "ref": "8cba3b7d-4086-4a3a-8e2c-eb8b33c7fd62",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e98004d0-b7f2-42a2-a807-f2d4fcdb29af"
        },
        "item": {
          "id": "e2e2d94d-81ca-411a-ab07-ab4e5613000b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ace110da-3904-4230-80e3-c024e2e4985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c4059-95be-4df4-8a86-289bc3a2c405",
        "cursor": {
          "ref": "3080a7dc-22c3-4575-959c-7da8237015c8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "91308fac-f869-4f99-834b-022ce63c0211"
        },
        "item": {
          "id": "9d9c4059-95be-4df4-8a86-289bc3a2c405",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2d8baa4c-f1f7-4326-a939-a31688a2921a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0ad991-46e5-4f25-adba-7707e955045b",
        "cursor": {
          "ref": "b9e85c01-6a60-4b16-a6b6-be38866d7fc0",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dd91a970-8c17-4398-947f-eefe3737f271"
        },
        "item": {
          "id": "cf0ad991-46e5-4f25-adba-7707e955045b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a41660f6-0024-4816-9c9b-8ea5e84786d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 397,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628cb652-f563-4b77-a062-53137b6f980e",
        "cursor": {
          "ref": "250929d7-7d21-4390-ac73-148fb426ae2b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6ce48cd7-e97b-4826-a622-101765875ae7"
        },
        "item": {
          "id": "628cb652-f563-4b77-a062-53137b6f980e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "85b7e852-5519-4702-a418-8d63ff54f79c",
          "status": "Created",
          "code": 201,
          "responseTime": 1765,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0989c80-6524-4f82-8c70-d06332308ae2",
        "cursor": {
          "ref": "d3a058af-a22d-4edd-90dd-d1c517c106a1",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "acff3fc1-4bfe-4ebe-844b-b0c8fa9ee688"
        },
        "item": {
          "id": "c0989c80-6524-4f82-8c70-d06332308ae2",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "0f8adfc1-e88d-4e07-a404-70bd1701473c",
          "status": "Created",
          "code": 201,
          "responseTime": 1785,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a811047-a13a-4f22-98ca-52dd0760fa69",
        "cursor": {
          "ref": "599496f7-8c5d-4921-be55-c77ccb76047a",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f37668fd-e023-4cac-81d0-1e457ff791ac"
        },
        "item": {
          "id": "9a811047-a13a-4f22-98ca-52dd0760fa69",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1aaae8b3-4c94-4f7a-8955-19bad55560d8",
          "status": "Created",
          "code": 201,
          "responseTime": 2394,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2258af0d-437b-4941-80bf-e80eef765e09",
        "cursor": {
          "ref": "d7a30557-9b3d-476f-bd9a-494b0c0f2601",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3030a853-c075-49b2-9e26-10b4ba85a850"
        },
        "item": {
          "id": "2258af0d-437b-4941-80bf-e80eef765e09",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d608f97e-6b67-4d00-8307-ea287653958b",
          "status": "Created",
          "code": 201,
          "responseTime": 4299,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28ec0e4-6327-4ad4-8114-59464d9aa77d",
        "cursor": {
          "ref": "2852b93f-dcd1-49a1-b2ea-d35392316335",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a824dc80-184a-4a7a-93eb-e93de05695e3"
        },
        "item": {
          "id": "c28ec0e4-6327-4ad4-8114-59464d9aa77d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dd085ebc-cf35-45e4-8fdc-32a143e3f58f",
          "status": "Created",
          "code": 201,
          "responseTime": 2222,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a01cdc-039b-4b44-a08f-a68da951ca78",
        "cursor": {
          "ref": "a4df4604-44e4-4d70-a2cc-6876b00e6b74",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "88a6fcb6-0663-4deb-b16b-5ece1f0db922"
        },
        "item": {
          "id": "d3a01cdc-039b-4b44-a08f-a68da951ca78",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "12b85829-c558-448c-a3f7-5b722d92bbf1",
          "status": "Created",
          "code": 201,
          "responseTime": 2253,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d77b3b-fd66-460d-a397-cca251302173",
        "cursor": {
          "ref": "5ac181bf-90aa-4c46-8349-d2dac3177a0c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51574603-1032-42c0-aa3f-123df0f7d687"
        },
        "item": {
          "id": "12d77b3b-fd66-460d-a397-cca251302173",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc7a850f-027b-4704-bf1b-a8a4d4e716c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d77b3b-fd66-460d-a397-cca251302173",
        "cursor": {
          "ref": "5ac181bf-90aa-4c46-8349-d2dac3177a0c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "51574603-1032-42c0-aa3f-123df0f7d687"
        },
        "item": {
          "id": "12d77b3b-fd66-460d-a397-cca251302173",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cc7a850f-027b-4704-bf1b-a8a4d4e716c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f4621-359c-4821-a8b5-16198ad00094",
        "cursor": {
          "ref": "8a0221fe-dbab-49bc-868e-ea1bd0f8b220",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "49a4b8ac-539b-43b3-afe6-95bc1ee00911"
        },
        "item": {
          "id": "687f4621-359c-4821-a8b5-16198ad00094",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed6b4844-a004-4cde-925c-e2d7f338f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b3e32-a12b-42de-add9-3c5656e1f82b",
        "cursor": {
          "ref": "b99f6c19-dbe9-4bcf-bbde-ca5ce29db2d8",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "514c5a90-41df-48c0-98eb-912e87cc673a"
        },
        "item": {
          "id": "844b3e32-a12b-42de-add9-3c5656e1f82b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f8bec49b-d51f-453a-9ece-b427e54ec690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62668eb8-7ab6-4c38-906b-bbc3d61a18cd",
        "cursor": {
          "ref": "52cd8a17-2ab6-4e0d-8a0d-06348a29e357",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c29df889-dc65-48a0-a67b-1c7eff1e52f3"
        },
        "item": {
          "id": "62668eb8-7ab6-4c38-906b-bbc3d61a18cd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6c778657-d26b-412f-b1b8-d97308a9e887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bc51ac-ebd8-450b-91ce-af25d7f8c98c",
        "cursor": {
          "ref": "902aea1a-2a77-44cc-aa52-b5c21a6c6259",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f9f281a6-18da-48e6-9f47-d27c19aee50b"
        },
        "item": {
          "id": "04bc51ac-ebd8-450b-91ce-af25d7f8c98c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6a5e049-21ed-4a80-9b94-07007a0d1923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af2d829-0274-4848-b9e1-9e0498e39268",
        "cursor": {
          "ref": "62e3f5d8-884a-4ab4-ab9f-d144db5122d4",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "159959bc-b3bc-48f4-a945-0bad4a8efa9a"
        },
        "item": {
          "id": "1af2d829-0274-4848-b9e1-9e0498e39268",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5b193e03-8bcb-4c70-83a4-bed11222bab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8452cb9f-f50b-492a-a8be-85e22029f215",
        "cursor": {
          "ref": "9f5e4037-eeb3-4589-941b-c2cfa427cbea",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "acb21b8f-1d7d-460d-b548-3c1ffc3e8858"
        },
        "item": {
          "id": "8452cb9f-f50b-492a-a8be-85e22029f215",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aee856b5-46f0-41bd-b36b-fbdfa7a2e6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3edc60-aa9d-45b4-b4f5-db31ec6cc295",
        "cursor": {
          "ref": "51a5f05b-43ef-4306-aaad-bd8671f5ef20",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "aa2bf27b-84d9-46f2-b27f-b868b721a401"
        },
        "item": {
          "id": "7c3edc60-aa9d-45b4-b4f5-db31ec6cc295",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e077b04b-8ab3-4ea1-85ec-c9f2fd62cc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030ac5e1-8f27-413e-8003-a0c01e093f53",
        "cursor": {
          "ref": "7a3c7fe5-6f34-45cd-a37d-1fea30b5b5bf",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fd6e21f0-1d49-42a4-81f4-ee35f994020f"
        },
        "item": {
          "id": "030ac5e1-8f27-413e-8003-a0c01e093f53",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b7218c10-754f-4aa1-a34b-b56baab71d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5605d31e-dc9b-4530-bd9f-5789b86d8adf",
        "cursor": {
          "ref": "a44baa36-853f-453f-b124-b92fe26ee230",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7f2de347-edee-4c0e-9f42-4e455717b824"
        },
        "item": {
          "id": "5605d31e-dc9b-4530-bd9f-5789b86d8adf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "422683af-7688-4d62-9d9f-557cca243dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0c8291-5658-46ce-8a37-eb2a69f1f5ac",
        "cursor": {
          "ref": "ce076347-08b1-41e0-a5f7-5dc885d345ee",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6e6bbdf9-9765-4abd-9b99-cbe65c27b8f4"
        },
        "item": {
          "id": "6e0c8291-5658-46ce-8a37-eb2a69f1f5ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b3dbc71-7008-4847-a266-607f41114d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37071772-51c1-4b3c-a20e-f0d4b9cab3cf",
        "cursor": {
          "ref": "c33096c4-cdc0-4f6c-b00c-ed4b91f3d6ea",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b6dcc85-bd8b-42d2-9268-b89c32831e80"
        },
        "item": {
          "id": "37071772-51c1-4b3c-a20e-f0d4b9cab3cf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a01659d9-cc69-4d88-ac7b-7454b62fba66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cc14f2-8f68-4e54-bee9-0af4358b4a5c",
        "cursor": {
          "ref": "c430680e-d758-44be-88a2-19252b821a07",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "02568177-ed22-4631-9c30-749f1c9bc1af"
        },
        "item": {
          "id": "00cc14f2-8f68-4e54-bee9-0af4358b4a5c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10207c05-e0a4-4f13-b661-a456cb87f9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578fbaed-1ede-4029-a5de-cfab114a37f9",
        "cursor": {
          "ref": "ca2c7604-5902-41f0-ad4f-9b55da968b8e",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "767b58c0-5f86-4f4e-ba05-b18e2247affc"
        },
        "item": {
          "id": "578fbaed-1ede-4029-a5de-cfab114a37f9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d6daf68d-f724-4e2f-b94a-e1157e0c6380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb8ec9-4c0b-405e-8dca-e3917f880348",
        "cursor": {
          "ref": "316e002a-5db9-4aaf-ab55-b8d200dcd41f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b0d2339-a7a1-4166-b545-c260bfddb95a"
        },
        "item": {
          "id": "9bdb8ec9-4c0b-405e-8dca-e3917f880348",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c99705c2-65cd-4014-8b3f-410d9e626fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee63787e-fc6d-41e4-bdae-98de510c1e55",
        "cursor": {
          "ref": "7812d8be-be2e-4f81-89fd-e517b5b8545a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c2a427f9-82aa-4868-8413-a153e394f9db"
        },
        "item": {
          "id": "ee63787e-fc6d-41e4-bdae-98de510c1e55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ec97c72-da39-447d-91bf-dbde3fb2f13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886ee16d-383a-4038-99d6-ede997e9ccd7",
        "cursor": {
          "ref": "fddfcdcd-a0be-4e65-95bb-af508f067d00",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2c99d7b6-060c-4d7c-8c3a-59cf79321907"
        },
        "item": {
          "id": "886ee16d-383a-4038-99d6-ede997e9ccd7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "414363ad-267b-4b05-9146-1044d885f5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886466a5-44ab-4892-b1cf-2c69d3ca981b",
        "cursor": {
          "ref": "14ce59f8-4c4c-4893-9726-d7ebb905379a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5cc0ef0f-0479-4ee9-9ded-f75409b6eae4"
        },
        "item": {
          "id": "886466a5-44ab-4892-b1cf-2c69d3ca981b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "776745f7-b38f-4f8b-bfe7-691cacc9b6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df544b3-06d7-4b7c-a93b-5d5ae28f3194",
        "cursor": {
          "ref": "5d525722-9168-4335-ae36-08c5cb26a0bf",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3cf26bc-d844-41ac-a11d-700b53a4bec4"
        },
        "item": {
          "id": "6df544b3-06d7-4b7c-a93b-5d5ae28f3194",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "32c0af32-a79e-4f68-aa82-31e104294be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe59bcd-0fe8-4ebd-8b93-de90cf571952",
        "cursor": {
          "ref": "481ad8c6-a803-426d-958f-81f945bffc4c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7dcae299-cf25-447c-a669-4bd94ec5e56c"
        },
        "item": {
          "id": "cbe59bcd-0fe8-4ebd-8b93-de90cf571952",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f29283c-be00-4ce8-9440-9d11952ea331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83932b-5a0f-4ef2-890c-9f0e4149ae9e",
        "cursor": {
          "ref": "d1adfaf4-c1fc-4235-9090-95e85f79710d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "686a4c77-a544-4622-8a3e-7d10f0c4efd9"
        },
        "item": {
          "id": "df83932b-5a0f-4ef2-890c-9f0e4149ae9e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cd253d2b-6f1d-4ca2-bc67-703e22498ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1a429-99a5-4e2d-9c78-664325282b83",
        "cursor": {
          "ref": "4f4daf1d-4266-4b7b-b9aa-47463f778a5d",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "17f157fb-2e7b-4278-9e74-a1e1baaba3cd"
        },
        "item": {
          "id": "b9b1a429-99a5-4e2d-9c78-664325282b83",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "46bfb27b-e695-499a-9e8f-49cfc29cd863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac64ccc6-8c59-4846-ab54-a9c3d05ed2ae",
        "cursor": {
          "ref": "133f522f-3846-4e2d-b9aa-b6b07120b551",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f6880d3b-9383-4766-9a57-912b63c32511"
        },
        "item": {
          "id": "ac64ccc6-8c59-4846-ab54-a9c3d05ed2ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a285fea0-d6f4-45a8-af0e-631dbd293af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96debe0c-ab40-4fcf-9f2e-e07fe5605f59",
        "cursor": {
          "ref": "043f9424-f55a-4047-a2c4-b7e955cb3ac1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4078fad1-187a-45ba-b91d-9e98e4ff13a1"
        },
        "item": {
          "id": "96debe0c-ab40-4fcf-9f2e-e07fe5605f59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "91c312cc-4e80-4087-a0ee-a5a8137b2200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fec1445-bdc2-4df1-ad58-98f6206efc30",
        "cursor": {
          "ref": "07828103-0613-464f-a55e-3cf1639243e4",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a1077cff-fd89-49a3-87ea-533bfdcff90c"
        },
        "item": {
          "id": "0fec1445-bdc2-4df1-ad58-98f6206efc30",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7010d570-73ca-41ec-b19a-cb9bdfe7a57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6698d96-9e71-438a-b431-ce9b2679a3d9",
        "cursor": {
          "ref": "8b3d7bca-1f1c-4013-b4ce-aa9949ace70b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4f66c1fd-3783-41e2-bef9-ddc3e80b1895"
        },
        "item": {
          "id": "f6698d96-9e71-438a-b431-ce9b2679a3d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "218c7e88-2f1a-4aef-87b3-86b1d149988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfa46af-0de6-446f-8158-9548ff4da90c",
        "cursor": {
          "ref": "ded51dd6-7473-486f-a74c-bd9411fb6ddd",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "12c08ea5-ad19-4be1-a5d0-2c9161e8b6ee"
        },
        "item": {
          "id": "4dfa46af-0de6-446f-8158-9548ff4da90c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41b49365-4f87-4611-9d94-69a6a8290404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c4461-def3-4dbb-8e04-a4c523e4a779",
        "cursor": {
          "ref": "f62b3e10-96b1-4579-bb52-04f1c0d387ac",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d711d6d-5508-45d3-92f5-453f763fd6ea"
        },
        "item": {
          "id": "b01c4461-def3-4dbb-8e04-a4c523e4a779",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "711951b8-81e5-46b0-b4a4-7e3a1afb79d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada8fb82-5653-4cd7-a276-d05bb3ad7515",
        "cursor": {
          "ref": "bcb68b70-f3aa-4647-aed8-eac207a7b836",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "23f93f17-e223-40ad-8fd9-f2d63605d7c4"
        },
        "item": {
          "id": "ada8fb82-5653-4cd7-a276-d05bb3ad7515",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b22ccc78-e27a-41a4-b7fe-f71ad56ad8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481faefd-c888-4765-a91c-ce55cfa6b019",
        "cursor": {
          "ref": "75954708-de05-4eab-b7ae-f8e6b0a3c2f0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "28f14e5c-e7fd-4e06-af9c-5fcd5f8d44fd"
        },
        "item": {
          "id": "481faefd-c888-4765-a91c-ce55cfa6b019",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9390757a-17bd-4fc5-aa62-60c929454161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed78979-9fa4-408b-a854-2599c922159e",
        "cursor": {
          "ref": "c5473e05-21be-428f-9224-c50717f7bfc0",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ceacf46-f342-48ef-b7f1-f4d5d12f1fd3"
        },
        "item": {
          "id": "1ed78979-9fa4-408b-a854-2599c922159e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "34d3299a-d69a-4454-9845-6f31384d0432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaf6b5e-1aa1-4762-8d14-116ee66a3a93",
        "cursor": {
          "ref": "d481f131-3004-45b4-a381-0b967cd3dfb8",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "db5469a9-1c45-459b-8266-0ba8a7afff1f"
        },
        "item": {
          "id": "4aaf6b5e-1aa1-4762-8d14-116ee66a3a93",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1044e226-c341-43b2-81bc-c37a1e0681bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa196b6-09a5-44b7-99f2-4e7463f873f6",
        "cursor": {
          "ref": "da5cb283-65f7-4521-8e7e-e7e7b6f0761d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bd214034-a858-4ed2-8851-70b86ceb9d7b"
        },
        "item": {
          "id": "0fa196b6-09a5-44b7-99f2-4e7463f873f6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ea1b3c2-2977-47b2-8460-d9345b0964c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf13fc-f307-431f-8d30-4ecf9190f58a",
        "cursor": {
          "ref": "feeb923b-1c6e-4741-aefb-08539478eadc",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ddddf619-e96a-475f-880d-a7d5f9221f7a"
        },
        "item": {
          "id": "efbf13fc-f307-431f-8d30-4ecf9190f58a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4d282576-2413-40a2-b0ef-31d68018cde7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 396,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45997139-00fb-4d49-adae-fd875143a9b2",
        "cursor": {
          "ref": "53bc71aa-d602-46f3-a8b8-3185c0f86001",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a88e10c8-f8e1-40dd-af5e-c19bb49088f9"
        },
        "item": {
          "id": "45997139-00fb-4d49-adae-fd875143a9b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9336b52e-6d6a-4d20-a78e-689b4be28db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45997139-00fb-4d49-adae-fd875143a9b2",
        "cursor": {
          "ref": "53bc71aa-d602-46f3-a8b8-3185c0f86001",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a88e10c8-f8e1-40dd-af5e-c19bb49088f9"
        },
        "item": {
          "id": "45997139-00fb-4d49-adae-fd875143a9b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9336b52e-6d6a-4d20-a78e-689b4be28db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df49310a-2290-4ff4-bad0-70879f059571",
        "cursor": {
          "ref": "9bcca186-4214-4726-9c4c-a1294bb54918",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "34b53bcf-e890-4a82-9a82-f53942032e7a"
        },
        "item": {
          "id": "df49310a-2290-4ff4-bad0-70879f059571",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "521e60ca-564c-4eb5-bf81-97a90aff6e92",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 207,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8711882a-af10-4581-beff-65f66d5fcb90",
        "cursor": {
          "ref": "3171e5c0-c896-4d0f-b062-483ba3dee2b6",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0781c6d7-8daa-4316-a225-2518b4b8e6a2"
        },
        "item": {
          "id": "8711882a-af10-4581-beff-65f66d5fcb90",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a5f3ce1-3625-4a4c-a3aa-fd6ff231f0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1477a13-6e1d-4a3f-99f0-c7be870e0125",
        "cursor": {
          "ref": "849227da-2cd9-4bda-9bb8-f64758d50826",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e746d90-42a4-45e2-89b0-66412ba5afd1"
        },
        "item": {
          "id": "d1477a13-6e1d-4a3f-99f0-c7be870e0125",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aec6ba8b-aae1-4dcf-aa72-0a4baad00cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966004cb-2b0a-4a9b-8af3-3c433561c4ea",
        "cursor": {
          "ref": "09fc216b-d48c-4eb7-91ad-dbca9a898bd0",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0f6baa05-183c-4e95-9048-2fa076793963"
        },
        "item": {
          "id": "966004cb-2b0a-4a9b-8af3-3c433561c4ea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "599ed3a5-65d6-4e7a-be01-94b28da40ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb2e2bc-90dd-4ab6-aaa0-1ab235232454",
        "cursor": {
          "ref": "b3fbb6e3-7f28-428c-af21-c37dcb050df3",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ea5eb55e-c218-4b1b-8665-d79bed998227"
        },
        "item": {
          "id": "7bb2e2bc-90dd-4ab6-aaa0-1ab235232454",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3a21b0ef-e401-475e-a082-d69c67ef8372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5f5c7-1421-4aca-8c1b-471a93b6471c",
        "cursor": {
          "ref": "e8df2d8d-3cb0-47ac-9cac-6f2c7130718b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dfb2edfd-6a4c-4ada-b1dd-f622b3a39ffe"
        },
        "item": {
          "id": "b8e5f5c7-1421-4aca-8c1b-471a93b6471c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "89f2faad-1f27-4ec8-8d5a-ea6f3008cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaaff56-5465-4408-b772-a904a40c9eda",
        "cursor": {
          "ref": "c1c7fca0-d7be-4d9c-b123-ec4858d30fa9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "331b1454-6348-453b-bada-eb02108b41e4"
        },
        "item": {
          "id": "beaaff56-5465-4408-b772-a904a40c9eda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "19775003-cd50-4397-88b2-425b7f5976cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d07eaa-16be-44c5-9884-d6e059dfc694",
        "cursor": {
          "ref": "8b739570-64dd-4a96-bd42-176a9b918038",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2a403893-210a-440b-b9f7-b9657f5f920a"
        },
        "item": {
          "id": "b9d07eaa-16be-44c5-9884-d6e059dfc694",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c4c1de91-c665-4a8e-aa8f-dc5bbe3715ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b3697f-3533-4a1f-a013-d49ce50e0c5b",
        "cursor": {
          "ref": "104f7f2e-0743-4a95-ad3c-b43ae099758c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "07c107a1-7bb5-4648-b264-b76b4d8ac08c"
        },
        "item": {
          "id": "54b3697f-3533-4a1f-a013-d49ce50e0c5b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c95bc06d-6405-4d9e-8146-ae6f55e365ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9c92e6-f4b0-43c9-a942-6aedfdeee063",
        "cursor": {
          "ref": "5860c808-b644-4157-9b69-6f0266a1df6c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f6fbf20-35d3-420d-8a04-0436b3b53cb4"
        },
        "item": {
          "id": "8d9c92e6-f4b0-43c9-a942-6aedfdeee063",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24bce685-9d88-4238-8a68-63c414c8b250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99678cab-f0c4-4ed5-a587-5c069fb7d723",
        "cursor": {
          "ref": "867364c5-f29c-4db6-b183-12e732086084",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ebed2e81-e045-4bb9-b2c8-4b3750a3b9a7"
        },
        "item": {
          "id": "99678cab-f0c4-4ed5-a587-5c069fb7d723",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "67362b75-8fcd-465c-8141-9af6edab3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c955789-c9c2-4782-a1bd-b1602e915272",
        "cursor": {
          "ref": "ddc5b3e4-c09d-4d57-b326-91687f98c7cc",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3b96a5e1-f8c0-4a58-9f86-6f9fb6307dbe"
        },
        "item": {
          "id": "5c955789-c9c2-4782-a1bd-b1602e915272",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b0be3c2b-0660-4bfa-843b-d2293702b7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b418dff-d893-4c4d-9c47-a168b0356fc7",
        "cursor": {
          "ref": "2a902625-a548-4e42-a095-42bc644dc167",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18f060bf-6d0c-4dcf-b552-6b314177a9ff"
        },
        "item": {
          "id": "2b418dff-d893-4c4d-9c47-a168b0356fc7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a26c136c-3a5a-4883-97b4-70e091f5068b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce9aa98-be2b-46dd-802a-925738c4b59b",
        "cursor": {
          "ref": "59ecd7c5-713b-4d1f-93c4-891938e97c96",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "55e6afef-2fdb-42cc-bfdc-4923045b6f3c"
        },
        "item": {
          "id": "4ce9aa98-be2b-46dd-802a-925738c4b59b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b6944c3b-da43-470a-9a43-1666752dd8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016c6c02-e787-47e2-8098-6bbc15989f42",
        "cursor": {
          "ref": "29b2fcc1-6333-4e7c-9f5d-c1de73feca7e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8bc80f9b-140e-446d-820d-1460a1740b81"
        },
        "item": {
          "id": "016c6c02-e787-47e2-8098-6bbc15989f42",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "faef3888-d7c0-4ef9-9a55-4d33d173c76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00436a80-ddd0-4a38-8301-290221bd1e8e",
        "cursor": {
          "ref": "e81fa50c-0d77-4247-97d9-bb2ec8e2c9bd",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "882ca010-1d25-4681-b734-8e8dbc51f458"
        },
        "item": {
          "id": "00436a80-ddd0-4a38-8301-290221bd1e8e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9dcf621a-0a11-4d23-8821-e6b8afdec63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282d2784-e91c-4100-8904-0ad4e26426a6",
        "cursor": {
          "ref": "bcd54d7c-5b4c-4add-99cc-a0a3efe1b763",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e3c114a7-b8d0-4a7d-a809-8c7c54dd7e5e"
        },
        "item": {
          "id": "282d2784-e91c-4100-8904-0ad4e26426a6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8e3a599-6551-4d88-8dce-8455269ec93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7cd687-2ffc-4678-9f1b-9e7de78092f4",
        "cursor": {
          "ref": "d96d6f28-6de0-4d80-9678-5a7abe6e4314",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7aadace2-cea7-41d5-bc44-175d3bb1f0e0"
        },
        "item": {
          "id": "4d7cd687-2ffc-4678-9f1b-9e7de78092f4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bfa2a7b4-70df-4fd7-aa8d-aa7edf45bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0681e6c3-e435-4c51-9860-9eb296e53ac0",
        "cursor": {
          "ref": "2dfc22b0-0053-4206-b280-d2424db5688f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "acea32d9-b2b2-484e-86f2-a1d1ad2221e3"
        },
        "item": {
          "id": "0681e6c3-e435-4c51-9860-9eb296e53ac0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7558532d-fc83-47c3-8723-e8bb1bbbc1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1f4b8e-68aa-42b2-9f0e-b2858b369866",
        "cursor": {
          "ref": "fd43fec1-b78a-4b5a-8c61-5e85b49b705c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1eb6a189-cab2-454c-9889-85201e07d245"
        },
        "item": {
          "id": "ac1f4b8e-68aa-42b2-9f0e-b2858b369866",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b378e42-5e6f-4d99-bbe6-a1c99d4383ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba2a86a-b58e-4463-aaad-a15d90734245",
        "cursor": {
          "ref": "a13039b6-f0cd-45c0-a281-f982c22c0dd4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "307252f7-7a9a-425f-9520-d0ac45a5a764"
        },
        "item": {
          "id": "9ba2a86a-b58e-4463-aaad-a15d90734245",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50b4f736-cdd0-4315-8c85-0f49bc2a5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d53f1a-cbf1-46dc-b747-12d900a42d42",
        "cursor": {
          "ref": "aee29a55-cbbc-4047-9e88-5ab25e1a18f6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "51b5777c-b939-42c9-b3a5-df2fe0f0e112"
        },
        "item": {
          "id": "93d53f1a-cbf1-46dc-b747-12d900a42d42",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c9b2f1e-1b24-4d86-9969-648888832087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af96680-e271-43b1-acbe-765faad31321",
        "cursor": {
          "ref": "e400b1d9-f7ef-43b5-b991-b699e390c363",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "acff1bcb-77aa-4767-94ed-7e87c77ee718"
        },
        "item": {
          "id": "5af96680-e271-43b1-acbe-765faad31321",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e3015a07-1905-4479-bd12-b89554bc1799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa50114-74f4-4b06-984e-f3107eed55ef",
        "cursor": {
          "ref": "f4a687ed-e550-4eba-a793-0fb2c9ceb5c6",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8c5e91c-887d-4575-82dc-e47af85e386c"
        },
        "item": {
          "id": "eaa50114-74f4-4b06-984e-f3107eed55ef",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2a4583ec-6133-4af6-aac6-eedd04a55d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027a4983-adc6-458b-83cb-35b999b58936",
        "cursor": {
          "ref": "d1915a7b-addf-435f-a993-2c165e201f6f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3718b225-e6ad-4fe0-9d75-6d761cc065b8"
        },
        "item": {
          "id": "027a4983-adc6-458b-83cb-35b999b58936",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "be192405-ff32-47e5-a796-7065d4a01889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f09236-163d-43e0-974e-99d18c7162bc",
        "cursor": {
          "ref": "709c99cb-9168-426f-9519-be8df73effee",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1b7c7724-4c1a-4acc-ac52-565dc1e5e5ac"
        },
        "item": {
          "id": "22f09236-163d-43e0-974e-99d18c7162bc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a48d160c-d550-4c8c-9515-fce57fc3783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94597075-0909-42b0-8b72-5a507f593d3a",
        "cursor": {
          "ref": "fe086cf0-e6d9-45a4-bfa5-15dd433cc41f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1291d5e9-ca8a-45c6-a45f-4b4fd260696c"
        },
        "item": {
          "id": "94597075-0909-42b0-8b72-5a507f593d3a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ea04d976-919f-4d10-9e52-b16bfe874df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02243bad-265d-47a9-9f82-b677d06e96f3",
        "cursor": {
          "ref": "aef7ceee-72f5-4b32-b8c1-d58a4f93e520",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c0344af9-26fa-4027-8a17-c294b533f7ff"
        },
        "item": {
          "id": "02243bad-265d-47a9-9f82-b677d06e96f3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "469fcfe4-36f1-4d79-a059-85408c0986f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494208b5-ffbd-4bc5-9b45-27851e515f92",
        "cursor": {
          "ref": "d863c35e-1679-4490-94a5-063a16eaed47",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b0a50cf0-be7f-48df-b69e-6c119374d1d1"
        },
        "item": {
          "id": "494208b5-ffbd-4bc5-9b45-27851e515f92",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eb079fcb-fc23-4c97-8709-0f3b86f710f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bb9156-b35d-4ea4-a584-4dc5735f6041",
        "cursor": {
          "ref": "7c66199c-c024-4273-9336-906faf9b1748",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6fc9f9f0-cf0b-4678-8c0b-f0a54c67ea96"
        },
        "item": {
          "id": "f6bb9156-b35d-4ea4-a584-4dc5735f6041",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77cfc43a-8238-4ea4-b694-dee82ada30a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5cea79-346a-41ab-a9d7-a4bc6d89256c",
        "cursor": {
          "ref": "b42ee261-aa4e-4003-8f94-e70e45a9751a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a4d4808b-9367-4833-84ba-841a1c272353"
        },
        "item": {
          "id": "cb5cea79-346a-41ab-a9d7-a4bc6d89256c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a1e4fac9-e9b3-4dec-8ced-81f240e234d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd45f0e5-3c2d-4013-b6f0-00448be49274",
        "cursor": {
          "ref": "61bd7035-a789-44f8-8611-af19fa19296e",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c9be564e-d056-4b31-b4dc-2ff291f922e8"
        },
        "item": {
          "id": "cd45f0e5-3c2d-4013-b6f0-00448be49274",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6a44baec-9762-473e-99d1-1313fb1d10c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88def26-f1bb-440e-acb6-0647f949ec6c",
        "cursor": {
          "ref": "97b86212-e4b9-4fd2-b078-ae9f8a3a632c",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a1cb0e1c-f7ad-48d7-bd1a-ad24b2fdcbfb"
        },
        "item": {
          "id": "f88def26-f1bb-440e-acb6-0647f949ec6c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "250f73b3-b87e-4585-ab15-716751ee2bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622fc0a6-b80c-4b39-89f9-822eeb89d516",
        "cursor": {
          "ref": "f630d6f6-8745-4b1c-8800-25815e6d2e96",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fc2acb03-5993-4eef-b9d7-fb403be24ec3"
        },
        "item": {
          "id": "622fc0a6-b80c-4b39-89f9-822eeb89d516",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "637c8fe1-0372-4118-bb2c-6efe500861d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a57209-e329-4f3d-bab9-c91f0a097f62",
        "cursor": {
          "ref": "56195069-bff1-4f6a-8aee-db93330a8bcd",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "009ea15e-e2f4-44ac-b65b-ce06d66bd0d8"
        },
        "item": {
          "id": "c8a57209-e329-4f3d-bab9-c91f0a097f62",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0ea8b55f-b35f-4e64-b363-1826e0195984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cee885-2cf9-43c1-9a2a-fcfcadd342d8",
        "cursor": {
          "ref": "8d975c7b-bc73-465a-961b-249fa89f870b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4b95689b-2573-4c40-9e02-722559394e9c"
        },
        "item": {
          "id": "f5cee885-2cf9-43c1-9a2a-fcfcadd342d8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "33f1f6cf-72b7-48ca-8f61-941ed7136122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5a3a7b-2a51-4882-a519-7519e5513bb7",
        "cursor": {
          "ref": "f064c956-ff05-45f4-9267-a3f923b53ea1",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "799c9be8-0656-4e75-a8e4-64a9048fb62b"
        },
        "item": {
          "id": "6c5a3a7b-2a51-4882-a519-7519e5513bb7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20a18b69-9620-42f6-a942-1d0789b9a2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e5808b-903d-4900-b484-fc0050c7a662",
        "cursor": {
          "ref": "41dc00d9-0441-48c0-abc6-fd0dbb0ba519",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "87d629dd-d816-42fe-9e21-f7174c944c78"
        },
        "item": {
          "id": "d2e5808b-903d-4900-b484-fc0050c7a662",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12cf7198-d2b3-42e9-8c31-d875eb0f02cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573f499d-2221-405d-a931-1ec792e184aa",
        "cursor": {
          "ref": "936a3124-c0d4-4824-9f6b-082515bde448",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8755b30f-94c3-4524-a108-d8482e2f9fe8"
        },
        "item": {
          "id": "573f499d-2221-405d-a931-1ec792e184aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b0705235-b59f-4de9-8c0d-d58d4141d94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066c670c-33f3-4358-8e39-6dcdae64eb11",
        "cursor": {
          "ref": "54939bce-7a00-4fac-a124-f6aefae7e62b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0925e113-2ba4-432b-9f93-682d913bbbc3"
        },
        "item": {
          "id": "066c670c-33f3-4358-8e39-6dcdae64eb11",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "115ec2ec-4170-4b19-a157-89739c0f6d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040140a2-4720-4f58-a197-afac78ac440c",
        "cursor": {
          "ref": "580363b3-e808-4333-abae-608c025e79f7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "639a8382-17ba-44eb-83f8-6f69c12eaffb"
        },
        "item": {
          "id": "040140a2-4720-4f58-a197-afac78ac440c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "68337ff1-1d38-4802-811d-895648776702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92847f6d-a876-4182-a67f-cfd80035e66e",
        "cursor": {
          "ref": "eb3610a9-390f-417a-bf2c-3e39225e63d3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "858ec449-6787-435f-ab8f-9f16c643d0ed"
        },
        "item": {
          "id": "92847f6d-a876-4182-a67f-cfd80035e66e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0cac3870-5f4f-4745-9970-5e827c0c013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f2b8d8-cb6a-4e17-8797-49ee24d3059a",
        "cursor": {
          "ref": "2f2e61fc-36ab-4f2f-81e5-c18a50b5b75c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a7c26f94-1892-469b-9259-43defa277ef2"
        },
        "item": {
          "id": "d5f2b8d8-cb6a-4e17-8797-49ee24d3059a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3b15db88-cf09-4e37-86b7-2cef1d84279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f555f8-01f8-4a66-b537-f23ec49eb36c",
        "cursor": {
          "ref": "24057915-f7a4-4b53-ada3-6e2707a0796b",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a6940673-80e1-41db-8ede-fcc9217bb26a"
        },
        "item": {
          "id": "65f555f8-01f8-4a66-b537-f23ec49eb36c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d05004c-7a3d-4f82-968b-b9fc6794f130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ee2254-6c56-4e74-a1ac-d836606872d9",
        "cursor": {
          "ref": "94152482-80f8-4a2a-b505-872fb935b2b8",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9221b9be-9eb2-4ed4-9066-8ee44589c3fe"
        },
        "item": {
          "id": "a2ee2254-6c56-4e74-a1ac-d836606872d9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0545d92a-0045-42e4-a6ba-0a970403bfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979050ab-c5f8-4e6f-af01-e569623c6fce",
        "cursor": {
          "ref": "a0911563-23c7-4fc4-b672-470a3bb34cc1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e3f7630c-f049-482b-9462-58cc195db17e"
        },
        "item": {
          "id": "979050ab-c5f8-4e6f-af01-e569623c6fce",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de69f21c-e73a-4332-b7dc-5a15a506b2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a22b0ec-8049-47fb-b087-dd64e4e7421f",
        "cursor": {
          "ref": "3c7f8965-ac17-4269-900f-2b872fbf4dc4",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "64d8c9bd-0dc3-45db-81b5-f1872c0102b6"
        },
        "item": {
          "id": "7a22b0ec-8049-47fb-b087-dd64e4e7421f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d76ca40-20f1-496a-9733-3cb49e2974aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5154d9b9-e509-47e1-bb87-6bcdf07afe4b",
        "cursor": {
          "ref": "6efc0619-3378-4275-ac18-48cb8f4540b2",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6244b5c7-db3b-45a6-8436-447be6cdfbd6"
        },
        "item": {
          "id": "5154d9b9-e509-47e1-bb87-6bcdf07afe4b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4319f3a7-f6f7-4378-bba5-5b49b5cd8606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1fc8d0-a537-4c01-8301-42e3169f807d",
        "cursor": {
          "ref": "6be863bc-53ee-42eb-aedc-10dc7b4ff4d5",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cd31d55a-2e51-4491-8a83-27f94ee03fa7"
        },
        "item": {
          "id": "ac1fc8d0-a537-4c01-8301-42e3169f807d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "512a2f13-06dc-40dc-90f0-84d685d13bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f98e24-35c5-4343-b1f0-1ffe159587e9",
        "cursor": {
          "ref": "31d33050-be18-42f7-a8d5-ee223520a549",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fe2aab25-1eb4-474e-a830-26001e05517f"
        },
        "item": {
          "id": "05f98e24-35c5-4343-b1f0-1ffe159587e9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b175ed8d-76e1-4225-a06d-d20111915d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f2cb03-b6dd-4def-843f-f0d3418506a6",
        "cursor": {
          "ref": "91770aa5-fe1c-48a2-a1a4-7aa0a1bf79d9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14d6d46f-60ca-4dd4-b816-584e93d3eb6d"
        },
        "item": {
          "id": "d4f2cb03-b6dd-4def-843f-f0d3418506a6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36d96da6-2670-4cae-b1d4-cd7d70b25b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c94d4-dab0-45fb-889c-aa6838be7e95",
        "cursor": {
          "ref": "ed0193d4-a507-49c6-9689-d5f2de83a0ae",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "63fed718-5cd1-4934-91b6-c1383d777cb3"
        },
        "item": {
          "id": "fe6c94d4-dab0-45fb-889c-aa6838be7e95",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4e99c223-6157-41d4-bc2c-06265477b6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b99b01-83cf-4eb2-83dd-8546a0e6649b",
        "cursor": {
          "ref": "0641f59b-17ce-4bfa-a97f-f777a4f922d9",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c6c1ffb5-4e87-42a4-af25-636445a54117"
        },
        "item": {
          "id": "e2b99b01-83cf-4eb2-83dd-8546a0e6649b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ff41f83c-2b1c-4a8b-9c5c-e305de8314a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ac315f-0b27-41c7-8342-90fe9e89b693",
        "cursor": {
          "ref": "ab018925-8999-4de6-8363-ae2c6eddabb9",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "101412ce-c449-468b-a7f6-0d0e80ba07f9"
        },
        "item": {
          "id": "d1ac315f-0b27-41c7-8342-90fe9e89b693",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9d6d6bac-f396-44ee-aa86-4aed5f9a9026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb09f82-b5de-4421-9d66-7b7d4984c30a",
        "cursor": {
          "ref": "f915d2ce-3c03-4adf-b059-1a9e5b37951b",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "02bb8680-a310-4264-99d3-568d955167cc"
        },
        "item": {
          "id": "7eb09f82-b5de-4421-9d66-7b7d4984c30a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bea128ac-4538-4777-a7e7-d1f9df16a4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a3b421-4052-4f4b-a8cd-67d900a2d53d",
        "cursor": {
          "ref": "ac583968-f0bf-41f3-8af7-2e205f25745d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5c35d5b7-25d5-4e8b-98c0-6c873445f56e"
        },
        "item": {
          "id": "20a3b421-4052-4f4b-a8cd-67d900a2d53d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b0b838f1-435a-4698-9705-1daf21657698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65b29c1-f46f-455f-91dd-9d3dae9b364f",
        "cursor": {
          "ref": "6559cf78-4564-4bb3-bff6-e71832ae94fd",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fe373db4-7fcc-4774-8483-6ad8e8f755fa"
        },
        "item": {
          "id": "b65b29c1-f46f-455f-91dd-9d3dae9b364f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4618a1f5-f6ec-443a-b35d-52dddb092570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f0fa4f-2455-4949-a41f-6218c945d608",
        "cursor": {
          "ref": "4f16acfa-76c3-463a-aae8-e03023fe5367",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1052505f-38f3-4e9e-a084-811748173b24"
        },
        "item": {
          "id": "b2f0fa4f-2455-4949-a41f-6218c945d608",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9bed01d7-8157-4e31-ab1a-226134275189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5af86-b577-4693-bf21-0fe90991db5a",
        "cursor": {
          "ref": "80c8ef0c-f4a2-4b25-846d-2111a8fa2806",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c9aebcd3-aa5e-4355-a51d-d7ba1baf7118"
        },
        "item": {
          "id": "bbc5af86-b577-4693-bf21-0fe90991db5a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e8cf6cb0-79a2-4e74-9e0c-a43ea7da7304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa5128c-ae8a-4780-a943-59be889b8d0e",
        "cursor": {
          "ref": "9ec5d3a4-5bc2-49ab-8065-92398c315d44",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "47cef5a3-0da3-48f5-b73e-1fa4f42bb48a"
        },
        "item": {
          "id": "6aa5128c-ae8a-4780-a943-59be889b8d0e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7a58fc72-0c5a-496d-a2b1-997aaac99934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ee48bd-e937-47d3-893e-9e6afb954391",
        "cursor": {
          "ref": "dbf9a47e-a464-4190-ad7e-b33e67fbfd69",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b17171b8-d508-4b7d-a68f-dc5815912c1d"
        },
        "item": {
          "id": "16ee48bd-e937-47d3-893e-9e6afb954391",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b6969ce6-9022-4e65-8e69-421be20e4f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf822a-9c7d-4568-831d-75f783ab9dc5",
        "cursor": {
          "ref": "0df2ea6a-f937-4309-a797-67aaccffa44c",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1cf83bab-2337-43b2-92a5-26d56795ef45"
        },
        "item": {
          "id": "bdcf822a-9c7d-4568-831d-75f783ab9dc5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d054d979-44e2-4dec-89a8-efa19873c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8404f0-59bb-44f2-86f2-11eb1ff0e29d",
        "cursor": {
          "ref": "6af5078a-ccad-49ff-a7e8-5aef7052e7e4",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "11951366-6fa0-4b10-b0a6-93e13cc085db"
        },
        "item": {
          "id": "6c8404f0-59bb-44f2-86f2-11eb1ff0e29d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1ccb76db-8856-4cbd-870a-444775428dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b2b74-ae8d-4649-ae91-146164a2a827",
        "cursor": {
          "ref": "fc9259d1-d0b3-46ac-b9f1-46f467b4d52f",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "40052d10-9581-4863-85d5-7ace83fee5fa"
        },
        "item": {
          "id": "c00b2b74-ae8d-4649-ae91-146164a2a827",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d520a705-3d30-410d-9cb8-2bf808a124f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f8b452-1b3f-4cb0-bd3c-738d5615237a",
        "cursor": {
          "ref": "dbee7861-7074-4efb-b3e9-a1be599f6d50",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8652e7fa-afec-4c08-901d-0953c23819ff"
        },
        "item": {
          "id": "85f8b452-1b3f-4cb0-bd3c-738d5615237a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e2d60238-c028-41f0-b430-3df4af348cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292410d-c14f-4fea-8b52-8c15029bc3aa",
        "cursor": {
          "ref": "6af9e9b0-98ba-4a28-abb8-8e11daf708bf",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a3681cf7-f392-4646-ba14-9ef9ec8ec1df"
        },
        "item": {
          "id": "3292410d-c14f-4fea-8b52-8c15029bc3aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eb2132da-ed65-445b-b20f-04c6cfef6472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d79a6c6-8e8c-4348-8974-d3c5387385b3",
        "cursor": {
          "ref": "9e6054f2-ca1d-4f95-ab47-5c6b1bf4aa25",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4e2376e7-e34d-4400-b496-94dbdcd700f1"
        },
        "item": {
          "id": "8d79a6c6-8e8c-4348-8974-d3c5387385b3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "683afc65-ec41-4414-89f1-2bcdba3256fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e155c860-1124-47ac-910e-39e021f23f3b",
        "cursor": {
          "ref": "3cc2721b-369c-4581-8409-451c6565f99e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c077635c-7103-471f-a75f-0acc0bc985da"
        },
        "item": {
          "id": "e155c860-1124-47ac-910e-39e021f23f3b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e49bd0ca-b62c-444e-afd3-3f9c6dc32239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3fd5b0-240d-45d3-b194-26013cdfd7fc",
        "cursor": {
          "ref": "1b64c28a-f887-4ce6-945f-0f5c5d1eee94",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "44d281fb-d131-4958-ae58-5debf6d90955"
        },
        "item": {
          "id": "cb3fd5b0-240d-45d3-b194-26013cdfd7fc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5d2d20bd-789a-43b7-8ee0-38301e9cbd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d01636-71b7-49c3-a78b-1566e60825ea",
        "cursor": {
          "ref": "b5e148ff-e6b2-4e17-8541-d644aaa29ce9",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "53f60978-4108-4c35-970d-ed2dddbb9f1c"
        },
        "item": {
          "id": "f3d01636-71b7-49c3-a78b-1566e60825ea",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "410c6fe2-b5d9-432b-a6f7-e8fa66eb9ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3303a0-645a-451e-a9bf-06abea72b8c1",
        "cursor": {
          "ref": "6494cdde-88ea-496c-89b9-aeda254fc0ce",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b868c62e-d164-4f94-9612-a52c14023743"
        },
        "item": {
          "id": "bf3303a0-645a-451e-a9bf-06abea72b8c1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "30a9bcc2-96bd-47cb-aaf3-9266fbd91aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fa02e2-92cd-4e25-ab8a-da9e0f2ca06d",
        "cursor": {
          "ref": "9c2a17c4-901c-4e3b-9754-1ba96fdf2f59",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c34c944d-9275-467a-a0a5-2d63b2b43faa"
        },
        "item": {
          "id": "96fa02e2-92cd-4e25-ab8a-da9e0f2ca06d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d269a798-ee09-47ff-a582-770a037a209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137e11b4-ed28-48ed-b365-80256e1507b7",
        "cursor": {
          "ref": "36e6e7af-b40e-4f5a-8f73-981df34690d8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b632a267-6128-469d-9f58-b25bccd9960d"
        },
        "item": {
          "id": "137e11b4-ed28-48ed-b365-80256e1507b7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c8926ded-41da-4764-904e-72891c07cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65413dc-2631-4147-9866-78f57ff4b73f",
        "cursor": {
          "ref": "729bad39-922f-4146-bbc1-f86881add4bc",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "43d622b4-72ec-45c7-88bb-bd581dd3ead3"
        },
        "item": {
          "id": "b65413dc-2631-4147-9866-78f57ff4b73f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9c8fbaef-70a0-4972-84fa-53dd1f9c2a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98a8fc4-f04d-4f1f-a34b-51794ebc5225",
        "cursor": {
          "ref": "feabaed6-fd13-42e4-8221-da04dd8411e4",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "71e6173f-059b-4e81-8b48-0fb6926fdf06"
        },
        "item": {
          "id": "c98a8fc4-f04d-4f1f-a34b-51794ebc5225",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "67774b05-4809-4ed1-9c36-d82736fa7dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d6e80-9d7c-4a9d-9033-86719d67d76a",
        "cursor": {
          "ref": "34c146d1-71a8-4d88-a120-bacdebe10b7d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "54f44bff-40e9-4796-9908-0603fe46b278"
        },
        "item": {
          "id": "c10d6e80-9d7c-4a9d-9033-86719d67d76a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "388b429d-f88c-42bd-a642-5ee9265cfba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056bd92b-30c9-4199-964e-37a4d612e386",
        "cursor": {
          "ref": "d717edff-7b6e-4098-bf71-5690186b5cbc",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9bcac2cf-1d3c-4ebd-bad0-c4323492d9dc"
        },
        "item": {
          "id": "056bd92b-30c9-4199-964e-37a4d612e386",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "49ee5791-b515-443d-b622-c010b0a54ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d111fab3-79b1-497f-9384-4e6149642e1f",
        "cursor": {
          "ref": "ee72c62e-ad23-459e-85e6-22c1c6005214",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7c8156a3-baf8-4edf-8455-e484dadf8705"
        },
        "item": {
          "id": "d111fab3-79b1-497f-9384-4e6149642e1f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46afdedd-ac0d-4c2b-8c98-8c6cda047eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf9dc24-c7d4-4bc6-a733-8d470c591331",
        "cursor": {
          "ref": "5fa32b94-86fc-4b45-98b5-0273c6055337",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d0df9bdc-e5fa-4a5c-aab8-7bd1727f1244"
        },
        "item": {
          "id": "6bf9dc24-c7d4-4bc6-a733-8d470c591331",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "10888285-0f58-481e-90ee-51f526237e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ea6ce-8207-4c30-90dc-d17f14770306",
        "cursor": {
          "ref": "6d16cdad-54ab-45c3-a450-428645ad6f54",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5ad9b0e4-ed4c-4483-bbde-c8bf89fe3992"
        },
        "item": {
          "id": "af3ea6ce-8207-4c30-90dc-d17f14770306",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ed8478fe-0ea0-45fb-80c5-da4580e050be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ac289f-7884-40ae-b5c7-4ad952dd1029",
        "cursor": {
          "ref": "320c8b3a-d5f2-4461-acd2-f57dfa0f35dc",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6ede7323-75ed-42ae-ac60-1f660b955d8e"
        },
        "item": {
          "id": "e3ac289f-7884-40ae-b5c7-4ad952dd1029",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "eba80c14-33ea-42ee-a378-d464e591b6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f68e8f-5f1d-4a67-93af-2c8d2f444af6",
        "cursor": {
          "ref": "bc430989-63ed-41f0-b1f4-923a303af874",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2739c244-a6e5-4fe1-8dc3-19d28fe37323"
        },
        "item": {
          "id": "63f68e8f-5f1d-4a67-93af-2c8d2f444af6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f6a5ce12-7cee-4eae-ad75-d0079adb4c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5993c-2ac3-4b63-a82a-c46c86136804",
        "cursor": {
          "ref": "0339853a-285f-4e97-ba1b-aac35d6666fb",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "30811f43-b2b3-485c-b689-7fbc2e00d1ac"
        },
        "item": {
          "id": "4be5993c-2ac3-4b63-a82a-c46c86136804",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b950654-04bd-42ba-accc-bc496b57ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0600cb8d-9206-4675-bf39-2a0b221366e2",
        "cursor": {
          "ref": "eb872f8e-c161-4bc7-81ce-b2fb5acf9497",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a3e1cca4-f951-42b4-aa3f-401d77c6f1cb"
        },
        "item": {
          "id": "0600cb8d-9206-4675-bf39-2a0b221366e2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f983fed9-495b-4e9b-8501-42e3456c7ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8a9150-1b66-487c-89d9-33241287ab6d",
        "cursor": {
          "ref": "0a9865f5-0e43-4ba0-8d7c-fbd35fce66ca",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "048ecfc7-f625-4617-882a-e9a120e73810"
        },
        "item": {
          "id": "0e8a9150-1b66-487c-89d9-33241287ab6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6734a47c-26a5-4b67-8e3c-428e7786e7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1fe755-0c94-4ef2-9c34-f9717f8d0e23",
        "cursor": {
          "ref": "6eeba977-581e-4ac4-800c-3ee7e2d2686a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9c8d6a3-57db-4cb7-b807-7a6a53c8ba01"
        },
        "item": {
          "id": "5b1fe755-0c94-4ef2-9c34-f9717f8d0e23",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3ea62d2f-98b1-41eb-bb60-9155ec070ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c3000-7d20-49d7-b44e-d9483228130a",
        "cursor": {
          "ref": "21dc8262-9cdf-4fa3-b941-2a8ab2aacca4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "42062f11-dcf6-4292-8e9b-c015b417f3a3"
        },
        "item": {
          "id": "b68c3000-7d20-49d7-b44e-d9483228130a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a576ef20-c983-4bcd-9a92-94c804089190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749f4399-53f6-43ac-b2db-00cfc682f280",
        "cursor": {
          "ref": "010272a6-94ed-4d94-9f46-837959b16be6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7229fc4c-40ce-4a2b-8af8-7188a7d23317"
        },
        "item": {
          "id": "749f4399-53f6-43ac-b2db-00cfc682f280",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dff2481c-f63e-40f9-a6a3-8e035082f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38849c92-6c10-4ef1-a8d5-e7f01d79bc82",
        "cursor": {
          "ref": "ddbca7a4-4b91-4f96-a3ae-d308fa537cf5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ba352fdd-4516-409a-8750-b335d8cacd2d"
        },
        "item": {
          "id": "38849c92-6c10-4ef1-a8d5-e7f01d79bc82",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b6b67c72-2a15-414b-876a-143eefd1ec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaf876e-f426-4b7d-9ee7-82cbfb74ae78",
        "cursor": {
          "ref": "c1b61d6f-665e-4d45-af63-bd9ee91a9f7c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6e4cc569-3d34-4264-b286-5cde6da176bb"
        },
        "item": {
          "id": "3eaf876e-f426-4b7d-9ee7-82cbfb74ae78",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a36b8535-2380-4739-81bf-25a9f017ac54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64057468-e779-4ab2-bc2a-2d697e14cd46",
        "cursor": {
          "ref": "f0526c52-a9b5-47a5-9740-44790299d057",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1613cccc-d489-48b6-be02-0b3895766c44"
        },
        "item": {
          "id": "64057468-e779-4ab2-bc2a-2d697e14cd46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b21e09c6-6188-4587-ae13-075b755f1af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e9940-d409-4b31-adb0-d5b7f4db86a9",
        "cursor": {
          "ref": "5e0337cc-b039-4fd6-94bc-c43ab8525de4",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6ba2aee6-27f8-4649-a087-834019bbabb7"
        },
        "item": {
          "id": "ef9e9940-d409-4b31-adb0-d5b7f4db86a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5acd869f-2ae8-44f3-830b-59a7534506f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978e9c7c-7bd7-4eae-8bbf-63dddec9dd74",
        "cursor": {
          "ref": "a677ae9a-88f5-4f8a-a73a-ef6a060f7030",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "04da9cdf-42cb-46fe-8a3f-4446882fdfaa"
        },
        "item": {
          "id": "978e9c7c-7bd7-4eae-8bbf-63dddec9dd74",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f50e0ce2-9cdc-432f-9d30-9f31a7fb5aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c8613-26be-4e49-acd1-ffaf1a6bd84c",
        "cursor": {
          "ref": "a130b48f-4a21-4b41-8817-1fffacfbf630",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db843b73-71e5-4a24-b4ac-3729cb5fb497"
        },
        "item": {
          "id": "049c8613-26be-4e49-acd1-ffaf1a6bd84c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd3a932e-db42-4400-af11-24f17b8d7dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4df18b-afa3-4419-acf8-9f79a45525b0",
        "cursor": {
          "ref": "5a98aab1-a7fa-4b53-a7f7-9cfbf26b294b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e8badca-d1d1-4c50-a83c-ae3602538387"
        },
        "item": {
          "id": "8c4df18b-afa3-4419-acf8-9f79a45525b0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1acd5ca7-d6c5-4746-9385-7957d4eff7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde9b132-5034-46ba-af13-0e02b3821651",
        "cursor": {
          "ref": "505b5cd1-b80e-4bbe-a646-4fad98b1c0b3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d1dfff19-fe54-4b81-9e3a-f61648d73286"
        },
        "item": {
          "id": "cde9b132-5034-46ba-af13-0e02b3821651",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b42bc1a2-227e-4e34-86ed-0434f4a13172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2239edd9-b6c5-401e-96a4-b57ff13b7c03",
        "cursor": {
          "ref": "0e7dbce9-1bb6-453e-99ae-2d6a137ae8bd",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eb992f2c-e6c3-45c4-92a3-eee7c70c96fc"
        },
        "item": {
          "id": "2239edd9-b6c5-401e-96a4-b57ff13b7c03",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4bcd9af4-ea16-4c67-b136-48b029ca2509",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc48853-dfb9-4930-8af0-07725cf7ecf3",
        "cursor": {
          "ref": "7930fb27-6a22-4d9e-a999-950b74abb591",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9a3e820c-0e83-42cd-ad1a-8c8a39d70090"
        },
        "item": {
          "id": "6cc48853-dfb9-4930-8af0-07725cf7ecf3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "eaf4e10f-3db2-422f-8810-4e03e11a39f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 191,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72247c5-a84c-4e25-ad98-744515437925",
        "cursor": {
          "ref": "5fdd8a11-07d7-44a1-bac4-8de34081d6b0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de145b62-45ad-4e70-a102-63c3f5fc2b7e"
        },
        "item": {
          "id": "a72247c5-a84c-4e25-ad98-744515437925",
          "name": "credentials_verify"
        },
        "response": {
          "id": "666df5cc-666d-4332-8807-ba21e09b30b6",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6880657a-582a-43be-a39c-56118e9f947a",
        "cursor": {
          "ref": "c62d8a70-41fd-496c-bb59-315a604f2f55",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95ea9d6e-e695-4fc0-8581-850d8add0e30"
        },
        "item": {
          "id": "6880657a-582a-43be-a39c-56118e9f947a",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "389cf759-4540-4eb0-b679-bfea9bdd630a",
          "status": "OK",
          "code": 200,
          "responseTime": 290,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bbefd1-a491-4d25-bf70-5b86556a955f",
        "cursor": {
          "ref": "6d64115d-2b1b-4235-b077-ddf1566f1087",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0b7b136b-57fc-44c4-a000-185e97dea33a"
        },
        "item": {
          "id": "a1bbefd1-a491-4d25-bf70-5b86556a955f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "897221fd-81fd-4002-bb54-aa2cda994a6d",
          "status": "OK",
          "code": 200,
          "responseTime": 282,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
        "cursor": {
          "ref": "9252da99-7dcd-4e1e-98be-4e19f87a081e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1fc6e74-3391-4280-a95b-bea9396cca55"
        },
        "item": {
          "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "484c4c64-86a3-465b-8840-62ddebd0ecd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
        "cursor": {
          "ref": "9252da99-7dcd-4e1e-98be-4e19f87a081e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1fc6e74-3391-4280-a95b-bea9396cca55"
        },
        "item": {
          "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "484c4c64-86a3-465b-8840-62ddebd0ecd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
        "cursor": {
          "ref": "9252da99-7dcd-4e1e-98be-4e19f87a081e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1fc6e74-3391-4280-a95b-bea9396cca55"
        },
        "item": {
          "id": "1b908ebc-2485-4f9d-885b-2f5f3d389d8e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "484c4c64-86a3-465b-8840-62ddebd0ecd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a80ba1-bf9f-4c59-968a-497f4a13e598",
        "cursor": {
          "ref": "c7db7686-21ea-4363-8096-de3305b0ee53",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "667e7726-ab8a-4ce8-b80b-9f409525fcf4"
        },
        "item": {
          "id": "c7a80ba1-bf9f-4c59-968a-497f4a13e598",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "60902062-cba2-4dd9-af21-34a2eb72d638",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 201,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83408285-e27a-4270-80ae-7fb6da9f6586",
        "cursor": {
          "ref": "cc956a64-8e5f-4aae-a98e-7d87067d96ac",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6303f079-cd20-4cc8-98b8-e9cfa733fc4c"
        },
        "item": {
          "id": "83408285-e27a-4270-80ae-7fb6da9f6586",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5175955a-5df5-4dd0-9f2c-b713d60ac7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83408285-e27a-4270-80ae-7fb6da9f6586",
        "cursor": {
          "ref": "cc956a64-8e5f-4aae-a98e-7d87067d96ac",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6303f079-cd20-4cc8-98b8-e9cfa733fc4c"
        },
        "item": {
          "id": "83408285-e27a-4270-80ae-7fb6da9f6586",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5175955a-5df5-4dd0-9f2c-b713d60ac7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b54f62-2b0f-43c0-98ac-68835dee4f2e",
        "cursor": {
          "ref": "dde52fe1-be94-4d26-bddc-d13090610ff6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "12426a1c-80d3-45d1-b308-ce374e06d6f6"
        },
        "item": {
          "id": "f8b54f62-2b0f-43c0-98ac-68835dee4f2e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "68c30e59-6cbd-495f-8549-cec23ec90126",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 392,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa1f1dc-b153-42ae-b378-c1a784c61ba7",
        "cursor": {
          "ref": "c958d976-2991-4920-8ad3-f6590ac7e967",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ce876ac-09eb-4c99-ae2e-f9183c853384"
        },
        "item": {
          "id": "eaa1f1dc-b153-42ae-b378-c1a784c61ba7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e193c7f4-9034-4459-a262-059ca2007a1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa1f1dc-b153-42ae-b378-c1a784c61ba7",
        "cursor": {
          "ref": "c958d976-2991-4920-8ad3-f6590ac7e967",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ce876ac-09eb-4c99-ae2e-f9183c853384"
        },
        "item": {
          "id": "eaa1f1dc-b153-42ae-b378-c1a784c61ba7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e193c7f4-9034-4459-a262-059ca2007a1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e7d913-27f8-4593-81aa-ed0e936a55cc",
        "cursor": {
          "ref": "e0d7d58c-9632-40b3-b8a7-caaf46489adb",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d6004b4d-47af-4f11-9999-67ea06c0606d"
        },
        "item": {
          "id": "a5e7d913-27f8-4593-81aa-ed0e936a55cc",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4c398c3d-e904-4e1e-ade9-68508685deef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 431,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}