{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eff7eec0-7a73-491c-b80d-857a9787722f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c17a72e9-2607-4ef2-a7e4-45bea0b9019a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25c570c1-ae29-4386-83b3-31d721271720",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1995bdc9-84da-4984-a068-46a50db224c3"
                }
              }
            ]
          },
          {
            "id": "1c3946e5-2527-4b54-b1b8-43d91026aa09",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1157e9e-8af1-4628-80eb-b7ab236152d2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3360d06c-c388-4b26-a457-05e46342bd48"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "44169fad-2fb4-4d7b-aa70-efcfbe663db6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "28ccff96-70e0-4b43-938d-295f9459bb7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab31bc16-dd6a-4ed5-bd61-66171ede15c8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5dda4e-4bbb-4298-a172-b1badbb1fab3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc9fc324-ff28-42fa-b479-78684f4a1779"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb719010-8397-4428-9096-db4d05e067bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25489d65-2114-42af-99ba-fd5560d1cf97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7b47d4a-ac2e-4e82-ac7d-10936a4db45e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "188be4a0-5715-4a29-9b11-cfc2f9ca00bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "391f0424-f41c-4515-bc9d-bb6f8ac70e0a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bd672320-33d6-4793-9c8e-f8929716985d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d29ee861-6acf-4f59-b8ef-d37c944154f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0011282f-4962-4cab-b4bc-d79d505c4ab5"
            }
          }
        ]
      },
      {
        "id": "447c2c55-9238-4f91-a2f7-b02c46593942",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "68469c1b-da33-4cf3-ba32-24508021301b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e880398-f2f1-44a6-a11d-4cc28111b548",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eae92329-059e-43d1-b109-53aca02f8473",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dca5d03-0e47-4c55-99d6-36c43e935cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "541301d3-54cc-45c5-8d67-7b365284d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1770a15-0113-4183-b96e-27e79423484a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87121fe3-9948-4092-bd44-c05b4b5dfa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2fcb08a-aee9-41af-b11a-e5795d2db209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc3cccf-451b-4df2-90e8-4432e8d0ca1c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf8c0f9-aae6-4ec2-9c1e-bf604bfc8b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "750b1767-8892-4b94-8efe-c2228982b79d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c16f8527-2e93-4847-ab7e-0bdeb0f77491",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcc0a120-f570-438a-aaa7-8bc22a645af6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349c4013-a8e0-4934-8ab1-204a038e99a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1196a386-14f7-49a6-b527-00fd11005f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e45939-a6af-4423-a1a2-fc86ac9cd230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1b75c7-3ee8-4089-b41d-7498b8cb2e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aaffb9-5333-4202-870d-3855fc1b6d88",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49256f0c-b619-41a7-b858-482f4b9c1124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d52ca232-d450-4b14-b418-431aeb1d942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927b0ab-6869-4351-a2e2-41c1c4d763b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fd74953d-95a6-4197-b9bd-a5c5b8e3e5a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6ea71dc9-bc9e-49c7-add6-6e2db5eff67e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d80bc88-84eb-4763-8cb7-2e158eeae2e4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d8e7fe5-0867-4c17-8453-ccce98a93653",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b98eecae-2c97-47cb-ae23-97506b5ac83f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94ad3e4e-1691-4a07-aba0-3390681cb135",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f242c1f3-b62a-4d1c-aa7c-84d842bf99ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc5b9a2b-0507-451d-8e03-dbd89287ecb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3c7f767-9b0d-417a-82ae-29e2a2a0e809"
            }
          }
        ]
      },
      {
        "id": "b098260a-697d-4c62-acfa-2e401e0ae95e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "099eaf16-44ee-4d98-8331-6479ee73be59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d85644df-ca10-4370-ab69-96a42356f164",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4fb65b50-94a7-4776-b440-bc891f61658c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3757f148-2958-44e0-9643-a671749eb794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9934da-d7d0-4a2f-b94d-adf97fd36d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccbf6d4-8d53-4440-8a9c-49befcf0b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f87d9f1-df7d-461e-b2a5-5e9d61cd1c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0418c680-24fa-478f-82cb-e61367c1ef9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cd7c7e-d4f2-454d-aa3b-e7e5303047f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76271474-1f8e-4433-b0f1-98d57a069a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662f51b8-2ebc-454e-a1e2-8e626d4d5cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07371ea4-c187-47aa-9679-b284e405ad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b97b8e-3d32-410b-bb86-991aea6a4b5e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f49ec7f-c59e-4471-bfd9-b5476d2cdec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f750d95-f174-4b13-ac3e-6749fd679cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0592f8-2a48-4a10-ae79-869c28b881a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33fcf1ee-fc32-4d2d-94c8-7e3ffb412f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d22dab-799b-41ce-9f2f-1371ba3109e9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f89165-c08e-4f14-88b5-1dc7c47531f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1692a757-b5a0-424d-8d17-14c85d68d6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5890019-3af6-48a7-926f-8d44f4b3e735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b966f40-795f-420f-bc44-9ac0e6486e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf977299-ddfe-4fe4-89e2-3bb19ba01f1a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76766fb8-0f22-45bc-afab-cd65ff74755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f8e72c-8ebc-4598-be86-a371e6c5a28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a78db3a-810d-4c33-98d2-d9e278004a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d984ab-e1f3-48f5-8bf8-f0c80fad9232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9576da30-ae51-4a52-ab86-d95e9bebcb29",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b8773-5257-417e-bbdf-1fc10fa27f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36a660c-5310-4cfc-9d92-7d1607c1cf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee005415-4c84-47c5-9058-69036cecca21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68192f6b-20e9-457e-99b8-1181ae3a09b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f27aa86-6817-494c-9ba8-904b32634361",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d8d6ff-c865-46c3-9392-a4cd687c5e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9541a9f9-0196-449f-acaa-b41b4a7ced2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a399653-14a3-4730-9741-1b75ba2c82bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cde4b8c0-c87f-40e9-b5f8-23a65a228d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e0aeb-b208-4aaa-8913-cd1c40bd2428",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d676b9a1-fa0b-4aa2-86d9-dec0be0f4b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c92923d-f3b4-4df6-96e7-b7e45411086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7c32de-5a0b-45e1-b057-c1a4799028f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75609d6b-1655-4c7a-b0d0-dafcaeec7093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76232723-4457-4143-b4d2-75d5eafc5795",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246c3a97-12ef-4ea3-bf0c-d1d4d6ea88e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3272dc79-aede-44fe-af8e-c61a8d886186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507fd8fa-320b-43e1-aa7b-565ee3634f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f176a438-455a-42b8-83ba-172ac9ad0c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405a9202-9cc5-4e41-a768-6fdbef54b0f3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7def7e6e-7a0f-4287-8d4f-92ee75a619c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138fd29e-6467-474e-ab2c-4c3524975899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437f0c0e-35df-415f-ba2f-d54e5751d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab734b9e-261e-43c5-816d-469d0368d27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5cb086-9799-4c4b-99f0-91df45d2a3fe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f862135e-4061-4e47-889e-187139b9b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd3373a-0740-4e5e-a000-b28a91e56970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e066dd3f-ba85-47ff-bf04-e998e1a7d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb2bd869-3cb3-452a-8018-caf0869d11c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a467c62c-1761-41d5-adc8-eea0edd046dd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67346cfc-d3b7-42a3-bc3c-a4a3d18c1921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5fdb81-a16f-462e-9912-3486f4032dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4774dd48-78c8-4c28-b38e-459602b3992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d5ef343-6a55-4e4a-a7e5-75bbaace9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d705c1-ed7d-49f2-88a6-2591e8810905",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215c1b04-d42b-4b7d-8109-fabfccbae060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9329fc-242c-41f3-82d1-e6cf6929ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0e55d-626b-4c1a-b8a1-9731c916e37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b28eb59-82ed-4d86-88a1-e3b101b930a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab97e6b8-68d4-4045-95c7-eb7cae2a37d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86be6865-3836-4c9f-93a7-8fb2b700b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77287d56-a07b-412e-b7c1-e62715b67f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b6759c-d2ee-4df5-b419-ef355a925ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3303b2f0-d41c-43ad-9651-59b965e57d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90289170-a4c5-4e86-be95-8c176c156ecc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ce6cc9-2222-4725-bbd5-c5b34851e215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c609873f-b65e-421c-abab-11e9eff23f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a59861-1d13-429c-a0f8-3b4e03a62871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eacf006-9a85-4965-bfca-158a9ccb525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f3ac8-8929-4e53-950e-c4f58a98a48d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8352cd81-23a2-4b04-9148-f252f4993f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aef2c4-0a43-451a-8398-b85a51e7c232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51130db0-5623-4153-96bd-f5034d2f9406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64e104a0-9f50-41e5-9f9e-e7cef3494f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567867b3-3bf6-4371-a229-0d424f8f6864",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad830d2c-c395-4a01-aa50-ca0569a21ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8466a5b3-dab0-4e14-8ea9-a50d91aaee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d65be01-3ef9-4870-b3cb-95f891fbbd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "599aa42d-eca7-4474-9513-0baa8c85dd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f72dec1-0240-4940-8d2a-4683f336f8cc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2fae54-a39c-46e3-be4b-1339ad480d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b223c83d-fb28-4a11-b34d-a38c64fcd10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04862019-6b3c-4430-a5a5-e8c8ceb2835c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42096ead-9070-4a29-aae0-999a3d5ae484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294d45c6-e29a-4903-b31f-6f546b2bde7e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268715c9-e83e-40d7-996c-4785d3c4b93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2664e178-65a0-475a-b48d-b1454a5d36b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02857b5-c79c-4f58-9a76-b1bffaa791f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8898aadd-8746-47c5-bfd8-a57462e8694b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16ff000-385c-4836-b049-40c65a08aee0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490125e7-60f5-454b-a6c9-c1a63c6841c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66312f8-54f9-40ad-9b32-fe14ece956c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34027d4a-334d-484e-98ad-16c3ad2817f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "740163b6-7162-401e-b767-0df7387e9b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463c136-ce30-483d-84bb-05fb05c25b11",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdcbf5a-3a8c-41db-8759-60d52b6cb084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71604ad-e24b-4144-aedc-49424e81040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facf9342-5b33-4459-ab37-db200811164c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b362575-8a59-4a7f-af5f-1aed2092420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daebda18-f151-4026-a79f-ad0a8473e53a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5b7a0f-fcfc-4869-9e3b-53a5ce3ca141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d717d8e3-6c7f-46f1-a4db-7d1b538667d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63a44b-e650-4216-a87a-31fd0e575921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "716db459-f57c-4615-b8a1-6aa735dbd398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4358b487-c61f-4e32-b512-3f971cd4eee1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dbb2c5-8ec9-4497-8b33-28aa0b0e2baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8206410-186f-49b0-933a-6c05cacedce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d30f0-a437-4e4e-af27-a2adc72cdfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "179fdd82-40a6-407c-9757-4173deea8513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7002f770-5088-4591-a937-87be69368a27",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894212c4-8a02-4383-8e53-3d50ce818561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538d6e0c-d701-4fae-8318-841a9fa3236d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fe6e06-ec8f-454d-9279-557dd9bd5f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e18d0b2-3065-4fb4-8303-cc9fdd520553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d234901-89c9-43f7-8d83-beaa78e8ce43",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9441c-9470-4e24-9548-ce45c36e8bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0c5bc3-0a39-4817-bbf0-069d3a244020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755634ae-35ea-4b7a-990a-7b694faa6ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db230e0-d29d-41b5-a6d2-2a8c4352d9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0516e16d-1abc-4762-ab5e-7a9caddbe419",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a5049e-972e-4c0f-a225-a48ba2c6b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c411c53-0985-4a52-86d6-e5c1d78df965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27bcd4-ca8c-41e0-ae73-26a16d2a95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc3ef7d-1f21-4ed5-84d6-3138ccde1134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d541fe8b-d5c8-408b-87f1-9f417b2bd18e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fd7f76-d358-4fc5-8e86-4c1ea4cff6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ca93f3-7884-4dd9-be32-5c81ec9a3878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db1c911-a301-4364-b7c2-0b975048ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a332ca-43f2-4fe0-a115-c4aca020f890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b9431a-3374-44bd-aa69-20916f3945d6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804cb797-007c-4fed-8629-35e68edc9b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c0dbbd-033f-4b92-ae26-ef60988faff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f365c7-7af2-471c-a6b5-410e5f5cf857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "340f2a28-7551-4f9c-b9b3-db2b5e28f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4635c78-67c0-4377-91b0-410628d991de",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6b5449-7e8f-4d8c-943c-7bd98e9edfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2193a751-baf5-484c-bac0-98230de9433d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447b536c-0cc8-4de2-91cb-805d7aded037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3655ad9-88bc-4abd-84d8-71c83ca98abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152b3e3-cedf-4281-9b24-c221b331e590",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf86648-d716-4029-bc59-ff02de020425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df345c2a-c2b5-4632-bdcd-fa30a5dea17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9125a6f6-9905-48c5-8338-2fbef866c2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7fc0fe-8811-4c77-992f-2b142b26fd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780af66d-2789-420d-9358-81ebd3cbd438",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9cd38f-a3f2-4620-ae27-bd736cee21da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97be919-2310-4390-8dc5-a81d9d381d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6060af34-5a2b-4439-8bac-e4678b78ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac10774-c6d9-4ad6-bf45-d22571b4f157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe8daf0-5c06-44da-ae2e-281b34d03d92",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e3542c-8a6b-48b2-aa9a-ba5f124262c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b510360a-75f2-4f32-adee-b7a29d4ed1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82c53e9-fca3-4e6d-b47d-06dd491ad236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c39a637-2a2d-4c18-a318-69e0ddf18bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440e7ee-8bf2-464c-9359-56d6a9b9c255",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dd4b3e-3c65-45a4-9850-ba7c46786a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b9e6a5-dd2f-4b1a-98d3-68ecf625dbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2cfad6-3bd6-4019-9fe3-3f8894de04f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9df3eac-743a-4bb5-b037-26a8d7faea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3467fb-6b7f-46a1-ba0e-71286b98150b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e2f42a-8993-4a8f-b86b-749c1abc7582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6d8c3d-380d-423f-80b0-b1b00bd9a0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73c4fb4-67b6-4987-a9c9-4f580105ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe121c5-40ed-4000-b297-c693b221d5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10222bae-99ea-4917-b82d-5c9b6e83c2a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f3b215-7094-41cf-8bd4-25d3ea2598f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10347c9e-f7dd-44d8-8df0-1779fa1087fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f833a342-e39f-450c-a3ad-a9f23cf3e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6f550b18-37e5-4c0f-8a46-0e37740f4ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2101cb0c-559c-40a4-893d-18269e7bebb7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc532ce5-8c5f-429f-9c46-883bbff8d8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28dd7e6e-4e05-4ef8-ae1d-87e852b11b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d225bba3-099f-4242-94b0-cf75bf70ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48ce0d73-0e45-4414-8b04-0d09a8a87505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de56496-c1f9-4379-bb3b-f05ffe65ea3d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d9cfe0-8a90-4814-8790-124aa6a4ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83803053-ed6c-4177-be84-1839eab14da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16bc421-09c4-4978-b1c5-ff8efa336db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49af70b1-08d8-467e-8706-8ff321ec85ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff9d57d-6549-4773-b59c-829caec1b1a0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4cf4b4-362c-4365-9ec9-95eff8471a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89d72ba-59cd-4ef6-8f16-62d0d36c6037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7cd7d8-08d5-4e09-86c7-38409c67f020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd75fc8-f53b-45ca-a2ba-f3e3252715a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc51938e-0fbc-4d52-901d-8a77273facd1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add35676-09b9-4f04-a524-9f754d26b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f37f06-89e9-4814-987b-40d14c567f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f688b7-f1b2-42a3-b843-d5fe51516ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc7f4df-2be5-43af-b850-7f2f1e5a0e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f27761-bdd1-4aba-97f6-9c8567de66c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f4ec63-b04b-4aa9-b60d-cc60f9900286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1247d065-bbeb-4c21-b9f3-459a5e3c4a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73277a8-93c3-46ad-91ce-087e506ea6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99754e14-21ad-4a21-bbd8-70de2e063a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc9e918-f8c0-4e3f-aea4-bbef07864081",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fc1248-5b58-4b4f-a92b-adce5a14a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b077c078-7e51-4aa3-8404-4f7470ed6ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9e5a85-d32a-407f-abec-27648f73f56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91fc6747-7002-42ca-a7a2-3877bf659237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d420cd56-beb8-48ac-a4ab-e1cd0d3c95b0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ce6bc1-4a09-4c6e-bf67-ec2c433b1285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa12119-b170-450d-a369-bfdd6b7ee81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c058d0-45d3-419d-8155-70048d548b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b4a1ce-4aa9-4f65-8207-15d3be6b4ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2564e8-fe63-483e-8f5f-20c73b146ecc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f26c44-64d3-40a2-bb19-5874f8b67dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebe72b-0e9e-4e6d-8a74-3db3032f43fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b18f5-110f-4135-9fa8-5246a098fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd70a67-2a8d-4059-9a1a-43f918159c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763ee01c-2d68-4837-8760-9494f11b0671",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcd3fdf-9251-45b8-8118-31e2b4415199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1387e5bb-51e2-47ba-8af4-88b714442ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cda365-d345-46e1-b227-cd1905aef135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ba7fec-8391-4941-aeed-8314ff3497a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48777048-538c-476b-b99c-1c566cd4aee5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e0a21a-1367-470c-b20f-247dc3351648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074c90b0-45b6-4706-a12d-1d591e890109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc3a076-7b55-488a-a568-787da90d953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e554e9d-02db-46ab-a162-684456f2c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa6927e-5487-488e-a6ec-deabf21b3c9e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c4f1a8-b5ea-4d4d-b481-d768e8c73314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794cbef4-71c7-4a08-b10d-c1cc2b14bb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873e7d19-fb2b-41e2-94ef-0d03722233ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43585ffe-265d-4e9e-b9c7-e965841db972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633d05f6-cfb3-4b1c-a1f2-fb6327fe4125",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d390340-9b7f-44dc-aab9-e551e7458d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e0ea42-d626-46de-9bc8-f13d34d6ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7797cd8e-764a-48ee-ae19-fd75f3c9bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb92645-be90-43ba-8db6-a16a3b758aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0db979-18d8-4675-ad83-b4da4e36bb02",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399992a0-5c89-46ae-b9c3-2b2ead4164a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb74ea22-4e1b-42ac-9cb2-eb620860021e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b4b589-b814-497d-a2ab-95df13f5cf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "294c3349-0418-4b6a-84e7-bc00bf6b36c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70a6b54-4fbe-4f99-b806-bc5b4f7eb6b9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08fcdb8-ef8d-406e-b887-a6bfdd96338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715dd526-409b-4c5c-9418-f180eb9e9be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f7dbd3-70b1-48f2-9a75-450e1a9ff215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bedc351-b44c-4865-b457-bcc764de9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915ee96b-ed74-4b92-9211-0fe11d9bc8e4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb9084-3c0b-4b8d-b755-63ca2ac3f53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc93607-20cf-41c3-9f7e-ac12aba84336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b02603-c79d-4d5d-a5d0-6f787e53bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0495b33b-934d-4e73-980f-70d3003bdbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa87d37d-2f19-40a8-8c47-8f7af8a3fca7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0da90b-2efd-4019-9bfb-06aca461318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e42816d-c1fc-47dd-a13b-561936a33853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bd50f3-d623-4a52-a125-6f84724ac866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5854f673-d03e-4d52-95f6-19daf17b2d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05944d8-9eac-440c-b171-7012e196b641",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f6d1cc-7a89-48bc-a1fb-57bacd6b2aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986237ef-7d30-40c4-904e-44c403d24ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2937e3-58d9-4216-abf9-667e521ef899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20d0147-f0ff-493c-83ba-98c59a2d0342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ba57e6-7362-4cf4-bd1a-57bd8d11c253",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e61fa1-6656-44cb-8773-28e775f86c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38182817-935e-409b-88ea-78d426d08305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9acbfa3-f6b7-4e4b-82e0-57dd9126b8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a5c08e-0696-4775-bf60-13e0017568d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1639cdb2-f6e6-48af-9466-f48c7d0cb677",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c2c4b9-ff6c-4386-9463-38d5b44e6047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194a3502-1db4-4176-ad7b-06eeacf3a0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6228ace1-889b-47e7-9426-ce152da7894e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09dba22b-ef42-4e7c-93fd-8904519f13a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202b898d-58df-4fb0-afb2-eb84e78e99f9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b29c4f-6c3a-465b-948c-09ce4479b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7207517-8527-4d81-8520-3124058614f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5990470-8387-48d9-a431-fcd08dc9d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d2b446-f870-4c04-9983-c738ec7e7f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f8b22f-a281-46bb-b5c1-45549f100b7f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cf7c71-b2b3-4af2-81e0-fc2ab9e106b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0445d4c4-2e80-43b4-a808-1069293a6d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114460b8-e49f-4873-94f2-8926580c3bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3af832b9-f673-4b49-930b-05d506440960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4496b026-9c9e-420c-bf23-7fea9120a44c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d109ea-6fa6-40d2-9a89-69d3b1ccc352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6aef3f4-cb29-4a38-a4b3-64abf685ba0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd84f50-6d74-45c2-a5cd-8ddd78df101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fe9312-01ad-494f-b42e-926eb10cc560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adafaa9-80bf-4e3e-a413-dec55aafb256",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564f74f7-7cbe-4db5-ae66-ebf35853281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dada55-a25c-47ca-b9c3-f6d7c1c26321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce920cc-ece5-478c-856e-ef15e3169579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc2c992-17cf-4969-b693-66e9ae58c0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284357e6-750e-4e85-9ceb-746b6403fb8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e2cf65-2ce0-43da-9f80-fd29e921a9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd03c8be-233d-47ec-afdf-df1ea6069aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3180d3c-3268-427b-87a3-0badcef7f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bacf1c0-1b1f-4b8f-8d7a-5a2fdf1556c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88adfc7e-2e3e-4255-bde7-296bb661678d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f70e7-ecbd-41c8-bd02-412a509e286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1541c051-5c33-48f1-a28d-997e3a040c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b9b2e9-ad58-45d9-a5c8-3e48872dcd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7eeb7f0-2a7d-45a7-82ee-6a6d175faec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ea2cf0-d0d4-4739-a095-857c91e11a40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449063cb-f584-4863-975a-3d75a79e9a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e2f88f-b388-42d5-9eb8-cd7320708f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df0a749-7d8e-4cf1-bdc5-2362cfd3f87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "42290f2d-6206-4ae2-aa3e-4fcd74f06a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea52aaf-2115-425c-99af-96d96e7b64f5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe3cfd0-162a-44c8-b72f-1a2b8d19e090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bfcae2-2832-4dc5-b15d-e4b8585ff648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bf4855-4ce8-459e-9194-5efa8f5c25dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4c362f-4c1f-4932-a680-17b7073fd23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4827eec0-1165-4bc6-a68b-d7c9cc8be23b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ae281-346c-4205-b1d8-0caef5e790d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfe4151-ec43-412d-9f67-32617ec56a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b01e5f-df5e-4f4c-b27a-9ddbf7ed148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "11fbe9d6-b593-48b4-947c-5da68e6bcdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f60f3d-de92-4460-9837-008c761ff374",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2bf30d-3885-43d0-bc27-3971fe1768b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da024d74-8ab5-4cc6-a8ae-b7d4ed27edcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f37d5e-d608-47b2-9b9c-257102b75cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e22a33-6af8-4532-9555-446dcad55f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e02358-8121-4640-8da9-3016209da192",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed87db77-39a3-4ab2-9a4c-82e554930995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1356ad1e-b0b9-4626-ba87-1e10827d59b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43269ad6-8fba-4165-b4f7-a791a5267ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d435edc0-b476-465a-abc9-4233a6491791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf21d5e-fad8-4a14-bb92-f59842f21fdb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3d97dd-ae2e-4a6d-b328-572d13a91970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfcf1b1-b23e-4c45-abff-dc7839e44803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b728d4-12cf-47a4-905a-4e95ab3ff034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9932d60b-628f-4042-8d73-fdef93cd7bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5243bdf5-9aae-4f58-bea2-be9cf5a37ebf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f6db45-c866-4125-bee6-e11349ba8a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d70ca87-cab7-402f-9637-c17e238379b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb47893-740e-46a0-bfdd-0825ee62becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7285514-b1ff-4dc7-8832-f16bb0d8ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48103d07-7805-42ff-9f44-0653aaaf4077",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a02fd9-3cc1-47a7-b8ba-616a1dd12468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7239bcf2-f02a-4958-97e9-637bb6f6e2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4696cd51-8861-4d0f-9772-f07d48fd98d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2136370d-16c7-493f-bfca-f9b99269951f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20e104e-d717-43af-9f39-34a8051cc385",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d45a5e9-b5cc-4971-93cf-c8efc9664e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c6a052-cd47-4f74-bf32-859b22619ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb402a-d819-4ebc-8e85-4866eacb4d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afb819d-6321-416a-9a1f-5a2f13874282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d09509-d45f-477b-9fdd-33bfa2870e3a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9801469-3438-488a-a6ac-e5ad0f2882cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b99ff5-8c43-4610-a08a-5183a7c7fef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b416ee0d-c343-4047-b349-4244ca2db736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f947ac6-5093-4cc3-84de-a15c4b0ec7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c96140b-aedc-4836-9bd7-ad7b6db31767",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6d4035-9ed0-44e2-84a9-28e0ed1b6795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca80b08f-16fc-4820-9bb4-c65ea21f308c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b20d9c-cc80-4b76-85ab-89839052cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c72e3a9-8d28-439c-826d-87bfc99b32ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caddbd3-7dbb-456e-a956-8153d08fb693",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e19c45-c640-44c4-b8d9-f8cadbd82cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed62d8db-eab9-4f1f-b6ce-be6abfbea025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594a7815-f68a-4b99-ae83-5879a25626a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4e9bc4-2683-466a-b7a0-ea25b05fda1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225a4e21-b147-4dda-b421-7b4b24059150",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8546c536-e70f-4971-8d9a-df5eaa1991da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df1b88c-41ff-4237-85d3-13b1667edbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011e04d9-e03b-45bd-988e-c0ecd0843c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ae1bd1-1604-4fe7-bb9a-363c3c96e7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74995f5a-906f-4edf-8410-7a4a8fc81655",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966c0ee5-fdca-4682-9d30-93e0e9edcfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581e86fb-a22e-45f6-9dad-42bad7dbc89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6759ff-8a60-418c-a545-bfb495209b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17246573-1389-4ebc-b26b-2609b6dc3941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342aa409-7147-4a98-bbc5-cb7b09efab5c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67ad8a4-2be1-459b-b68f-6a84bae60218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f3778a-2ff7-4fa4-bef9-42a35fdb70fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71bd444-ae0a-4d16-b00b-517100a77078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "101279a4-9cb4-444b-9d1a-54b9e4111069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26584b3c-5f53-4659-964f-39329a54dbb1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e52c0d-8d9e-4610-b6e0-704cfbc00236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d732694-4ff0-4c26-96a8-b0e5a418c295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a405778-0a98-47c4-ad64-1350ae05b6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0989432-e7b0-4d15-a455-42a6a0473a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2844948e-a01c-4dbf-98f3-67031befed49",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77361df-a9d4-4033-b19c-d4e5dbae186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f3a834-4767-4284-837b-eb1726178701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71feb75f-ccd3-4830-a6e4-fa6d665573d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf271788-21a0-4a37-a3c8-efc8d4bd9c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a72553-7796-4b1e-88ce-0084e98b607d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d7fe83-6047-4dba-a551-49718b64f69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2cb9a5-6514-4166-b18a-60b49e6d13be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08292275-5a48-4338-922f-303d17dfff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d4392c-c32f-4492-a55b-37a3cbfe526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e22e33-b333-4abb-a84b-0867337f6519",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b570bc2-76d1-40a9-8c4a-b37692b62c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3eff712-87d1-4b36-bf9d-ab626d6c8268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd715347-3556-4b08-9c99-7bc6cc208326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8b3041-e2e2-4bdf-aed7-a3c8646124d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fb4e0d-d7ae-434f-81fb-8952cef9e2bd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3afb97e-4506-4c9e-bbb1-ff68e59fae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9804a8d8-3c71-4460-835e-edd505d2c8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b59621-c19e-477a-aa1f-fcd17c6da0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "700d8ee1-2580-4dc6-b5eb-beaa14506fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4642bf57-719b-4eff-98cf-f7128e94f246",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85109882-b653-4355-b007-1de07d7fd8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082183ea-6f13-4fa6-8d9f-c5d2823e583e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20a91b0-f1cf-4728-9eed-ccb262ab489d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "253bb8a4-b47e-4de0-b0ac-8b8d74ca4f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18270458-1782-49a3-909d-f28cc247a703",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdaef39-2243-4197-b7a2-a9e9593c1d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e120ab5-925b-4696-9d0c-86b8deacb294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95567b94-29cc-4a88-8441-6cb43c186010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "797b1e94-ffae-4d35-a6fc-13222838da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed03f0f-7b18-4018-a3fc-ac18aa688b38",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295b3cda-978a-4b00-8c38-45523e63b200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b55891b-c115-43b4-9321-3cd7bb44533b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825dd800-102c-44d5-8c16-fa055dced645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0475f1d4-a5a8-4245-9b57-ccfcfd244d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da83d8de-2a62-454d-85c9-c78b6cfbeb15",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b9489f-7ad3-4d9d-8b09-74e7c4d1d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6be3d71-f306-4db6-a2a1-f09f4514fd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f52cae-eab2-4599-af4c-2e4bf4808aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "590d1a04-881b-4fdd-9dc0-cd4654682868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026cd66-d5cf-4e6a-9758-39f0aaf7f84e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f00234b-ad15-4c74-9807-ea8f786c24d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f7cdb6-d3cb-45f1-9dc7-f167a248f801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7241df77-6c71-4237-9cf0-c556542978c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "214a32bd-67ba-464f-bebc-587dd605d0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4053c648-5507-4930-9c84-39ec1bca49ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3c0acf-26e4-494d-8ffb-e533bddad1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eddc4e3-3436-48a2-b7c2-bf25ff901cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e64420-0934-4b65-8192-6538f16b8f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8228583f-ae31-413b-83e7-0ff0425bc917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e23595-1eb7-4c5d-9b21-58f51a2dd2dc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1708dd06-4b32-4624-aef0-a8dfdb59d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d2f123-e354-4858-a269-a4a26df0d1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d21cce3-85cd-4267-b6ab-c6c8ec8cf431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3554e46-969f-4b02-a129-be91cb495da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8430703-211c-4227-a2fd-3a3a4b3a678d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5624951e-27be-4021-ac31-eac0355f93a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10753fd-51ce-47f6-a81f-06bea05bea74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dfe431-46c3-4966-9a21-b945a566ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9baaaa-e356-417f-8992-b92e1acc2312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bbad86-5876-4f7b-bd9e-0d0a5a89d222",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c887fc9b-2ac1-4355-b999-e072a6ae4d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf496aa-37ff-4230-8ac6-7f32da446707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3de49a9-22a1-49cc-b007-3f2b73d00261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91c9be4a-f8c2-47ec-a557-8eadb4ad54d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077583c0-9392-43e5-a509-61f8ef1d5a77",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9312cfaf-1da6-4a0c-847f-2bb806f61e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f919eb5f-3446-4327-90f9-fc3feb53a38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9ae215-d6b5-4069-bc1c-54949f333301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af0ff6fe-d1e1-4d59-8da6-6330f73ce96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a01a70c-0ee2-4ab6-973a-90bb7a4ac7f8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d953ae4d-029d-48fd-bc0d-c93a2e96d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c10b60-fe98-4f56-952b-e3b58d0e7203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a9823a-fe1c-4b31-b05a-eb9d975ccc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8853d44-d33e-44f2-b637-d5f01cfa962b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9becdf6a-2c7f-48d1-9264-3ee9f7e9537c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f9129-af0f-41ee-9e0a-f93f58230c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ea1fdb40-2571-4a1d-97a5-061d0f62eee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fab05ee-c98c-4c96-ba6e-b44bd9879cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba1b5eb-88a7-4ca5-a06a-cd5e46ec83e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02e7f56a-1f41-4a2e-89ed-9b958dff3497",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55c51e5e-39ab-4ba7-acd8-1dcaa3b108d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821471e5-e164-4536-9562-91ec3b45ee20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2babe2d-322a-4dd6-9ba8-2d0553780c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a60b685-b411-4951-8f95-cd71c7ac5b4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f6239231-3fca-4e48-be1e-0e75dc70da59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290952e4-fc2c-46fa-9168-350b07987a7d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae294c-f314-4d91-aa90-576e0edfbbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85f8fac4-682c-49c6-97f4-33d022629a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8249783-7951-4137-a4e8-b5e2c5aab167",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "d033d163-1a76-4b16-809d-a027b5e76ddd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2526afa4-838c-4af9-b4a0-5d7d0ffea23f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2897973-cda8-4b53-9234-1e5e0f3036b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccb1ebca-7bdd-4b62-952a-130dc7ab7d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cb3d3a0-0499-4558-a4bb-e1b1431eda0d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "790af948-78a9-4280-810d-c7072a5fa2c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d0f9f15-19aa-49e4-9ea4-0d988486e886"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7636e506-4d15-4076-8910-1a9c8a78924d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64cd7676-2dfe-4eee-86c6-0638ab81d18a"
                }
              }
            ]
          },
          {
            "id": "7221586c-83a6-4771-bce6-89a5e7481d1c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32b50e6e-4da9-4b6a-9e57-57d6b339ea5c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ff3510d-418b-4848-bebe-442df38f68c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "726e4239-c0e6-4b6c-9849-c6ecd74f6a3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee231e9-196f-404c-92a4-fd3502d5cb92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7521441-dd8b-4450-a59f-32907894eda2"
                    }
                  }
                ]
              },
              {
                "id": "7244476e-b5cf-4129-bd7f-4655cf4b24c6",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac7b54ca-68fe-436f-841d-14ba4654d377",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4e8d3d9-b2da-437d-bbd6-0dfe6fe436cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2302e22-b2aa-457d-94f5-6fb9ec106e3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f466d78f-dbe0-4f32-8479-2d275c310a8b"
                    }
                  }
                ]
              },
              {
                "id": "f24d6a77-6cbe-48fb-a581-8548390d168f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7d344ce-1b06-45f3-97b3-f6bd8917a284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92a37fd6-44a6-4b34-9c62-e50c8acb156a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e61a36f8-874f-4975-b287-d09b281cbdc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18a8a65b-9519-4ccd-bfa8-7e7638c5b61a"
                    }
                  }
                ]
              },
              {
                "id": "ef2e123f-beea-4001-a4b2-f476ce8bbc16",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03dde210-53cb-48b6-ad3a-48f73b96aa68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "971d32c5-9f94-45d5-9e1d-4e9a37ad8e85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8f12f50-4227-454a-b46c-cc73b4553bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1ce3cfa0-9a53-4729-9c2f-d5358f8995a3"
                    }
                  }
                ]
              },
              {
                "id": "197651d0-f562-4c19-a525-2b9b6bfc3c3c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27a0942-1d0b-427b-9ab2-af2ddf552f27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1b8bdda-4dd0-4170-b3ad-24507991f553"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97e8f6f0-1f69-4464-8dc5-ee9bae52a3ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1c4aa5e6-c5e4-4ef5-8fa7-a81f55418739"
                    }
                  }
                ]
              },
              {
                "id": "2e4c7754-580d-49bc-a098-e360acf6b42f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5a872d2-44bd-4d54-9822-bad99eea7ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ceb1bef-04d5-43ed-844e-5ab172df9dde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77df4bdd-9398-4fc7-802e-4d4ab172b24e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7ca4c7c-e5e3-4537-bb3a-7f3b2fce6b70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68b15d2e-29d4-4d2a-86ee-bfaaf91094b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14cce610-ed42-445b-8634-c42e445db4ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a81f858-8843-4934-a2c5-b96257cd68ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a6fec5a-b4fb-4263-896e-04edb7756dbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70d0767c-6eb0-4fea-9e1a-ce801434c1ca",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d22e4183-10ee-45a5-8f2d-a530e8f70d5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97b36f69-bf6b-4d97-911e-8085507047ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a620daf9-157e-4a02-9efc-115b0ff1d2d2"
            }
          }
        ]
      },
      {
        "id": "966b45fc-ae19-4b71-959d-cccc72647be8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "46512e7c-be0e-46b1-a1c6-e184a73b0692",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a351758-230d-4c30-9137-a5989f5a0254",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a88e28f-9fd1-49dd-949e-564e7bfba0a2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38e03a0-76af-4790-af13-627a3c748414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af5f959-9ccf-4cfa-985d-f4705e8c038a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db38762-a461-4d4f-8a54-de245db8df18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0924dd-83e1-4172-ba08-d79168d36e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24df0e20-9bf6-4cf1-9687-c67e3c4f3caa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e482a97-5a18-4a13-a8e5-c55387759d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9f4508-5640-4c1f-a7c1-ab3e1f9a17f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c0f435-a1c9-4a0c-8b35-8e6f72cdb1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f2229f-4a62-4b25-8e01-9ce4e06c7c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6195d98d-b4c1-49c0-b34e-2045945122f4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94840e66-3941-49be-a2ee-e216a8e19644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bcf6c8-a34b-4a9c-a7ca-e3e4538abe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e824a7c7-32a7-4245-aba6-cbd0313de20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd035366-2fdd-42d1-9251-70257f5e872e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d545c796-3d9e-4b18-bcd3-532ecead852f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa43459-3217-4f83-a26b-8c0dc2a2b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a631025-8bbf-469c-a163-35d0868993aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6726b44-7478-44ec-86d6-35ace4c11864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd190b-1238-4ea0-811e-216fd3a6f039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f1350-b503-41de-985c-81becf3bfd47",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f2a60e-5185-44a1-bb07-e451ba2464a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd813cf7-4b7d-4765-9064-8c6538f36fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776c87bc-2d7c-49f8-be6a-007a0957ba09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc6d2f4-71fc-454e-82c3-81c7d7bb00b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0763c1ee-2340-49a1-a527-14e6147bdc64",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65340c-365e-4e7c-82d9-61b1f4d6ce44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8226e7-2394-4cb8-a3bb-ee54499e0f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c854f4-5ebc-435b-bd40-385bc228e5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4aa56aa-bc9f-4640-92fe-a55815a0cd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67f07aa-0324-44bb-ab3c-8b10251898cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeaed2e-bc19-4ba7-bb1b-04ea45915e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70507b44-dcad-4af6-88c7-5d11184346f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171b3fc0-c682-48d7-ad7f-f7f1a289368a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "725bf420-0c95-4b6b-8c38-b3535d803876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1bab0-3e1f-4cc9-a8f2-1e6b89be4047",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1307554c-4cd1-4fd6-8b83-90df1e5fc68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eedc081-1853-4949-a246-c55a00c05d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5858d01c-87e5-475a-8b28-1b9497823580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14df63d2-bca1-4678-b8c9-e19ad2093894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9bb463-4df7-4e03-a240-1868378c934d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8547d8-688f-4c22-a8fe-3d9d34a18707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d2e870-a50d-4680-a2dc-d4ee8364b7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4ee8d1-8483-45cd-ab01-4b4ef760bc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a291a75a-ea14-44bc-9d09-cc8ef3ecce8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10b2ae3-6bb7-4241-94ec-62314c03f171",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1e0f99-eee2-4b54-baa4-a9b49b536201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d23031-9c25-488c-a6be-f4361172b056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dc1762-b1e7-4bae-8f6c-2f667a116b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25aeb96-de62-4c70-9035-e0187a831398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ff11d8-f709-4d81-bc6e-65c4c481b48c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb8bc92-d7fe-46d1-9339-1cd2ffddf04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4591ad-a010-42a6-a0c1-2983acca6e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf097d-b135-4172-a2e3-dc4d3271e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "583cffc6-9256-440c-91f2-49928ac23a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba0ea15-c75c-470c-8099-d596d5ff0db5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2664212-3f96-4623-bc1d-16579baeef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a984845e-986d-406d-96c3-f5037f2d7338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6702da-fc1a-43b0-b0ee-d2482fea5a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "458c5681-c180-483b-be3f-c675d29790a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795888ec-8adf-4084-87e1-2c29e4769f7a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab483ba-02d7-4d17-8d5a-b859b439169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52d2263-6e59-41c2-a962-83a8d388ced8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3733365c-4a10-4324-894b-b94b3a4fec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "173e07aa-70c2-4a08-8dba-6f190f3245a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72241d79-371d-4cf4-8472-4f4630798635",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de2cfa6-b55e-41d4-bac7-a303b31da19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea34398-bc65-4fc2-a29e-4871d7f73de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534ddaf6-9bef-4e0b-84bd-689b2c75d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c919050-046b-49b6-8765-8c2d7aba12a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ea084-7985-4cbb-a212-52fe451b0780",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5e77c4-22ae-44f0-8988-2584a62cefa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984636e6-5ff2-4e63-9f9e-b3d2878ecff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d9e209-02a8-439d-9ed2-c8fce54a29b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e75b55-38ee-4c43-983d-5210d1809123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7559670c-ed26-480d-a682-0f8bc7bd5cb8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852cf739-674f-421f-b20d-3b3c4263b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bd85b8-0d60-41d1-b1c6-3914c3c56ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a93e36-dca5-4f94-b744-0b7bd69b1c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "80419ecf-652d-4169-99f3-ffe72622e5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb94104-a1e2-4209-9c7a-c7d6ebb13589",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a329300c-45d7-4420-8d63-72ef4d1008ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0199e4ba-3b50-44a0-b51a-88b3290331cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c9efc-0b6c-4132-9066-41ec6672653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd013d57-003e-4de4-b786-f87d6271db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d500499-20e8-4c4f-ba71-84edb3fa46b2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21927b28-dd24-46a5-8603-10e91798f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679c408c-92f7-4214-911f-10cb58b85067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789cce32-0c61-43c4-8961-f1a60c1735ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c49522b-95b3-4d7d-9f52-111e2ddceaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dbdd7d-1aff-4cb3-96bc-34f7e11db60a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42af678-b20e-43cb-ab3d-06e55ccb7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f93af5-4748-4198-a3c3-d088121845ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f493cf64-f9d0-4dd8-850a-7cea38d349d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3562860-eff1-4546-9d23-fecabf1e7551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f8b6a6-c5f0-4e2f-bff9-cbe425cba37a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c277d65b-4ffe-4aa5-b468-cb648e863360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a3a2f0-a6b6-4e2b-b335-85ae703de1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a37bb4d-da2f-4264-9a32-5b2954427f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128afd2f-a1ef-4693-aaaf-1f9107e71b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554ca564-8e45-4a6b-9ab1-dbaebe0c2401",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c431c44-ef73-42d4-8236-0b772491f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fbe0e1-a9d3-4ed4-9376-0b29716857e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a4df71-d973-453c-b4c1-9703e92f2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5db6d99-e9b1-446c-990c-d312212ff462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93ea755-ccc9-49ad-8e51-a64bbb7fd98b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ceecb-ceee-4621-b993-c6ea98a25d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65aa4cb1-4c1c-4a85-aae1-082590e83a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d8a669-6432-4cee-a9ae-35d0091793b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9ff71b-f8ab-4a3c-b53f-898a9aa25c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8da8f30-07c3-43d0-8553-f757b9fbe0c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329fe98a-42db-4b3e-98ee-4269c87c0279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc29f980-09a3-4704-b79a-e4fa61fc8fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce55f575-8133-4037-b865-de12f82ccc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf946fb-1095-492b-a94b-884ef3541cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48814b1-5e04-4acd-8507-4c5d08397a0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1284af55-09a3-43f2-9430-a779dcf49e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3f14ff-4c2e-42a5-b6e5-c4d8577b967a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec411c6f-dc5b-4bde-b716-4cb50bd883ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "681ae82f-bde0-4969-a2b1-7974f16b418f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc1425f-4c74-4395-b22e-7d15677168b4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f792302f-f1e7-4a61-a78c-e0d49e7b4f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff76faf0-2cdd-46eb-9eff-c9761a513340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cd1e0b-8403-4ce4-bc1c-bf29f4a479bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3664a3db-7b12-43d7-84fd-c4fc1bd43cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa0dfd6-03f7-4901-93f3-e40250c23c00",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b8513-fae5-486d-93a5-e2f525810432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4042801e-5060-4e82-abf9-48043e8a6f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3ec54d-e4b9-4497-a0ed-73823879dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9411f2dd-9791-4cbe-8074-ca18198034c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495f95c8-9b8e-46ed-bde9-2d746f873fec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5179f5f2-2d4a-44cf-bb68-3e0589a25b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f64ffb-3521-4064-afbe-be6241d8a955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d1e211-3015-4393-8c7d-3591c8964a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d178d2-15ec-4b10-897d-1d171d773194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f0318a-8bff-4963-b897-b58f68ac5e0e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886fafda-0c3b-44a0-8db8-72b3ae8100f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1efe12-2286-4d97-adc0-8f820349bc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfe7238-0c2e-4974-8629-892e10018994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "886ee53c-e4ca-44ef-b5db-d2558aced882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cf75ee-76a0-4462-b1cd-d3b8607e05f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a502336f-04d6-436d-9d0f-a557650ad751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be242b8d-a7f0-43e8-a772-c15357836030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc9c7c3-166c-4cfa-82fd-e5df48e73bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4148a0-52d1-408d-97a0-37de88d85d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a16aca-695f-4bfc-8d5d-1786e029223f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a8b8d9-a09d-4a1f-9c68-6446dcdb70d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5cdd40-d3aa-4dc3-b888-05a50cd9d64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c90719-b7ed-45fc-9afb-a9aff640aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f005b3b-025b-44d9-99e8-15ed09c4a8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f41af1-6fa5-4cbf-91a3-1de30c465110",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cadad34-80dd-4252-b3dc-cac5b8d5b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b568b3fa-eb05-4948-9c55-ef50b4d01eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e168ec1e-8051-4186-a0be-b29fd20511b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29caabb9-03f5-44e7-b8d5-245b94ab5ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdf8f6e-150e-442a-8e6a-422814b9dedd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c273e5-2603-4290-ae98-11398f98482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a746dc4-5bd3-495f-bc34-f78433156755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf63a5-a40a-40b1-9719-c8e0e9ad74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42e6066-ddad-4595-8ae4-fd3ad8c5b815"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6c3b17c-5bfa-4ab4-89c9-571366bd70a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "270c9851-78d7-462e-acee-e92f29fd71ed",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a0d76d-c366-4bac-9ebf-f1a44edecbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99281ad5-297d-4738-a8fc-6f6621d60f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0da0d6-6da6-45aa-b6b0-e6878ebb0082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f8ca7c3-ebb2-4f16-9295-b6d7055bb8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e608710-b757-4f86-b891-21081e9a16ce",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6238f3-27ff-4ea9-98b0-912708268798",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "3936108b-a6be-4acd-a2e1-caebe895c8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea217f2-e7dd-4d3d-bf78-e1a3b9644357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff9c97c-00e5-4d4b-a856-243bf69f2da2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96f87d1e-ce96-4ed5-af1b-98c0b1a7bb3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7379f4c8-96aa-46fc-96a2-86d0a1893313"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3e0b88a-cee8-4dd1-86ca-6c8709179b4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e531ae39-8611-414f-bf7a-038c004f9f9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f233272-9427-4d7a-8396-9fcceaf20a57",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8773e554-32e6-413f-8d1a-14dba71c65f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8308ea0-878f-4595-a226-e2be6f76ce6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f231b92f-44c6-4310-90b9-bc9890836373"
            }
          }
        ]
      },
      {
        "id": "b4036bec-0b2d-446f-924d-b5e184f5e4d9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a036b9c2-e121-44d1-9f26-e2eb4963fc6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2466326-0079-41ac-af29-4348fbc46aed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f46c4c81-d9d9-4fad-81ff-eef4dbc462b3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee4b946-d7c1-421b-a194-c7a82cde9a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b09bf40-4ea9-45a2-99e4-135652d9a23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3bf806-905e-4157-a645-f31b7bcd0bd0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e7d6e3-e5e2-419f-8ee1-b6aa6cb4f4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8a697f-af4b-4c73-a409-3a59d775a889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab4971-2441-499d-9fa1-65518b25406a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df957812-60e5-44b5-aabb-3ff477ef9d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c06f11-ac78-4052-aa67-d48df5a97c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3389c7a-1729-4a9a-858c-6d20686c502a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603467f1-fd6f-4048-9da5-e92e0b411eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1765ba-2120-4b7c-af3e-6ffaeea44a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b5c5b-675b-4692-83eb-75be020c8fe5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596d2d7d-2ab1-42a6-9eca-3b5c095ebf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139aa490-5a32-4265-b246-60be96c401e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084c3308-a08e-425e-b918-57696e6a2d09",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe62b79-461f-4005-8933-c3dd8015525a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b60b716-0349-42a6-a3ce-cbc702f3bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfd3110-1e95-499a-bf18-75924cf207fc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102b271-e292-4964-9b82-d6bff97abca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10057395-e4e7-4154-950f-5ea44982aa41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f939570-4203-4122-aabc-77b2cd683ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e2e8ea-537d-499e-b4d2-da38e61b29b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0fac5b-88c1-49fb-9708-2edc9f2c385c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e6e1c7-c96b-4a4e-a147-1025f7bb2eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0e9b37-b957-45d5-91d9-6efb577eef4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abc1313-9428-4d8f-b54e-39749274c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b29b29-163c-40ff-9bbc-1da535e7f29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7584413-8476-4b4b-8b31-affa3914f057",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cddebd-9936-4b29-bc3d-eec3b2d962ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565ae19a-5c4f-42be-942c-32c6ed6a449a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46517bad-b181-427b-8cf4-f0f487894249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3e4d38-dd6d-47f0-a20b-d3ef3df02589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214f0f24-fc4e-40fc-bed0-9ce0236c0ed1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4625d82-a4ed-4e9c-9c93-98e07c85fd84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3817cde-08db-48a5-a9cc-97931e541e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe48338-9640-4354-8a76-839e806d39a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695372cb-5cb1-443f-ad41-9712678db7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccd1b25-79cf-4729-80dd-bb7e569ece0e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc535c8-aa12-46f0-a9e5-122b63491fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cadf3d3-785a-440e-8a6e-2dae46c2abaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b041a34-a233-4e86-8817-f6ad6950ff77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a01ecc-9941-45eb-80b6-5c1d9cf20b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56928bc9-8ac1-4a1a-b837-66a89199302c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f5672b-10fc-4f46-a9a1-85123273933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fff2e9-867c-42c3-98b9-8cf379b66d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ce6519-dc05-438c-a783-6bb0abd2d8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9197e9dc-68fa-4567-a6ba-0594f4b7349a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e57e301-f2e4-4359-9f9f-fa95ebfe79b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074d076f-2633-4e5e-805f-9fd5c2aa2046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5a4135-7880-4b63-be91-35e884297b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72e4e0-c1b4-4247-82e7-673d0592f1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d9bad7-9e4f-42bf-b2d5-fdf8f9f4121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d368d7-a02b-4aba-aafa-8e59eed94995",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2d1b25-45b7-4ec9-a968-69dd790f8de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da79f960-10a4-49b6-b948-11247470b67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff51fb4-57ac-4087-bf77-57b1948cc50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778b343f-2c6e-43aa-bd22-01102962e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeea156d-4575-4fd8-9992-4df99dd7bc1e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92373276-bab2-4dc7-8cca-5b6eb2ee7942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c5692f-b6e3-4567-941e-ca8b913033e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3678171-a8e2-498b-96e9-14b65d5ef1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650fefad-8fce-491c-8bf6-1ca6c272fc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82750a3a-81da-4f82-a27b-12b9fcf1048f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60327411-d8d8-4e02-92d6-5646d440312f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c303b144-dc9f-488f-8103-7ef0681f5254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c749a2-5159-4696-b433-feb80a936885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d3ff5a-2324-467a-9b70-63d1dce03b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6dabae-4ee7-4c2a-bbe2-339553fd1217",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0246d6b7-c0a9-43e2-b0c0-96d03e6b5cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4144c0b-dfde-4149-bb59-92b4182204c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6733c48-7472-4d54-a38c-27d2dc658e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a58656e-0a16-4abb-bfdd-454db873ef23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8277bc84-25a7-4bed-aa65-e859e9948ec1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dc5b03-6480-4896-bf14-686dfbaeba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4dd582-e714-4c9a-94a8-ed735d2dc188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5531886a-b09b-48d8-906d-d315371ab982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eed13ab-0f30-4540-93d3-0eac17ee5122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7754f6b-595f-4b59-bb9b-272a56fc9532",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35f4b2a-e7bd-49db-8b94-f5c937de76b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138f3007-d738-462d-ac4b-ff35a82de1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed30586e-f565-4f7e-b1f4-67e7b386c039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3de4efb-ddb6-495f-8a33-dec63ae28a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79b1ced-fa8d-46aa-8643-8ee9d2d375b8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86996a9-abdd-47e0-a66d-debd9fdbde9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fbb036-195c-4fd1-8368-1ca8cbb7f4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4086c4bd-9d35-41c7-bfd6-880811efb892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38c0a39-9ed5-4d77-9e91-879900642189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a0a151-2a69-40e9-87e3-9487837e792d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a20deb0-56f6-4a0e-9114-250126a6ab7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db228ad5-666b-45a0-bf9b-350d81f362bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2fabd0-c241-4c00-b9f9-a6fa3f3f26a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407cf28d-d120-416d-8c2e-23c33712f384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f157a9b-3637-49f1-93aa-2a391abe827c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf3d5b6-5219-4fef-bb12-a4734e0fe059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1708b324-a5e2-49e3-a931-725ff756a1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8272d37e-f66a-46e8-acf6-6f0440eb83f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1afb72-4eef-40d1-9778-08c5f4cc9635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951b2960-a1d2-43fa-81f9-2afbad58f432",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcd0cee-7d30-42dd-a08f-3d2fd32f5236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cb24b4-9451-4d00-b23c-135dd3360e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4008e5d-1105-4c8c-ad44-26b866959d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d0bef2-5d31-4f6d-a9c5-8827a7b9f17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7514b441-eb34-4ddd-b2ef-f13bcad92b27",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe211314-c13b-414d-ba2d-02f3ed4334ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae37e901-6dae-44ab-9dbe-2b1411178b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37be695-d9da-4c63-8f87-0965b870b774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b913ff-a2b1-489f-8721-10287a9df84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298c223b-3b16-42ba-8052-0fc0e205ad4d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b35eb09-0a00-4833-8af0-954cb5af18f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42e35cb-d361-4c54-91ec-62849b52ac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea47d293-bef5-4db5-8a3b-f454f6ac4c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12afd7c3-6d52-4424-9e86-28f4490ffe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7f8c7-a6ff-4488-8148-4f5eeaf35b6f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473c7737-306d-4538-88ff-f382913dce73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76170b49-33b5-4926-ac1d-1ee96f074f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0987afd6-3a1c-479d-a0c6-79377d8a2009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24821b7-784d-4247-8ce6-3ecf3f77a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3c9190-0e05-4442-aa91-58a6382fe23f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9086fa-82a9-48cb-8a2a-c5763d6611e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548d1df4-6976-49c0-8020-238c755a598a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3baa882-690d-4249-827c-8a5fc4679df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7710cae-b21c-4796-9e85-6dcde583607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a402d8f-744a-4856-86e0-96dd76edf8fe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05e21b8-ffa9-45c8-af95-1b306ba36122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b285bdd-a4f4-4ea6-9d04-bc841d5fc161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee062b33-3fd7-4f6b-a181-79b4b27123de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a49e1-8099-4d78-abab-f4ea306ac486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15085d9f-74aa-44ed-8f7c-f7bf120298c5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97852f3b-4d3f-4a83-88e0-175a7e694402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d419516c-8f42-461e-b9c1-e125178b5dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534b3dec-12e0-49ec-ad81-53754260e335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c339f8-3b92-4c3a-a9de-c76e8cb79f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f3d2ea-125f-4d25-a4c3-e662c0a612b9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca67829-cf1a-4e43-8da8-4e94de7b546e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2dab828-986b-48de-a65d-65c485172b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bca2529-5553-4ab9-bebc-4d537222618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b64e0b-e908-4b54-9a6c-56948cd698fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821f5821-fdf8-4b22-82a2-896104601a2d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aacee19-7ad3-4b3b-a939-fbb43a97534c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9bd6d8e-b951-4d1a-98cf-38573d3df9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0107a237-5fac-4820-af6f-70fdfbc0dfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d2e119-7808-4f33-9988-8ec9094840a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99af7538-6bb1-41b0-8554-3596b0ee616a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccd91bc-9980-4bba-8e86-0c2277dd2910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2897c100-f24c-4d49-9ee3-4c34168b8a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2048b67a-25cb-47bc-98d6-0c2d8edc58fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcd4ee7-aac4-4a80-94bf-9690c05ea93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1ce533-353e-4de7-9ecf-0462c5c9c04e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec61fc6-680e-47fb-8d33-d42a64eb564f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46d92b8-e597-452d-8cc2-69a6d5c68fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da606fe-4227-4d63-9876-75235cf44760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b146da79-ab39-44c5-8049-073c44a6f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f148214-6c12-4761-bfc9-3861ec0b835c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1688c61b-f44a-4744-9495-c209008180c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ea2d93-9cb9-4d83-8192-03c51536f407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaad176-1124-47f0-ba24-7414934a9c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0543b2fb-3d4f-4d50-b478-4d76a23f433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345a3d6-25c5-4511-86d9-71ccdee16c8e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68d3791-106f-420c-bcf2-1c1778486e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef824d-6eb6-4452-b54f-625ec19bcdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909a9c2-07b4-4980-833f-741005a8fdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc47c1c9-b4fb-413e-b32c-a0962f2fdafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53ba9cb-d565-462f-b7c6-5c429247c474",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4994e8d-f799-44bd-aa1f-014b522b3bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efb6db6-a2d5-4dff-a5f6-e36c815ebe8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2d4a8c-8b91-4dc1-bc2e-bdf07b3897a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdfd0ea-59a0-410c-926e-c8346ca7322c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81818ea0-80d1-4f1f-b7fb-26c961d2e8bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd9057e-cd11-4283-b8e2-c4ba91f50253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769dc4aa-5ccb-47cf-98a9-c6abaad8a9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fd5f1a-d826-4953-b0ae-d7febdf636b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae2cd8-b5dc-415e-bcd0-7b29227483f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d659c30-38ae-4ede-b3d3-47863220d42a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e8fcc0-a311-4ec6-b77f-7bb9f57f328a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f454808-9b0a-4c5f-8c87-10593d4d4afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96603ee3-6087-4b73-bd62-f7d3fe63ec6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0b786b-902d-47ea-beb2-e7df6523c7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8476de-60d4-4e65-8894-5fb544b58aef",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbbedde-1458-4d38-849c-2d0f473f95e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8cbbff-31e0-4247-b273-753515cd612f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524123e4-7809-4b58-96cb-5b8aedcbaedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb65c4a4-c798-4713-a343-63b9cda8ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa51410a-cd5e-4a11-b478-db1d61bd7560",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4055cc6-20b2-4900-9c83-69f8608b0955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d52fc9-27b4-4507-b5c7-6aa2455257f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563b70d1-d749-4cbc-8307-4bf963a7d758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4ef53b-0d2f-44c9-aade-94d7f34b55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bc53fc-3f76-4512-8498-7d52f62a687b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a562db7-8caa-481e-bc33-f3f054456c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c42abe-b84b-4103-b1a7-e04ddd85086d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693128b2-2852-47a8-80d4-3b597c46472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c16edc-516b-4b2b-b025-ffa440c5e508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f9a62b-0511-4b23-9666-054762e61c93",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4769e75-f490-45c5-9818-67d3179e70ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb6d5cc-fb8d-4061-9fdc-9ef39aeab0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455ff6f1-5b77-4808-a0c5-6ce62ab844ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067167bb-2be1-4673-9339-fb9deaec41c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fe07d3-8156-44b5-b7e2-13100e47b947",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee08885-cdad-49c9-8063-3420ce741b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5dcc82-950c-4450-8fb0-f6fce6ded417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b943ed01-2a55-44be-a969-f3bf4e46c3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31c8bc6-eb4b-4e33-aa74-aa25188252d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ad7614-488a-4e61-bd71-f12624a57774",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a637c00e-f825-4347-b470-ec245db3f8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426335d6-6eea-4d4c-be0d-bbe5758537c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4af765b-ba23-4f43-8da0-dddefcdd7bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530d0939-b2a8-4888-a957-2630e2f3e7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cba216d-8cea-4d0b-8815-ba749667ba03",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d6b85b-4b4c-48a3-b91f-507c55c24c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5852f148-c358-407f-93b6-7e11fb3f2774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c3ff3-6bc7-436c-819f-f30069310590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37035ea7-00e9-462a-a00c-fde25c40986a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c31fdc-6541-4fd9-b106-2839945b7574",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c112b3be-6618-4fa5-8e86-2a1f70c3b113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4c85f4-f5f6-4e94-ae0d-5a79a2785507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59cc05c-cc97-4dd7-9958-f9f2f19e73c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e269ffc6-58a7-462d-8cd2-8fd95f55d14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bd8fe0-c2d8-4866-b121-e3212b12ddfd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8336006c-a658-4df8-af0b-111b47c5b0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4581a86c-a701-4805-a185-3a33c889f9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1436b06-d623-449b-9673-af0d5d5a94cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7c04cb-5f96-48b2-8165-ec382f5eb030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aa3591-493e-4085-98ab-cc47693ec650",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750c82bf-d480-4e22-aca4-f0504a5e4087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b81a7f-35ab-465e-acbc-3eb81cb15090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596beaa0-26f8-455a-adfd-9fce75fb936e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db102dd-96a4-4183-b289-59500d42c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dffd7cc-5282-46ad-8509-a89426190cd4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f262f964-0f69-4c8e-8c4a-66eadba989d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57dee1e-5f63-4997-a844-3bc9a2aea952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a3e02-4e4b-4f90-8085-1933b1707628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77774305-e67c-432f-8fea-94427410aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935c6fe1-90af-4ce7-9760-120c2603e083",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cee62f4-4288-4df2-b469-613baef9bbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18fa5e4-fbac-41e1-9964-d3f12ee746cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a797b958-de6a-4c11-a94d-786b7e508371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0e41ea-eb08-44d8-95bd-1f9f57903521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5825d20d-9714-4535-bffc-3f42fbe34031",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5d33a9-8890-491d-8926-c05e183f6738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb37f96-25ce-4d4a-96da-ba036657474d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f15ea37-cd86-477e-97b5-c0c733ec0bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3ed43b-569f-48c8-9012-18ef82356d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab2aa3e-84da-46a0-8827-4013765a7927",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09d12c-3fa0-43f5-bf77-5a558a88e945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a74ce2-b88c-4c5b-af97-68cfefd1be37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac31c396-14c4-4885-bb60-95bad58bec32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8554f6-b9b5-4fac-b637-627b199d8d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471b8810-c5ac-4996-b020-0cce244559d6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080bd28e-55e1-4d4c-aad4-369c86409857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafcd706-62b3-4c1a-a5fe-381ce1005157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee564c14-917f-44d7-9661-dbd852f8f69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3784cab5-85c0-4309-af29-ee20454c7a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17169460-d8ef-4941-91c5-7784a08f9d04",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6176e3-6975-4840-b59a-9532338734ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a5321b-9f00-4bec-a3f7-0a7c55b0fd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8d7066-8567-4388-9cc4-a3eed21de496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04db2f10-e125-401a-9274-2762be780dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0969a4-02cb-4dd3-9851-f035300f0810",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d7dd94-c6dd-4d3b-b0db-5760a4989e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890e364a-0294-43cd-850f-8e16029115b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452598a0-1d40-43bb-a351-ecf340e70fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d733236b-8154-459d-9176-902299becbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8950a537-19d5-4f28-9b65-751933fb75e4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0f3f6e-49da-4b5b-aa7f-aeef8718cc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87e0e99-bbcb-447c-aa72-0eeb29b145cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092aefcd-41f3-4532-ac30-56e4613f30cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281e8cd7-05a3-4877-8463-f92ba6edfdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e46cdd-6a1a-46ac-8403-1ad5e83eb14b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0c1079-a88d-4c71-b68b-53413759b93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5773aa33-25c3-45e1-97ce-405c21dc312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820cf591-4978-473c-872a-495de3035cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b345df-284b-454f-9435-cdc0d9bf8b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dbf9f9-32e3-4205-97bb-e27d0bef9512",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a529941-31d3-41ea-8e0d-463512dbd4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9ae8db-e3bd-4be5-a385-fa9b023ee61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca0678-2b2c-4b1b-9ce9-aa57482a90fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f529a5-10fc-4c43-9bf7-2f8204d06fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d6b609-ed70-41c2-9393-d7fe5b0980df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629c82d-aa96-49e1-a178-2801c6de4efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858c74d8-b9a0-45df-abb4-caa4fda48ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3364e105-9074-4acf-a1f0-f689dfc74a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60776f1f-d2cb-4e31-9d6f-62f99cef3d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e759dae-1d22-40d5-b0fe-dc170ad60807",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b04208-7f51-47d2-b1c1-b8369a2560b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1973b29-5b7c-43cd-b94e-42bdde021b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaa3a00-5874-4b27-8cd2-da6d7677e2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfec69b-4fe8-4e18-9c1e-6af149d6836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572cb564-1f01-4b69-b4e9-830d6bc20364",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2067d1-db0e-49b4-8eb8-5b07069f3894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d89b94-27d6-4c3b-9a36-2c81e559a507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc253dfc-3eb6-4cba-8986-870e501af426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300842f8-0aa6-4063-9116-2f5c1d196c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c0e4f1-0750-4db9-8fc4-fa9e5c488d3e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958b862f-51cf-4e44-b7e2-54c7facf6fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1957b57-4b2d-45aa-8d0d-f033aacf09c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414574d6-81ba-4f2b-a7b1-963688783264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf704c83-ff63-48f6-a1e6-10b94fa79442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f27e6b-0068-448b-a4ec-c14d48315b3a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd3e5d8-d1ab-4266-8cb5-56801e42d604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8598c2a7-6dd9-4a84-9510-32166a88647f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb544b-aa30-4263-be1b-c14a51d8384c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7a756d-fb04-49e6-8924-95e20ab04c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeae6c4-f809-4fb9-a954-81f6b95de15a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f464aebd-ff70-4afc-9f2d-a8ce637e4bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6b7ac9-8d67-4304-946d-a84ab809e145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e88dc7-03f2-42d6-aebb-0f031ae6b62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8052f42d-0987-4372-82ac-194b60a5565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263f83fe-8d9a-4d40-b275-ec47ab6379de",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924cf681-9bc5-497e-a1eb-bbd4936048c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83a7fb9-c9a5-4b24-afc9-5591b1426947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9528f146-6c9e-429f-bb83-4380ef8cf6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c9a416-217a-49a9-ae8b-07ee57673e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cfba2b-b3d6-417e-9ed5-1f711c8f5cba",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d6208e-861b-4115-9eab-61b03c38c5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e45ded-3138-4c0d-822c-bd39ce42ea7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d90e0f-5fbb-4934-a1b9-0b83f9d62238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d6b4e7-e1ff-4bb2-8e1a-182c11198dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26e723-7526-4973-bc64-dcdbef24f470",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfb0994-41b4-4886-857f-e8f410fcd6b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7ed2b9-4677-4c2a-aa29-d2924bc39c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfe1b82-93d4-4343-87f2-1d2db2ea2ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ae32cc-3f10-4584-bd90-8cb71838d262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ea848d-42e2-4bdc-9078-f6f7ce3401f6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e03c20-1cff-4bd9-93ba-fee1651d4af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea4bcb1-c633-4c1c-b4d6-1e073317feb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe08163b-6bac-4067-ae23-b698b2a48f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1bedf1-5cd1-4d43-b23f-3223e13d11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cc75b0-382f-4289-b6f6-9383683004b4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e908f56-14cf-4408-9d42-4371967e1beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546b9258-4b21-4a8a-a5f8-18cc777fd34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521a6681-de3d-4c93-9568-3cf487e1bd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5e83c1-d66b-45c3-b2c9-50618c001a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19db158-a5d1-4915-b926-0fe2f4a9c9c0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47eb3fec-3aa4-4411-b17a-310a4b3004d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca738854-7a38-4b9c-b917-7d93f4bcaed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b56576-890e-4bdc-bfd1-cdde6c9d0226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f93ac2-a8c1-4181-a88d-7e31ddc070f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c3cf06-7d78-4514-9212-cacf1dff1b58",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4a9b8-cae7-4763-936e-b72f72aeb315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acf3e28-6d86-4e9e-bc8e-913bf1106f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b304172-958b-4914-a035-c1bc5ef09e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ff69df-0877-40d3-85dc-3bb93025a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2612463-949e-4330-8377-1690cb465528",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a5cc05-823a-486c-ae64-dfe01f32101c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc088b42-732d-483b-9a0a-41d1f91c4cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff953eb4-0a87-4c4e-9776-b03e578c0b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd046a17-4007-47d3-9e7d-80cfce3485b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06219c83-a44e-4c19-be37-da8f06dd6238",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1588d78e-d6dc-4795-a345-f877eca41c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34902ac9-96cc-476a-8ec5-91aa61f8655b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5914b9-b93d-49d3-a8dc-a15e7cf4ba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de5dfb6-820b-4421-9c0d-2763f38bd11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac8f29b-ae6d-481f-8a29-7b967f9ec462",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807866fc-5e2f-4ed1-a4d7-cd0a39feff4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe99065b-bdab-4c0a-894e-19bdb0b2f4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f27446c-5e48-447c-8ae3-f0a835c72ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f328fed6-0ee8-4e0e-80fc-0bad8decf57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef3c32-a947-4407-8264-f0339db429af",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1ba78-f3d4-4e22-8a36-0d520826e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2050f27-2a42-4a15-b226-172e642c3be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e0f4eb-abb9-4f49-8ef1-58bb0cfa6f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2967d1f8-b670-49bf-9575-d8fc0a6da5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04df517f-b26a-47ce-b01d-cf8c5d977f36",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c0b95a-9ce4-45b1-b795-5fe2fafbdcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bbbc4f-a258-4265-9d42-b8e7bb281302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2479a613-8763-4d4c-b668-39da959c6dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e3d67a-eaa2-4945-a5d0-c6d2d479c549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641579cb-b82a-4000-a73c-5e36374c4279",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdb7b20-bae6-486b-ba99-d89124ab8cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a18632-ced0-40a0-8f6f-feb3449f5e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835c009c-fd02-417a-8e7c-c451e02495b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17702d85-1f0a-4c24-9bfa-5eeb8d2fa942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1da5847-4d6f-4f38-973a-1a39798f0d82",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e16a4-a6c6-4deb-88f6-8ec9c045d0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdd864a-73cd-4623-9f20-7605f3d68a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2de35c-279e-4fbd-a7f2-5d1671b40d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b07ed7-1bc8-4130-a03c-fa8105deb6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff2151d-a762-4e08-b5f2-450ba92b443e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1df7b2-7003-4627-9058-060b0abec99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d80a50a-1d9c-40c7-9931-defe9adc9cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe8d9f7-b2f9-4f70-b3ff-ede429c7c013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d279cd9-605f-460e-8f27-52807c60023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de0e30-3db7-4114-83ff-c82e98874bac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9860d224-aa08-46e1-8b7d-0c24e6ddc4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885836ca-bc67-4d46-97c7-7e1bd4934f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d990894b-d092-4b66-b5b5-de98bfbed661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c4bf4a-b10b-47c5-9e7b-cb09ae1a467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fbd5dc-6511-4313-89cd-7d4ceee0b3d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9160db-b595-4050-897f-c80138063a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7faa9dab-8176-4c61-bdc0-da7187a1c98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aa2bcd-e677-4c51-8765-0a014369387b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b680089d-ac8d-4730-8536-fd7d759e967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30465b5-b9ea-4a6e-a111-b1ea64d8022d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2aee02-e469-4d8f-9249-30b705ecdcaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59ec679-3f5f-4971-94ce-1bbe66a7f5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aba15d8-22a6-4017-bed9-75b7ba6dbaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aef17a9-3f97-4143-a8bd-627f8b9a5410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f700679-0ac3-4d08-b1ba-a005bf50b049",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16659b8b-f545-4a24-a47c-10ebb6d7d38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb24c77-156c-4dcf-92f6-b8453a7e9214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8931ad93-5896-4569-989a-3e86adfaa131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b083f706-6986-4ba4-ba07-e67989316e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af91186-98d0-41fa-81d4-f2c56ab2b5cf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e11994d-be68-463b-a36f-2d63de007b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06a7e1a-3ccf-4e22-b23b-3529ca91fdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97522f7-02d5-4cc0-b2d0-46514c3131f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae3eea9-c75a-4850-8296-fd1c6ac78f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19f3f7c-ebcc-45fd-b7ab-b34c2d611b26",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0818fb-4275-4215-9eba-929743d617c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aaad675-9084-4941-9d27-a340f8825251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d9b99c-81f0-4f92-9ecf-0b91a966192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbac301-2417-4629-aaf9-f98641496835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a01a68-0f52-4fe0-938e-ea331bd0c5b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd937e37-201a-4b35-a16d-dbd5b59f7187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2460f1fa-7c12-4a64-a654-813ec86760fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde33e34-d969-49dd-8bbe-e7e84b336be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478501b9-d802-4a43-9612-e5f21642aa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eabd0d-19f5-4a82-be6e-92c5bdca1602",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97df0b0e-007f-462c-a5d0-da5151245255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341073d7-057b-44a0-8623-92b61e25b2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f1e9c-bd7b-4a68-8d91-c837c5cece06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c028c3e-b963-4c4c-adeb-10dd5964863e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c87537c-16ae-46e4-8324-038ad277b537",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dc7e4a-356c-4437-ad39-2ee6d5ee596c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d433a47-2448-4ec0-9c0f-599f7797c21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9783b274-907f-4d90-a12f-611829a444fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad0be68-e3a3-4070-b0ff-31ec49900ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f228917-dd8c-460d-9390-27d282d1dffe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85389ea9-3519-46ec-9e6c-76ebb0e6feb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d46551-03d2-4c60-9058-4716b5e27cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c225e84-f9e0-4ca5-916f-1bab4839282b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae1cc78-edf5-4aae-93fd-e5e54fe56493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2a2fd9-f8b2-4561-80fa-547cf03485f9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9413f1b4-b142-4c52-a373-02ec1b5a4260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763176a1-1484-4bd1-abd4-bcc990b70d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8cca19-5331-4fdc-8924-f75ebbe118db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baadb7d4-7dc7-4af6-b7fb-49ae4d7270a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593125bf-c9de-45ec-8da1-0d367febaa19",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e856f691-b235-4891-9700-462260ceeca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07938503-ddf2-40c0-937d-8a2ed6984bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb256d6-7c11-47ca-bf6b-dbb346683bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3447c26-d387-472f-a7b2-79d090edb875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f885412-3963-4e87-934c-18f4bb085e4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b29907a-e699-4abc-a732-db6c8292c97c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52cf678e-dc92-41c2-aa33-65a548c1ebd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9367d8e8-75e0-460b-b0dd-1ddef3214b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4691ab-b838-4d6d-836d-2c43b4a67492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d585d4-1b53-4b8d-8e32-ee9be26d595c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b74b49e-2300-45b1-ac5d-6b7c7d299f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03f3c5c-2bdc-43ac-80fd-53859005a833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9517e7e7-d790-4d48-a6ae-6fcab176ac25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1164e2-5461-4cfe-8dbb-9366f3383447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a971c7f3-d4f0-4c2a-808b-423701cf3fd2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab4fac2-4e79-4110-bcec-133e3bf12f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7f1e0f-770e-49e4-a301-fdb59e3fe69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfdecce-54d7-49fe-b923-889b5bea03f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce4ea31-2c7b-4b67-b9c3-bb25a1bc1d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a5dcf5-e524-48cd-bd6e-50b085df4e28",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4557a5ac-9a95-4b08-8116-7d376f15d65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7f6a75-60b1-4cee-93a6-bc7faa9a1f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb280f-a50c-47f4-8948-3459b5ddfcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e571afd9-640a-4a39-b5a4-da8a4e02a6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ed186-9f07-48bd-8c91-fdd9eccf5ebf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe50081-6e10-43a4-ad93-35e7b4ec287a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f419d8-b545-43f8-848d-22b1a4504928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c700ec0-240d-4f6d-b32f-dcdfc629ef86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffac761-b6d4-4ac2-a761-0388700d5bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e8af0f-a70a-4b66-8f06-a91d37086fd6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5368e44a-1b4d-4f05-be69-c1ec95f44471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416b1d7a-02c8-4783-b352-6e69151add8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadd5c08-9c93-4b7b-a2f5-43e15531c6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f1948c-a565-440e-be1e-e2490e964b79"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55c602d9-03e1-4e53-bd81-e128ba2d3277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2b8158e-a6f1-467c-86e3-a75ba24023e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e52899-3195-456f-8388-b69fa3d2068b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2963b5c6-b4eb-41a6-9641-d804e59d8fb4"
                    }
                  }
                ]
              },
              {
                "id": "f710df4c-0677-4cb0-9b1a-9e7ce84de508",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a27728f-b280-4163-8d9a-e72a3806354f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613edeb6-be02-4ed0-8655-a651842847ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "55a1c54e-9e89-4c77-9819-8b81e7f05f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4353ed-19d5-454f-bf21-7940fc89541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b66a94a-9a01-4413-905a-9219888cf518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba9d583-2380-4450-9357-1189e5014a89",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19c238f-ad36-4d98-9297-08d770831646",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f9a5a256-aff2-4bde-a0c8-c888abb4c104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4097fa-e556-46d7-9898-914cbc3355a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7a834bd-a16e-4682-9290-1e644c12dae3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a0a5853-90af-4fc7-821b-532da6ad695a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d94901e-31d0-4e1e-84dd-e3ee5f3964a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "601f76e0-36bb-4c34-a52a-18428b97e2aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c42301d-d01a-48d1-91eb-ca5a65178fca"
                    }
                  }
                ]
              },
              {
                "id": "a2c3b977-2e0a-4110-9172-dedfea5c3c4a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f0d5281c-3026-4051-9b5e-b040894c35e8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc116e8b-3ff8-4a46-b231-1d685aff7e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a8046220-0cef-40c5-ba00-ccbf496938f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f7df6a-6a69-47b5-8254-9a71e41dda89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc6f2bd-dba5-4ca2-8b10-31145bc203fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c818d246-bdd9-48ed-8251-1600e32451c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c52f748c-bc6b-4b97-a663-b358d42cb1a6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96da2a17-61b8-487a-866c-361554aa82d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "355a684a-7350-4f04-b0f1-ed0002e10baa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5491cb-1417-4a3b-b922-e121cdc75efb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4d5254-f084-4a5d-8a03-7f4693b0d3f2"
                    }
                  }
                ]
              },
              {
                "id": "6a05b542-fc19-455d-aa3a-65363e27851d",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0525bdb-76fe-4302-895b-08bed7e56d46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35917559-0769-420d-862f-4449023f5fe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a22c780-2915-4d99-a5c2-45423c3376fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "decd41b8-beda-482b-a8bd-f697d483233e"
                    }
                  }
                ]
              },
              {
                "id": "8e02ad3d-37c8-4715-a776-bd15d773224e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa350660-f519-493e-89ca-93953eb74bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1bdcc1a6-1ded-4598-a099-7b4e4f39e299"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c131559-6744-4990-a964-6143b8e8bf1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebcd7964-64b4-40b4-b263-73309b242316"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "906dc47f-c69d-4e5b-94a2-5681142d2a3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ac034b40-1424-42c9-b8e5-0ebb16d0cb51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d789daa0-2b57-4d97-892c-4138d918f6e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b65bae8c-89d6-4993-8d0c-8bce33065884"
            }
          }
        ]
      },
      {
        "id": "bb768b14-2e47-4dd9-a80a-2404e5162a53",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5b51e0d5-eaf1-4a46-9f1e-f391ad1becae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d217d3e-2336-4d5b-86b8-f787fcf2d6e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a533062d-332f-498e-abc8-614831066028",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7311654-fc6a-43d3-90fc-7f0f2f4ace28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ffd862b5-66f4-42fe-bd5b-0f44ec481530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05266f1-c88e-4f0f-9c1d-5c564bc587e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2ef181a-29df-4273-9e1f-e1f5f49ceeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3fbe66-bf25-43af-9650-d0b885868d62",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385715da-1267-43ed-8492-6d798655006b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32b8a1de-f915-4c0a-96bf-d71fae64744a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c7401c-3016-4adc-a7d6-e6b1a29cf5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6d7f9e5-ddcd-4879-864e-be68b74e0d19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16ed7a27-daa5-4877-b2be-4fa10dc8a3cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d1be84a-321f-4688-9f39-06597a91ba7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ecbff0b-6cbc-4d4d-9cd4-78431f5760d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfcf8faa-6d71-47a5-b816-957d411d2d83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "365a295e-c264-4628-9318-df62daa6b0db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "765a65f5-551d-445e-a305-388768ade956"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d28dca6-3669-4039-a9d9-896a8261d294",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a769d30-9b01-4047-87a1-cfbb760d073e"
            }
          }
        ]
      },
      {
        "id": "d8276a66-cceb-4834-a5a0-21fe68dff5a6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "254b6b92-8105-4b22-a3dd-a8957bec5858",
            "name": "Negative Testing",
            "item": [
              {
                "id": "656bef88-17dc-4b84-822f-a3b530ae1c8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "765df6fc-2ffb-4730-81cb-0886631f7c0b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a5989-5f3e-40f0-89ae-e8b34990c70c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b3785403-2c08-4287-a52f-e1e9bc9e65b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe6abc8-c49a-4e61-98b4-396da0bde520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d40c4088-dd82-4b86-a0e4-270d92ada443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4045e47-0580-4b99-b705-e1a5fc06ce4e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a5354a-b654-46ce-afc2-f0aaedc6f9bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b40d35d8-8282-4c38-ac22-9a0f0544487f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b174d79-84d8-4815-84e9-6cc8199d83db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11ad52fe-080e-4cfa-98e4-e70f3496b3dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee7430ee-25bf-4380-a2c5-d697f36386d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91947cc3-05ba-4ae9-9ed1-8ebdf62d543c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18d52968-c4a5-4de0-a391-67d52eb721ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7be01ef-c2ba-4f39-ba6b-3ffcf7ff08f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f24eb98-6500-4dde-9b98-a2062feec003",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a503ff0d-71bc-4843-a061-e0bc2bb979b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d685706c-787c-4981-aeba-036ca1f93598",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "081a972f-c385-43e6-a1ea-9abde77c28a2"
            }
          }
        ]
      },
      {
        "id": "ab6433f4-0060-4576-9cac-3c0216d3bd96",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "66e0e578-67f5-4ea3-9b91-e8c102aca5e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66d0b0cc-976b-472c-be67-8f3b03a44c4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bb0f3bc-18b9-48b1-9181-851f490cd738",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce10faa-2802-41cc-bb2e-1548a1fd0eed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ac966e4-0a1e-4416-a6de-815be8c5f873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846082f5-0f20-4b26-8c65-0d1e9c69e4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25f8d368-709f-4475-a176-c52b7a4cced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052c873f-728c-455f-abef-3c4a4f442a4b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef067686-276c-40cf-9134-971786a0a120",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa17fad9-c962-4570-9e32-b1cbd2191555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddc50da-b162-4a16-b92f-c560b7fcca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c91b46f-a88e-4402-a1f0-40524667b74f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f5cc7a1-2408-4e13-a69b-a445d48e6dc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fbd1ccd-426d-4733-93b2-c834e114a74f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "615becb9-a7c2-4007-9d0c-8ba1e3c679f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9d8211e-af3c-44f8-b024-3a471ebaf64b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f07fc09-384b-4cc7-847e-8bcecaf47195",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "664bb6b8-5ee5-47da-8cc2-c57f22afe44d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4acf4c2-90f5-4c81-8025-912ef78bb9b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a71f690-dd71-40eb-a21e-6fb8b4809d66"
            }
          }
        ]
      },
      {
        "id": "636c286e-1370-47ed-b6df-2d76711a1396",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252b5544-3647-476a-84ce-a16cd9ebc1e3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aec38077-7d35-4292-a6d8-8de50a743d12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "92a1e700-0c45-46fa-bf5d-4627d3ed7875",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2b52e86-42da-4776-89df-a5217d92b43f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3ac7f09-5b9d-49ad-85d5-594f0e5f7f96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 496.7164750957853,
      "responseMin": 10,
      "responseMax": 3388,
      "responseSd": 371.24149702793767,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669163966212,
      "completed": 1669164106320
    },
    "executions": [
      {
        "id": "c17a72e9-2607-4ef2-a7e4-45bea0b9019a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fde2cc98-0440-4398-aa8d-b7f2633b027d",
          "httpRequestId": "aeb8eac4-8511-4404-b7e7-98a0e8f3133c"
        },
        "item": {
          "id": "c17a72e9-2607-4ef2-a7e4-45bea0b9019a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b0bb5b14-0c80-41e3-99c9-c8fddb7fef8f",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "1c3946e5-2527-4b54-b1b8-43d91026aa09",
        "cursor": {
          "ref": "1a0e9ffe-64ee-4043-bc91-62bfd12eea2d",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "373bde02-2165-434c-b974-90a781290713"
        },
        "item": {
          "id": "1c3946e5-2527-4b54-b1b8-43d91026aa09",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2410ec26-74de-4110-84fd-ddfe13d56c21",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ab31bc16-dd6a-4ed5-bd61-66171ede15c8",
        "cursor": {
          "ref": "b11856c5-89a8-4307-b5b2-53c3834406a1",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a4a87676-b908-4da3-b478-d3f875d1c2ca"
        },
        "item": {
          "id": "ab31bc16-dd6a-4ed5-bd61-66171ede15c8",
          "name": "did_json"
        },
        "response": {
          "id": "342d4559-3111-419f-97a0-9994161eafa4",
          "status": "OK",
          "code": 200,
          "responseTime": 637,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae92329-059e-43d1-b109-53aca02f8473",
        "cursor": {
          "ref": "95f2b939-ab9e-4ac2-9ec7-27d8da1aa3a3",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f597df4c-4e74-4dd6-9f7c-cc90041a79df"
        },
        "item": {
          "id": "eae92329-059e-43d1-b109-53aca02f8473",
          "name": "did:invalid"
        },
        "response": {
          "id": "0c0728fc-74ff-4ab8-83ea-89fc44641aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae92329-059e-43d1-b109-53aca02f8473",
        "cursor": {
          "ref": "95f2b939-ab9e-4ac2-9ec7-27d8da1aa3a3",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f597df4c-4e74-4dd6-9f7c-cc90041a79df"
        },
        "item": {
          "id": "eae92329-059e-43d1-b109-53aca02f8473",
          "name": "did:invalid"
        },
        "response": {
          "id": "0c0728fc-74ff-4ab8-83ea-89fc44641aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1770a15-0113-4183-b96e-27e79423484a",
        "cursor": {
          "ref": "88b1cab5-0d7f-40e5-9927-9c21ec6982ca",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "928f4b9d-296e-450c-9c42-c479826b87a7"
        },
        "item": {
          "id": "d1770a15-0113-4183-b96e-27e79423484a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "50c87696-5ef2-4bec-9992-6570b824e8fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 642,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc3cccf-451b-4df2-90e8-4432e8d0ca1c",
        "cursor": {
          "ref": "111e5609-11f2-4cb6-9c50-e5d359196f22",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d29cec0-993d-482b-8027-fc25e7b1c3ce"
        },
        "item": {
          "id": "3fc3cccf-451b-4df2-90e8-4432e8d0ca1c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1faceead-bacd-4cac-86e4-3f586e4a62bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 484,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc0a120-f570-438a-aaa7-8bc22a645af6",
        "cursor": {
          "ref": "b1e36ea7-d727-4157-aca7-a6beb49a6cf1",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74e4e362-16e8-42f2-9f67-bcb629a3a376"
        },
        "item": {
          "id": "fcc0a120-f570-438a-aaa7-8bc22a645af6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fcfb3a31-61d8-43fc-9532-1b7ccb006fd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aaffb9-5333-4202-870d-3855fc1b6d88",
        "cursor": {
          "ref": "ac5fbe08-8ee5-4c7a-801b-7eb2ccf89901",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9011f860-1164-4b27-9c2d-b0f720e2ae90"
        },
        "item": {
          "id": "d2aaffb9-5333-4202-870d-3855fc1b6d88",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ed10ad7b-5278-4152-995c-5535e3117b79",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 487,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aaffb9-5333-4202-870d-3855fc1b6d88",
        "cursor": {
          "ref": "ac5fbe08-8ee5-4c7a-801b-7eb2ccf89901",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9011f860-1164-4b27-9c2d-b0f720e2ae90"
        },
        "item": {
          "id": "d2aaffb9-5333-4202-870d-3855fc1b6d88",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ed10ad7b-5278-4152-995c-5535e3117b79",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 487,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d80bc88-84eb-4763-8cb7-2e158eeae2e4",
        "cursor": {
          "ref": "ad575e19-dd33-437d-8c8c-cc2191b633d4",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e84b234b-a163-48bb-8efc-6fe42c5fa081"
        },
        "item": {
          "id": "7d80bc88-84eb-4763-8cb7-2e158eeae2e4",
          "name": "identifiers"
        },
        "response": {
          "id": "5a8a1b0f-e68a-4222-81bd-e8b37d4269f1",
          "status": "OK",
          "code": 200,
          "responseTime": 707,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb65b50-94a7-4776-b440-bc891f61658c",
        "cursor": {
          "ref": "211fa278-74a2-4b4f-8e95-54fcf985ec89",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b85f0d9a-7203-4df5-a7e3-08342f387bc3"
        },
        "item": {
          "id": "4fb65b50-94a7-4776-b440-bc891f61658c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b16b135-b74c-4cc5-8cec-0c05ead00cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb65b50-94a7-4776-b440-bc891f61658c",
        "cursor": {
          "ref": "211fa278-74a2-4b4f-8e95-54fcf985ec89",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b85f0d9a-7203-4df5-a7e3-08342f387bc3"
        },
        "item": {
          "id": "4fb65b50-94a7-4776-b440-bc891f61658c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b16b135-b74c-4cc5-8cec-0c05ead00cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0418c680-24fa-478f-82cb-e61367c1ef9f",
        "cursor": {
          "ref": "7ef4bf19-c9c9-4a65-81ca-5906e0c8850b",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e4875227-cb99-4937-a44f-f0a8cc3f04cb"
        },
        "item": {
          "id": "0418c680-24fa-478f-82cb-e61367c1ef9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03caf981-3c41-4953-9e93-3c41228b3d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b97b8e-3d32-410b-bb86-991aea6a4b5e",
        "cursor": {
          "ref": "8da05495-c1ab-4e78-a17c-f32d27937ffb",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9b4489f3-12a0-4133-803a-c7193696a383"
        },
        "item": {
          "id": "53b97b8e-3d32-410b-bb86-991aea6a4b5e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6eeb8f3-6042-408f-94bc-27ef965e0965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d22dab-799b-41ce-9f2f-1371ba3109e9",
        "cursor": {
          "ref": "3dd13569-bfac-4e68-a0ce-4d8574d5a63c",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10ed6729-dc9a-45d1-81bb-7b52ae0c95d8"
        },
        "item": {
          "id": "45d22dab-799b-41ce-9f2f-1371ba3109e9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9b5553e1-6214-4adb-85cd-e5e5890d17d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf977299-ddfe-4fe4-89e2-3bb19ba01f1a",
        "cursor": {
          "ref": "b5abf065-b122-43cc-b128-ad70655aa1bf",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc93111b-e5d6-48fa-9dce-27e7808cd473"
        },
        "item": {
          "id": "bf977299-ddfe-4fe4-89e2-3bb19ba01f1a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "34b7b67f-199a-4050-a84f-c27fc5eb8b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9576da30-ae51-4a52-ab86-d95e9bebcb29",
        "cursor": {
          "ref": "6d4e8eba-22d6-4868-8e51-ef8436225aa8",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3a6d06e7-cdc7-4770-b897-110eb5b4067d"
        },
        "item": {
          "id": "9576da30-ae51-4a52-ab86-d95e9bebcb29",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f1c588f8-da17-40b6-a948-cf5ac8e16b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f27aa86-6817-494c-9ba8-904b32634361",
        "cursor": {
          "ref": "22cd03a2-b1e1-4cb1-a8c1-b8f66ffc5be1",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "433a8417-a952-40e0-bca8-f00e0bfafbf2"
        },
        "item": {
          "id": "1f27aa86-6817-494c-9ba8-904b32634361",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1a5f619e-a5e3-4eb0-8b05-6d7cc8bf7699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e0aeb-b208-4aaa-8913-cd1c40bd2428",
        "cursor": {
          "ref": "62d9d1d6-ae4b-4028-890b-7a7a6e9b9138",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41c49164-6dd4-40f9-951e-c6f9593ea9b4"
        },
        "item": {
          "id": "227e0aeb-b208-4aaa-8913-cd1c40bd2428",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "db24dbaa-6734-47b6-b3dc-28772bcd4dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76232723-4457-4143-b4d2-75d5eafc5795",
        "cursor": {
          "ref": "6d86f52a-f8fc-4968-b546-3c29f748d5df",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2355b143-e036-4400-b6c7-4806ffdaf8d4"
        },
        "item": {
          "id": "76232723-4457-4143-b4d2-75d5eafc5795",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "21681055-90cc-4786-97d4-98a0092acba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405a9202-9cc5-4e41-a768-6fdbef54b0f3",
        "cursor": {
          "ref": "837dfd1a-0f22-48d9-b363-2eab3d90ac22",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "972b6414-564f-4829-9d48-9c84b5bc68fd"
        },
        "item": {
          "id": "405a9202-9cc5-4e41-a768-6fdbef54b0f3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "de04bac4-4542-418c-b2dc-c59172e82ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5cb086-9799-4c4b-99f0-91df45d2a3fe",
        "cursor": {
          "ref": "1bce5740-1a6a-4db3-a4a2-5b48a1b289da",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0f59a4a0-06cd-40ff-932e-cebada82da3d"
        },
        "item": {
          "id": "bb5cb086-9799-4c4b-99f0-91df45d2a3fe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dda4a418-d410-4727-b78a-07df4d26ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a467c62c-1761-41d5-adc8-eea0edd046dd",
        "cursor": {
          "ref": "77400558-9e88-447d-bbf1-6b65533669eb",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3cb0a43d-313f-4c70-8f04-b13b3c161ebe"
        },
        "item": {
          "id": "a467c62c-1761-41d5-adc8-eea0edd046dd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cec6eb0f-aca7-47ea-b033-d6866fb3142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d705c1-ed7d-49f2-88a6-2591e8810905",
        "cursor": {
          "ref": "747b7041-6f6f-4a50-aaff-353a1dedd411",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c4474622-2687-4736-bd1e-6395d6ddafd7"
        },
        "item": {
          "id": "e9d705c1-ed7d-49f2-88a6-2591e8810905",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f1a84f8a-73c4-471c-9af5-2fe2fc222d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab97e6b8-68d4-4045-95c7-eb7cae2a37d3",
        "cursor": {
          "ref": "8fc6bd56-ab9a-48b6-a92d-e354c9be38f2",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25accd39-c1ca-40d7-945e-060bbfc65f1e"
        },
        "item": {
          "id": "ab97e6b8-68d4-4045-95c7-eb7cae2a37d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f872b5e6-bc0f-4b48-90aa-36974f0c9669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90289170-a4c5-4e86-be95-8c176c156ecc",
        "cursor": {
          "ref": "adc328e2-8cce-4cf2-a2a2-2bf94510c822",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d22510f6-7aaa-4199-a6e8-2507291d87ce"
        },
        "item": {
          "id": "90289170-a4c5-4e86-be95-8c176c156ecc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "17a35650-519c-4933-b0ed-79fd809fa3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f3ac8-8929-4e53-950e-c4f58a98a48d",
        "cursor": {
          "ref": "af519deb-fdd7-4649-828c-47e45f6cc349",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "621dd2bc-52bb-414b-a1c8-a7142d5118df"
        },
        "item": {
          "id": "ef1f3ac8-8929-4e53-950e-c4f58a98a48d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6e38c60e-d2d1-44e8-aea8-ae20982aa074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567867b3-3bf6-4371-a229-0d424f8f6864",
        "cursor": {
          "ref": "49ada98a-6228-4d61-b7ce-090a39a11f4a",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "75f6b27b-3576-4920-9aa7-70bc512e6b41"
        },
        "item": {
          "id": "567867b3-3bf6-4371-a229-0d424f8f6864",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d7fa464d-702f-403c-a5d4-8a8dd0acaa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f72dec1-0240-4940-8d2a-4683f336f8cc",
        "cursor": {
          "ref": "5a92d2af-c2c5-4905-bc4a-8ee159383b2a",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40fb136f-4710-4005-b78a-8f0285179b88"
        },
        "item": {
          "id": "8f72dec1-0240-4940-8d2a-4683f336f8cc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3673bdf1-e28b-4639-a1aa-572eaeea50f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294d45c6-e29a-4903-b31f-6f546b2bde7e",
        "cursor": {
          "ref": "86473db2-e872-47fe-be27-04e118d97b9d",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6d6c5cb5-2a04-434f-9ca1-95d322bf35e1"
        },
        "item": {
          "id": "294d45c6-e29a-4903-b31f-6f546b2bde7e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0edce690-d768-45fb-8158-c90723a6de31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16ff000-385c-4836-b049-40c65a08aee0",
        "cursor": {
          "ref": "714826c0-6d60-40ab-9c55-031a8b2acd1c",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff379bcb-3cc2-436a-85b9-87976971f45d"
        },
        "item": {
          "id": "a16ff000-385c-4836-b049-40c65a08aee0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7bfbe051-4f68-41ae-905b-9909870cab0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463c136-ce30-483d-84bb-05fb05c25b11",
        "cursor": {
          "ref": "dd2fe88e-c74c-44ab-a54b-a81b3f2cab6c",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7f737cf0-bcf0-4f52-ae39-026c2de03dd1"
        },
        "item": {
          "id": "b463c136-ce30-483d-84bb-05fb05c25b11",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d05c6f9f-77fd-4bb5-afc7-ccacee91e0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daebda18-f151-4026-a79f-ad0a8473e53a",
        "cursor": {
          "ref": "5ca79c9c-a39a-45c1-a596-f53538b7be9f",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "89d4dc6c-646f-4778-be3e-ea78ab42bc2a"
        },
        "item": {
          "id": "daebda18-f151-4026-a79f-ad0a8473e53a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a44a0d66-0dea-4bb0-a32e-3d49144c0e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4358b487-c61f-4e32-b512-3f971cd4eee1",
        "cursor": {
          "ref": "a006f133-b8a5-4c40-963b-1ecae8bdb9f1",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "55bcd879-57e7-401b-ad79-e48e71aed41f"
        },
        "item": {
          "id": "4358b487-c61f-4e32-b512-3f971cd4eee1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9a0b6148-7fca-4ab2-a88d-c3c63126a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7002f770-5088-4591-a937-87be69368a27",
        "cursor": {
          "ref": "efe43ea1-8458-4835-88d3-596add4738f3",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f086e78a-a0e9-474a-af53-3b73adb8c069"
        },
        "item": {
          "id": "7002f770-5088-4591-a937-87be69368a27",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8d95806c-aec5-48bf-9c24-419faafd8437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d234901-89c9-43f7-8d83-beaa78e8ce43",
        "cursor": {
          "ref": "1f0a2274-5e14-43f6-8c5e-2503ef5d47e1",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b38edb80-b616-4d7f-b83f-3bd77e1117de"
        },
        "item": {
          "id": "1d234901-89c9-43f7-8d83-beaa78e8ce43",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "63751696-312b-474d-8875-9036e4196c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0516e16d-1abc-4762-ab5e-7a9caddbe419",
        "cursor": {
          "ref": "fed54dc9-4f9e-4618-a7a2-0c001f28a80f",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "83a6173f-40db-405a-ac59-a5fad8520e33"
        },
        "item": {
          "id": "0516e16d-1abc-4762-ab5e-7a9caddbe419",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6157d682-9539-4764-bab6-e16bffd7fe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d541fe8b-d5c8-408b-87f1-9f417b2bd18e",
        "cursor": {
          "ref": "d9d34eb8-cfc7-4ae0-a0fb-1b4752a6bd24",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02c058b3-dc1c-411a-a77b-7163c2fba7b1"
        },
        "item": {
          "id": "d541fe8b-d5c8-408b-87f1-9f417b2bd18e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c4872f21-c2ce-4731-8b5f-6adbe017a2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b9431a-3374-44bd-aa69-20916f3945d6",
        "cursor": {
          "ref": "38270c82-d783-46cd-9d37-c3b524def8d7",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3b4644c-af50-4a7f-9eac-4b9e656a8cb0"
        },
        "item": {
          "id": "e2b9431a-3374-44bd-aa69-20916f3945d6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fd7ab024-427b-441e-9f78-64da4586ba85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4635c78-67c0-4377-91b0-410628d991de",
        "cursor": {
          "ref": "c533dfe1-0aea-4731-969f-cd2056ec5f83",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b3377f21-2ba4-4739-aaff-3d16c62c003e"
        },
        "item": {
          "id": "c4635c78-67c0-4377-91b0-410628d991de",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3254964a-9d2d-421c-83ce-1c6974a45603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152b3e3-cedf-4281-9b24-c221b331e590",
        "cursor": {
          "ref": "a4759ef5-f93e-4931-8788-f3df6a1702ed",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fe6b315e-76fb-438f-ae11-aaa47bc7d3ee"
        },
        "item": {
          "id": "7152b3e3-cedf-4281-9b24-c221b331e590",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a8b6f487-077d-491e-9f5e-2649a61023af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780af66d-2789-420d-9358-81ebd3cbd438",
        "cursor": {
          "ref": "9c196d76-bf56-42a7-934b-6380d61b0a80",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d9dce2d7-8b24-44a3-979e-74c14d3b539e"
        },
        "item": {
          "id": "780af66d-2789-420d-9358-81ebd3cbd438",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1090d3e-9b3b-42ac-beac-d809b85ab93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8daf0-5c06-44da-ae2e-281b34d03d92",
        "cursor": {
          "ref": "b43d3953-b17d-4c63-9bb9-17950ac6b345",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "04fa997a-1ea4-4117-9736-3b469744bd16"
        },
        "item": {
          "id": "cfe8daf0-5c06-44da-ae2e-281b34d03d92",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ba18e799-23c1-491a-b451-45850cca9c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440e7ee-8bf2-464c-9359-56d6a9b9c255",
        "cursor": {
          "ref": "a68dc1b4-1ea9-48f7-b9a3-d6908beef884",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99054773-5567-4373-929f-1e8085ddc5ff"
        },
        "item": {
          "id": "c440e7ee-8bf2-464c-9359-56d6a9b9c255",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "77bec7e7-cb56-4f4f-a2e3-b564d2e384f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3467fb-6b7f-46a1-ba0e-71286b98150b",
        "cursor": {
          "ref": "903a8a10-917a-4f30-beaf-121f488e797d",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c1fce923-a643-414d-a3bc-3bd428a2898f"
        },
        "item": {
          "id": "7f3467fb-6b7f-46a1-ba0e-71286b98150b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d0d3e71-aeb8-4f5b-aa10-125c97dc7c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10222bae-99ea-4917-b82d-5c9b6e83c2a2",
        "cursor": {
          "ref": "19ce84e2-a951-4f77-84a6-9fb9d7989388",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "282cee66-4ccc-4ca7-ab30-09829323d267"
        },
        "item": {
          "id": "10222bae-99ea-4917-b82d-5c9b6e83c2a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f107e8a5-8e95-41d2-8d0a-654fcee4e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2101cb0c-559c-40a4-893d-18269e7bebb7",
        "cursor": {
          "ref": "065471ac-ddce-401f-a06f-7faf9ef84f73",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8b259820-c327-4cea-9ec9-a04a9baae783"
        },
        "item": {
          "id": "2101cb0c-559c-40a4-893d-18269e7bebb7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf07b593-460a-4bd3-a094-5b1a85c11874",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 577,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de56496-c1f9-4379-bb3b-f05ffe65ea3d",
        "cursor": {
          "ref": "42670c65-881b-4107-9acf-b83a00f5e4e1",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d455cee6-eebe-4e08-9f67-01fb954d5d91"
        },
        "item": {
          "id": "4de56496-c1f9-4379-bb3b-f05ffe65ea3d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "38bc3240-0479-45f1-a51e-cc3eb7f8f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff9d57d-6549-4773-b59c-829caec1b1a0",
        "cursor": {
          "ref": "084bbebf-5128-4885-b860-383f10badad8",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "db6017b5-923e-466c-97e5-7d07209d036c"
        },
        "item": {
          "id": "dff9d57d-6549-4773-b59c-829caec1b1a0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dd4befe2-0420-409d-b938-7a68fddf305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc51938e-0fbc-4d52-901d-8a77273facd1",
        "cursor": {
          "ref": "40210e2b-2595-4002-af8c-da5ea1400606",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "59fdc9d8-a6ce-41bb-87f6-b8bd33da0b3a"
        },
        "item": {
          "id": "fc51938e-0fbc-4d52-901d-8a77273facd1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c25502a8-7628-43a5-8236-acc814eb25cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f27761-bdd1-4aba-97f6-9c8567de66c4",
        "cursor": {
          "ref": "13e695e0-47eb-43e4-bd4c-9ea865815717",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b03bbcee-111b-4dbf-9e0b-fd898086382b"
        },
        "item": {
          "id": "47f27761-bdd1-4aba-97f6-9c8567de66c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "285175ed-85a7-4833-8bdc-82a15abf537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc9e918-f8c0-4e3f-aea4-bbef07864081",
        "cursor": {
          "ref": "53003c55-bcb6-45bb-a578-1c1df834596d",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7260a8fe-9da4-40f1-9bc4-b9ca0547a922"
        },
        "item": {
          "id": "dbc9e918-f8c0-4e3f-aea4-bbef07864081",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d1b701f6-67ea-4902-8337-56b640a3ca65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d420cd56-beb8-48ac-a4ab-e1cd0d3c95b0",
        "cursor": {
          "ref": "c64eae99-b1c6-4c65-bc5b-cf413508a50b",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "81988d8d-a389-4e3f-8287-284662b7fec0"
        },
        "item": {
          "id": "d420cd56-beb8-48ac-a4ab-e1cd0d3c95b0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "df626ebc-88b0-4ae1-99c0-c37c83a57780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2564e8-fe63-483e-8f5f-20c73b146ecc",
        "cursor": {
          "ref": "47af1c0d-5f55-48a7-ac05-ea4016a03b7c",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be7424d9-28bf-4fdf-adf4-87b84b4e6ecb"
        },
        "item": {
          "id": "bd2564e8-fe63-483e-8f5f-20c73b146ecc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fe6bbd95-e31f-4cfd-a5cc-89400ab1ba8f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 767,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763ee01c-2d68-4837-8760-9494f11b0671",
        "cursor": {
          "ref": "9fd16b98-60de-447d-aab7-19a178491ef2",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9a8131c-baf7-4c99-8874-a96c2ccd360f"
        },
        "item": {
          "id": "763ee01c-2d68-4837-8760-9494f11b0671",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a69b7268-9c8c-44af-b858-5f5b12d5b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48777048-538c-476b-b99c-1c566cd4aee5",
        "cursor": {
          "ref": "29fa067c-5992-4ae6-8e06-ba179b5c7ae4",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "32b79407-e699-42b3-a4b5-c567767e75e1"
        },
        "item": {
          "id": "48777048-538c-476b-b99c-1c566cd4aee5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "501175e1-7ac4-40e2-894a-6b030e6b1ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa6927e-5487-488e-a6ec-deabf21b3c9e",
        "cursor": {
          "ref": "354f20f9-de6e-4b31-af93-166ddd41fe66",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "86c9bdae-2922-4b71-ac77-b443087e625b"
        },
        "item": {
          "id": "efa6927e-5487-488e-a6ec-deabf21b3c9e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3fb29688-1241-46bd-bbb5-933d692ef472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633d05f6-cfb3-4b1c-a1f2-fb6327fe4125",
        "cursor": {
          "ref": "a262bfe8-606b-4011-8d31-41ea2dabeadf",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a0bb4ae2-f1e2-48e7-a6fe-e5bf5d253968"
        },
        "item": {
          "id": "633d05f6-cfb3-4b1c-a1f2-fb6327fe4125",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "424fe9ab-cae5-44ab-8d0f-76f8a7cc5a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0db979-18d8-4675-ad83-b4da4e36bb02",
        "cursor": {
          "ref": "b4867e47-1833-4305-870a-542068612898",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "53aec4f1-118d-43d2-a5a3-3bbd32bfde59"
        },
        "item": {
          "id": "8f0db979-18d8-4675-ad83-b4da4e36bb02",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "09c78495-5291-4ee9-b5c2-a4548255bfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70a6b54-4fbe-4f99-b806-bc5b4f7eb6b9",
        "cursor": {
          "ref": "9c36f390-df5f-469b-bbca-5285f4cd8939",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84a809a1-02e4-4041-888c-42205e3ef951"
        },
        "item": {
          "id": "a70a6b54-4fbe-4f99-b806-bc5b4f7eb6b9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72648068-2daf-42e4-a1bf-b7b47ad6e376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915ee96b-ed74-4b92-9211-0fe11d9bc8e4",
        "cursor": {
          "ref": "c1531087-5c74-4600-b1f5-1be995d7db3d",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "492b3147-1580-4382-aecc-cfc3dcbfd015"
        },
        "item": {
          "id": "915ee96b-ed74-4b92-9211-0fe11d9bc8e4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "88fc6667-3606-442e-b61c-7078766fd06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa87d37d-2f19-40a8-8c47-8f7af8a3fca7",
        "cursor": {
          "ref": "daa70ec6-91ae-402b-8ee9-ae9985b66869",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bd11adf5-8112-4d72-a757-fdacf8c3c27b"
        },
        "item": {
          "id": "aa87d37d-2f19-40a8-8c47-8f7af8a3fca7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0a209c4b-b127-4f1a-8c41-0a7ca889e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05944d8-9eac-440c-b171-7012e196b641",
        "cursor": {
          "ref": "ff944b5c-90ff-47bf-b700-5f013b298d44",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "02981eeb-8e2e-49b3-9573-1a51699ffd2c"
        },
        "item": {
          "id": "e05944d8-9eac-440c-b171-7012e196b641",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1871b53a-ce0e-44a5-878d-5a0be0f251ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ba57e6-7362-4cf4-bd1a-57bd8d11c253",
        "cursor": {
          "ref": "f73ffd32-3139-44ec-8c03-db2c00a9830c",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "646114ac-5f8e-4026-b3a1-f05d3f7293cd"
        },
        "item": {
          "id": "71ba57e6-7362-4cf4-bd1a-57bd8d11c253",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9711bcf8-f958-43c6-8a50-55b1b6262324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1639cdb2-f6e6-48af-9466-f48c7d0cb677",
        "cursor": {
          "ref": "cb470632-6421-4332-9c51-e71cb0ed7a0e",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a0c4c38e-1adb-4976-9614-7f13abf5da63"
        },
        "item": {
          "id": "1639cdb2-f6e6-48af-9466-f48c7d0cb677",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6ebf5fb9-7b82-4ae8-958f-6906ab64add0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202b898d-58df-4fb0-afb2-eb84e78e99f9",
        "cursor": {
          "ref": "cce93adf-3a53-4940-8db0-d91bbb2ce0ad",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "358058d5-8b28-4330-9a59-c4d3b6201570"
        },
        "item": {
          "id": "202b898d-58df-4fb0-afb2-eb84e78e99f9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "13382af3-1f81-4738-8de8-b35c63a4009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f8b22f-a281-46bb-b5c1-45549f100b7f",
        "cursor": {
          "ref": "bf8080f0-71cd-47d2-b877-37c17abd7158",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ee063bd1-038d-41f9-bb32-b6557005b6f2"
        },
        "item": {
          "id": "e6f8b22f-a281-46bb-b5c1-45549f100b7f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b7cac654-b0a0-4661-b3c0-4fab10f56aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4496b026-9c9e-420c-bf23-7fea9120a44c",
        "cursor": {
          "ref": "e462b312-a5ed-45de-af82-8ec6da820404",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "74641f50-1f74-42c1-b3bf-6261721864a0"
        },
        "item": {
          "id": "4496b026-9c9e-420c-bf23-7fea9120a44c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3a6700ea-fab0-4890-9170-cb62c6d4569e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adafaa9-80bf-4e3e-a413-dec55aafb256",
        "cursor": {
          "ref": "7b7e9f3d-87bc-4517-9c8f-1126ae9d9967",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f7ad9597-90b1-4361-8080-f1cc600cb7d6"
        },
        "item": {
          "id": "8adafaa9-80bf-4e3e-a413-dec55aafb256",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb837da4-a79e-466f-9029-1c80ffd4fa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284357e6-750e-4e85-9ceb-746b6403fb8d",
        "cursor": {
          "ref": "0768e517-d0fd-49a4-8f8d-6a2e9fc35ce5",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1533dfc4-42c7-4e86-94c9-f7207039c3a5"
        },
        "item": {
          "id": "284357e6-750e-4e85-9ceb-746b6403fb8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b76b8650-e437-4337-92ba-22956a51c699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88adfc7e-2e3e-4255-bde7-296bb661678d",
        "cursor": {
          "ref": "b8de26b5-c3f4-478c-a278-d2bba0470520",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df798adb-dbbc-4be2-b1b8-57902df53b12"
        },
        "item": {
          "id": "88adfc7e-2e3e-4255-bde7-296bb661678d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cdf7ec37-253c-4843-8223-e9765c01a5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ea2cf0-d0d4-4739-a095-857c91e11a40",
        "cursor": {
          "ref": "545df070-f53a-46bf-b25e-b52b79a286d5",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7ccf39e3-f361-44a2-bf87-fa59ec87d480"
        },
        "item": {
          "id": "06ea2cf0-d0d4-4739-a095-857c91e11a40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "91054d42-c740-4098-b844-1246d6742cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea52aaf-2115-425c-99af-96d96e7b64f5",
        "cursor": {
          "ref": "411bd860-5ec2-4882-acc1-544af4713e0a",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "319a1142-af78-40df-b421-4ec887ae1b11"
        },
        "item": {
          "id": "cea52aaf-2115-425c-99af-96d96e7b64f5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "17c280d5-1cf5-4802-9740-8f30dec0f504",
          "status": "Created",
          "code": 201,
          "responseTime": 3388,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "4827eec0-1165-4bc6-a68b-d7c9cc8be23b",
        "cursor": {
          "ref": "fc489e64-a9cb-4083-b9ce-a1828478b0f2",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dcfad8ad-ddb4-423b-9b5a-e76da38f6467"
        },
        "item": {
          "id": "4827eec0-1165-4bc6-a68b-d7c9cc8be23b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b969b63f-3030-44da-ad8b-586ce3385597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f60f3d-de92-4460-9837-008c761ff374",
        "cursor": {
          "ref": "447b8529-22ea-4323-8522-c9957f9c8067",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7dd97fed-247d-45f5-9ed5-127bc969a03c"
        },
        "item": {
          "id": "55f60f3d-de92-4460-9837-008c761ff374",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f3664be3-ddbb-43c2-8ee1-62c644f27d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e02358-8121-4640-8da9-3016209da192",
        "cursor": {
          "ref": "5f2273f8-2057-457c-ab4a-8de9d0af28cb",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e5175477-7ab6-489b-98ce-bf5b85ebd7e8"
        },
        "item": {
          "id": "89e02358-8121-4640-8da9-3016209da192",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c76f079f-4fc2-4586-a471-4fef8a5618c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf21d5e-fad8-4a14-bb92-f59842f21fdb",
        "cursor": {
          "ref": "9f0d2873-9f46-47b9-98e2-ea8ee71bcdcd",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5174b315-ad3d-49eb-b6b8-db34fe445dc3"
        },
        "item": {
          "id": "dbf21d5e-fad8-4a14-bb92-f59842f21fdb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5333224f-24fd-4aab-bda4-0b1d620b7266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5243bdf5-9aae-4f58-bea2-be9cf5a37ebf",
        "cursor": {
          "ref": "8399df78-202f-469c-bc88-681d3aa9c3b3",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3d6a13cc-9c82-4354-b821-96b5814af79d"
        },
        "item": {
          "id": "5243bdf5-9aae-4f58-bea2-be9cf5a37ebf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "db2257d5-4dec-4914-83e6-9b11d31264ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48103d07-7805-42ff-9f44-0653aaaf4077",
        "cursor": {
          "ref": "6bde1619-d5c4-4e6a-8f9f-6b564bbf24bc",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7d1e9958-7f41-4acc-a4bc-8e93fa14af3d"
        },
        "item": {
          "id": "48103d07-7805-42ff-9f44-0653aaaf4077",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a2bd359f-f6e5-4aa7-8df6-e9038ddf54f0",
          "status": "Created",
          "code": 201,
          "responseTime": 2134,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "c20e104e-d717-43af-9f39-34a8051cc385",
        "cursor": {
          "ref": "df73f6ab-eb60-4bb5-b04a-89c8fefdf919",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1ad11afc-58e2-4f23-a2e4-b25f244bd606"
        },
        "item": {
          "id": "c20e104e-d717-43af-9f39-34a8051cc385",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f5917ee6-62a6-40bd-a000-efee1dc69dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d09509-d45f-477b-9fdd-33bfa2870e3a",
        "cursor": {
          "ref": "310628ca-9901-48c0-88e4-b839c5b22d66",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "841541aa-385e-4d44-bdc3-aed13cba648b"
        },
        "item": {
          "id": "84d09509-d45f-477b-9fdd-33bfa2870e3a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9afac64d-e03b-4d3a-9c4f-900399ccdcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96140b-aedc-4836-9bd7-ad7b6db31767",
        "cursor": {
          "ref": "93a53a05-f200-4b2d-9196-d4400d7f8b66",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8e8370ab-b9bc-4829-a673-7e9dc125e06c"
        },
        "item": {
          "id": "7c96140b-aedc-4836-9bd7-ad7b6db31767",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff2ea25d-b3ba-468a-be2f-afca20124510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caddbd3-7dbb-456e-a956-8153d08fb693",
        "cursor": {
          "ref": "5e1e6fe1-294d-42bb-8a89-c19e7c4c0ff8",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "abd601fd-64d4-4f5e-8a01-6e2e0a02485a"
        },
        "item": {
          "id": "9caddbd3-7dbb-456e-a956-8153d08fb693",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "081d9477-e8bb-4cc9-b12d-ef7b9181c9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225a4e21-b147-4dda-b421-7b4b24059150",
        "cursor": {
          "ref": "1a1a0978-1877-4c87-ac1e-a0b50abf9585",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6dbff3f7-3016-4859-9b10-71e86bc296b4"
        },
        "item": {
          "id": "225a4e21-b147-4dda-b421-7b4b24059150",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "905adad1-8d0e-4042-9f0a-a82d246ebc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74995f5a-906f-4edf-8410-7a4a8fc81655",
        "cursor": {
          "ref": "4df0891b-d6ee-4b6d-a5be-01d3cb2bf951",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "881e1307-8541-4b41-980e-bec942111470"
        },
        "item": {
          "id": "74995f5a-906f-4edf-8410-7a4a8fc81655",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "508d84db-b46e-4497-8f77-14f8b06e7b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342aa409-7147-4a98-bbc5-cb7b09efab5c",
        "cursor": {
          "ref": "fc6b5c48-e673-4ef6-8105-788cd523184c",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b9d8d99a-e144-44f7-a5c0-aeeaaf4e21d7"
        },
        "item": {
          "id": "342aa409-7147-4a98-bbc5-cb7b09efab5c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "16857f54-d12c-4992-ade4-29e15c33d40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26584b3c-5f53-4659-964f-39329a54dbb1",
        "cursor": {
          "ref": "22920075-ac9f-4412-91fc-25e66878eb06",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "432667f8-09aa-445a-9fa1-5d15e5aed03b"
        },
        "item": {
          "id": "26584b3c-5f53-4659-964f-39329a54dbb1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a1bdb0f4-0eed-49fc-9806-5b10f95cae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2844948e-a01c-4dbf-98f3-67031befed49",
        "cursor": {
          "ref": "f2823934-f25b-4626-9e56-032cfe809656",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8f143d37-3812-4814-8d84-05a456343af4"
        },
        "item": {
          "id": "2844948e-a01c-4dbf-98f3-67031befed49",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54bd8bc1-cf15-417d-9dba-c6f8ae122420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a72553-7796-4b1e-88ce-0084e98b607d",
        "cursor": {
          "ref": "221eb721-0d21-4710-9ed1-88f43aa94ca8",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bc80960c-1bfc-42ea-81ba-a64a0bb50e45"
        },
        "item": {
          "id": "a7a72553-7796-4b1e-88ce-0084e98b607d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d1604bae-be68-4e7e-bb2c-887cf4920e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e22e33-b333-4abb-a84b-0867337f6519",
        "cursor": {
          "ref": "69397902-a4b3-4fd0-be78-d08d34032c0d",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c80ebcac-da9b-4bf3-bd21-0754007f1790"
        },
        "item": {
          "id": "33e22e33-b333-4abb-a84b-0867337f6519",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "515a0f07-5e28-45ac-a9e9-7e0e077a97a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fb4e0d-d7ae-434f-81fb-8952cef9e2bd",
        "cursor": {
          "ref": "49f1c30c-e49e-436d-9ff6-7ad12c12b91d",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08684602-60d1-439e-88a1-bd8e9da9911e"
        },
        "item": {
          "id": "90fb4e0d-d7ae-434f-81fb-8952cef9e2bd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "87cf37dd-1ac1-4916-8a4d-d75d17bcc42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4642bf57-719b-4eff-98cf-f7128e94f246",
        "cursor": {
          "ref": "7fb71562-9187-48e7-bbce-8ef415a9ab9b",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f47aee77-170f-4098-8d91-87e634edd531"
        },
        "item": {
          "id": "4642bf57-719b-4eff-98cf-f7128e94f246",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c49992de-f4fa-4362-9c85-24feee4f7ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18270458-1782-49a3-909d-f28cc247a703",
        "cursor": {
          "ref": "8f5cc70a-e60d-4d5c-8d89-d2b24a5fb3c6",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ebb52839-1729-4b57-b7aa-a7ef119e37a4"
        },
        "item": {
          "id": "18270458-1782-49a3-909d-f28cc247a703",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "93ee9844-f950-4070-98aa-c27c846849f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed03f0f-7b18-4018-a3fc-ac18aa688b38",
        "cursor": {
          "ref": "abd18d47-cf78-4d18-8ae9-c824930d1873",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "84ecf5f5-6991-4089-a367-c98b63680fca"
        },
        "item": {
          "id": "0ed03f0f-7b18-4018-a3fc-ac18aa688b38",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "61610f84-2c14-44e8-a965-ec22c08a33b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da83d8de-2a62-454d-85c9-c78b6cfbeb15",
        "cursor": {
          "ref": "0e5d59d8-9c93-4e50-aa50-5ba19b01e1f6",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52859e93-aa79-4f33-869b-d31c65b354a3"
        },
        "item": {
          "id": "da83d8de-2a62-454d-85c9-c78b6cfbeb15",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b90d4bd0-da02-4b2b-9ebf-74b9d5a1c6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026cd66-d5cf-4e6a-9758-39f0aaf7f84e",
        "cursor": {
          "ref": "b2e67eeb-0da7-4d94-94bf-c45895db7bf5",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca822465-9db2-4fc4-bf50-261ef57e9be7"
        },
        "item": {
          "id": "7026cd66-d5cf-4e6a-9758-39f0aaf7f84e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3598302e-82cc-4705-b638-92e8f991ebdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4053c648-5507-4930-9c84-39ec1bca49ae",
        "cursor": {
          "ref": "caa7109c-dd97-4e8a-9ee2-e73c3d5a2681",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "69c4ddee-a86c-427e-a9f3-017c06719966"
        },
        "item": {
          "id": "4053c648-5507-4930-9c84-39ec1bca49ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "320d09f8-c53f-4387-abf4-f7f8e6a5ea6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e23595-1eb7-4c5d-9b21-58f51a2dd2dc",
        "cursor": {
          "ref": "4743987f-efb6-4764-9445-7625b419f5f1",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9a2c413e-4013-4717-b4db-45fe20034df1"
        },
        "item": {
          "id": "20e23595-1eb7-4c5d-9b21-58f51a2dd2dc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bc54c7f2-4580-4606-8c5a-a86147cad56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8430703-211c-4227-a2fd-3a3a4b3a678d",
        "cursor": {
          "ref": "8f02808e-e1cf-4e06-841e-cf9ffd4a9d23",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c5496f2d-d938-4d1e-9857-7f46cb8077ca"
        },
        "item": {
          "id": "e8430703-211c-4227-a2fd-3a3a4b3a678d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2044754c-078c-4c49-ad90-0e31720d1daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bbad86-5876-4f7b-bd9e-0d0a5a89d222",
        "cursor": {
          "ref": "9d8481c8-dca1-47aa-8ee2-2b03049b6616",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a379bbc1-9300-4d55-b994-45fbf6d0277a"
        },
        "item": {
          "id": "40bbad86-5876-4f7b-bd9e-0d0a5a89d222",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b4b15ed2-82b8-4ad8-a1cb-428a76611969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077583c0-9392-43e5-a509-61f8ef1d5a77",
        "cursor": {
          "ref": "fd385932-55ac-4ccd-9e87-049e386a6456",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "13e63ab1-4e7f-4a65-b6dd-55d972d6e4e8"
        },
        "item": {
          "id": "077583c0-9392-43e5-a509-61f8ef1d5a77",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "61a3a2be-4ed4-400c-8bd7-7f3253841d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a01a70c-0ee2-4ab6-973a-90bb7a4ac7f8",
        "cursor": {
          "ref": "68eb3286-cac1-440a-afc5-5d6d62a15690",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9e927c71-1dca-40ea-a82d-0b2daaf4dcff"
        },
        "item": {
          "id": "4a01a70c-0ee2-4ab6-973a-90bb7a4ac7f8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6794dbd9-2343-422d-a9fd-aa668a05cffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9becdf6a-2c7f-48d1-9264-3ee9f7e9537c",
        "cursor": {
          "ref": "02d3c3cf-8405-4228-be39-b8c0ff00da50",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8a2590d6-8ca7-499c-b37b-f17ed22fffde"
        },
        "item": {
          "id": "9becdf6a-2c7f-48d1-9264-3ee9f7e9537c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3e4cc250-b5c4-4362-926e-25d6fe6a0c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c51e5e-39ab-4ba7-acd8-1dcaa3b108d7",
        "cursor": {
          "ref": "db38da41-b9d2-4c75-85c0-b02855a39769",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "297f6c01-52c8-4d4a-8895-e26f1689f880"
        },
        "item": {
          "id": "55c51e5e-39ab-4ba7-acd8-1dcaa3b108d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b1a35fd4-8d15-40c9-9501-487c6f31fc1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290952e4-fc2c-46fa-9168-350b07987a7d",
        "cursor": {
          "ref": "856e07f2-3c49-465d-8fa7-1eafd006cfdd",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69713617-266c-46bc-ab87-505f987b8d2d"
        },
        "item": {
          "id": "290952e4-fc2c-46fa-9168-350b07987a7d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "88db5118-d2ed-4681-8aa4-ad687ffbae6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 496,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b50e6e-4da9-4b6a-9e57-57d6b339ea5c",
        "cursor": {
          "ref": "86736ed0-3b07-4efa-989b-bb4e79b28db1",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f438155d-df9a-455f-b1cd-b2fa6e298311"
        },
        "item": {
          "id": "32b50e6e-4da9-4b6a-9e57-57d6b339ea5c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b5e4d542-6a18-496b-9d11-5942e7a285e4",
          "status": "Created",
          "code": 201,
          "responseTime": 2095,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "7244476e-b5cf-4129-bd7f-4655cf4b24c6",
        "cursor": {
          "ref": "15153b3e-840f-4f72-8e67-fb44018e853f",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6e5a6560-07bf-4331-9fbd-cd9bb54203fe"
        },
        "item": {
          "id": "7244476e-b5cf-4129-bd7f-4655cf4b24c6",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2d20e9ef-b181-4b72-bc08-78feb5613fc3",
          "status": "Created",
          "code": 201,
          "responseTime": 2128,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "f24d6a77-6cbe-48fb-a581-8548390d168f",
        "cursor": {
          "ref": "3b971ed8-8ec4-49e5-be55-e500d370b2b4",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "966465c5-74b7-4441-aa5e-910e8737a6cb"
        },
        "item": {
          "id": "f24d6a77-6cbe-48fb-a581-8548390d168f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0cf2c165-760b-45a7-9baf-cd3748c54345",
          "status": "Created",
          "code": 201,
          "responseTime": 2168,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ef2e123f-beea-4001-a4b2-f476ce8bbc16",
        "cursor": {
          "ref": "95adefd5-ebc1-4575-9bc9-a7156a2f9fc7",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2e9c14f5-2644-4e80-be25-e6a8c419d62e"
        },
        "item": {
          "id": "ef2e123f-beea-4001-a4b2-f476ce8bbc16",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f779b0f7-8d0b-483e-8f69-07f71551848a",
          "status": "Created",
          "code": 201,
          "responseTime": 2165,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "197651d0-f562-4c19-a525-2b9b6bfc3c3c",
        "cursor": {
          "ref": "3109ff81-fca8-4145-a2b8-ee463ca8ba8b",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c9d8192b-ac11-4968-99bd-b44337071ed3"
        },
        "item": {
          "id": "197651d0-f562-4c19-a525-2b9b6bfc3c3c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8767053b-ceaf-4157-9717-d1e8c887367f",
          "status": "Created",
          "code": 201,
          "responseTime": 2001,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "2e4c7754-580d-49bc-a098-e360acf6b42f",
        "cursor": {
          "ref": "61c108ee-b94e-4c1d-989d-9a85b17f4f6a",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e97dfda6-7f04-40a0-845f-4cc2e6053288"
        },
        "item": {
          "id": "2e4c7754-580d-49bc-a098-e360acf6b42f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d592bf58-da6d-4e64-a980-d66a9c1628d3",
          "status": "Created",
          "code": 201,
          "responseTime": 2844,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "7a88e28f-9fd1-49dd-949e-564e7bfba0a2",
        "cursor": {
          "ref": "3dedcfc4-630c-4390-b173-8a98670a548d",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e52bc39-7223-4268-8db1-a23307239e16"
        },
        "item": {
          "id": "7a88e28f-9fd1-49dd-949e-564e7bfba0a2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e8a7e59-03c8-4f30-bedb-0260bf1809b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a88e28f-9fd1-49dd-949e-564e7bfba0a2",
        "cursor": {
          "ref": "3dedcfc4-630c-4390-b173-8a98670a548d",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4e52bc39-7223-4268-8db1-a23307239e16"
        },
        "item": {
          "id": "7a88e28f-9fd1-49dd-949e-564e7bfba0a2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e8a7e59-03c8-4f30-bedb-0260bf1809b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24df0e20-9bf6-4cf1-9687-c67e3c4f3caa",
        "cursor": {
          "ref": "bee90056-6083-4069-aebf-d63c902f40ea",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "63a4e5e4-d06a-44f0-be6e-04f558e6836e"
        },
        "item": {
          "id": "24df0e20-9bf6-4cf1-9687-c67e3c4f3caa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7fe451ba-0363-44b8-9512-45fdccbea7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6195d98d-b4c1-49c0-b34e-2045945122f4",
        "cursor": {
          "ref": "75bfdb09-4c47-462d-bfe8-66c6474ab33c",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4ab193d9-7896-49a5-ab4e-c09e2437fded"
        },
        "item": {
          "id": "6195d98d-b4c1-49c0-b34e-2045945122f4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11535c88-b6e9-4ee8-bce9-999a84140e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d545c796-3d9e-4b18-bcd3-532ecead852f",
        "cursor": {
          "ref": "774e19e6-0827-4e29-be15-44b3edd46c61",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fde05cef-1f56-4aeb-9b89-7fb3d779bc3f"
        },
        "item": {
          "id": "d545c796-3d9e-4b18-bcd3-532ecead852f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9103ea2-5192-4de9-9a7b-7aa567d0912d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f1350-b503-41de-985c-81becf3bfd47",
        "cursor": {
          "ref": "f58ae2ea-0792-481b-a0a8-cdd4d5edbc9e",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "48bf0c07-6914-4846-a494-28101ae78473"
        },
        "item": {
          "id": "f96f1350-b503-41de-985c-81becf3bfd47",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92e45a64-fd0f-43cc-ba6b-cbede98130cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0763c1ee-2340-49a1-a527-14e6147bdc64",
        "cursor": {
          "ref": "8c47b2b9-02ae-46a8-823d-074b5e3070f3",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "703abe91-7302-428a-8a2d-4086a3755ebb"
        },
        "item": {
          "id": "0763c1ee-2340-49a1-a527-14e6147bdc64",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0b70177-694f-443c-a492-f8f8ec83c4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67f07aa-0324-44bb-ab3c-8b10251898cd",
        "cursor": {
          "ref": "5d572504-23b8-4be6-874b-45579429cdd7",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3aea1bb4-013e-4413-aa40-357fc6796140"
        },
        "item": {
          "id": "c67f07aa-0324-44bb-ab3c-8b10251898cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eeacde97-fc2a-4b48-876e-76ac9cd19311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1bab0-3e1f-4cc9-a8f2-1e6b89be4047",
        "cursor": {
          "ref": "c9c326f9-eb58-48d3-943b-ba05f833cf34",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0847cd87-bf7c-40cd-bd2b-8da098c3af91"
        },
        "item": {
          "id": "42d1bab0-3e1f-4cc9-a8f2-1e6b89be4047",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18ed2c92-2591-47b3-82cb-b59482bb6403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9bb463-4df7-4e03-a240-1868378c934d",
        "cursor": {
          "ref": "46f10725-b085-404f-9715-8ac180e7622a",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "337983d2-01a2-477f-ac33-924781e10d5d"
        },
        "item": {
          "id": "9f9bb463-4df7-4e03-a240-1868378c934d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21cbf5a0-1a4b-4b4f-8562-7980e6ecbbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10b2ae3-6bb7-4241-94ec-62314c03f171",
        "cursor": {
          "ref": "f8572e3e-5d60-4497-a3b4-085d0efd327a",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8dcd1158-5ba1-402a-8a66-5f3f116d7df5"
        },
        "item": {
          "id": "f10b2ae3-6bb7-4241-94ec-62314c03f171",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "15905015-31c0-4310-ab60-cdf64863d188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ff11d8-f709-4d81-bc6e-65c4c481b48c",
        "cursor": {
          "ref": "19a031ec-b23e-46f7-a364-256125d2a2c4",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72b32d80-2b1b-46da-9803-08e8737edf15"
        },
        "item": {
          "id": "d7ff11d8-f709-4d81-bc6e-65c4c481b48c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6920ddb4-1e98-44e3-975c-35ff8131a0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba0ea15-c75c-470c-8099-d596d5ff0db5",
        "cursor": {
          "ref": "f0c35f7f-d7e3-499d-aa9c-c27508f30a31",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3d02dc25-9240-45a3-986d-eabaad385c88"
        },
        "item": {
          "id": "cba0ea15-c75c-470c-8099-d596d5ff0db5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "03712aca-07c0-443b-8282-8e8ed3a5ce84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795888ec-8adf-4084-87e1-2c29e4769f7a",
        "cursor": {
          "ref": "4b863035-4bf0-4167-bf05-8d44830644c9",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "764fb06a-68ea-48b0-a9c0-3c2bcb56fdfe"
        },
        "item": {
          "id": "795888ec-8adf-4084-87e1-2c29e4769f7a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0b9d5a95-16d1-4e1e-9f99-d2bba3cd2308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72241d79-371d-4cf4-8472-4f4630798635",
        "cursor": {
          "ref": "aac17840-720e-4d3d-a255-ac8312683ca2",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cf8db1b5-44d8-4f7d-9e65-cb3c9f25cadc"
        },
        "item": {
          "id": "72241d79-371d-4cf4-8472-4f4630798635",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dcf4857a-2460-45da-a434-906c8a8538a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ea084-7985-4cbb-a212-52fe451b0780",
        "cursor": {
          "ref": "182d5c74-caa5-43e5-9de7-27ba0048a0f9",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "178d26db-8d04-42cb-8668-bb3af397d69d"
        },
        "item": {
          "id": "c69ea084-7985-4cbb-a212-52fe451b0780",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c70b9eb8-a4ab-4437-b3c6-e15df9318d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7559670c-ed26-480d-a682-0f8bc7bd5cb8",
        "cursor": {
          "ref": "3c89f6ec-9be9-44f5-9b5b-431009e69908",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee4dea7c-7c9a-4275-b8f5-4e93e5c35e4a"
        },
        "item": {
          "id": "7559670c-ed26-480d-a682-0f8bc7bd5cb8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "532fd9bf-26a2-459d-a008-d96cfe7b898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb94104-a1e2-4209-9c7a-c7d6ebb13589",
        "cursor": {
          "ref": "0074d500-e667-4ad3-9932-a9d6268f240e",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9309757-24e9-44d1-8558-56d8fa027407"
        },
        "item": {
          "id": "6eb94104-a1e2-4209-9c7a-c7d6ebb13589",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5e80ec3-4c2c-467d-b0ae-e0774ca3f970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d500499-20e8-4c4f-ba71-84edb3fa46b2",
        "cursor": {
          "ref": "7db4992a-9c87-48ff-977f-4d5e1b2ac831",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e068407-af57-42ad-92f7-84b40d62edd4"
        },
        "item": {
          "id": "2d500499-20e8-4c4f-ba71-84edb3fa46b2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c6bbac2-f9e3-4466-9b32-8b24de01f1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbdd7d-1aff-4cb3-96bc-34f7e11db60a",
        "cursor": {
          "ref": "60a64224-b706-4327-8950-81b707601989",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5c06603d-87ff-49ad-8e6c-6ab42460884a"
        },
        "item": {
          "id": "22dbdd7d-1aff-4cb3-96bc-34f7e11db60a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "056684f8-6f61-4ed0-b569-a13df088b476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f8b6a6-c5f0-4e2f-bff9-cbe425cba37a",
        "cursor": {
          "ref": "ba42d183-0e2c-4f4f-8971-1baa0570cd20",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7b7a6671-fef9-4862-b359-c3b47f8b7c46"
        },
        "item": {
          "id": "17f8b6a6-c5f0-4e2f-bff9-cbe425cba37a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a8d4cf9e-8fd2-4337-a2d5-c07d21358c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ca564-8e45-4a6b-9ab1-dbaebe0c2401",
        "cursor": {
          "ref": "5ebac9fd-d5b4-429e-bbf6-ccccf151b66b",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "85b3c089-fafd-49a9-80f8-73742426510b"
        },
        "item": {
          "id": "554ca564-8e45-4a6b-9ab1-dbaebe0c2401",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9eb32739-6b46-45e9-9afe-d52d93beb136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93ea755-ccc9-49ad-8e51-a64bbb7fd98b",
        "cursor": {
          "ref": "b2d6b540-93d3-44bc-bce1-2602e49ceea1",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2eb1df90-d40f-4e34-92ff-dd7f928bf481"
        },
        "item": {
          "id": "d93ea755-ccc9-49ad-8e51-a64bbb7fd98b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81b2f9f6-f044-4190-aaeb-12f734b2ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8da8f30-07c3-43d0-8553-f757b9fbe0c5",
        "cursor": {
          "ref": "a31d70e7-cc3e-4e59-a7dd-a9618f56a5bd",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ed458290-7032-47c4-9b5b-a1839ac8a1ff"
        },
        "item": {
          "id": "c8da8f30-07c3-43d0-8553-f757b9fbe0c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "001a2f91-f635-4810-98fa-c34adf16c93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48814b1-5e04-4acd-8507-4c5d08397a0f",
        "cursor": {
          "ref": "6b2281ff-954e-41d2-9d95-683e71c468c0",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3e215daa-1349-4945-b7ce-df60964c3369"
        },
        "item": {
          "id": "a48814b1-5e04-4acd-8507-4c5d08397a0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fd90edd0-4141-42bf-b2b9-e8993daa7c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc1425f-4c74-4395-b22e-7d15677168b4",
        "cursor": {
          "ref": "89bc769e-8ffb-4ab4-85a9-ee5e3e648491",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f5253fb-b7ca-4d98-8fc5-61c9550550c5"
        },
        "item": {
          "id": "fcc1425f-4c74-4395-b22e-7d15677168b4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "99afb99e-92f0-473b-a375-86491bf0382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa0dfd6-03f7-4901-93f3-e40250c23c00",
        "cursor": {
          "ref": "78299266-39fa-49ba-8b60-0f0e3725afb0",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9d34b2d0-099c-41d0-aa4a-d0616212ef20"
        },
        "item": {
          "id": "3aa0dfd6-03f7-4901-93f3-e40250c23c00",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca6be202-c40c-4df6-89ea-f983a2156bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495f95c8-9b8e-46ed-bde9-2d746f873fec",
        "cursor": {
          "ref": "415917a9-1607-468c-9b61-7564cd52e516",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9e6af0ad-c34b-473c-85c5-3d6707a16d65"
        },
        "item": {
          "id": "495f95c8-9b8e-46ed-bde9-2d746f873fec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "288b8d4e-927d-400a-aba8-93fda486b694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f0318a-8bff-4963-b897-b58f68ac5e0e",
        "cursor": {
          "ref": "933970a3-d864-4d73-b532-583a4b43ae27",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fecd2524-f5e2-451e-a413-46654c92eced"
        },
        "item": {
          "id": "35f0318a-8bff-4963-b897-b58f68ac5e0e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "90aa1d7d-f2e7-40b9-adc4-f75bca102281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cf75ee-76a0-4462-b1cd-d3b8607e05f4",
        "cursor": {
          "ref": "8e31bf77-3d8c-4c5f-9f47-e58aa3219aaa",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "17568884-a39e-4e35-ae9c-7a70c30c5fac"
        },
        "item": {
          "id": "a5cf75ee-76a0-4462-b1cd-d3b8607e05f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b4778532-db1d-49bc-baad-0d3bc7d82b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a16aca-695f-4bfc-8d5d-1786e029223f",
        "cursor": {
          "ref": "a6f5f1ed-b970-4fdb-ad56-aa569e8f2994",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a9b197a3-9484-4d8c-ba42-8937246ac395"
        },
        "item": {
          "id": "90a16aca-695f-4bfc-8d5d-1786e029223f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8de970ee-4319-4699-a726-605daf931a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f41af1-6fa5-4cbf-91a3-1de30c465110",
        "cursor": {
          "ref": "8d7b730a-c7ab-41ec-8567-a5e33aa3444e",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e52de6c1-3055-4800-9a35-ad8dfec7f3bf"
        },
        "item": {
          "id": "e0f41af1-6fa5-4cbf-91a3-1de30c465110",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "81ab75f4-ae33-4a6c-8e48-993fa7e08cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf8f6e-150e-442a-8e6a-422814b9dedd",
        "cursor": {
          "ref": "be60c8c2-3204-4b15-9049-903f7e995c9f",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41ab6507-d871-46a6-93f9-f4901f18d3f8"
        },
        "item": {
          "id": "6cdf8f6e-150e-442a-8e6a-422814b9dedd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d9d5523b-83f7-4d52-84ef-d8b58f740a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270c9851-78d7-462e-acee-e92f29fd71ed",
        "cursor": {
          "ref": "f14906b1-7257-4c94-a783-79bc42fc0a47",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "abedb80e-97f8-4d86-bdd3-d52df21747cb"
        },
        "item": {
          "id": "270c9851-78d7-462e-acee-e92f29fd71ed",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "28763f1a-0df6-49f9-8b57-5d4bcfd3e332",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e608710-b757-4f86-b891-21081e9a16ce",
        "cursor": {
          "ref": "c3ff7e16-6c27-4fa3-81d0-e4debe5e4f28",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9209ac92-c370-44ac-ad68-1ad87cd106e5"
        },
        "item": {
          "id": "6e608710-b757-4f86-b891-21081e9a16ce",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e16b0f10-603e-4291-ae55-dcd9581cdc27",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 562,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46c4c81-d9d9-4fad-81ff-eef4dbc462b3",
        "cursor": {
          "ref": "3b51eb1f-c40f-4922-a893-f83a3f50534c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67ecfe4d-c965-4d66-8570-8cceb058a31d"
        },
        "item": {
          "id": "f46c4c81-d9d9-4fad-81ff-eef4dbc462b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91537e36-6931-42d0-a12a-e190447fe181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46c4c81-d9d9-4fad-81ff-eef4dbc462b3",
        "cursor": {
          "ref": "3b51eb1f-c40f-4922-a893-f83a3f50534c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67ecfe4d-c965-4d66-8570-8cceb058a31d"
        },
        "item": {
          "id": "f46c4c81-d9d9-4fad-81ff-eef4dbc462b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91537e36-6931-42d0-a12a-e190447fe181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3bf806-905e-4157-a645-f31b7bcd0bd0",
        "cursor": {
          "ref": "5a5e3f09-ee42-4a6d-8ae8-e5cef64d442f",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3832d7e2-68d4-4222-8b16-5e8e9c347668"
        },
        "item": {
          "id": "fd3bf806-905e-4157-a645-f31b7bcd0bd0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "de700cc3-b019-420b-9ad0-450d6ff7063a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 265,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "efab4971-2441-499d-9fa1-65518b25406a",
        "cursor": {
          "ref": "295ecfae-eac6-463b-a500-1bb6e2c31191",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e9f1e7a4-7482-4db4-a4a5-6894f3e98e8e"
        },
        "item": {
          "id": "efab4971-2441-499d-9fa1-65518b25406a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5dfae32d-04da-4680-b8ad-f14a8e770308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3389c7a-1729-4a9a-858c-6d20686c502a",
        "cursor": {
          "ref": "992a0d99-0089-4b25-99fa-b504d4745a63",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8e0d7130-1483-4437-9f55-63947509b77e"
        },
        "item": {
          "id": "f3389c7a-1729-4a9a-858c-6d20686c502a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "148e1ac2-b6f3-4d84-b941-fb22bf133144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b5c5b-675b-4692-83eb-75be020c8fe5",
        "cursor": {
          "ref": "b4a141a3-8287-4502-9c5f-2b4550f557be",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9402cc3-1091-4cd4-ba75-f5861a626e2f"
        },
        "item": {
          "id": "736b5c5b-675b-4692-83eb-75be020c8fe5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "60d798d1-93c7-466d-9ad7-4c27a5ef91cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084c3308-a08e-425e-b918-57696e6a2d09",
        "cursor": {
          "ref": "54ea304a-a33d-43c0-bab6-971c483d7299",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fdd8d192-29fd-464a-a458-a684b2933a14"
        },
        "item": {
          "id": "084c3308-a08e-425e-b918-57696e6a2d09",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1c60b622-5f7d-49c0-b197-60ab55231077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfd3110-1e95-499a-bf18-75924cf207fc",
        "cursor": {
          "ref": "4de796a3-f798-4eb7-a6e8-6d3f2d260dc4",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8edfcc2e-dfd7-423b-af8f-54eb0c3fa4ac"
        },
        "item": {
          "id": "3dfd3110-1e95-499a-bf18-75924cf207fc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "877888a5-026b-4cb0-82ad-fbb6d429e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0fac5b-88c1-49fb-9708-2edc9f2c385c",
        "cursor": {
          "ref": "d03f301b-4fb2-4a9a-94a6-3d6308221de3",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2cd8a92d-472e-430f-976a-d5ad2888931e"
        },
        "item": {
          "id": "aa0fac5b-88c1-49fb-9708-2edc9f2c385c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2c72979f-4ee2-435d-afd6-f9f0f8c21ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7584413-8476-4b4b-8b31-affa3914f057",
        "cursor": {
          "ref": "f6e05430-050f-4265-9206-727a6632115e",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9838a539-eb65-480a-b473-eda880713c10"
        },
        "item": {
          "id": "a7584413-8476-4b4b-8b31-affa3914f057",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "08e39173-af18-4e68-9184-def7b292058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214f0f24-fc4e-40fc-bed0-9ce0236c0ed1",
        "cursor": {
          "ref": "39102e8b-ba1f-4307-844f-6a017e1ccb97",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "38ffc154-aad9-452d-bb21-635e80e626d8"
        },
        "item": {
          "id": "214f0f24-fc4e-40fc-bed0-9ce0236c0ed1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a80130e-fda0-42e5-a4a7-d38c5d974b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccd1b25-79cf-4729-80dd-bb7e569ece0e",
        "cursor": {
          "ref": "54e77e86-e796-4e65-9163-a2e69ff24bbd",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "77fe8731-ee71-4574-8bf9-2e9e1117ab8e"
        },
        "item": {
          "id": "eccd1b25-79cf-4729-80dd-bb7e569ece0e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cacd7ac7-42cc-47a9-9ab4-b2bf7392ca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56928bc9-8ac1-4a1a-b837-66a89199302c",
        "cursor": {
          "ref": "9a07b914-5280-48a4-9487-3f54cddbdce7",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d85c5998-d19d-4094-a3cd-4622f8916e30"
        },
        "item": {
          "id": "56928bc9-8ac1-4a1a-b837-66a89199302c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "69915cda-928c-47dd-929f-8332f8b56557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e57e301-f2e4-4359-9f9f-fa95ebfe79b4",
        "cursor": {
          "ref": "14e5b20c-19ad-4da7-bfcd-bec99a66ec3c",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "89b27329-90da-420c-8d97-18e71dcb7759"
        },
        "item": {
          "id": "9e57e301-f2e4-4359-9f9f-fa95ebfe79b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e40f7a16-9206-4de1-90f4-9e5352e66191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d368d7-a02b-4aba-aafa-8e59eed94995",
        "cursor": {
          "ref": "1725190f-8254-48ed-aed1-2376a4c98448",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "30f995d2-b318-48d1-8fed-8d6e45501277"
        },
        "item": {
          "id": "10d368d7-a02b-4aba-aafa-8e59eed94995",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "86e1e128-93f5-4a4f-9667-aa147ec6043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea156d-4575-4fd8-9992-4df99dd7bc1e",
        "cursor": {
          "ref": "632d27a6-bd6a-404a-9eb9-056cf631481a",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c69c1bed-ffcc-483e-9f51-58dca4eac995"
        },
        "item": {
          "id": "eeea156d-4575-4fd8-9992-4df99dd7bc1e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "359958a1-37df-4b69-b4cd-6cad46c142a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82750a3a-81da-4f82-a27b-12b9fcf1048f",
        "cursor": {
          "ref": "46ee9571-71c7-49f0-8f20-b6431884b00d",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42af000e-fea9-48f8-ac4a-7a14526358c2"
        },
        "item": {
          "id": "82750a3a-81da-4f82-a27b-12b9fcf1048f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8de74a65-9b93-401b-9d34-3361f53d9908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6dabae-4ee7-4c2a-bbe2-339553fd1217",
        "cursor": {
          "ref": "60f08f9c-4e66-4053-8bb9-7fb0ac46e98b",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc096fb9-324c-42ed-b36b-b84082cfe46c"
        },
        "item": {
          "id": "cb6dabae-4ee7-4c2a-bbe2-339553fd1217",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "03f7521a-e153-462f-bcbb-f662b3aecf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8277bc84-25a7-4bed-aa65-e859e9948ec1",
        "cursor": {
          "ref": "cdd2a563-ea32-4631-97eb-91b7daba199b",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4dd50362-1546-4da1-86be-8c00a7afd598"
        },
        "item": {
          "id": "8277bc84-25a7-4bed-aa65-e859e9948ec1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "394d9052-4a8d-43a7-8ac9-69072615352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7754f6b-595f-4b59-bb9b-272a56fc9532",
        "cursor": {
          "ref": "ed872886-0979-477b-bc01-d415f7f0e91d",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6bea3e93-f21c-4503-899d-25c17c2f9e02"
        },
        "item": {
          "id": "d7754f6b-595f-4b59-bb9b-272a56fc9532",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e884d351-f30e-47ed-bc22-96814f1f2fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79b1ced-fa8d-46aa-8643-8ee9d2d375b8",
        "cursor": {
          "ref": "999ee9c5-2dc5-413c-9046-da4ccae5c2c2",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "345ff9ca-c971-4609-9cf6-4839ca9699fb"
        },
        "item": {
          "id": "b79b1ced-fa8d-46aa-8643-8ee9d2d375b8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d66e24d-cdcf-40f7-be71-268c58869e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a0a151-2a69-40e9-87e3-9487837e792d",
        "cursor": {
          "ref": "d84fe6b0-e481-444d-a2fd-8cd8de5ba427",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fe87393c-37bd-4c32-b344-4cd58d1d9aca"
        },
        "item": {
          "id": "15a0a151-2a69-40e9-87e3-9487837e792d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ede5d171-8513-4750-a37d-a0e9686ab5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f157a9b-3637-49f1-93aa-2a391abe827c",
        "cursor": {
          "ref": "aa4e6edd-8711-4114-983e-8de49c2a62a9",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1af46cf4-cfb6-423a-a811-f40104cfa95c"
        },
        "item": {
          "id": "2f157a9b-3637-49f1-93aa-2a391abe827c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d0888ac5-df47-4684-80f6-b2264533376c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951b2960-a1d2-43fa-81f9-2afbad58f432",
        "cursor": {
          "ref": "c4a92e2b-dba9-4322-8bf4-ac99bf189902",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb7bd686-a4d4-4a37-90dd-34f618d94eae"
        },
        "item": {
          "id": "951b2960-a1d2-43fa-81f9-2afbad58f432",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1ad13758-cfd0-4d54-9e9d-26f2347174bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7514b441-eb34-4ddd-b2ef-f13bcad92b27",
        "cursor": {
          "ref": "ae5e6135-e6e3-455b-b30d-6a8811ed0e04",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "55eeb039-e249-4dac-9582-a5bd1cfc21c7"
        },
        "item": {
          "id": "7514b441-eb34-4ddd-b2ef-f13bcad92b27",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da6dfeb2-4a7a-4b85-92cf-3457c0a71401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298c223b-3b16-42ba-8052-0fc0e205ad4d",
        "cursor": {
          "ref": "4767e650-4e21-4fe2-9ccd-2a1ec96245e3",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "68fc53b7-eaa2-4c5e-bb0f-72637af5e610"
        },
        "item": {
          "id": "298c223b-3b16-42ba-8052-0fc0e205ad4d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a444ae77-f021-4556-9ae9-16e47c778c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7f8c7-a6ff-4488-8148-4f5eeaf35b6f",
        "cursor": {
          "ref": "d143b6c9-f570-477c-a0f4-56099006a11b",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f1c0a73d-452b-473a-8344-e383d7a65c06"
        },
        "item": {
          "id": "17c7f8c7-a6ff-4488-8148-4f5eeaf35b6f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b55cfe76-f460-4ded-88fb-d5e2aa59a21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3c9190-0e05-4442-aa91-58a6382fe23f",
        "cursor": {
          "ref": "139667bc-c0c8-4a19-9224-4b8be064f694",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "834eda02-e761-4ba0-8606-91d116802a51"
        },
        "item": {
          "id": "cb3c9190-0e05-4442-aa91-58a6382fe23f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "262bbb70-b093-4688-a010-bbc844c8e969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a402d8f-744a-4856-86e0-96dd76edf8fe",
        "cursor": {
          "ref": "5e7ef167-93f2-4855-a388-26d394e8e1a8",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f9bd93b8-b05b-4878-948a-f640f15f4c8d"
        },
        "item": {
          "id": "8a402d8f-744a-4856-86e0-96dd76edf8fe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "74272e40-483b-4bba-9100-ef5e5b2af673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15085d9f-74aa-44ed-8f7c-f7bf120298c5",
        "cursor": {
          "ref": "e402e382-4162-4a73-863a-070d7641d368",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7649a0ad-b148-472f-9bed-484b5e0f9982"
        },
        "item": {
          "id": "15085d9f-74aa-44ed-8f7c-f7bf120298c5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ebd54730-e184-4f08-b53c-54caf0bf85a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f3d2ea-125f-4d25-a4c3-e662c0a612b9",
        "cursor": {
          "ref": "94cfa21c-906b-4a10-8232-9afa27d88207",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "127267ef-bbbc-437a-848c-c3aafdee0c47"
        },
        "item": {
          "id": "d6f3d2ea-125f-4d25-a4c3-e662c0a612b9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5cfeb104-e27f-497f-bcc7-9284d0ae6dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821f5821-fdf8-4b22-82a2-896104601a2d",
        "cursor": {
          "ref": "9e5fced1-cc1a-4937-8a6f-0ce8a660472d",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "09198ca8-f48c-41b6-8547-966c0293d759"
        },
        "item": {
          "id": "821f5821-fdf8-4b22-82a2-896104601a2d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "466d0708-41d0-4eb7-9444-3dc38ac74a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99af7538-6bb1-41b0-8554-3596b0ee616a",
        "cursor": {
          "ref": "58a4e2f8-af89-4476-a0d7-37ec1c17a724",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b311ce90-bb58-447f-84fb-b710bc1c3914"
        },
        "item": {
          "id": "99af7538-6bb1-41b0-8554-3596b0ee616a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "06a4398c-0108-456d-af69-f29154f2050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1ce533-353e-4de7-9ecf-0462c5c9c04e",
        "cursor": {
          "ref": "020c0e76-af4f-4b56-9f40-7b987565afe1",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "96ca8204-71f1-4f00-a1f8-0243f64f5c4a"
        },
        "item": {
          "id": "3d1ce533-353e-4de7-9ecf-0462c5c9c04e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6d6f48ed-31ad-491b-a9eb-98176d6f9418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f148214-6c12-4761-bfc9-3861ec0b835c",
        "cursor": {
          "ref": "44ffa5d6-be54-444a-b4ed-58340bba1afc",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "feafc9a1-a737-4756-92b2-f724918623ff"
        },
        "item": {
          "id": "4f148214-6c12-4761-bfc9-3861ec0b835c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c0e4c341-7ad7-4cca-8678-0b11fa7278b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345a3d6-25c5-4511-86d9-71ccdee16c8e",
        "cursor": {
          "ref": "d98d6cfc-830e-479d-bb57-b37c7843a65e",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5098ab51-8bbc-4a24-a713-965c0a87c743"
        },
        "item": {
          "id": "c345a3d6-25c5-4511-86d9-71ccdee16c8e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7900a6ee-b78b-442e-89b2-f56c16977a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53ba9cb-d565-462f-b7c6-5c429247c474",
        "cursor": {
          "ref": "e69d4251-8826-4bd7-83ce-a666039a83a1",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80ba6eff-ca11-4357-8266-f5d494956fcd"
        },
        "item": {
          "id": "c53ba9cb-d565-462f-b7c6-5c429247c474",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ba161f34-c94f-4b91-a6a6-ff19c1b7fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81818ea0-80d1-4f1f-b7fb-26c961d2e8bf",
        "cursor": {
          "ref": "4bc5213a-4e9a-43df-815c-e15cdd04cf1f",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9d646f01-12d8-4935-9642-4a8426dd337f"
        },
        "item": {
          "id": "81818ea0-80d1-4f1f-b7fb-26c961d2e8bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6b53609f-38be-411a-a7db-c31ef6bb05ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d659c30-38ae-4ede-b3d3-47863220d42a",
        "cursor": {
          "ref": "47d770a4-73c2-4b00-aaf4-2f230d59fead",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b6ba0c6b-d8f2-4ca0-878a-1ca34055cbea"
        },
        "item": {
          "id": "6d659c30-38ae-4ede-b3d3-47863220d42a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20dc9690-a40a-4dd9-b0d5-68e307a44527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8476de-60d4-4e65-8894-5fb544b58aef",
        "cursor": {
          "ref": "28d647b2-d744-43c1-b8bc-496b96cadfcc",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f7c3e048-4add-4a3b-95db-9e80ed9779ec"
        },
        "item": {
          "id": "cc8476de-60d4-4e65-8894-5fb544b58aef",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "28cc416c-b4d7-4694-b8fe-7c6025edab0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa51410a-cd5e-4a11-b478-db1d61bd7560",
        "cursor": {
          "ref": "4e9cbcf9-8765-4c4c-ac4d-75d1b65783f6",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c5460b53-88ee-4ace-8dbc-b338a63c7a85"
        },
        "item": {
          "id": "aa51410a-cd5e-4a11-b478-db1d61bd7560",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1da56ecd-0002-4a22-b2aa-119bf9afadd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bc53fc-3f76-4512-8498-7d52f62a687b",
        "cursor": {
          "ref": "2496a520-1acf-4d7a-a5d1-13694a62f95f",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f2e9e7d1-3057-4267-8303-a95be930d24b"
        },
        "item": {
          "id": "18bc53fc-3f76-4512-8498-7d52f62a687b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "76c39cb4-2c2d-4d51-9c21-430a01ad2a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f9a62b-0511-4b23-9666-054762e61c93",
        "cursor": {
          "ref": "4554e9f4-c7ae-4c11-846b-870f71298e44",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "72440b51-e12c-432e-997d-cf6c7c6f546c"
        },
        "item": {
          "id": "e9f9a62b-0511-4b23-9666-054762e61c93",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "39dcba21-617d-49ec-885d-ed518227ed71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe07d3-8156-44b5-b7e2-13100e47b947",
        "cursor": {
          "ref": "edd5cddf-03c5-436b-a75c-c148fb2d0325",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c5d2a91-5201-4504-8a80-cb5843eb9df9"
        },
        "item": {
          "id": "20fe07d3-8156-44b5-b7e2-13100e47b947",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "35cae271-e608-446b-83e6-6999c26e8273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ad7614-488a-4e61-bd71-f12624a57774",
        "cursor": {
          "ref": "8be0b60e-1c2c-4146-b372-c6ec8a5c0711",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aca707c7-bd18-4683-95e3-5de515783935"
        },
        "item": {
          "id": "61ad7614-488a-4e61-bd71-f12624a57774",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0735180f-26f9-458b-a5da-9651add48ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cba216d-8cea-4d0b-8815-ba749667ba03",
        "cursor": {
          "ref": "b809697e-64be-4ed5-9a40-a94125a4d784",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4fee1ddc-37b5-4f25-8672-663b4291c368"
        },
        "item": {
          "id": "6cba216d-8cea-4d0b-8815-ba749667ba03",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b8154861-cf77-4be7-9a1b-c0011ef8c564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c31fdc-6541-4fd9-b106-2839945b7574",
        "cursor": {
          "ref": "639b4214-fdc5-491d-a2a0-b487d68f58c8",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "89c8eb6a-0015-4313-b7a6-4144f299b81b"
        },
        "item": {
          "id": "72c31fdc-6541-4fd9-b106-2839945b7574",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c505b77-9b19-44da-9290-22b1be9e50c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bd8fe0-c2d8-4866-b121-e3212b12ddfd",
        "cursor": {
          "ref": "261a631c-a742-4a89-837c-cf7f777a86d3",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e396ef1d-e93f-4771-93a3-3176f99c2e15"
        },
        "item": {
          "id": "39bd8fe0-c2d8-4866-b121-e3212b12ddfd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "705a5ed9-093f-46c7-8cd5-69c4fd130c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aa3591-493e-4085-98ab-cc47693ec650",
        "cursor": {
          "ref": "4a614f44-77cd-48c5-b7f7-6b0cf7600139",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9d7ce109-b0b3-4b91-828e-d986929f64c6"
        },
        "item": {
          "id": "65aa3591-493e-4085-98ab-cc47693ec650",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0d196538-da48-4baf-b68a-ddc180c5bf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dffd7cc-5282-46ad-8509-a89426190cd4",
        "cursor": {
          "ref": "673c4aa6-e7e2-4b57-a89a-874361de207e",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a50f1429-83f9-4ed7-b157-8062544ddedb"
        },
        "item": {
          "id": "1dffd7cc-5282-46ad-8509-a89426190cd4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e27b675d-af45-44c5-b204-afb7882a11fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935c6fe1-90af-4ce7-9760-120c2603e083",
        "cursor": {
          "ref": "6180fb6a-88cb-43b7-ace5-b078b5735480",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b0628d24-5da5-4986-ba5b-f3dd5d766815"
        },
        "item": {
          "id": "935c6fe1-90af-4ce7-9760-120c2603e083",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7ede721f-c151-4331-a40d-58668658a2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5825d20d-9714-4535-bffc-3f42fbe34031",
        "cursor": {
          "ref": "9feb4a62-1500-442d-a16e-c20eee456f63",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c7d092ea-7cb2-4e5a-bf11-448427a23f0f"
        },
        "item": {
          "id": "5825d20d-9714-4535-bffc-3f42fbe34031",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f0019e03-82af-4d0a-9a28-98ab07151064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab2aa3e-84da-46a0-8827-4013765a7927",
        "cursor": {
          "ref": "85e67894-7e6a-44e2-866d-b65a76c75167",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4b8f9859-cfd8-4edf-8f22-b0c7bea50d4c"
        },
        "item": {
          "id": "2ab2aa3e-84da-46a0-8827-4013765a7927",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "804bf90c-8bbf-4e54-82cb-8d9cc06a876f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471b8810-c5ac-4996-b020-0cce244559d6",
        "cursor": {
          "ref": "8794ddb9-220a-4b2c-ad30-5ddd16275949",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5e6f0df4-130a-4c19-ac1d-9510bf92d3a0"
        },
        "item": {
          "id": "471b8810-c5ac-4996-b020-0cce244559d6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1ff64881-97c8-430d-bf29-c4b66c760f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17169460-d8ef-4941-91c5-7784a08f9d04",
        "cursor": {
          "ref": "a6a61fc2-24ea-4db1-9b13-77ef62c8d812",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c2015f80-3f98-495b-9e63-d1c5322453e8"
        },
        "item": {
          "id": "17169460-d8ef-4941-91c5-7784a08f9d04",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9779610-5a63-407a-a999-694106d4f062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0969a4-02cb-4dd3-9851-f035300f0810",
        "cursor": {
          "ref": "b2e99631-cf0f-4fb2-a9ba-0c12d711dc63",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b63bab4b-6d93-4317-a9b0-ff58f5a52943"
        },
        "item": {
          "id": "ac0969a4-02cb-4dd3-9851-f035300f0810",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c4aa00e-eb41-4ff8-a8fb-64f097753442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8950a537-19d5-4f28-9b65-751933fb75e4",
        "cursor": {
          "ref": "b3723eba-ae7e-44ec-acb4-e356e9f7b3a7",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a55a930d-ece7-4407-98dd-e4cfdca84d8f"
        },
        "item": {
          "id": "8950a537-19d5-4f28-9b65-751933fb75e4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad3617a6-cdad-42ae-8eda-cd6c323b46f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e46cdd-6a1a-46ac-8403-1ad5e83eb14b",
        "cursor": {
          "ref": "ae952135-5f7b-4ee3-9b95-69639d8d31e0",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "57f5b380-ec13-46d8-ad37-6165f6947a49"
        },
        "item": {
          "id": "c4e46cdd-6a1a-46ac-8403-1ad5e83eb14b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "768cd7ae-bb99-49a8-9155-30b3f81d8aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dbf9f9-32e3-4205-97bb-e27d0bef9512",
        "cursor": {
          "ref": "cd9208c2-f917-4c1a-ab08-6a6be99889e4",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b36d1880-ecf6-4690-9327-f0b24df24f46"
        },
        "item": {
          "id": "d8dbf9f9-32e3-4205-97bb-e27d0bef9512",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "89aca315-a5f8-4e41-825e-c1d88b788ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d6b609-ed70-41c2-9393-d7fe5b0980df",
        "cursor": {
          "ref": "71ca2bf6-1fc9-4ead-b388-7526242f1fee",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab293805-1efb-495b-aaba-377a6df6bb42"
        },
        "item": {
          "id": "16d6b609-ed70-41c2-9393-d7fe5b0980df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c51b7667-a870-425d-9730-d43deb810777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e759dae-1d22-40d5-b0fe-dc170ad60807",
        "cursor": {
          "ref": "db8edcf8-fbde-479d-8a0b-36a094e4b0d5",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e2c95904-f8c6-436f-b63d-a0b0de282fcc"
        },
        "item": {
          "id": "8e759dae-1d22-40d5-b0fe-dc170ad60807",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5fd0371a-18b4-473b-86c3-debc47707006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572cb564-1f01-4b69-b4e9-830d6bc20364",
        "cursor": {
          "ref": "f5dcd9e5-9d2e-42ae-b235-e879bc17c6b1",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0c251a0f-6320-4bf3-8390-0c23123dee7a"
        },
        "item": {
          "id": "572cb564-1f01-4b69-b4e9-830d6bc20364",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5ccccd3c-de85-40a9-ae69-c8751a9ab422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c0e4f1-0750-4db9-8fc4-fa9e5c488d3e",
        "cursor": {
          "ref": "167dbb85-3176-47f0-8cd8-580d157f0b58",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f2ca51bc-e310-4cc6-9786-93859fb568e7"
        },
        "item": {
          "id": "51c0e4f1-0750-4db9-8fc4-fa9e5c488d3e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2afc2e7e-4d09-479d-8551-51dd9c54a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f27e6b-0068-448b-a4ec-c14d48315b3a",
        "cursor": {
          "ref": "f60df3c8-88f1-47db-ab16-13dbb715b8c4",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7afba91a-e7fb-49fd-bcfd-6d34cb33de8b"
        },
        "item": {
          "id": "01f27e6b-0068-448b-a4ec-c14d48315b3a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d4c4e3ed-fa65-443a-98ee-e36714f6c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeae6c4-f809-4fb9-a954-81f6b95de15a",
        "cursor": {
          "ref": "f93c2b8e-0d58-409b-b477-a9b41916a8a3",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "78592fc4-316c-4116-90d8-cff5cd8fe34c"
        },
        "item": {
          "id": "faeae6c4-f809-4fb9-a954-81f6b95de15a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c5677c1e-b3d2-4137-9239-54b10c6c05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263f83fe-8d9a-4d40-b275-ec47ab6379de",
        "cursor": {
          "ref": "2f40c0a2-836b-408f-a491-c8c06373873b",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0ae14469-a5cc-4e14-846c-b0b225f03a78"
        },
        "item": {
          "id": "263f83fe-8d9a-4d40-b275-ec47ab6379de",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3d3f27d2-25ae-4e27-819d-042d9edf46a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cfba2b-b3d6-417e-9ed5-1f711c8f5cba",
        "cursor": {
          "ref": "ef610ebc-6d11-41d7-b762-ec3b734b2702",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e90e2dd8-e1cf-40a1-9321-57ade3fba4d5"
        },
        "item": {
          "id": "70cfba2b-b3d6-417e-9ed5-1f711c8f5cba",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd3ac4e9-d463-4062-b351-84555ce1cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26e723-7526-4973-bc64-dcdbef24f470",
        "cursor": {
          "ref": "2e6ca4c5-5493-40c8-a6da-a9cc0701b259",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "78748bd9-e6b7-4492-9148-4e1a2d645ba0"
        },
        "item": {
          "id": "8a26e723-7526-4973-bc64-dcdbef24f470",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "df250915-c842-4f62-a025-25c6c6668189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ea848d-42e2-4bdc-9078-f6f7ce3401f6",
        "cursor": {
          "ref": "959800c7-2dfb-46a6-af16-9cc64f804df7",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b1aaf7e8-2d1d-4dae-a67e-2be84253d409"
        },
        "item": {
          "id": "a8ea848d-42e2-4bdc-9078-f6f7ce3401f6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5bc8a784-99d9-46b2-b173-5a350743a567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cc75b0-382f-4289-b6f6-9383683004b4",
        "cursor": {
          "ref": "dc57bd3b-e289-4cd0-ad42-1712d247caa0",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c617d776-668b-4162-af31-314ff7392d69"
        },
        "item": {
          "id": "21cc75b0-382f-4289-b6f6-9383683004b4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4edb8b66-7edd-4b29-9f4f-abc8d0a1ffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19db158-a5d1-4915-b926-0fe2f4a9c9c0",
        "cursor": {
          "ref": "2cd55267-8120-4e87-9ef3-98c3cb0ea3d2",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "28e8e99e-9752-4fdc-adef-a2e0ad08f8fe"
        },
        "item": {
          "id": "b19db158-a5d1-4915-b926-0fe2f4a9c9c0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b94b72e6-f692-4e42-b58b-28333ceadcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c3cf06-7d78-4514-9212-cacf1dff1b58",
        "cursor": {
          "ref": "2f4afea0-d3e3-4b3a-bdee-b5a13fbcaf91",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a0b88a23-37b7-43a3-892a-2995a7564ad3"
        },
        "item": {
          "id": "f0c3cf06-7d78-4514-9212-cacf1dff1b58",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6f6cca73-9bfc-4db1-9544-f9f6a5af25df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2612463-949e-4330-8377-1690cb465528",
        "cursor": {
          "ref": "c17e0bfd-e940-4aec-8f76-1d9f09881457",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5217eca-fca6-4cba-8619-c63728b2aed4"
        },
        "item": {
          "id": "a2612463-949e-4330-8377-1690cb465528",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4a67822a-fd0f-4b3a-8038-494db451a8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06219c83-a44e-4c19-be37-da8f06dd6238",
        "cursor": {
          "ref": "b97bd02f-05c6-4d83-8691-125881ecf8cb",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "66383314-db54-437d-a76d-1cbbb972309b"
        },
        "item": {
          "id": "06219c83-a44e-4c19-be37-da8f06dd6238",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d1e59c4-533f-46aa-8328-ee6367761fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac8f29b-ae6d-481f-8a29-7b967f9ec462",
        "cursor": {
          "ref": "11312c2f-a3bd-422c-aee5-2aee6d3399f3",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "03cf9750-092e-401c-967c-a335da3e1dd9"
        },
        "item": {
          "id": "1ac8f29b-ae6d-481f-8a29-7b967f9ec462",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9f5ed34b-d73a-4101-9369-b20e5f65872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef3c32-a947-4407-8264-f0339db429af",
        "cursor": {
          "ref": "473fe3e5-3e52-4a10-b7ef-1b896a66ea6c",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1ffd3de2-58f7-4d11-af85-f5edf9b91b4c"
        },
        "item": {
          "id": "87ef3c32-a947-4407-8264-f0339db429af",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5f9424e3-8ca0-4bab-877c-5dbdf3932c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04df517f-b26a-47ce-b01d-cf8c5d977f36",
        "cursor": {
          "ref": "c830372b-8cba-4e9c-a113-344f4a0206b3",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4fe6c433-dd28-4521-afa0-51afe97bfac2"
        },
        "item": {
          "id": "04df517f-b26a-47ce-b01d-cf8c5d977f36",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9de83f4-19d8-4d83-aeb2-8de156eae438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641579cb-b82a-4000-a73c-5e36374c4279",
        "cursor": {
          "ref": "3b578782-e85b-45a5-ab59-524acc2e940d",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "09f44de9-bbfc-4f29-89ac-00dc6fe2c801"
        },
        "item": {
          "id": "641579cb-b82a-4000-a73c-5e36374c4279",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c62c878f-38d3-4fad-a42e-bdc6f76e9308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1da5847-4d6f-4f38-973a-1a39798f0d82",
        "cursor": {
          "ref": "7261d4b5-9978-48de-ac19-cea475d30ffc",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "de90beda-8da2-4f68-8fd6-16f2bd62b89c"
        },
        "item": {
          "id": "c1da5847-4d6f-4f38-973a-1a39798f0d82",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "caac21cf-2e45-4fb4-a96b-580d01d5e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2151d-a762-4e08-b5f2-450ba92b443e",
        "cursor": {
          "ref": "3cf98ca0-cf0c-41dd-8273-8cb512d79bc5",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f3dba80-2515-4605-a1fe-559a3a1e35d6"
        },
        "item": {
          "id": "4ff2151d-a762-4e08-b5f2-450ba92b443e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1b80db9d-6c81-43ee-94a6-742294bd7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de0e30-3db7-4114-83ff-c82e98874bac",
        "cursor": {
          "ref": "d9601e10-b77b-4ea3-87b5-24b58b4e53b7",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bf11ad31-c18c-43af-bac6-2b0d8924f064"
        },
        "item": {
          "id": "13de0e30-3db7-4114-83ff-c82e98874bac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc881eff-63ba-4d3d-bb85-3af020882f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fbd5dc-6511-4313-89cd-7d4ceee0b3d4",
        "cursor": {
          "ref": "dc9121f3-0dd2-416f-9d73-9599a1b08cab",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "83e10d23-aa88-4417-ad7d-086ed650eadf"
        },
        "item": {
          "id": "09fbd5dc-6511-4313-89cd-7d4ceee0b3d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ec25a147-85e0-4d47-b648-36b069d75bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30465b5-b9ea-4a6e-a111-b1ea64d8022d",
        "cursor": {
          "ref": "f221c108-c59e-4667-86bd-eccc63afd151",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b775b8ce-4019-4596-aba4-11c34bd1bb0b"
        },
        "item": {
          "id": "d30465b5-b9ea-4a6e-a111-b1ea64d8022d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cde05d44-43dd-438b-8074-f5f808015494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f700679-0ac3-4d08-b1ba-a005bf50b049",
        "cursor": {
          "ref": "93dfb585-2049-456d-b000-68292afdad1a",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9a110d52-5ceb-481a-84ff-0bbe4dbd62cb"
        },
        "item": {
          "id": "9f700679-0ac3-4d08-b1ba-a005bf50b049",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a5341c23-ac2a-4081-8b8f-d3e3a2cd8eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af91186-98d0-41fa-81d4-f2c56ab2b5cf",
        "cursor": {
          "ref": "eb3e59e1-27d4-43e8-9348-ffacda2e3949",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "34cf1e22-3a74-4b60-a3c3-bf33417dc811"
        },
        "item": {
          "id": "0af91186-98d0-41fa-81d4-f2c56ab2b5cf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8c81897d-1855-4d02-b267-6082b7f20ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19f3f7c-ebcc-45fd-b7ab-b34c2d611b26",
        "cursor": {
          "ref": "d7f67391-326f-4fc1-b40c-6aaf7384c023",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "68049a4a-b0e6-405a-9b32-1fe5fd3a35b6"
        },
        "item": {
          "id": "e19f3f7c-ebcc-45fd-b7ab-b34c2d611b26",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f525f6a5-9094-4f2f-a114-1b0dd077284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a01a68-0f52-4fe0-938e-ea331bd0c5b0",
        "cursor": {
          "ref": "e9c425ac-d9f4-40c5-90ae-21e2da4be47d",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c48d73ca-20a0-4755-bb10-ea5587d0600a"
        },
        "item": {
          "id": "b7a01a68-0f52-4fe0-938e-ea331bd0c5b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63ef569d-7462-4e8e-bdc9-380efa20f6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eabd0d-19f5-4a82-be6e-92c5bdca1602",
        "cursor": {
          "ref": "a49c1e6c-26d6-4be0-81c4-be389747ca9a",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a9316d7e-3bbb-426f-805e-7359d353ff43"
        },
        "item": {
          "id": "58eabd0d-19f5-4a82-be6e-92c5bdca1602",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6dab638e-0b48-49de-8697-b6eb3dea8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c87537c-16ae-46e4-8324-038ad277b537",
        "cursor": {
          "ref": "cbe4d014-7e2d-4844-97db-74e101215130",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8ef487f2-4a54-4f8f-b484-bd06a4a3ffde"
        },
        "item": {
          "id": "1c87537c-16ae-46e4-8324-038ad277b537",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e0745a1-c87c-44e5-9f23-914e81194003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f228917-dd8c-460d-9390-27d282d1dffe",
        "cursor": {
          "ref": "f86d309c-2be4-4e30-91cd-ca33db43d49d",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "19e15962-e399-4e26-8b4a-9b9a3c37f74c"
        },
        "item": {
          "id": "8f228917-dd8c-460d-9390-27d282d1dffe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "58d4febf-2368-4e63-9d81-c8d1468b8de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2a2fd9-f8b2-4561-80fa-547cf03485f9",
        "cursor": {
          "ref": "ec0ccbba-8f5e-433f-a11a-0d3b27b0f0c4",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "833e5c6e-e260-436d-b6c1-70b88842e997"
        },
        "item": {
          "id": "3b2a2fd9-f8b2-4561-80fa-547cf03485f9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f255201e-b5d2-4efe-a07b-52a7a1692714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593125bf-c9de-45ec-8da1-0d367febaa19",
        "cursor": {
          "ref": "a97fa00f-4cfd-47f6-adf7-a9c411761480",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9cce009b-9bc5-44df-8cb9-295568194317"
        },
        "item": {
          "id": "593125bf-c9de-45ec-8da1-0d367febaa19",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d1b341f5-43dc-4e49-a040-af4f598aaad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f885412-3963-4e87-934c-18f4bb085e4d",
        "cursor": {
          "ref": "e4d858ba-b404-4c6a-b801-aeb538809ca5",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5183059c-4227-4f48-9495-9e47975bb492"
        },
        "item": {
          "id": "3f885412-3963-4e87-934c-18f4bb085e4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "35ef6fcb-0b42-4408-bd03-f8a009026ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d585d4-1b53-4b8d-8e32-ee9be26d595c",
        "cursor": {
          "ref": "1a0b7d50-25cc-4cdf-ae81-f80514589598",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "46517d8d-cadf-40d0-aacb-ff620ab92869"
        },
        "item": {
          "id": "83d585d4-1b53-4b8d-8e32-ee9be26d595c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "387cacf4-ac26-4daa-bc1a-1b6ab02d61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a971c7f3-d4f0-4c2a-808b-423701cf3fd2",
        "cursor": {
          "ref": "2c6fc00b-e334-433c-9114-e30fd664dfdf",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "49eac7c6-b168-4150-ae82-35c9dec711af"
        },
        "item": {
          "id": "a971c7f3-d4f0-4c2a-808b-423701cf3fd2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ccdbb282-d8f3-4a6b-821d-6977a14152ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a5dcf5-e524-48cd-bd6e-50b085df4e28",
        "cursor": {
          "ref": "3b9834b5-85fd-47bf-ae18-9acce38cebe1",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ca26c5be-d6ff-4eb4-8919-7f7b924e2284"
        },
        "item": {
          "id": "d6a5dcf5-e524-48cd-bd6e-50b085df4e28",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ee80e1b-adfb-4b37-9730-b34d31a56300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ed186-9f07-48bd-8c91-fdd9eccf5ebf",
        "cursor": {
          "ref": "53a0cfa5-18d0-4b6d-a782-4f363b7ece73",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f150ea3-4dc3-4898-b1d2-74d848cbf0e8"
        },
        "item": {
          "id": "849ed186-9f07-48bd-8c91-fdd9eccf5ebf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "718fb530-a1df-4f78-9df9-fa3497024665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e8af0f-a70a-4b66-8f06-a91d37086fd6",
        "cursor": {
          "ref": "c63edf93-e345-4952-aeed-8822f82d9084",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9eeed3da-cc07-4998-8056-80960d5e7174"
        },
        "item": {
          "id": "67e8af0f-a70a-4b66-8f06-a91d37086fd6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "901c8470-3524-460a-a96f-931670b5209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a27728f-b280-4163-8d9a-e72a3806354f",
        "cursor": {
          "ref": "fefcb7a3-6eab-4ba6-ac0c-d5a7ca6ef946",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0f69a826-7aa1-4070-9c1c-039f25fe709b"
        },
        "item": {
          "id": "1a27728f-b280-4163-8d9a-e72a3806354f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "288ee17b-4d25-4cdf-a27b-f075ab4ba1e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba9d583-2380-4450-9357-1189e5014a89",
        "cursor": {
          "ref": "f2c017aa-146f-42fb-9a44-b4f1d5d031e0",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0a90590b-5d52-4069-8472-238cfe466f9a"
        },
        "item": {
          "id": "fba9d583-2380-4450-9357-1189e5014a89",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0996a44b-8ba6-488e-8773-a620fc439f13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 362,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5281c-3026-4051-9b5e-b040894c35e8",
        "cursor": {
          "ref": "fa3ad679-63ce-4aba-8ba4-ee4c9f1d40e8",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a48977db-a778-4eb3-a659-a9c8ed4b832c"
        },
        "item": {
          "id": "f0d5281c-3026-4051-9b5e-b040894c35e8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "eb44131c-7fa9-407d-b8c1-4f9181b65dce",
          "status": "OK",
          "code": 200,
          "responseTime": 452,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52f748c-bc6b-4b97-a663-b358d42cb1a6",
        "cursor": {
          "ref": "39a06ab4-b354-47e4-8627-0f2713dffead",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "17124971-69d6-438d-a771-ae446eb6c71a"
        },
        "item": {
          "id": "c52f748c-bc6b-4b97-a663-b358d42cb1a6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aecd0b6d-09b0-4010-8c58-74db3524facb",
          "status": "OK",
          "code": 200,
          "responseTime": 451,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a05b542-fc19-455d-aa3a-65363e27851d",
        "cursor": {
          "ref": "6b20ca6b-461f-4495-be9d-c8a74c1d0d75",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aabda42e-1067-4c70-bb2e-de69d4d34ee0"
        },
        "item": {
          "id": "6a05b542-fc19-455d-aa3a-65363e27851d",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "5afc19fe-93d1-4d23-9bfb-882b889b1d40",
          "status": "OK",
          "code": 200,
          "responseTime": 601,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e02ad3d-37c8-4715-a776-bd15d773224e",
        "cursor": {
          "ref": "f6c5ef21-4728-49d3-acf6-6571a95249bd",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "31d9c33c-0ed2-4c89-b842-3f5a789fca3f"
        },
        "item": {
          "id": "8e02ad3d-37c8-4715-a776-bd15d773224e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f121dbf5-f678-47bf-a75d-fa3ada33ef87",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a533062d-332f-498e-abc8-614831066028",
        "cursor": {
          "ref": "da924a8b-65e2-4fea-a59d-fff89d535475",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9c6cf8b-dc96-4f4e-8a80-7e2b78d5fc59"
        },
        "item": {
          "id": "a533062d-332f-498e-abc8-614831066028",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4232184-be30-463d-9bf8-efb36beb51a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a533062d-332f-498e-abc8-614831066028",
        "cursor": {
          "ref": "da924a8b-65e2-4fea-a59d-fff89d535475",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9c6cf8b-dc96-4f4e-8a80-7e2b78d5fc59"
        },
        "item": {
          "id": "a533062d-332f-498e-abc8-614831066028",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4232184-be30-463d-9bf8-efb36beb51a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a533062d-332f-498e-abc8-614831066028",
        "cursor": {
          "ref": "da924a8b-65e2-4fea-a59d-fff89d535475",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9c6cf8b-dc96-4f4e-8a80-7e2b78d5fc59"
        },
        "item": {
          "id": "a533062d-332f-498e-abc8-614831066028",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f4232184-be30-463d-9bf8-efb36beb51a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3fbe66-bf25-43af-9650-d0b885868d62",
        "cursor": {
          "ref": "c68a12f5-29b1-4597-bb7b-a37fa2f23549",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f189c73b-9fe4-4dcd-af49-f7633f7c4031"
        },
        "item": {
          "id": "ce3fbe66-bf25-43af-9650-d0b885868d62",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4b9b0c07-649a-48cb-ba5c-a9ba9d709611",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 320,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765df6fc-2ffb-4730-81cb-0886631f7c0b",
        "cursor": {
          "ref": "490a5e54-b333-4703-ad5e-74c12311dfb7",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c9a2b961-a196-47af-8cc2-74252b7db3d3"
        },
        "item": {
          "id": "765df6fc-2ffb-4730-81cb-0886631f7c0b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dedc8a39-8911-4be8-b4b4-7a298f7a9d3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765df6fc-2ffb-4730-81cb-0886631f7c0b",
        "cursor": {
          "ref": "490a5e54-b333-4703-ad5e-74c12311dfb7",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c9a2b961-a196-47af-8cc2-74252b7db3d3"
        },
        "item": {
          "id": "765df6fc-2ffb-4730-81cb-0886631f7c0b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dedc8a39-8911-4be8-b4b4-7a298f7a9d3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4045e47-0580-4b99-b705-e1a5fc06ce4e",
        "cursor": {
          "ref": "7000c702-d618-448a-97f2-33a0506c5a96",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9ca4417-5db2-49d6-904d-8f7010fa9924"
        },
        "item": {
          "id": "a4045e47-0580-4b99-b705-e1a5fc06ce4e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "20d1f026-9b68-414f-81cf-4c0b65b294af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 769,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb0f3bc-18b9-48b1-9181-851f490cd738",
        "cursor": {
          "ref": "490b456c-8b00-4916-b33b-02d10b75fa18",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5a60324-7f2f-44c4-82e6-9c04079a6d7b"
        },
        "item": {
          "id": "1bb0f3bc-18b9-48b1-9181-851f490cd738",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84901711-aa37-4aea-aa3c-eb2de1826a6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb0f3bc-18b9-48b1-9181-851f490cd738",
        "cursor": {
          "ref": "490b456c-8b00-4916-b33b-02d10b75fa18",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f5a60324-7f2f-44c4-82e6-9c04079a6d7b"
        },
        "item": {
          "id": "1bb0f3bc-18b9-48b1-9181-851f490cd738",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84901711-aa37-4aea-aa3c-eb2de1826a6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052c873f-728c-455f-abef-3c4a4f442a4b",
        "cursor": {
          "ref": "840bdadb-4cf3-469c-82dd-c7698e5d8d99",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2c01268a-0b05-4790-b126-02c866fead5d"
        },
        "item": {
          "id": "052c873f-728c-455f-abef-3c4a4f442a4b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c860971e-1417-4429-9ca6-a29179ab4a54",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1070,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}