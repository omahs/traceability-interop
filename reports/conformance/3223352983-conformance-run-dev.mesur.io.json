{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb7d6179-7a41-4bbc-a706-961204aa965a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "98a53277-9c4d-426f-8586-838d42cf304f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e48a688b-c5de-44e1-b55f-03b5e0ed1cc9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "997259c7-b4c7-4df0-8445-2a06bb820a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f96fc1a-82de-4ec8-9400-f31bc1e9b9f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "976b6433-7a08-4d5c-9e36-48dee51102f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fa4eb0a-473e-446c-93c4-98d1db11a3e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb1b382f-d1ca-4dfa-9984-2a58c8d1907b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b59b8aa-de9f-4ca7-b2d0-ab2454435db9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2728512-5ceb-4e9a-a866-2a86f5dfeb73",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e6b7ac0b-335e-40db-b13b-556b9683514a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0745a595-64f9-4b7f-b911-7515d4eff6d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df38f315-2213-46ae-9cdc-869f8f889d5e"
            }
          }
        ]
      },
      {
        "id": "60627231-b5a5-4692-ac7c-e2f298032648",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1205fe44-d7b0-4137-9b2d-050a7aef92f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9736adf-5046-4feb-9b11-04c9f7313fbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fdd9f9d-5e5b-4181-a67f-76a4cf2d8739",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7613bce-4535-48f4-ad5d-fa58217257db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80a25aca-9cae-4b4f-8cdc-ccf7e0f7f76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33893c65-5b3f-427d-9525-eeaa9c01ec8d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8534c-f8b5-423b-a37b-c72584cd672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95f63b4f-464f-401f-a7e3-5ee877df6b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92862fce-374d-4ff1-b553-d2759055cc8f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd5778-3807-4bcf-8935-d850c81eef97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1e6633b-7782-4a50-b6a5-df80998f56c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77a3133c-0697-44a2-b3c9-d11856d55361",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80562ddf-9456-4aba-b9c8-c9c53a9d104d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de325a94-c762-4972-a3a3-477ba578a96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d5c62b-77f7-45a2-8f31-7ca540c501d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4aca697-57fb-4ce2-b9f1-860c16e5ff5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a3ed03-5f9f-4401-9625-d6fc24b32c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b9ca38-ec36-4f36-8335-42d9d8f21219",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdacdc9-bbba-4644-a029-972ae59eb58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fac3743-f2de-4b6a-98d5-25e870bee200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49808d9d-a2c0-4c12-8f31-e127c0e041d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a988c2eb-0b49-4e63-85ea-b2729c2b7126"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b7ada3a-6988-4d14-99dc-d30ba61d4580",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5af55a6-482c-4bb6-9022-a6788d364a46",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "252af073-617e-4938-83d8-c957861eb2a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "734a2202-c6a6-4128-97e3-f14582f84515"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3672aa67-c596-4ed8-8c6c-9318a4822aeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cf0a6549-a9e2-4007-b45f-279474876759"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "867d1237-def0-49e6-9927-94f9b343f4f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09f3a0eb-4e73-4966-9376-1e6aa96aafb5"
            }
          }
        ]
      },
      {
        "id": "820a2d3a-c9e9-49a6-a996-79425cfac89e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f9abd6b-7a15-4132-8cc1-f8b0995c2fee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8be379d2-b00c-491d-86fd-79f452ccb96a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "280511d0-d90c-4bc5-a14b-d02e43a4f06e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29905997-091e-4749-ab9d-c4e5f6083d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4089f8f1-020a-4c73-b4ef-fee9a8c52dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9db29dc-252c-4284-9a95-1910f0b1fb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3b46bf-9bac-4e8f-8da2-6669437f6a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eaaa4a-299f-4559-8f0f-5632c2272c13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fbeb55-1983-4752-8f66-bc184a839fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a147c6c2-92ef-451a-bfcd-1f0f4041c763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0893a7a5-1db6-431f-a7bd-aaf8542427f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327268a7-067e-4cc9-b7ae-c90aa7ec9d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444f22e0-e9a3-4088-b290-f7b6d875a2fa",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4fcf3-8757-4c6e-bb6d-c86ff2a7d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb054f9-38d0-44bd-87e1-d6d75c64136b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87786c1e-895b-4c4d-b7fa-ab4329f6727d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47cb3079-dd06-4de1-b748-9ffff4b50d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8290a07-986b-48ea-93d0-9065251690d2",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eb0a2e-4e70-4680-9809-5a2d4220650b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fce6332-b8b5-4553-bb4e-58ac23ece569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf7bbba-d60c-4cf7-afb1-95ae7b230a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162d2cd5-fcfb-495a-8566-27489fa30314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d2e3f1-d547-4c1e-bfec-348ed52308e2",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142a370a-6f2d-4d10-b835-7652d78ccb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07412ac-01d7-4ca2-ae31-c02e2a1e4b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdebc6af-dfb9-41a0-9aec-af6611704e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d054196-e94a-45cd-b357-32e0fe359f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1043a45e-6c8f-4ee7-972e-b9ec73dc5bae",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79909ea7-c159-4b83-9954-c772afdf553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e892a47-88e1-43e4-9bc1-74ae197f6ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a6a999-b699-427d-876b-f2be8a01f30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85811451-7fc8-47ee-b1da-5c5832ed5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a929ed1-8d62-422b-a038-6974d954e8d5",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b5d5cc-2c35-43c5-993c-72a94051b988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22512d7-c359-4ed8-a068-9397ea578e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8597b73-2c7e-43ea-87e5-8c27a87a1366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ea66bd-846e-4d57-8afa-8495ea91c61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c021bc4e-caf6-4877-9fa0-0e52b2aa7bc9",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b1f593-e4b8-43bf-a80f-0ab82c60667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eddbc24-abee-415d-ac0d-1ef8314b250f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764d0d60-0574-4335-8988-45b4d0eee5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd973614-45f5-43a4-95d3-a1a4ee187182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e222a407-fbcd-4a86-a701-a1b9481168e6",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe278bd-b46a-4ea3-b705-cd00d48e230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d6a566-070a-4984-ae68-fbe1367cb1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32b821b-4963-4a13-960e-44a6dbfc11e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69ece3b-4c2b-4e01-bbc3-43ba35d37aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f57c3-8951-4a69-b4bf-2083c91ced8c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35683220-9da7-412c-8a49-34f9ae2fc6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839298f2-a80a-49f8-80d3-c3f9b5025d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c176e074-a8e6-49f6-aaf5-d2e1733c5b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79e4b86-459c-447e-903a-857af5832437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93bcae3-ea7d-421e-842e-fdbf20411c46",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e0f5aa-f64d-49ee-ab6b-0ce354de8113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0198f0-6641-4fd0-8dc0-d73a2b3c96af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02f0c64-6f10-46b4-8f02-8f7d8945b71d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670c0353-82e4-413c-859c-55903a47fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e263bba4-5ae2-44d4-a575-f5bb170a29eb",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe4d63d-aced-401a-a345-94d162e61e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab8c1a0-a4a5-47b4-9596-46f99136c469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f204af3-5834-483e-a6c0-6561679cca19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "25ca65a5-b99a-45e1-b45f-3cefa66266ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43cffaf-0cf4-4564-919a-f7c835de7365",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588a821b-bfdd-473a-82d8-5e90a083891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4068d75b-fee7-46da-89dd-4efe77c0541e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a999433c-99e7-4d8e-b3c4-d0a0e87a53df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "6c8ea73b-6c75-48cd-a3ba-714571cb8b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b6f5ae-e8d2-4fa3-b900-b0caac61d824",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa5a30a-1030-4745-b164-04408bb4dba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75169e50-8fc3-4145-8756-0d474a98ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363aaedb-99de-4c06-ba5a-85f57e8c9a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9bfe72-8e99-47d3-8881-4d6641709498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092429bc-0c3d-4d6e-8829-a55a774f6850",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89257b7-d0ec-4373-b63e-d7ee15773ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6715e45-34bf-42bf-baaf-acd0368a8b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1750d70f-4772-4299-aa6c-316f1283fe8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639cdbff-fcad-49c1-8be9-6c5dfab12e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa6bfd9-a763-4bcd-8671-c900b1444d0f",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd37900-09b8-4290-815c-0d2da3fa861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa58f6c-8113-4b5e-87e1-2c5842b7264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e510a192-ed0f-463f-8ff5-ec81ed41b13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "70ba1241-a890-4ee3-bd1c-23cf83e202a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b254906-8d10-4ff4-86d4-b677dfdf53d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a11ed4-41ad-47ef-81aa-ff1b3a26a770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863dcacc-6a59-413c-be91-0214e43d78cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb62420-3aac-406e-89fb-d25aba7f622d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "81299a11-b8a6-469b-9ae9-f6445c10f973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81dbc4-895b-4685-8034-4d5c8cf5f99c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcbb484-a003-4218-a001-c5bac737bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22c67b6-bac0-4a72-bb12-bd646434294c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9249c3cb-0938-4921-bdeb-9d64e6a34490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054e2c1b-5e63-47ac-a6a6-524c15bb069c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abb35ec-2534-4bd9-8c6e-4b03c2c39698",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b51e917-69fb-4f6c-96d4-7bb34060d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6b2b68-b7ca-4901-867c-aa12c4afe842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c0207-3f99-4f7d-a425-cf2a0216336f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0de14a7b-c6bc-478e-8091-cecdac5b5d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8fe754-15f0-4475-bed8-e48bbe251056",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4bf15f-6ae3-40d7-becf-de7dc2d0d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bce77ad-3dbe-4d8e-aaa8-72ad7842d4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9f2a2b-c9ef-45fc-9b71-e9a22fdfa00e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9b40b2-3bb9-4145-a557-2f1701085330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1411e-333c-47b5-a95c-6575c9b3fbac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c45e15-3cd5-43dc-95af-23f9b3f1dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8386a150-1d38-4529-a976-64b183ae04e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473d2b9-f6e9-44cf-aeff-9085587a5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a843126b-9a85-4a9a-81ae-40e27732091e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d19603-3d18-461d-8838-9c3d238af6a5",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10e505e-e4a0-40a0-87e1-121c02aa1b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405fd8e4-351a-497a-b158-34f37de6e1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988bed89-50c1-4f97-b741-f2eb0a97df1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1bbc484-ae89-40e2-953a-d915f7f1fc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327905b5-3702-4c1c-9d68-89ea58b4e352",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e30f923-5e0e-42f8-82b7-467bb61a5f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0658a0b-ba02-48a3-8097-582238c83b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ec8c8c-dd4e-4907-8823-400740d25cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a7770a7-985e-41e2-817f-96aca1de8fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec03ff0-ceb9-4d71-b991-ce3cee75ff4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d55e19-64fd-4287-9827-234344e4c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f45877-cfc1-47f7-a812-33f901de1619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b1de7f-1e19-4e51-903a-2ecb4dd797fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59514722-46cc-4001-8bf4-b88a2d683ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13152604-73c8-410b-afc1-b5b636c557b6",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2c51b2-1f52-478c-ba74-1cf3a313c356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1369fc-4fe1-4437-9370-b4132473263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41003b0d-fb68-41c3-be9f-c4c625e5ab01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349f95b0-a068-446f-9705-7ee60e041023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99572f7-a61e-4607-b3c3-07b0844eca9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d88869-703f-4b71-86d6-d31581115735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce830c7-ff5b-47cd-9453-8d407b7a7aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b49c4f-9eee-4aed-819d-d8450ad61ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b191564-783a-47b7-b6e7-2a9c3476ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543a4471-29f4-41db-bf10-9c9eeb8ef186",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d5568a-0413-4870-8a28-a1e09b50d8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4c6de7-8e54-41dc-9897-ec77a94f8b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa154c8-b08d-4598-b026-7a8039e0f731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0f422e-dd1a-4616-98f5-d3acd7373513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b476c-af31-4b1f-8108-056c87f22425",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb735b4-e38c-487d-8ce1-1c523fa18e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7ea036-b725-4850-9f99-f974cebc1b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576af1b9-9f3b-4e5c-9b9d-b88074eec242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ad1eb9-1c25-4e20-9d41-f755fd284e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd45254a-5181-4437-8b58-e4d1cf6827fc",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ce5dfd-6a97-4608-b553-e4129a2ed52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d5d501-3471-4b9b-badf-650fb9f60068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b08c2ef-e9ed-43ac-b02c-46bc87e2e223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debe3911-5c3d-4f7e-850a-31ed5785218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72664c2-3f2d-4548-b979-8883b270809c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041fcfa3-ae32-47a3-a5f9-2cdeb7702d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09de50ee-62a9-40a5-8469-2edbb210ab4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b5b42c-57ec-4f85-85f4-a392fde1146e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bb4281-391f-41f9-9994-24f2c4e1f4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006b7caa-935f-49fd-8647-21c82c7facc8",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ea905-28c4-4535-854f-53ae0a3ede3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c14cb0a-5597-4557-bc37-e1fa6df307d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad16f7e-c33e-4787-bb65-2e959dcf1f31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9668630-52b2-4bf6-a916-012f2979a90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcccf836-d222-402c-82bf-2e56a4232bab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d414e-e790-4b80-8ccf-52b6e6c25f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e28f5cc8-49af-4552-9068-5766985c8c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77e373f-593b-4f48-9700-5791219ed37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee920f30-4191-446c-a365-4f46afc9321c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fede899-67d9-4704-8b23-c35c2284df48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fda78ef0-1c43-49e8-9e60-bf94b85562ed",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0457c5d3-0566-4220-b179-f3deaaf2505a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cad3257-c27d-4b6f-a54d-4674a39ee1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1220997-a56a-4267-8c1e-65bef7ad2dca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b5bf023b-3f81-4086-945b-c9acabd859b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d2e472-bb96-4c64-928f-723826a643b5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c40f50-2353-4b74-b7ea-d4fe76f22981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02789d4c-855e-4214-8abe-796e549c034f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128cc700-c7db-4b9d-a526-6edd2a344838",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ed6ba6aa-5bee-4859-ab5f-417fa04a04f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eff25875-5dd8-41fe-8c6f-5ae35799f76c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f210dae8-b997-41af-a7fa-ffbd22d5742a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2400b4cb-7674-4ef1-ae03-3fd1dbf9dc19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef9967f3-96ab-49ea-aab1-ce8373235b9d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eee9206b-8e5e-4273-bae6-7f986e249c03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "651a3b86-0fbf-40d5-aaf1-21c1ba1443ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a63709f1-df06-4575-9cd5-37e0de5d5aac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80270640-3639-4722-97e6-d3cfa6c7d11f"
                }
              }
            ]
          },
          {
            "id": "429833cb-0ea8-466e-b2b0-aaa1a8669a3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c2cfac4-87ee-4512-a095-6f86e14a19a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa27663-95a6-4498-acf8-dacc024ea181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fcd28b2-431f-4eed-b609-a66f279ee89f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fa4cf34-009e-4713-90d6-b8b50e76fd93",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c0e2dea2-f791-4241-967c-ca55710823bd"
                    }
                  }
                ]
              },
              {
                "id": "1d086362-6fbc-4ebf-aa94-c0c4a5d10f27",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b4a205-c36e-4cf7-b45d-47a828e7556d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5113b9e2-018c-4c9d-b591-d03ebc530f9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c88f877-2a64-4fe2-b8fa-b52cfa6b1d20",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "c4a6d52a-37aa-45bb-8863-89d9b2d3de2f"
                    }
                  }
                ]
              },
              {
                "id": "dfa3f5a0-5900-49b6-a34e-90225d3c7163",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e43ae7-c2c1-45cf-bbd5-ad2d0e180d44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d8653de-7167-409b-ae73-541181c4f2aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7af4598-00c4-4080-a557-955b5ae53ef9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "00dc2064-60c7-4a31-ae1e-57af05276ee6"
                    }
                  }
                ]
              },
              {
                "id": "5a04f123-5fc9-49a4-a09f-9c936dade5c7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa4924a-b143-41d5-b166-ba9135506da7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60085e9f-1442-4b85-baa0-192718c190d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8797459e-d254-4ef4-91fa-4c892ee4d4aa",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d12521f2-e2d9-4a18-b9e2-d3c0f316c0e0"
                    }
                  }
                ]
              },
              {
                "id": "bd81bb21-a6ed-46c0-b0b4-b692e2bd7361",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "370c0c6d-ab4d-4298-a5bb-a3b425a92f84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46a9afb5-a83f-4f12-9d3b-646c993f99c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16f51e3b-0363-4379-879f-41c6c31f1bcb",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2803dd09-1349-49f9-b728-0f0872dd0e0a"
                    }
                  }
                ]
              },
              {
                "id": "bd2f8244-0855-45d6-a9e3-c5b2584b757e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "094c485f-6856-447d-a91c-c7c5ae45433e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3cdde4-5509-4aac-8cda-ae1f92e2b861"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f4856de-08dc-432b-bb10-7b5c9841f0b6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "72e433da-ae47-4267-afc0-1ab0b5ad71a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "405a3504-9328-45f7-8cf2-48dd7af8273d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a44ddf0c-b28d-4cc0-88fc-4d235e98be7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "436b0ecd-94ef-41d9-aff4-78cb76af6b3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3edee0c-3a3a-47c5-bd59-77d3a519c29e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc7e4240-1187-4d60-99b3-5c731f87a766",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "a299b8b4-f987-4c28-afb7-e40c6ed8ade4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb2608f2-debe-4813-9ebe-270556824e53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f608298e-9d61-445e-913d-a6aefec099f3"
            }
          }
        ]
      },
      {
        "id": "d769fc24-50e0-4887-8b66-e349c6d5b5fe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c5a1afc-3161-4a00-bddc-4cd526e17505",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52e9068b-5cec-48ae-a2a8-4a849d911fe9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3eea5f4a-1bbc-4e2f-a4f3-e2075ebe9bb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4f038-4976-4667-afb5-1727c6246af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe86ace-5e57-4c10-9fb6-e4964078072a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238d7f9d-328b-4a69-a7d5-03e4c94cc571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf2db425-4509-4253-96c2-4cc67daae814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6d631e-dce5-4c55-9133-bf14edfb7eba",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc2a8d6-ddc3-4bf7-9f89-0b5d018a4653",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "328f9b8d-96b5-46ad-ab1b-befcf9531f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc1e418-7d00-4d46-99f8-d82bcf62a504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cacb80d2-88da-4bd4-8927-edc811362851"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cf66679-2489-40e4-bb38-daf191308482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26290fcb-e6c1-4d4d-975e-47b5a93c76b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a94c7484-ae8d-4d6e-aab1-c14410d3bc63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61b490fe-ed73-4fa4-9ed9-e5090194cc57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d018324-ff22-42d5-af42-e153f129d3c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "e03a336b-ab70-4eaa-b086-76f353c8f24c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0efcf97-1e88-4b38-bc2f-248579891077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d53c4a06-febc-43e2-9779-09fb751166d0"
            }
          }
        ]
      },
      {
        "id": "0f0abcee-f13a-4596-a526-c724572ebbab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6fdf8f1b-5878-481c-8949-3e31aa10f9d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "610f9c73-e33b-47f0-a661-96102761191b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "319ef38e-990c-4744-badd-b0cd6fcd9b41",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2340e6a-0d54-47b8-953e-57624accfe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b0333f-6119-4038-8af6-98793bc0f7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd3e6d-37bd-45f0-957d-241ce20d01aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d5739-46a6-45e5-8a84-5706bb2cc93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e9473a-1917-4dec-b2b7-8060d416d086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d8ad54-e7ee-43fb-a60d-e18d76b27439",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a97c2-ae37-4bec-bc31-78fff4511e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef307a59-be5f-4db9-945b-601bfe1480a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77036d33-532e-4f8d-9be7-98bd6fb216ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ca3810-0f7d-4887-97d1-0118ca2e619d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bc0878-7059-4a23-97ef-544e1a801bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b77ca42-7d1c-4d02-b35d-dc70bc8da855",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebf5d2d-cbbe-4f8b-ba43-5678f2903199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b28c16-c038-4338-b738-3742812a9521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6b821d-6a2f-4d3c-871e-ef9591f415cd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f28203b-9ea4-4136-a77b-f13885e2b766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebffd05b-6bef-4cc0-8a05-30abaccc1356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d59cf6-4573-428a-a38d-8f1dd2d1ec64",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c84749-90aa-4764-a175-ce44d2e5d37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187420e7-2c4a-4f36-b97f-e97cab2a294a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef265194-9861-472c-8a80-4d6b98d392a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f495ee-20f8-4c41-b526-e592ffd66691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6d0cc9-79b8-492f-a36f-5c164ce635b9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498a6c39-edbf-4ec6-96b8-55205ebebade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1573843e-e747-4dbc-9612-272f32ac3119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc5ed1d-9b22-49ca-953d-1203d6eba663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71beeb1c-c40b-4915-b800-5af2d5b214fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ec9d7b-c088-4b17-9bca-28b4ca8c1fea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a001e9fb-69e9-48ef-991f-a524d2527a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d33c3f-24de-4bb8-91d9-438769d8e273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a5069f-6d8c-47d7-a4d1-e6198831787b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796a61e8-d7a5-4c8d-ae9f-a1a665021bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e77188-f612-4301-97ed-9b9aa7679463",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa384a2-22f7-4b70-9a95-69b14d324d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364a0fcb-4c2c-46b6-a207-20497e4b05d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ba95ad-b768-4dc2-a87a-c635aabf8f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468f23a5-b8cf-4099-8ad1-4437042cbc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21df12f1-f008-4d04-9494-d87a4522c5dd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4468e4a-21ed-4a01-b11f-51231ef37813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce875609-ea79-4bd7-af33-2ceae32f4935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a81301f-5c10-4b9f-b52e-882dee67a4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aca562-0631-4682-a2cd-ec92864f9939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f5d881-8f02-4ef2-a60c-1615677fc592",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a63bd79-54c4-4eaf-bfba-66878d2ea45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be63c904-2a70-4d3f-aed6-dc3b87e9558d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5d988-6b9c-4fe6-99fa-216cf6505797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b37e523-316a-4fe4-80bb-f3206da7688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe13d4f0-307d-465d-9c4f-447cc0c51486",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895a548c-3b3b-4cf0-8ffd-4a88f208753f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd808380-1f09-4f16-afbb-647574cb3533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155d473a-b829-4863-af67-51e983b37ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b6e264-0ad5-4687-864e-29a1054794fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a92db-c09c-4cc8-9cdf-a8a9fb86b688",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd44573a-e88a-49ae-90d4-40ae82633761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a33e756-79aa-4a97-8237-f1f62447d214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5c3065-d0dd-4c29-a771-d051548541be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cf122b-8983-49d0-a972-d24e4a34f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c154e05-e8ed-45bd-ac61-6e38295c485e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2074a391-b059-432a-8095-8b5d6d190fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b45403b2-292e-427f-9a7d-da3d055be467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d739ba6-a6c2-4961-b04f-609511517a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5d214c-a294-4158-9502-ab63dd36bf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32819a-a3fa-4a01-a5ef-7aab949fa036",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c239be-d040-433e-bebc-6a1ebfb446f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e093506-1837-486c-a7e5-5437ed272a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d59756b-533c-44f2-b9e2-3cb3dbc085e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15f7e73-ed38-446d-8106-5b4cecb553ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85d4dd3-f1e9-4d47-aa41-26d7d9fea07a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5d0ce9-59b3-452e-b4d8-cd70e606a83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cac1697-d8d2-4a31-becd-7be68017a791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b75896-e955-4158-9657-360a2a5d5e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec57ba6-b7c1-41f5-8488-3819f79f4033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0972e164-bbac-44c2-ad51-e09e6451c8e5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e371e16d-9d10-446f-836c-65cf9ff19fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0554baee-4640-478c-8e89-bf23336b068a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6bf920-be9c-40e2-8a63-64290b56e696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae71dab-cedb-464e-9db5-24a1e260858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91f6b4a-7615-4740-a335-5041bb8677d9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3ee87a-43a4-4b80-aae4-09ce93b7d67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a350418-9674-400e-a8c2-cbf5628797a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1684b7d-b281-4611-b07e-5a2ece11558a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f3d0cc-43ce-40bb-9e61-030b5cc8bd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b3b9c9-a7f1-44ac-af61-915e9b28197d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c8cf80-e12e-45ef-ac3e-6de44fbe7b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94daa0cb-0b0e-4203-a0ed-d6edec275716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4861e9b0-d705-440c-81f3-b3c2306ac908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6c16af-ea18-4ddd-9645-4c4e55f970c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f096f7ba-af5b-4888-8ba7-0d25b1ba1759",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61355877-fc4b-49b4-a9b1-a1d957e3a33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbde7a6-61ab-450e-afbc-80fdf52037d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbfbefa-c605-494f-ac7e-acbbba833c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b69dcd-4997-4c90-a4d3-fc7be2a99b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8949ff9-8a1e-444a-9ac2-a81da634d4f9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc835355-c1f2-46ca-a249-c2ac406a365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1649d1bb-e50a-4c8d-a651-1355183d53b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9abb470-79e8-4f0d-9f27-4fb9c15634fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b045eb21-c4ac-42a7-8313-89d1315ab2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd86bb-dcf0-46c9-80fb-41c7bdd8e58b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c32e24d-fa3e-4754-b77d-73673db012ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58560825-166b-4ac9-86be-3abd40f095b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f0f2d-95ef-4785-ba25-e3b1e7e88177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e8cc7b-1466-4506-9841-695d22dc327c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b145507-8d96-47dc-9ca1-7ad4d11f4f90",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a18f596-0fbd-4d2f-9eae-3c58706ffd3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf38f34-5230-41f3-970a-83d45fc76ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c460238c-1259-4523-b444-019943c3fcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b822b34-ecd4-4b67-adcf-82cc194d4946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4ae4d4-e66c-4714-ab7f-226273649bb5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f973077f-8265-4bc9-95e5-f58d4e1dd671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5672249d-7b9e-4696-8093-81e3dc3d81ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2525d4bc-6ccd-4bed-b460-16d790420f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dea4fc-4c65-46c9-b255-9ad1eb832279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc68aec-adb7-43a9-92d1-c7f4d86e43d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6febe5b4-57af-4030-b02d-7d3d1c062c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083acabb-3da4-4331-b0d7-dbf01fbfab8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8e38a0-e946-4ebf-abac-5178a87b4216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef1cbff9-68b8-4179-9ac0-f24e3b5b8e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0400ed-8bcd-48d0-8e2e-9c4d2dee4f37",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5055408-ef22-4a82-9195-bf5749106973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a0b2dc-18f3-48f8-87ad-28fd9e1b8be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdc9c72-85e7-45ea-b09b-9ef5702f5ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbb43b7-0023-4664-bb12-2d69b3ad1cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5edd2f1-c1b7-47a1-94ec-2d8f57fa92fc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f669aafc-7bdc-46fa-999c-b75910edc7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491daf40-b351-4071-b75c-e8d7cf2a25b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3ca99c-df6e-48c9-9baa-a35eb9bb24a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3b3d01-6ab6-40a0-9056-4bfdb7f429df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bddd681-4b92-473a-8776-c76463ce43ad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea06b0b4-780c-4309-b2d5-6316d83aad7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a3b396-e2bd-44d9-8036-86932d816f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c4dbb0-9fa9-49a7-b66b-486cf3702828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85307eba-4338-43ca-a3f7-8e53b5ff9722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f1ea5-3339-4999-982e-55b9c003c232",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb92cca-425b-432c-9be1-414d6980cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b2f5da-7362-4e9a-86a8-cfe80310bdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7175cf8d-6f8b-4f80-8f19-910a0af693c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4f4aee-6aa0-4434-96b4-ffcef2e22850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db405b0f-c0de-496b-9675-5de45c2bd89a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc063f4-02ba-4189-b891-d67043706f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57810b87-c875-44a6-9101-a4cce2535659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2c7b86-6371-4b40-9e1a-e8814d4465c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b350b9-7f42-4b31-81ae-984cfae13fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cdc831-69e4-44db-aa70-55a04fc74dcb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85230dca-823f-4333-8d6e-83fb913a7275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b9a1e3-f67a-4808-aaaf-6ddd9ffd3c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3bc928-18c5-47a5-8bb0-2933079d4102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f657508d-dac8-4d77-a311-fdfd42587675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3615de72-c506-43c3-8305-9b69a332f480",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7ef083-bba8-4d8b-b9fb-cffc0634a7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e14a96a9-bb0f-48a2-a529-b5ef2501e59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaf4e77-199c-44b3-a8d4-46042d353ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d82e3d-4e86-435d-87fb-e90a0ce118fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c725b0a-90a6-49f9-a78f-765bf9d8decc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b978c33a-3f2e-4d21-bb9d-992b98fda523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87c0530-ac0b-454f-ba52-eb39b2973266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f19189e-03e6-4469-a7e0-fd6232a17296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4439c4-940a-4f0c-8666-fae7d90e7243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6151fbd3-07c9-4192-827f-784bfd2f977b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715ff90-a960-47ea-be54-ade086808bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe558ca-18d9-4de2-906b-5851077f7bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8215ef09-f684-45d3-ad87-9ad7983ec371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d38cf5-041c-494f-b0d9-f239856fbc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e39dc2-afac-40ba-9a25-72fae40d4c0a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e848ff-c3a1-479b-9625-2a4d5a97fb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aca5f22-efe8-43e2-aba1-246f9687998c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb22525-c9d1-480b-841b-6582f226a0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0824054b-d6ee-42e4-b357-daa80498b683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c251ee9-0711-441a-8e2d-a9352d09050f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3468723-439a-4833-8028-c8651e4d7b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4129793b-30b3-4f21-bafe-0d3f0609bf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce14d920-574f-4bd6-8cfa-b217175cc997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed42506-49ce-4202-bfea-0437205e2062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313472e5-7ad4-4a02-a5b2-cd2999126b4b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a99bea-3857-4cd1-8fee-547bb14d3d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd26656-08ab-407f-9e81-d4ca20276fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3c381e-a70a-4904-9da4-f9b3aadbaa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ade4b1-26b8-43cb-8ea4-16aee9dafa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b193994-2815-4b3e-be24-926e37afb04a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18606e8b-5462-468a-bf7c-b0d5b855a881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c44ab98-5179-40f4-98c3-a93a716cc119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77b68bc-5810-48c0-8ad3-a339c3df309d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f879a9b4-1b19-4ce2-a5e7-eb097794d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6194c400-35f5-4fd7-8577-5d4c2d8f317a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5fbb0f-31a0-4719-a863-fb39a6febbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e60bb0-b2bf-4d9f-bbfb-c5ec66e50d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ee8364-10e3-4d33-b579-48d67a124a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaed5f0-186b-40ab-990a-e971ae185b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7247c7f9-b836-429e-99b3-2bd18ba39f47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a094ea0-80bb-499d-aa6a-6fbd19919c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d778d8-6c25-44d7-9d84-8f90aff6e6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6938b-f472-4940-ae33-6ff0d0cfd39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85165bcf-8898-4c7b-af06-19560e9ecb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6724189f-d80f-4949-8ae3-016e50873150",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a5196-3dda-4852-9243-b461575390b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea035325-7a6c-461a-84b7-e0b1c7fca230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbfae9f-3529-487b-a334-5c2d09ab8454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a227e5de-9802-4003-bb93-a4b5b5ef79e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3b817e-63d7-4e66-88f1-acd97e2096d1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbe88be-cf3d-4eff-a500-412e7d8f1d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06365612-78ff-45ca-97a6-3657a49d5ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55416d16-9300-4409-86b5-175079b7f484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132c5420-8595-4b9a-b05c-9f0f77e505b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eca8f9-6320-4778-807d-145d8f06184b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3406bba-5aa1-4a76-ac24-a94b6248d0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c6eba5-5a32-4f8d-b296-ab1409dc732b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc5efa1-77cd-463c-ae65-0ce30bf8de57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac254d29-620d-4f60-bee9-79af89fa4209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8523545-a390-49a4-95b8-fc5e4e870b61",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca126ce-6f10-4857-843e-ae0e1f21c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ff722-c404-4d56-8c96-db8bc6c254cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46e4cc-b8a2-4b20-aa93-d5c9401137d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b650d8-2749-4fbe-af5a-3307d3641bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e2f07-b538-4530-9541-72b072efd580",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96849db-2361-42ab-b362-a0a5bb251fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1e3d8d-0223-4b03-b55f-55c7ae382120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58942965-57df-4faf-9203-affc4e05cbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01a54f-ba7c-4c96-90a9-69d581d53919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f469421a-8bb9-4ae4-8eb8-d8911cbd105e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e522e7c-5032-43dd-b404-791dc243f71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24807e22-a957-406b-9e42-cde6f34fab3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d0957-cca9-42b2-897d-af7efc8b6a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6defe2-97cc-4bef-82f4-54fc08313d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51997cba-adc3-405d-856d-3bb09c633f81",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6304c97e-a52e-4050-98c0-f04509e2e8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2797bf2-6866-4a37-b9c4-6412b562a4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115f2cca-30e9-4b28-b52a-e66c8ec2bf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6cf8b7-136d-4c25-9e5a-79181b2c4ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcba7f1-4da6-406c-8fec-0e33750606d4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42071a14-f331-4ef8-b7f3-df3f8e86d47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28ff705-b21a-4367-92ad-b5142ba405e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628f8299-111c-4d8b-81ac-69ccde10c536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a82ccc4-fa9c-4214-9b9f-e025582f26f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e83bb1-b2bb-4b3b-a8b5-3551a3410132",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f319681-580f-48b9-acb9-492decab424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db59ed7-6620-4a5b-ace1-fc09c0499cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277fb68c-4432-42cb-9b3c-d8b53b7eb104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c179a333-f478-4e9a-ab52-c1c529acb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94314c37-1f9c-4dd2-aada-9c55aa3920e4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad57dd5-c3c7-49f9-889e-d5cd6403ece1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814a5c2c-ccc6-476d-a69e-6df6cd4a889e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14cf7b2-ca9f-4d77-b971-813753827936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70228c85-53d8-4aa6-a1bf-b9ff2133f158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd16a135-4ddb-463a-b1bb-ba1e1bf644db",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e7c65b-cc25-4cb1-8d27-8b56069368e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae05f102-a409-408a-b4b2-74106e400ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ab65e0-55e5-441f-a70d-8df1bfdb7f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd303351-edf6-4df9-86f5-dcc250b88972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb31fe7-de41-47ed-85e0-a4868d42a476",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123f618d-6cfb-4ce3-a2b3-c8cd816dbfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb70e1d8-4e0e-460f-89aa-11c79496b7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274d3dc0-d05e-44a9-93f0-500c948b6a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52afebb6-1400-4170-b3c3-303cba1611be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a74374-01a0-421d-8fc1-cc2f3b176a66",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6487580-1813-4039-b3af-b4b252ec8e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed95e2a-9036-4d81-a766-f77a19c62a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2001fc43-c438-425a-8eab-7ace864a96b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355a44db-d877-4ef2-bd4c-5f5a9157574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6765ce8d-a6ec-41e5-ace6-508fa5da6621",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a63c1-69f5-4b1a-abf6-2a3d06946d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb29569-3c78-461a-8a36-311ef1d30345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a331a0-fb18-4aea-ab6b-cbbd510ce71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f16f701-4da1-4e79-b79c-8e474c0989ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7470ca-db9c-4d2d-b0bf-a2f2a724df0a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2257b29-003c-41e1-8e00-0e58cc86aca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae25528-871b-442c-89fb-7a324b7690ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46adbc5f-7fc9-4d69-ac87-15dd55f73161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23832bfb-5081-40cb-81d7-c604259db7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b31f055-8482-4ef5-a390-1ad6d0851a72",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69737812-c221-43e8-92f7-798b996d98ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a881bee-8705-4378-bcdc-3cb4a94b5bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16264e06-632f-4de8-834a-0b8d8c2a01de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60a2a87-68e7-45bb-9ce8-87a88c9de833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac3c0ad-f09c-4c08-90fd-7f75cb01aa81",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b963dd0e-2c79-4cee-bff6-f7a367c6bad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aebee88-5e60-4853-bd54-e20bdd1d5ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244ef53a-6350-40a9-bd84-41a18f9164b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733f33f5-71ed-4f8b-abed-7acd4671d645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15fce20-1198-4a61-96cb-6b3a46c15f36",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96463946-4979-4331-9aeb-e07f400695ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a956bcf0-97e4-4ccf-bcf3-fb2ea006098a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8445dee0-1632-46a4-9074-f44291161c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4f6f31-4fa2-4482-86e2-c67ea263ceea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d366ec8b-5cca-4970-85cb-e58218a75b40",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bfe29c-b7da-49fa-a3ff-e86ffd29f603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda76771-1864-4618-9321-bd9d0201a458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2521686b-8784-4583-98e0-f8707d5a89b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49b91d1-2b65-4afd-891a-50992b4a115b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e54923-3082-4a26-8685-fe7d52c12b89",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6f0a5-ba8a-4b2c-9d9f-4880b4a591cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea3d233-2117-44ae-a90b-aaffa7b1ba96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56beedd-8380-4f27-a5d6-b61eed7bd2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0474c2-4fb8-4ce0-9935-4c78ef9c6812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c88b68-88f4-4877-a200-fe96f156f2f1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc39836e-4f1d-49c1-9c8a-f2bdd8d6408a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5612aa93-6ffa-4127-85ce-94a8667d9f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64306efe-8084-4ce1-9481-99ed2dcd3d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef734bd1-eba2-4b0c-a596-048640b39a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bbad2b-a893-45ca-8cda-8ee6ed230279",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27296e28-8095-44ec-9916-f38fb9f15c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8629e67-352a-4719-801f-ae4dfa964e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83477219-528c-425e-add1-092c7277676f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a483cd3a-15b6-4b61-a0bf-db40a6fdba62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f344e-b868-46fa-b178-a38d62189198",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f3b06f-d000-4cc6-b289-28e22f7398c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a995f94-2ee9-438d-8e3a-298a6053167b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d08454-818a-4f0f-8f68-fbe5011d82de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40156cf-ac76-413f-badf-db1e2674003a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac6156-caf0-4115-8bc1-7092784a2435",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701a08e0-0aaf-49b7-b9e2-4d2309b2e180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe92e0d-f7b8-4527-8d3c-4054531db44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6888297-5b4f-4a3d-be0e-bc0677007a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c985ae38-3110-4c4d-92c9-e1ead069e73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6902da-94cd-4d9e-abaa-919386402df6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d319498-9bf2-4b08-bedf-183222e7c29f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b8c2356-ecc4-4b05-b05c-7962a53cc519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108c1f5-68f9-4142-8d9d-1687b289b1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59d9300-6525-42eb-b825-bc39a710bfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c94a53-6c73-48bc-9cf4-00bf42153a21",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59f37a3-0051-4e78-921e-1b456e34d435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c9d48af-9379-4045-8021-38a1a8549880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f7a3b-de3b-471d-967b-7955e17047e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a97bf7e-2262-4910-8c4d-333dc23a747b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbcc8ce-8f33-48e7-a314-b04bd53b68b5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1186cc39-a230-4ab7-a0e8-15d5548c6c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0d74f2-dfb1-43f7-812b-6976490f5edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ad34ef-9900-4e32-8971-ed638791e9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31b9130-96c7-4e46-8125-0330da7e02b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e3256d-b578-4a14-80f7-b577a51f6d5f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ab51d4-96ea-4153-8d02-a334d54908d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6821cb-19e5-4547-8a8d-3fdd10d70808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2795c158-6cd7-4406-86be-65fff0e5c7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8780104b-8504-4815-84af-62e36afaa6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9c2cb-75bc-44d4-adc2-602dc681476c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c798d84b-b482-497a-b03c-0f2c8fc2b403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0d1d83-84de-4b7a-af20-a60e3e4e177a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1dc2c3-3aed-4e13-ab1a-c55409e6773d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f571cdf5-6c33-4405-9fef-fb6fccc5016c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc45183-2d06-4f30-8c25-8f65438a0f61",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb04f87-2381-4a2d-b939-f9413cc560e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7029900b-c672-46b7-b59a-6da45a152dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91576bf-40b6-445a-ad3b-0caaabd19bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb84ed44-607d-40c4-a6b8-6290b4680dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc56db-dffc-4a36-8d08-d9fcc3c77238",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ddc241-1317-4df7-bb97-dc81fb7ee38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2553ca2-f543-4c91-8fc5-ece6cd5fe583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ea8170-6b68-49c9-8bcf-d15540fc5667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af162ca-6898-4d7d-bac4-44468ddd3b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dede7b57-9cd0-45a0-a091-c84ec9f450cd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1d58d2-8853-4a11-ab9b-27bb34fce4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "831230ef-1bd4-430c-b750-0cd634a8a790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d8ae83-ac14-499b-bf58-fd582fd5e7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9863b7d6-72df-40f1-b179-9110bb30026d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd32d839-0ad3-451f-a5fa-3d6f2bfc7277",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef236b-12e4-46f4-8a72-dabc169710a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8dfdea-e977-4dfd-bb50-98a350675a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0cd872-d1ec-4d69-afd6-ef464e50b3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3d071-730a-41cf-a51e-a1b189bb9d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad7b051-2ce4-4ff7-80d7-18c481ebf686",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8147692b-e87e-4004-b098-a0bbc4ffea84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293caffd-e27d-44c7-88ae-436e2f8836e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d650941-118a-4e58-b204-a27ff00fff88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a36248a-a0ea-4617-a737-0d3188720098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a54d0fb-cbd4-462f-be68-7e7c9ed4a3ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8624b47-d076-49e2-ac4e-09eb4675f81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf62f56c-453a-4f1a-bd0c-3b5a65f66e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a93d97-0119-4ac6-865e-8ddca308d6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9315f7-4ec7-407e-b332-c71dc8c5207c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5798c-2aae-46c5-8774-3eeeab941af7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42a38a5-4e42-49e4-b5e1-351beadc466a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c325c2df-15f7-4a45-9c60-d1a04cd1942b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a20657-ce47-41a0-8773-080cb9a69c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172147fc-f642-4264-afd0-1d17f12963e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d530203-065b-4ead-b5ac-5476908bac43",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36939a4-912a-4954-9533-8a5367cf1097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9eb429-9870-41a2-b4f7-ed377a1765aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1fa943-f3b1-4ab4-b13d-7a57b8ad102b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb254d72-1a35-4471-9859-a227da9d430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e87662-3713-42f8-969c-d070d94bdb36",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eba3bf-f3c2-4f0f-9410-5da4a6d77f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6abaeee-ea22-447c-801f-50705e0f7937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e1dc8-76fd-4301-8dad-75e4b8b6bcd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d9d03a-6490-4865-8ecb-555f3d3ebedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1e5be8-64b0-4a9c-8410-a8a2d4b8980b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07607381-b5b8-4539-83dc-dbf921f3a4ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832b25ed-a96e-4ab9-9382-443dcdef7691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727717cb-e1c9-431a-ae91-97cd47b2bb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be15da3-1c7a-4912-a7c1-cbc0bafa7530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07985534-efbf-4556-bf3e-9741cbf4ba83",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e59dfcf-2d11-482b-b150-7689ac7cc482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f463c26-3537-4aa5-8cc9-4b83d5d211db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393f8402-3ae0-4acb-a246-99764d2495d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f999ad0d-3b63-43f1-978e-f667dadf36c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c9ba0d-6869-4dfc-ad1e-303700b7837b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266bdaca-17c8-4a0a-8e79-892fbc468143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a75a5b-6835-451d-9a21-28b29194d51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc9a5c-a183-4935-8796-2bcd74919289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ddfacc-84b2-439f-8c83-89b545fa588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa798ee5-3bad-4818-afe3-a97a61d278ff",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b127e45c-c560-4cf6-8fe9-d421c9fc53cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473c3c1b-6cb9-44ce-a14e-1c06dd6abbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3138982c-b427-4fd8-8b52-8ca29b7ff862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9030b61-8234-4556-a6eb-981c1deba608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42683b48-b848-4302-b466-15d91ffffdaf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7754a3bb-4a2a-4852-be30-8ae7f5d77689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0106d0-d989-4d04-bc7b-800b400234e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72db57c-af01-435d-bea5-107104a3d41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71743972-fa4f-46b3-bf81-bc51e2300e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e959858-ede5-49e7-bd49-69a6b1786896",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276ab7d6-624d-46f1-84dd-c085574b6cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e0cb4c-5977-4b65-8c62-a4acd79fe68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc83c3d6-8442-4d0f-b779-58e4902250d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba52b8c8-d073-4557-95df-3d42d6a75472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6045bfe2-4138-4916-b0f7-115d8e27a0f7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb214a3-9f02-495c-ab91-4748f8088bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bde7941-2a12-4c06-882e-6dab4c33cabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06476423-4b38-46b1-b266-f63ae323172f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868e3f58-9435-4dae-8e8d-925eb3f64086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14990aa1-e5da-49be-9092-9c4054485604",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c81c479-6343-4a1f-906b-a65fa4c88b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75002ac3-a188-424f-bec2-1e48e1ec3f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e21bcdc-df70-4890-b6c6-c1cfbb44e8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3e4476-9df5-4b60-97fb-64fdf253111e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb2f0ba-3640-4c51-b031-df2cd0383857",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6980b61c-51a9-46d3-825e-23d4bd9c0969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a570b88e-afdf-4f2e-82ef-4ba0352eb3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a7c4c-6342-4081-b90e-0629366fc66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fbeb68-45c5-4003-86ac-cad5ad909fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e25f9e-b404-4cf4-be77-63cc56e635df",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83d22c8-0fc6-4f30-898b-8787e9015bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b5f349-076b-4f43-bc9c-55128ba05029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5680153-0dbc-4fc8-950a-ed4f6a964c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a67cd2f-8729-4568-b31a-a7615b010220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bc0f0f-3a15-480f-a810-aaa4e6562bf1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e4185-4438-4317-9143-b2c426c989ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13137b48-3c7b-49cd-a38c-f6cc80810160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e701db8-51ab-471e-89d4-ef6b55c1ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d105ca-7329-4608-bb75-a95f0aa0ca91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0b525c-66a0-48ac-bbeb-c3b007f2a99a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eb0a07-d36b-4869-be37-abe996baf978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187231f1-adf1-4894-83e2-52b3739c877f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70a958b-5d65-4e74-991d-2dae0c69c78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6376b66-dca8-4c7d-a1dc-e170623f4ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da74c6a0-de81-491d-82d0-a37cb0d98d26",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55354f6d-1079-46f8-ad1d-ef2dba718c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eec1cf9-e370-4e55-8c5b-076e22605716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79da5fd0-59ad-4357-bf84-fb107d094a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8893e3b3-706e-438c-917a-1ccb2cffeb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fbccad-88a0-45a3-bf10-77467ac1948e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aa29b6-af09-4f27-b707-78c1de9d5ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f10b6b2-b95b-4ab9-818b-8f17b8dcc696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e2e5fa-ee79-4c64-b5ba-7b7a4e761a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42569af9-a430-4a7d-a2ae-b582fd283340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a138dbae-083e-4088-a62e-77d6124084f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c836b22f-06a2-407c-a9e9-5eb313f1fb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b047f475-a4e2-4060-84bf-2735d06041cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2db35-1130-43ed-b76f-becd1c76310d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041e2fb4-9cab-453f-a8ce-ea2fe5967836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952876a0-45ae-4fd1-91fe-a99a1298b7f7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709fad54-f1af-484c-919e-3dd593f889b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5e6ca3-46ec-46ee-bc39-165106af87b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fb8bbb-660b-4f63-be1f-747dda9b8fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e75e78-611a-40a4-bc36-a6700c59e7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ad688-df71-4965-b412-4635d6e9bf73",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071ca10e-d42f-4a97-8e40-70b4faa48422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4d00b3-2220-40ee-9e7f-fa77f9d42507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2535a187-fdc6-48ef-b807-58be7fb1e111",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6208e888-bc67-4f18-a742-2bc30f0679d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff07929-67f9-4480-9a9e-dd1d9c460b64",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7baf7f-d667-4dcc-8522-27d1945ba68f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a05627-bad5-4cae-b5ab-2b876d9c997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c15b576-d997-4033-b4e2-d74cf353dad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ba0540-9f00-49ba-b317-3b8ee660ac97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e2ba66a-93af-4308-893b-c9896eded5c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8fea4e3-085e-4982-9839-d3705d4204bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88dae59-faa9-4a0d-99bc-a9472a1ce99a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62c7b9cd-4568-4afa-8d02-ca1687cfeecd"
                    }
                  }
                ]
              },
              {
                "id": "c00e561c-71bc-419f-a42f-60a2a248a156",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44bed91e-e81d-4a84-87fb-2d92ebc21238",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2c00ea-2dfc-47e0-acc2-c32a77bb2eb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c7e54494-d464-422f-958a-e6c0fc78ddeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c1000c-648c-4020-b3cc-f224f78aebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04be2b76-ab4e-4f37-8867-e002a2eb11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75a454b-4f4c-4f8a-932c-639ec07a277f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0eaf1f-becc-4d82-a6d7-bfd2e9bf3a69",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c81af4e0-0bb6-4006-bc24-79277dc40881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fa2641-e070-40ae-b700-42f74ad2a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01bac45b-230d-4ded-9394-4215f631e97b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fd9ec33-67c3-47fd-8182-41cd4a74e082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec5c4c0b-fe21-4a57-ae12-3878df3db019"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f588da1-4c8b-4664-b8c1-977c38860600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f969b5-df51-489d-aa18-818f9c7a7317"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "5a9c61e4-427c-4a66-bc62-5ee5be04fc0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9f26828-7f69-4902-aefc-bfee909513bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86442320-2954-4add-bf54-86a5954676e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15c3b4a1-9529-4ca1-8769-31c979a8f176"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b87afbdd-362e-4d47-80ad-21a0186f2f43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acaa23cc-308f-4c32-b97e-03047e5e599b"
                    }
                  }
                ]
              },
              {
                "id": "844f7a42-4d1e-4b07-8add-1601562b81b5",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23c36c79-2e91-402b-a300-6795ac8f631a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc888fbf-2e02-4857-90e6-eaafe1eeb96a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ddb131a-4c30-4de3-91fd-7aa3d1840471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55651be7-174c-4bfa-bf31-da0606a2599a"
                    }
                  }
                ]
              },
              {
                "id": "58a4cc03-defa-4920-8e34-30622cc351b7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30a8f336-06c9-40a9-9687-54749e1326db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c157b6c7-7cf3-4e83-9ea1-c7ab5916d9bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39e50d8b-fe97-4bbb-ac31-c87e70188690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3997b22f-0f99-4517-90b6-d02a7c303345"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abe95ee2-21ed-4d41-b981-327af046fbd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dff119fa-549e-444a-8f11-3d0861c55a02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd9fa32d-c4b4-4286-84be-84ee7df6de40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16c48c78-9ae6-416f-b0d7-6025a82395cc"
            }
          }
        ]
      },
      {
        "id": "86229782-73d5-4f32-8084-c50e3dd9e563",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cfe6c1a4-6ad4-4266-9b65-a7d0c067afdb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc8fe7c3-7ff9-453b-95e5-598f98314086",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b08247c-e7ee-4e52-8a11-3a030fee6088",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dd3a6d8c-dfc5-47d7-8b18-8bd95c0905c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb874ce-c0b5-4e4d-8008-e239433900eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "258e8a1a-2420-4689-bfe7-72d5b5c03975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167d1781-f945-47a1-99df-d5ceb2e0422d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59930bd5-c1ef-4d6f-a26f-bee567140412",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb0bbd43-f479-4840-b19c-5e91fca3f52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf26e77-ab9f-47ec-a8b9-53f72ba45538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6074c855-1461-439b-9263-3fa73f8dc182"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1750ce7-0d02-4d49-bd0c-13de551f326e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "124f2eca-f633-40f6-b684-30fc7617ebb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db64d326-73c5-489e-af5a-0dbed7af176c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc436931-f44d-4f64-831c-7f240919b91e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "930a4bf4-15b5-4d8a-b730-200988ccab6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "614d86b7-2a01-4a10-92c9-6a5c2a981d30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c226ee1f-a0ea-4a8d-9211-4dc52dbf9430",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a616272-cbda-4a2a-9375-84589b3a5e71"
            }
          }
        ]
      },
      {
        "id": "105d12f2-fffd-4cd5-b6d0-6d1ebb0188c8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d0903753-5d6e-4ded-ad36-86adb31b86ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b47d164-3b17-4c17-9c59-ef14440efd23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ca36618-68db-4151-af40-aa8a3e13fa34",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b888a524-9b05-4e5e-ad80-c41819446b71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "713bc3d5-6c90-47e1-93b2-b74295cd04d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e81cd2-1edd-4305-b266-61925b705ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "263dbc1d-024b-4fbe-a624-7a1b7d7cff68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff122e82-d34a-4893-b532-fc4a86b8bf6a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e9b09-85b6-4540-af43-236f145a5628",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "078ad714-9ed4-419c-b839-db5a4d37f114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0176abd-a3fe-4b52-9ddb-83943aeb6a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514a92a6-85e2-4357-8e26-dffb38a0d380"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e847b008-7fd6-4e7e-af01-167c2e5b3c47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb2bc4a6-b6c8-4490-adc2-1ffc002e42e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af1a0adb-0abf-4b68-86d6-777e2cad20d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9db61485-bea3-4571-bdf0-831d66bc6cf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de68e6f2-6bb1-458d-a932-92f536a065bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "971e86a6-6a69-4cb0-a7ee-08e926f2e9be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8e6f1bd-eaa4-4d62-b941-83db8d6484da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d15ed8e-0ffe-4862-bf31-e3b0cb8d3ed5"
            }
          }
        ]
      },
      {
        "id": "a0e00bcc-e948-48c2-a631-311a6c5234bc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1b619607-3f4c-4d2c-821f-1299b0fbc3e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cf4577d-9e5e-4e55-bd17-188c388b48a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b092cd9-94f3-42bb-a38c-9e53f3aa9354",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc03bb-70c9-49d6-9260-c78bd89b18c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c2c85012-a75c-44b2-9480-d4d2c89eca9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5916dbf-dfde-42d0-907e-8b4b38822d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b8c2cd2-5dac-445e-ba79-c1164ef683c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428cbcda-4c4d-476c-acc0-6b04aba84b38",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8f8abe-62d2-4e8e-a746-8fa9903f16d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "545a47bc-d244-4667-88eb-25c5e3ffd05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5c6fdf-f444-49f2-b579-ec092bd677ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "368ef3ee-fe62-40ce-9332-72cca810a497"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67bb5579-ba06-4a13-b051-302aacc974c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46b0421c-ec23-4d1b-9797-6847c221fbad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a5dc48-9c89-4b23-add8-901ef1a5a7b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8682f13-2922-47b7-b547-9144624d7dfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9142e4b-f1c4-41f0-9355-c7a9ab955b1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "16d08359-b0fc-44de-bf9d-94b11e18e9c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24dde096-de13-474a-9215-a1ddcbf63120",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19095780-6bc3-4833-a47b-66269e3c0bfe"
            }
          }
        ]
      },
      {
        "id": "0cf550b1-1d3a-48db-9f87-9c70cca5ec1b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b961e768-5fbd-4e0c-862e-7dc2980a1230",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "917290f6-4593-4d42-b166-52cb54e94aa5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "00965199-88b9-470a-a463-403347666ac8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09d2b74f-41a3-43cd-b1d4-cb7a9d708736",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eb22567-f5ab-40c3-9f63-dac99fb84dc4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1231,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 166,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 621,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 610,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 315.777108433735,
      "responseMin": 66,
      "responseMax": 2559,
      "responseSd": 438.8241733754272,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665449650303,
      "completed": 1665449709627
    },
    "executions": [
      {
        "id": "e48a688b-c5de-44e1-b55f-03b5e0ed1cc9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c2c622c3-dfeb-4edf-b8b7-793d1653b190",
          "httpRequestId": "31889466-ffe0-416f-85f4-39376fea2d1d"
        },
        "item": {
          "id": "e48a688b-c5de-44e1-b55f-03b5e0ed1cc9",
          "name": "did_json"
        },
        "response": {
          "id": "c23a16b1-b039-4dee-85a0-89b811d54850",
          "status": "OK",
          "code": 200,
          "responseTime": 577,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdd9f9d-5e5b-4181-a67f-76a4cf2d8739",
        "cursor": {
          "ref": "fe744aff-918b-4f2e-9ab0-c8d624e12292",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5bacd0a-a8c4-4729-b671-ed03f91b262a"
        },
        "item": {
          "id": "4fdd9f9d-5e5b-4181-a67f-76a4cf2d8739",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ebf4989-fbf9-4453-8c66-084ad16c6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdd9f9d-5e5b-4181-a67f-76a4cf2d8739",
        "cursor": {
          "ref": "fe744aff-918b-4f2e-9ab0-c8d624e12292",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5bacd0a-a8c4-4729-b671-ed03f91b262a"
        },
        "item": {
          "id": "4fdd9f9d-5e5b-4181-a67f-76a4cf2d8739",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ebf4989-fbf9-4453-8c66-084ad16c6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33893c65-5b3f-427d-9525-eeaa9c01ec8d",
        "cursor": {
          "ref": "81305d73-c66e-472b-b6f6-4cc4cfcc4551",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f92a60d2-7b9c-46b2-9f0f-73b505d8a515"
        },
        "item": {
          "id": "33893c65-5b3f-427d-9525-eeaa9c01ec8d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f0689f4-ead7-48cd-a3c1-699c648c6cfb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 263,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92862fce-374d-4ff1-b553-d2759055cc8f",
        "cursor": {
          "ref": "1186691d-1bed-4039-8e9b-cc850809ae0b",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76cdf4db-b900-47b5-a998-52c62ea53dc8"
        },
        "item": {
          "id": "92862fce-374d-4ff1-b553-d2759055cc8f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "84431332-6a12-46ef-8651-129b65bf4789",
          "status": "Not Found",
          "code": 404,
          "responseTime": 88,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80562ddf-9456-4aba-b9c8-c9c53a9d104d",
        "cursor": {
          "ref": "98d33feb-3b04-4c22-8470-d1454a4128b9",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f6f74703-8cdb-4753-a40d-d5928fdd7b9e"
        },
        "item": {
          "id": "80562ddf-9456-4aba-b9c8-c9c53a9d104d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bfa08308-cb6c-474d-9fb5-a6f49649f347",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b9ca38-ec36-4f36-8335-42d9d8f21219",
        "cursor": {
          "ref": "7a4bedd2-4e70-4154-8515-1d99ae2dff17",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03aec4a7-593d-4835-87cb-2d966a5a85cb"
        },
        "item": {
          "id": "e2b9ca38-ec36-4f36-8335-42d9d8f21219",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b7d28235-2a21-46b5-8a28-d9031785a4a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 78,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b9ca38-ec36-4f36-8335-42d9d8f21219",
        "cursor": {
          "ref": "7a4bedd2-4e70-4154-8515-1d99ae2dff17",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03aec4a7-593d-4835-87cb-2d966a5a85cb"
        },
        "item": {
          "id": "e2b9ca38-ec36-4f36-8335-42d9d8f21219",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b7d28235-2a21-46b5-8a28-d9031785a4a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 78,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5af55a6-482c-4bb6-9022-a6788d364a46",
        "cursor": {
          "ref": "ab027bb5-4226-4a3e-9a7a-6e41933c3c64",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee5da381-41be-4d22-8762-28e8b659a54c"
        },
        "item": {
          "id": "b5af55a6-482c-4bb6-9022-a6788d364a46",
          "name": "identifiers"
        },
        "response": {
          "id": "768d86cc-5cda-4c77-9a68-d52b1552109f",
          "status": "OK",
          "code": 200,
          "responseTime": 435,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280511d0-d90c-4bc5-a14b-d02e43a4f06e",
        "cursor": {
          "ref": "2b881a33-6001-4f76-993d-c5ba01923297",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f64d230f-5f5e-49ca-9b3b-ed837cb31ea0"
        },
        "item": {
          "id": "280511d0-d90c-4bc5-a14b-d02e43a4f06e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50b6fbe4-8bfe-4195-83d7-e4e5cacb45bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280511d0-d90c-4bc5-a14b-d02e43a4f06e",
        "cursor": {
          "ref": "2b881a33-6001-4f76-993d-c5ba01923297",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f64d230f-5f5e-49ca-9b3b-ed837cb31ea0"
        },
        "item": {
          "id": "280511d0-d90c-4bc5-a14b-d02e43a4f06e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50b6fbe4-8bfe-4195-83d7-e4e5cacb45bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eaaa4a-299f-4559-8f0f-5632c2272c13",
        "cursor": {
          "ref": "5e638bc9-6e6d-416c-8313-c6a7f3e060b7",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65c77d9c-c58c-48bc-bb42-2f4136c1124d"
        },
        "item": {
          "id": "48eaaa4a-299f-4559-8f0f-5632c2272c13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "24758fc0-b0ce-4be1-ae02-3dd8fe548206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444f22e0-e9a3-4088-b290-f7b6d875a2fa",
        "cursor": {
          "ref": "c68813b4-db25-4ce8-ad7c-928dd8621741",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36f5d996-2eb7-4525-8990-2255cbc71ad9"
        },
        "item": {
          "id": "444f22e0-e9a3-4088-b290-f7b6d875a2fa",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "b5f5b6c6-8103-4c70-8e69-6e58304bd5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8290a07-986b-48ea-93d0-9065251690d2",
        "cursor": {
          "ref": "60518d4f-4fe4-4958-a82e-91ac97e11b22",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "332fbd79-5c1f-4369-9971-2046299db1cb"
        },
        "item": {
          "id": "e8290a07-986b-48ea-93d0-9065251690d2",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "a88eaf1d-3afa-45c8-baa3-aa91bc1131bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d2e3f1-d547-4c1e-bfec-348ed52308e2",
        "cursor": {
          "ref": "1446e85c-dde6-41ff-a45c-755cf99fd378",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6ec970a6-dd71-4f2c-8115-e3c49c42f1c1"
        },
        "item": {
          "id": "42d2e3f1-d547-4c1e-bfec-348ed52308e2",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "1098df9a-3d29-4b45-b8bb-3e020fab5b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1043a45e-6c8f-4ee7-972e-b9ec73dc5bae",
        "cursor": {
          "ref": "98924347-beec-4a57-98b4-5935ccb06452",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "02f51b84-a3e6-4356-b63b-a552d01fde76"
        },
        "item": {
          "id": "1043a45e-6c8f-4ee7-972e-b9ec73dc5bae",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "962f5a8e-1ffc-451b-9366-7096e5522517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a929ed1-8d62-422b-a038-6974d954e8d5",
        "cursor": {
          "ref": "fcc69bf5-0d0e-4df4-97a7-49fe490cb400",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee0da642-6fb0-459e-a4af-2fe35b564f91"
        },
        "item": {
          "id": "4a929ed1-8d62-422b-a038-6974d954e8d5",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "0bfdf271-bcde-4901-b916-57a919db0186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c021bc4e-caf6-4877-9fa0-0e52b2aa7bc9",
        "cursor": {
          "ref": "ed792a61-8d31-44ac-b9cb-34d4afc22c35",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "24b5f4f3-f1bd-4d39-9b8d-2c9ee4a702fa"
        },
        "item": {
          "id": "c021bc4e-caf6-4877-9fa0-0e52b2aa7bc9",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "a337e1db-68d5-4695-9079-1137d7964a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e222a407-fbcd-4a86-a701-a1b9481168e6",
        "cursor": {
          "ref": "c420ac5b-8006-4c63-868c-89063e8002ed",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cdc9d85d-b557-4077-8271-7549d7c1d16b"
        },
        "item": {
          "id": "e222a407-fbcd-4a86-a701-a1b9481168e6",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "e7853bf7-920b-4677-8714-c26b54ae04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f57c3-8951-4a69-b4bf-2083c91ced8c",
        "cursor": {
          "ref": "6c9528e9-57ae-4a41-995c-bf4551415fc3",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "45f60948-4fb0-4823-a636-bf34bb070ae4"
        },
        "item": {
          "id": "e36f57c3-8951-4a69-b4bf-2083c91ced8c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa9b7913-432d-4d73-9382-1c8017556c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93bcae3-ea7d-421e-842e-fdbf20411c46",
        "cursor": {
          "ref": "2c39335e-09c5-4460-a7d3-4b66ba581f9a",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f7e4ccb6-1a84-48b5-ae1a-4fa983937bcf"
        },
        "item": {
          "id": "c93bcae3-ea7d-421e-842e-fdbf20411c46",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "c3450557-0314-47ad-b9c4-b938b6763408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e263bba4-5ae2-44d4-a575-f5bb170a29eb",
        "cursor": {
          "ref": "0ac372a0-ea16-4f9f-8be9-bd516f4a45e1",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "41b04c44-01d9-4b25-b539-0349ed0ccd40"
        },
        "item": {
          "id": "e263bba4-5ae2-44d4-a575-f5bb170a29eb",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "95d258ea-2157-427d-98a3-9510a760dcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43cffaf-0cf4-4564-919a-f7c835de7365",
        "cursor": {
          "ref": "9d4947d4-2e46-4fdd-98d0-380451afb0e4",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "70be5b8e-d500-4f03-862d-4883f504d699"
        },
        "item": {
          "id": "d43cffaf-0cf4-4564-919a-f7c835de7365",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d2ff7200-dabd-4638-a5ce-79a0dec7e18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1699,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b6f5ae-e8d2-4fa3-b900-b0caac61d824",
        "cursor": {
          "ref": "614120fd-3ee1-445d-9445-99b7f3caf0a0",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9835aff4-4fa7-49f7-976c-0a358cbf59e0"
        },
        "item": {
          "id": "36b6f5ae-e8d2-4fa3-b900-b0caac61d824",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7ab6988-daa3-413b-a198-11bb9f8fc5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092429bc-0c3d-4d6e-8829-a55a774f6850",
        "cursor": {
          "ref": "a483ed38-71f1-48b4-b904-756e29fb5df8",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae84f4ff-1bb9-42a4-881d-b90af5e39100"
        },
        "item": {
          "id": "092429bc-0c3d-4d6e-8829-a55a774f6850",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7cc74499-a60c-4dbe-9cf7-9281beaaaa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa6bfd9-a763-4bcd-8671-c900b1444d0f",
        "cursor": {
          "ref": "dcc18b67-1540-4a0a-9f69-f92dd9acca4e",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "df0ef6c2-ebaa-4aa5-b5cb-f1a5c06701e6"
        },
        "item": {
          "id": "6fa6bfd9-a763-4bcd-8671-c900b1444d0f",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "c045279d-2464-446e-a72d-23016159955c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b254906-8d10-4ff4-86d4-b677dfdf53d5",
        "cursor": {
          "ref": "a4def05b-3847-460a-b602-93740e3f9ebf",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5b1d0c1e-64c7-4416-9577-7e445338ae82"
        },
        "item": {
          "id": "5b254906-8d10-4ff4-86d4-b677dfdf53d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "774b3edd-edbd-42e8-a17a-b6dbe21bb134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1420,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81dbc4-895b-4685-8034-4d5c8cf5f99c",
        "cursor": {
          "ref": "397f45a1-d34b-4478-92e0-029de12e04f9",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b0ac3fcc-561a-47b7-8b21-2110cf426487"
        },
        "item": {
          "id": "1b81dbc4-895b-4685-8034-4d5c8cf5f99c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "234066a7-b5a7-4d98-b38d-d885f78f7a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abb35ec-2534-4bd9-8c6e-4b03c2c39698",
        "cursor": {
          "ref": "5c9a3c52-ca83-4906-b194-f88bfabea969",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c553df96-1613-4e4b-81dc-2b638f093b1e"
        },
        "item": {
          "id": "0abb35ec-2534-4bd9-8c6e-4b03c2c39698",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "40f90e16-3fae-4bcb-ad65-636cfda2de44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8fe754-15f0-4475-bed8-e48bbe251056",
        "cursor": {
          "ref": "a8d08e6b-62d8-4b9e-a0c4-3db148b252ae",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5c3ce4aa-8268-487c-8ec9-9c97b2467153"
        },
        "item": {
          "id": "2f8fe754-15f0-4475-bed8-e48bbe251056",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "707c9641-ec7b-4900-aba2-b5f3949bedfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1411e-333c-47b5-a95c-6575c9b3fbac",
        "cursor": {
          "ref": "3c8a2f7f-dfba-44bf-9b8a-ffaea44d5375",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3263eca9-dde1-419f-bd95-ca80add667f8"
        },
        "item": {
          "id": "ffd1411e-333c-47b5-a95c-6575c9b3fbac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "64c3ece1-7b81-468c-9905-6ef996b70776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d19603-3d18-461d-8838-9c3d238af6a5",
        "cursor": {
          "ref": "83b5c32d-1253-4252-a1b4-bb16facdb4d4",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6b3419e-0346-4377-8e66-33b5e84aca7c"
        },
        "item": {
          "id": "40d19603-3d18-461d-8838-9c3d238af6a5",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "ea1cbca4-3d77-4a86-9a51-18c77b0472e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327905b5-3702-4c1c-9d68-89ea58b4e352",
        "cursor": {
          "ref": "56cf56c1-3c22-4039-881b-be48bb9da5fe",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5d0ce9d1-66ed-4a60-8a2f-94fd0a4e9397"
        },
        "item": {
          "id": "327905b5-3702-4c1c-9d68-89ea58b4e352",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "18904bf2-9ad2-47b5-9314-178ea288f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec03ff0-ceb9-4d71-b991-ce3cee75ff4a",
        "cursor": {
          "ref": "ca519821-954d-4d81-9d79-41214b016cab",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e57eabfa-64f6-4c07-96e2-b949c5fa80f5"
        },
        "item": {
          "id": "2ec03ff0-ceb9-4d71-b991-ce3cee75ff4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "462a30bc-e232-4e38-a6c2-9df267b921dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13152604-73c8-410b-afc1-b5b636c557b6",
        "cursor": {
          "ref": "07930397-1aba-4eba-9452-20077fb5d439",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fd7f44e-f0dc-46fe-a146-6b3d82e8f611"
        },
        "item": {
          "id": "13152604-73c8-410b-afc1-b5b636c557b6",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "e191a81f-c614-44a4-90b0-547799e4bc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99572f7-a61e-4607-b3c3-07b0844eca9d",
        "cursor": {
          "ref": "6f96f9ac-b48b-4cf0-af1a-203740a35c1e",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "efe4b207-a9a3-48a8-80b2-fe52e1770973"
        },
        "item": {
          "id": "c99572f7-a61e-4607-b3c3-07b0844eca9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1e7ac9d0-8014-403b-9893-08d1b1e22f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543a4471-29f4-41db-bf10-9c9eeb8ef186",
        "cursor": {
          "ref": "204ea0aa-7bb2-4786-a794-6b3a37348090",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3cfeed3-123f-45f6-9eda-7ab4181ba86d"
        },
        "item": {
          "id": "543a4471-29f4-41db-bf10-9c9eeb8ef186",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "00821fe0-5dfd-4b6a-a6d1-403e2e7b8ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b476c-af31-4b1f-8108-056c87f22425",
        "cursor": {
          "ref": "c7ee0aa8-f4ba-4f95-b589-766cff676bfc",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2a788cf5-2765-4a0f-85c2-140b58403b81"
        },
        "item": {
          "id": "2d9b476c-af31-4b1f-8108-056c87f22425",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f0155b40-854a-492a-99ef-97380bc1934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd45254a-5181-4437-8b58-e4d1cf6827fc",
        "cursor": {
          "ref": "8c2decac-c767-4d79-8fe2-baff1ad8a279",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9834d2d8-0a56-42a4-bc61-d4793243ba0e"
        },
        "item": {
          "id": "fd45254a-5181-4437-8b58-e4d1cf6827fc",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "d1020030-8fe4-46fe-92ba-69565d6c099f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72664c2-3f2d-4548-b979-8883b270809c",
        "cursor": {
          "ref": "ea5b277e-61a2-4bb7-abd2-08bb719b9988",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "41c36439-09f7-4365-b66b-eefad8bdfbc1"
        },
        "item": {
          "id": "f72664c2-3f2d-4548-b979-8883b270809c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "58188157-4031-4479-b813-836c68bb235f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006b7caa-935f-49fd-8647-21c82c7facc8",
        "cursor": {
          "ref": "72387b95-0217-45bd-a713-020a29ca7e0b",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "45d43a22-1938-4f42-b181-f98e49a8a053"
        },
        "item": {
          "id": "006b7caa-935f-49fd-8647-21c82c7facc8",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "f47ec49a-d398-4e92-af28-b6f3434bcadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcccf836-d222-402c-82bf-2e56a4232bab",
        "cursor": {
          "ref": "0f5a0376-cd8f-441e-8dd6-99c1229f4800",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a45ec429-195b-4c0b-abfe-9fd079029ed9"
        },
        "item": {
          "id": "bcccf836-d222-402c-82bf-2e56a4232bab",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "e09aa6f7-dbab-4fc2-aa2b-6510c3c3e444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda78ef0-1c43-49e8-9e60-bf94b85562ed",
        "cursor": {
          "ref": "731e463f-a01b-4a16-8bc2-6ebdc727c5ab",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d35a2b1a-c785-43e0-ad80-4a4f15e237dc"
        },
        "item": {
          "id": "fda78ef0-1c43-49e8-9e60-bf94b85562ed",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b9fdb840-eb64-4b57-86a7-21050ad1cae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d2e472-bb96-4c64-928f-723826a643b5",
        "cursor": {
          "ref": "3864f622-22b2-44cc-9e66-d9929a95c1ac",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c3bae74a-c326-41e7-85b4-e68e4ce086d0"
        },
        "item": {
          "id": "19d2e472-bb96-4c64-928f-723826a643b5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1ed4c3ab-f4e8-4d9f-a12f-6459e6b24d70",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 98,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2cfac4-87ee-4512-a095-6f86e14a19a1",
        "cursor": {
          "ref": "ef5fb653-c99f-4a4c-a165-e0e0a84a7a3c",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e722a4db-c344-4556-87d5-0f1c309ac63b"
        },
        "item": {
          "id": "0c2cfac4-87ee-4512-a095-6f86e14a19a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a2595e2e-2243-4da5-9e0c-e968146615f1",
          "status": "Created",
          "code": 201,
          "responseTime": 1143,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d086362-6fbc-4ebf-aa94-c0c4a5d10f27",
        "cursor": {
          "ref": "001f4a7f-f09a-4f4e-8857-d5b300f17ab1",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "10df780e-c672-46cb-916e-4dd192d82398"
        },
        "item": {
          "id": "1d086362-6fbc-4ebf-aa94-c0c4a5d10f27",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "312134d3-7375-49d0-8ce4-bf69f4470464",
          "status": "Created",
          "code": 201,
          "responseTime": 609,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa3f5a0-5900-49b6-a34e-90225d3c7163",
        "cursor": {
          "ref": "c11f4c76-e993-485b-9fce-2abfad9fb72c",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "571a1d53-e71f-40b9-8f87-340cf15fbb45"
        },
        "item": {
          "id": "dfa3f5a0-5900-49b6-a34e-90225d3c7163",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7afd8ab3-5a4a-4e24-b275-850bb8e0cb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "5a04f123-5fc9-49a4-a09f-9c936dade5c7",
        "cursor": {
          "ref": "3853785d-8095-4c6d-9ed4-a3cf453e3bed",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9987205-df48-4e88-a91a-d93c133aeac8"
        },
        "item": {
          "id": "5a04f123-5fc9-49a4-a09f-9c936dade5c7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "223e6032-b195-442c-81b3-6cbb91bc807a",
          "status": "Created",
          "code": 201,
          "responseTime": 617,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd81bb21-a6ed-46c0-b0b4-b692e2bd7361",
        "cursor": {
          "ref": "20fc731c-c1a9-421a-86d7-706bed16ca24",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0e929307-ed45-49ff-908b-6109fb670031"
        },
        "item": {
          "id": "bd81bb21-a6ed-46c0-b0b4-b692e2bd7361",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "befa1635-6b7f-4acd-9e0a-8e27b834438a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "bd2f8244-0855-45d6-a9e3-c5b2584b757e",
        "cursor": {
          "ref": "231be85c-1b79-4589-90a7-ba77f11115c8",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "852822bf-2303-4869-a5c5-35a1c436b939"
        },
        "item": {
          "id": "bd2f8244-0855-45d6-a9e3-c5b2584b757e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3923513d-b761-48e8-bac6-e89b75f837e9",
          "status": "Created",
          "code": 201,
          "responseTime": 567,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea5f4a-1bbc-4e2f-a4f3-e2075ebe9bb4",
        "cursor": {
          "ref": "bed1d398-b51c-45a7-9745-354cf2fe5630",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd73cd1a-d2e1-4130-90d4-d2a7dc5897b1"
        },
        "item": {
          "id": "3eea5f4a-1bbc-4e2f-a4f3-e2075ebe9bb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9be0527b-ed55-4bf4-b0e7-e154e983067a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea5f4a-1bbc-4e2f-a4f3-e2075ebe9bb4",
        "cursor": {
          "ref": "bed1d398-b51c-45a7-9745-354cf2fe5630",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bd73cd1a-d2e1-4130-90d4-d2a7dc5897b1"
        },
        "item": {
          "id": "3eea5f4a-1bbc-4e2f-a4f3-e2075ebe9bb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9be0527b-ed55-4bf4-b0e7-e154e983067a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6d631e-dce5-4c55-9133-bf14edfb7eba",
        "cursor": {
          "ref": "9d710f6e-843c-4f09-a178-b90467cddc80",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce7fdf10-3101-4b98-ada5-caff8a8db3bd"
        },
        "item": {
          "id": "bc6d631e-dce5-4c55-9133-bf14edfb7eba",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "37f0bfb6-b626-4a06-860e-eff784dc0dc0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 79,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ef38e-990c-4744-badd-b0cd6fcd9b41",
        "cursor": {
          "ref": "c64d1374-3bf8-4874-ba80-945baa0e4f1b",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "76022b59-615d-4cba-95ed-b80fc1075943"
        },
        "item": {
          "id": "319ef38e-990c-4744-badd-b0cd6fcd9b41",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8bb41f7e-539a-4157-b151-ffd71f5ecb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ef38e-990c-4744-badd-b0cd6fcd9b41",
        "cursor": {
          "ref": "c64d1374-3bf8-4874-ba80-945baa0e4f1b",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "76022b59-615d-4cba-95ed-b80fc1075943"
        },
        "item": {
          "id": "319ef38e-990c-4744-badd-b0cd6fcd9b41",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8bb41f7e-539a-4157-b151-ffd71f5ecb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd3e6d-37bd-45f0-957d-241ce20d01aa",
        "cursor": {
          "ref": "0fe96459-e449-4b70-b1a3-c5771f2abcb7",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0113808c-7150-4f5d-98d0-25b1543070c8"
        },
        "item": {
          "id": "b6dd3e6d-37bd-45f0-957d-241ce20d01aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "83747c80-5a9b-44de-8af8-a3eb92812925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d8ad54-e7ee-43fb-a60d-e18d76b27439",
        "cursor": {
          "ref": "69d5ce36-8001-4124-8a98-fcba062d2b73",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cce58894-b380-4142-891c-fec315202e07"
        },
        "item": {
          "id": "f2d8ad54-e7ee-43fb-a60d-e18d76b27439",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "baf6e01f-15f1-4fb6-8038-875f13a59b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77036d33-532e-4f8d-9be7-98bd6fb216ee",
        "cursor": {
          "ref": "de060e6e-ad92-44b7-bdc5-8ee6853d2243",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "41041949-fb07-467f-8024-c0a4e14eca9a"
        },
        "item": {
          "id": "77036d33-532e-4f8d-9be7-98bd6fb216ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b831fa04-892d-47ec-8c2f-5951fefab057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b77ca42-7d1c-4d02-b35d-dc70bc8da855",
        "cursor": {
          "ref": "ae8043d6-3ccf-4bdc-b50e-bd40cbe8331a",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f8d102fa-7edd-4377-9bbe-166444b9aa22"
        },
        "item": {
          "id": "7b77ca42-7d1c-4d02-b35d-dc70bc8da855",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "525e79a8-9030-487c-a53e-81d2d2e70388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6b821d-6a2f-4d3c-871e-ef9591f415cd",
        "cursor": {
          "ref": "0decaea8-701a-49ca-b566-1068c905206b",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8928c532-36ff-4b82-9b92-a7b6ff9b3e1f"
        },
        "item": {
          "id": "4b6b821d-6a2f-4d3c-871e-ef9591f415cd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "37d949c8-05d6-434c-9657-f85e0707f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d59cf6-4573-428a-a38d-8f1dd2d1ec64",
        "cursor": {
          "ref": "90d2cb83-a9f9-4a5d-9db4-b6713d9f0f9d",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d2a112e2-5fc3-40c4-984a-7af2f0daa5f5"
        },
        "item": {
          "id": "a8d59cf6-4573-428a-a38d-8f1dd2d1ec64",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "105eb84c-38ea-4855-91aa-16afc553b76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1092,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6d0cc9-79b8-492f-a36f-5c164ce635b9",
        "cursor": {
          "ref": "23d40fdc-52be-4a23-a6cc-77e537ba1b86",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7bd890b9-0156-43c4-b3c6-47d684d11d42"
        },
        "item": {
          "id": "cd6d0cc9-79b8-492f-a36f-5c164ce635b9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "501b26ce-c8b6-4ee1-9629-d3f168d3b767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ec9d7b-c088-4b17-9bca-28b4ca8c1fea",
        "cursor": {
          "ref": "d8600e1f-ef3f-4089-a2ee-593b1ca099ee",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ec4c45f-c7fd-4c3f-aaa2-f3f7469073ad"
        },
        "item": {
          "id": "89ec9d7b-c088-4b17-9bca-28b4ca8c1fea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00bf97e9-3dcc-4cbe-8e2f-507bf4f521ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e77188-f612-4301-97ed-9b9aa7679463",
        "cursor": {
          "ref": "2944b942-a011-43ce-9acf-51c81e14235b",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ca75c19e-f96d-401c-ae37-a8affdbb1667"
        },
        "item": {
          "id": "68e77188-f612-4301-97ed-9b9aa7679463",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "627a4a6d-6ea4-49a7-ba7a-f473b807656f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21df12f1-f008-4d04-9494-d87a4522c5dd",
        "cursor": {
          "ref": "c7f75370-fbc2-42ef-b4e6-6d56f7b5b928",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a7c52746-5344-4fb3-a564-3ea193817bed"
        },
        "item": {
          "id": "21df12f1-f008-4d04-9494-d87a4522c5dd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1cf756b8-2280-47f3-b6ad-5913e24bc9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f5d881-8f02-4ef2-a60c-1615677fc592",
        "cursor": {
          "ref": "0c1c718c-8797-42bb-af57-b26372e31d26",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f7e6a46f-d56c-4cd1-9b35-50023044b7a8"
        },
        "item": {
          "id": "52f5d881-8f02-4ef2-a60c-1615677fc592",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0d2400fc-4a9f-4aef-9957-75b62d7bf471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe13d4f0-307d-465d-9c4f-447cc0c51486",
        "cursor": {
          "ref": "e8b82522-5cb8-416c-b63e-9af3a433bdc9",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4ed7d462-044e-4e4d-b277-c9f2d883e5c2"
        },
        "item": {
          "id": "fe13d4f0-307d-465d-9c4f-447cc0c51486",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "33b0b4b5-4fed-485d-93f1-33613a8ff25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a92db-c09c-4cc8-9cdf-a8a9fb86b688",
        "cursor": {
          "ref": "5b5f7e50-d586-443c-8385-c4ce2838bf93",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a8bf5103-5e27-415b-bbe8-00faef5f9b43"
        },
        "item": {
          "id": "7f4a92db-c09c-4cc8-9cdf-a8a9fb86b688",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9f1a3564-68c3-4892-9708-a68f5332e886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c154e05-e8ed-45bd-ac61-6e38295c485e",
        "cursor": {
          "ref": "8a22f9e9-cc63-4325-8678-8f49047b345c",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c4722030-aaf8-48c7-b02f-35f85cfa9f18"
        },
        "item": {
          "id": "9c154e05-e8ed-45bd-ac61-6e38295c485e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "62f85a20-8857-4c02-b6af-45fc606eeabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32819a-a3fa-4a01-a5ef-7aab949fa036",
        "cursor": {
          "ref": "e2f414f0-82aa-4ef1-9e65-21e189f3d4c8",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c648ea24-72c3-46ef-bf8a-3ce43e38854c"
        },
        "item": {
          "id": "1e32819a-a3fa-4a01-a5ef-7aab949fa036",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d6fef31-06eb-42f8-bfbe-7779457bceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85d4dd3-f1e9-4d47-aa41-26d7d9fea07a",
        "cursor": {
          "ref": "a3046258-26ef-4793-9f59-4d7b3b2a61fa",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b60aaa62-6357-4190-ac2b-d4aa6f9dee16"
        },
        "item": {
          "id": "d85d4dd3-f1e9-4d47-aa41-26d7d9fea07a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b0074be9-a500-444a-a812-5edb0353ad10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0972e164-bbac-44c2-ad51-e09e6451c8e5",
        "cursor": {
          "ref": "3baa6d9d-9b4d-404b-b64f-e758f7b6cbf2",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ea17b9f1-e22f-4d71-97bd-c74a131c47a3"
        },
        "item": {
          "id": "0972e164-bbac-44c2-ad51-e09e6451c8e5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c8f1c3e7-6423-4ce8-bf67-73012b8a6922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f6b4a-7615-4740-a335-5041bb8677d9",
        "cursor": {
          "ref": "c5fb5c3d-564d-4f14-87ef-a8e5bb5663d7",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "52b1568f-c968-424a-b083-87bf6dddb42f"
        },
        "item": {
          "id": "a91f6b4a-7615-4740-a335-5041bb8677d9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8b712294-b85e-418a-ab46-fcebc4883ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b3b9c9-a7f1-44ac-af61-915e9b28197d",
        "cursor": {
          "ref": "0cd47274-22b5-4c89-87ac-98ddf4e7eda8",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d0083aa-c998-4716-8d83-dc30848dc6c6"
        },
        "item": {
          "id": "d6b3b9c9-a7f1-44ac-af61-915e9b28197d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "108adf56-1598-489c-95db-2ba662af12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f096f7ba-af5b-4888-8ba7-0d25b1ba1759",
        "cursor": {
          "ref": "c380aad1-bb12-4a12-922a-8ecda4703f1d",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d5f0831-23ef-45e6-b094-b227c4a27c2f"
        },
        "item": {
          "id": "f096f7ba-af5b-4888-8ba7-0d25b1ba1759",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "47a695ad-8306-44f2-8b0b-fe587b09d538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8949ff9-8a1e-444a-9ac2-a81da634d4f9",
        "cursor": {
          "ref": "c9ab5b8c-949e-49c3-b09c-964b370eacc5",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9041c700-cfc8-4a9d-a364-dd75722ec34a"
        },
        "item": {
          "id": "c8949ff9-8a1e-444a-9ac2-a81da634d4f9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0922a749-db6a-4fde-b674-46ab5bab23a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd86bb-dcf0-46c9-80fb-41c7bdd8e58b",
        "cursor": {
          "ref": "34f00979-022b-43c4-b05d-a49fa08a50f4",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "49c8d716-bde5-41cc-9f9e-cc32b51f3ef8"
        },
        "item": {
          "id": "44cd86bb-dcf0-46c9-80fb-41c7bdd8e58b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2a6eddf9-420c-4179-8567-e73e366cdc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b145507-8d96-47dc-9ca1-7ad4d11f4f90",
        "cursor": {
          "ref": "99ddcab4-0519-4043-8c47-681cff20062e",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e94d1e1b-7bb0-4208-8725-7770803745a6"
        },
        "item": {
          "id": "8b145507-8d96-47dc-9ca1-7ad4d11f4f90",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0b0e1eb2-1dd5-43cf-b3a5-d3cd2d13dddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4ae4d4-e66c-4714-ab7f-226273649bb5",
        "cursor": {
          "ref": "45e653ef-b806-4eda-ba5c-f26eb7ccf32c",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b3348218-b235-474c-bb3b-2734528e2807"
        },
        "item": {
          "id": "1b4ae4d4-e66c-4714-ab7f-226273649bb5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9a5f65cb-58cd-4b74-ae63-d5f1e3773599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc68aec-adb7-43a9-92d1-c7f4d86e43d4",
        "cursor": {
          "ref": "c70c7adf-3a2e-4b06-a7b7-468da2fbc59f",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b58df4b3-4ed8-4d87-af1b-126e4e01aa19"
        },
        "item": {
          "id": "efc68aec-adb7-43a9-92d1-c7f4d86e43d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "17f6867c-7cff-4c9c-9801-6d2638c1d2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0400ed-8bcd-48d0-8e2e-9c4d2dee4f37",
        "cursor": {
          "ref": "4bd0994c-2508-4bf5-a38c-ac0de57284b3",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7b28260b-ce92-4abe-b9cf-d625c7959b41"
        },
        "item": {
          "id": "9e0400ed-8bcd-48d0-8e2e-9c4d2dee4f37",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4a9c2d5a-90f2-4b06-83d4-1a81dc2a3389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5edd2f1-c1b7-47a1-94ec-2d8f57fa92fc",
        "cursor": {
          "ref": "79187f6c-d63d-4415-a972-12c10103f17d",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b0cf9c1c-2678-47ee-96cb-8182174fda93"
        },
        "item": {
          "id": "d5edd2f1-c1b7-47a1-94ec-2d8f57fa92fc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d0eb77b9-0d20-4f89-890a-1f6d1f7327e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bddd681-4b92-473a-8776-c76463ce43ad",
        "cursor": {
          "ref": "e6eda31f-22f2-4cd5-a512-76a27bdcd8a4",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0a7f2887-affb-465c-b179-44dbb58a266f"
        },
        "item": {
          "id": "9bddd681-4b92-473a-8776-c76463ce43ad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "12bd0e42-8775-4c90-af9a-d8d96b2a8991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f1ea5-3339-4999-982e-55b9c003c232",
        "cursor": {
          "ref": "0e6c6876-5864-4dcc-aec4-10b55eee292b",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4f8e8a9b-384d-4391-9d6e-571fe01cb574"
        },
        "item": {
          "id": "073f1ea5-3339-4999-982e-55b9c003c232",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "143d822e-0cc6-45b6-b14c-3196413bbbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db405b0f-c0de-496b-9675-5de45c2bd89a",
        "cursor": {
          "ref": "f99e546a-f4e1-446b-abde-ada24c380f02",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "563bc676-e701-40e7-a6a0-4d7a2c349865"
        },
        "item": {
          "id": "db405b0f-c0de-496b-9675-5de45c2bd89a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1a6547c6-facf-43b0-bedb-792bebb0d935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cdc831-69e4-44db-aa70-55a04fc74dcb",
        "cursor": {
          "ref": "e2baaebf-8f47-42a6-811c-bb403e42f388",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8a8e897e-6612-4b2f-970f-f940ceeeba63"
        },
        "item": {
          "id": "b0cdc831-69e4-44db-aa70-55a04fc74dcb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ab915a03-2a0f-41ff-ade9-80aff6adfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3615de72-c506-43c3-8305-9b69a332f480",
        "cursor": {
          "ref": "ed2a6644-f248-4357-a265-14b11ccfd107",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "889aaa3e-8682-4698-9ed6-2cd16a304ec4"
        },
        "item": {
          "id": "3615de72-c506-43c3-8305-9b69a332f480",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8cf8cdde-8ee8-496d-828f-445fe2c1ccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c725b0a-90a6-49f9-a78f-765bf9d8decc",
        "cursor": {
          "ref": "527e9f05-b00e-4c8b-99a2-07882ae86c1f",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d64616bd-e46a-4d26-8f7f-d5f49930995b"
        },
        "item": {
          "id": "4c725b0a-90a6-49f9-a78f-765bf9d8decc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7ba2a005-e5c2-4745-b492-029816866842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6151fbd3-07c9-4192-827f-784bfd2f977b",
        "cursor": {
          "ref": "17aa2bd6-4a8a-4add-9f51-7c44baaf7d3b",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "010630dc-238d-4b10-96b2-b67c89bbfc72"
        },
        "item": {
          "id": "6151fbd3-07c9-4192-827f-784bfd2f977b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d78b7a86-6baa-4b0f-8d33-73786e476d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e39dc2-afac-40ba-9a25-72fae40d4c0a",
        "cursor": {
          "ref": "188c9e96-8248-483b-a941-2fef2d9b2b44",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6f35991-00a5-4e43-94b5-f8f21cf35fb0"
        },
        "item": {
          "id": "45e39dc2-afac-40ba-9a25-72fae40d4c0a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab4319ad-6065-409b-8ea7-0e2810665815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c251ee9-0711-441a-8e2d-a9352d09050f",
        "cursor": {
          "ref": "7754767f-4ddc-41ae-b8ca-76841b734f7a",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6fb92af0-ffa4-4a74-a8a4-50fe7fad5b92"
        },
        "item": {
          "id": "4c251ee9-0711-441a-8e2d-a9352d09050f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4e313ee3-aa22-4148-b057-fb4dfd762f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313472e5-7ad4-4a02-a5b2-cd2999126b4b",
        "cursor": {
          "ref": "7be8fa74-40e7-4b6b-9940-3fcdaecd0bf5",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5eaf670b-a50c-4109-b584-50568399ac63"
        },
        "item": {
          "id": "313472e5-7ad4-4a02-a5b2-cd2999126b4b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a3e9175f-687a-4e04-9b69-2327dcf57492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1067,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b193994-2815-4b3e-be24-926e37afb04a",
        "cursor": {
          "ref": "400a2d3d-a68b-45e2-afe7-f6d2e1a187e2",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "62366af3-f40d-4d3c-a90f-7358b336c6ba"
        },
        "item": {
          "id": "9b193994-2815-4b3e-be24-926e37afb04a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2068e139-34bd-40cc-97ca-6d2d8464ba51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1836,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6194c400-35f5-4fd7-8577-5d4c2d8f317a",
        "cursor": {
          "ref": "1a74fc7b-6bd9-468b-96d8-e74d54b28639",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fc37b350-e824-401a-9d13-29b8d0c1f341"
        },
        "item": {
          "id": "6194c400-35f5-4fd7-8577-5d4c2d8f317a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "66f68e7e-62a2-40dc-9e70-5eaa932c7610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7247c7f9-b836-429e-99b3-2bd18ba39f47",
        "cursor": {
          "ref": "575a9a94-a142-4f24-8ff7-7ee2bbf9bea2",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1ab49c6f-8471-4369-8c1f-84c593f931d4"
        },
        "item": {
          "id": "7247c7f9-b836-429e-99b3-2bd18ba39f47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a1d00a79-43a0-4b05-af87-8b021c4d4a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6724189f-d80f-4949-8ae3-016e50873150",
        "cursor": {
          "ref": "f67f083d-c0e6-446f-ab11-9de3d12f6bb0",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6c0933e6-5bc2-4640-9df9-b8851e088a92"
        },
        "item": {
          "id": "6724189f-d80f-4949-8ae3-016e50873150",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9434625-b04b-4413-b3e3-c75873d1b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1993,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3b817e-63d7-4e66-88f1-acd97e2096d1",
        "cursor": {
          "ref": "628dfc31-2378-430e-bde9-dd0c5fd65c04",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0d3f4851-8c22-4331-b5e4-092bc6d2bb70"
        },
        "item": {
          "id": "1c3b817e-63d7-4e66-88f1-acd97e2096d1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "98e040c3-1b88-44e2-93bc-dd3bd8ade3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1195,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eca8f9-6320-4778-807d-145d8f06184b",
        "cursor": {
          "ref": "d1436958-edea-437c-9b82-2d84429a492d",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fffc9f00-d355-4801-908d-dfc90e249809"
        },
        "item": {
          "id": "18eca8f9-6320-4778-807d-145d8f06184b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a5314b82-aa35-4185-83e9-c1e88bc4f363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8523545-a390-49a4-95b8-fc5e4e870b61",
        "cursor": {
          "ref": "d544ec3b-70a7-4d6a-8159-3b62f7c90c45",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "789ff92c-3793-4f6b-af61-23213a01c476"
        },
        "item": {
          "id": "e8523545-a390-49a4-95b8-fc5e4e870b61",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "62a24a24-17d6-479b-b659-22815a6787ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e2f07-b538-4530-9541-72b072efd580",
        "cursor": {
          "ref": "1526e34b-06f7-463f-aba7-07e0b235c3e5",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0ada7787-6e7b-4fe3-a6e2-e9590d298de4"
        },
        "item": {
          "id": "630e2f07-b538-4530-9541-72b072efd580",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bc73050f-d5e7-483e-979c-3de6a79855bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f469421a-8bb9-4ae4-8eb8-d8911cbd105e",
        "cursor": {
          "ref": "fb1f4cc3-75de-4b9c-b615-34434925ab16",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "edd600fe-5533-48aa-91ce-516bff51ad01"
        },
        "item": {
          "id": "f469421a-8bb9-4ae4-8eb8-d8911cbd105e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "17213a0f-b702-4ea5-aad9-11d8509b918f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51997cba-adc3-405d-856d-3bb09c633f81",
        "cursor": {
          "ref": "d842cf49-0ea2-466d-a6f1-57af8cb6e478",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ecac4734-027f-4b84-b318-becfd08912e1"
        },
        "item": {
          "id": "51997cba-adc3-405d-856d-3bb09c633f81",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae4f5901-cf73-4d6d-bba3-bc5c93531de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcba7f1-4da6-406c-8fec-0e33750606d4",
        "cursor": {
          "ref": "68abfda1-a7de-417a-b028-abcea167062b",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1335fb8d-8ee0-417c-b147-54eed72d3a7b"
        },
        "item": {
          "id": "7dcba7f1-4da6-406c-8fec-0e33750606d4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ff17082a-e10b-4fb8-8fc9-9db64f0a06f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e83bb1-b2bb-4b3b-a8b5-3551a3410132",
        "cursor": {
          "ref": "0c47d60b-d861-48bd-86b5-de8e8be94e3a",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ba0792e2-d1ef-4c38-b67c-5c189e0cf378"
        },
        "item": {
          "id": "74e83bb1-b2bb-4b3b-a8b5-3551a3410132",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e7f13116-58d5-4887-aee2-f2c98ba5f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94314c37-1f9c-4dd2-aada-9c55aa3920e4",
        "cursor": {
          "ref": "473856e0-7d58-4423-b5e3-53489e43f557",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b9ad6d4-7128-4bcd-aa45-1f6e602dec9e"
        },
        "item": {
          "id": "94314c37-1f9c-4dd2-aada-9c55aa3920e4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9e0957dd-b740-4e3c-afe6-fb18f03f767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16a135-4ddb-463a-b1bb-ba1e1bf644db",
        "cursor": {
          "ref": "f24a2b54-9264-4b51-9676-c6c2237f031c",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1e605416-6d04-4e45-a7db-b6c902f39d98"
        },
        "item": {
          "id": "bd16a135-4ddb-463a-b1bb-ba1e1bf644db",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "40c51af4-fb1c-4ab1-a85f-991deed10339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb31fe7-de41-47ed-85e0-a4868d42a476",
        "cursor": {
          "ref": "dd23e2b5-beb8-4107-826e-55d5d0732e52",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96de73fc-332d-493b-b61b-22443d41da61"
        },
        "item": {
          "id": "4fb31fe7-de41-47ed-85e0-a4868d42a476",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3eddcee8-005f-4d82-998b-b036f07f2c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1997,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a74374-01a0-421d-8fc1-cc2f3b176a66",
        "cursor": {
          "ref": "3ddf25cc-f7fc-4ac0-81aa-3b8b9450951f",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f4b32326-449a-4111-9693-f32a5ec7dc9f"
        },
        "item": {
          "id": "06a74374-01a0-421d-8fc1-cc2f3b176a66",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "83b1d51b-db1d-420d-bd25-1a91164339ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6765ce8d-a6ec-41e5-ace6-508fa5da6621",
        "cursor": {
          "ref": "33733702-3d21-493b-82b2-15e5325d8a18",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1527a6f2-420a-4478-957d-75f7df340d94"
        },
        "item": {
          "id": "6765ce8d-a6ec-41e5-ace6-508fa5da6621",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a9912ad-e279-49f2-afb0-657ad7d96f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7470ca-db9c-4d2d-b0bf-a2f2a724df0a",
        "cursor": {
          "ref": "bf590c2e-2f8f-4d76-a4ff-c22fcaf3c33e",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d763f73-0b04-4397-bcc8-b51cd97090e2"
        },
        "item": {
          "id": "0e7470ca-db9c-4d2d-b0bf-a2f2a724df0a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80879040-2e00-4790-bc8f-dee2d56988cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b31f055-8482-4ef5-a390-1ad6d0851a72",
        "cursor": {
          "ref": "8fdd283e-81b4-46a0-ac3c-e52aec7d10dc",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "74c4047a-c4e3-43f9-a822-cd103f0cfc52"
        },
        "item": {
          "id": "0b31f055-8482-4ef5-a390-1ad6d0851a72",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98e60559-5ab8-4f7e-b60e-b7959e33262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac3c0ad-f09c-4c08-90fd-7f75cb01aa81",
        "cursor": {
          "ref": "54203175-4851-48d1-9522-7de160e85e6d",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1a53577b-15d8-46d9-9055-bb08b89cee9e"
        },
        "item": {
          "id": "aac3c0ad-f09c-4c08-90fd-7f75cb01aa81",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5f6f7600-7e8c-41e5-9467-0299d3cfe648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15fce20-1198-4a61-96cb-6b3a46c15f36",
        "cursor": {
          "ref": "f7549747-22e7-41cb-9531-64d0d60eee09",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "17bbb20a-8a91-4aa7-af4f-406d992d8dfe"
        },
        "item": {
          "id": "c15fce20-1198-4a61-96cb-6b3a46c15f36",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7f4dcda7-5e0d-46d6-a0fe-8f1ed05f44ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d366ec8b-5cca-4970-85cb-e58218a75b40",
        "cursor": {
          "ref": "fdd33a83-2826-41ac-8bf8-08cd149d991e",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a5d49825-c7e6-4cdc-bce5-53bb6c208c19"
        },
        "item": {
          "id": "d366ec8b-5cca-4970-85cb-e58218a75b40",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5fab740-0fb6-4f73-b8a4-0dd7f6a0adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e54923-3082-4a26-8685-fe7d52c12b89",
        "cursor": {
          "ref": "12e4439c-d231-4d76-b247-9f8349f3dd4b",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "282a9894-5199-4e56-b035-924b4b6b9d02"
        },
        "item": {
          "id": "26e54923-3082-4a26-8685-fe7d52c12b89",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1a09ef7e-6ff5-4221-9ff7-38120aa8056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c88b68-88f4-4877-a200-fe96f156f2f1",
        "cursor": {
          "ref": "a980be63-2be0-41d8-b734-eb3e24a349f5",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b197863-84e8-4166-802e-1bd7e4145344"
        },
        "item": {
          "id": "08c88b68-88f4-4877-a200-fe96f156f2f1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6272e28e-2ea7-45bc-b539-12462ff47e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1069,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bbad2b-a893-45ca-8cda-8ee6ed230279",
        "cursor": {
          "ref": "b7d14cb1-57a4-4415-b4f1-83f0444e078c",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "24ffacdc-5234-4581-8b38-0c3494067852"
        },
        "item": {
          "id": "98bbad2b-a893-45ca-8cda-8ee6ed230279",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f5d16e43-2aa6-432c-ae9f-ea07b7a39cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f344e-b868-46fa-b178-a38d62189198",
        "cursor": {
          "ref": "ce7da985-c9de-4786-bafd-7ce6527fc7a4",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a6b66e0-1476-4f5d-9693-6a2059197a0f"
        },
        "item": {
          "id": "4f6f344e-b868-46fa-b178-a38d62189198",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f72d1a2-a276-43a5-9d95-e3ce32008a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac6156-caf0-4115-8bc1-7092784a2435",
        "cursor": {
          "ref": "0b9172bd-f58a-4657-b8fd-95ae575dbb1c",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "65f89191-1c79-42bf-ad0c-b692b209ca90"
        },
        "item": {
          "id": "6eac6156-caf0-4115-8bc1-7092784a2435",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e7f518e9-a2d9-433e-94e2-33a19a7bb297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6902da-94cd-4d9e-abaa-919386402df6",
        "cursor": {
          "ref": "9203430c-1ed1-4ca3-9ebe-cbe138380c47",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bee76cde-2bb2-482f-aa82-e773e77a92fe"
        },
        "item": {
          "id": "3e6902da-94cd-4d9e-abaa-919386402df6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5b7d91f5-3527-4cdb-831e-8d4ebb86b5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c94a53-6c73-48bc-9cf4-00bf42153a21",
        "cursor": {
          "ref": "f626317e-5213-456b-b666-959cbaa5655f",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "86152a67-e5a9-4c26-86c8-c1f73383ef69"
        },
        "item": {
          "id": "82c94a53-6c73-48bc-9cf4-00bf42153a21",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da5ef731-68e3-4918-bd30-3a673191d3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbcc8ce-8f33-48e7-a314-b04bd53b68b5",
        "cursor": {
          "ref": "1d0be85d-a466-42f0-bbd9-adf50a4a57ee",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "83c22d3e-428a-4f8f-b790-a22f44682e37"
        },
        "item": {
          "id": "ccbcc8ce-8f33-48e7-a314-b04bd53b68b5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa270f1f-2dcc-4134-97be-d7d1c5f59dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e3256d-b578-4a14-80f7-b577a51f6d5f",
        "cursor": {
          "ref": "96b09aec-e5aa-4fe6-9ab4-524b1c0c669a",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7f1e87b1-2b34-42cc-b6d2-ee7f09a4baaa"
        },
        "item": {
          "id": "b0e3256d-b578-4a14-80f7-b577a51f6d5f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1b6abcc6-f723-4983-b688-21afa3cda10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9c2cb-75bc-44d4-adc2-602dc681476c",
        "cursor": {
          "ref": "559b61af-43da-4287-987f-e7fcaa97173c",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b06271f-9287-41d1-a92d-96a91c8c5385"
        },
        "item": {
          "id": "d8e9c2cb-75bc-44d4-adc2-602dc681476c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "65197ff0-068e-41e2-afa1-ce84cbcec519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc45183-2d06-4f30-8c25-8f65438a0f61",
        "cursor": {
          "ref": "2c9fc658-5a1c-416b-b00a-81f5064317df",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "371a3cc3-cfe2-4f50-a64a-29b5285a5aa2"
        },
        "item": {
          "id": "ddc45183-2d06-4f30-8c25-8f65438a0f61",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5afa9e76-bc11-48e2-8022-7d10473cef6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc56db-dffc-4a36-8d08-d9fcc3c77238",
        "cursor": {
          "ref": "7f8b7eee-1227-43a1-a6c9-94837f442c5e",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dccddf89-3872-461c-9a74-7d50577e0c48"
        },
        "item": {
          "id": "2afc56db-dffc-4a36-8d08-d9fcc3c77238",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5f1a3e3b-e613-4046-b3f5-247793aa1e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dede7b57-9cd0-45a0-a091-c84ec9f450cd",
        "cursor": {
          "ref": "68ca9319-5b73-4e0a-9757-c18fae6ffcf5",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4bff7e24-b9a4-4312-841a-6f161874a236"
        },
        "item": {
          "id": "dede7b57-9cd0-45a0-a091-c84ec9f450cd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "783d4732-1051-4b2b-9360-0391b3863b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd32d839-0ad3-451f-a5fa-3d6f2bfc7277",
        "cursor": {
          "ref": "2fc1e93e-678f-47ef-ac17-c4c161beeda2",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7080d478-d542-4777-9758-00e80e2c71c2"
        },
        "item": {
          "id": "fd32d839-0ad3-451f-a5fa-3d6f2bfc7277",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a0101cd5-5167-48e5-981e-7457902d26fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad7b051-2ce4-4ff7-80d7-18c481ebf686",
        "cursor": {
          "ref": "5ea01e6b-a4ba-4e19-878a-7c598c452df8",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82066864-c7c8-41b9-8364-f213ff073b8b"
        },
        "item": {
          "id": "9ad7b051-2ce4-4ff7-80d7-18c481ebf686",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e2ef5378-e7ec-4201-a74f-18c7feed0fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a54d0fb-cbd4-462f-be68-7e7c9ed4a3ea",
        "cursor": {
          "ref": "13257f77-0c21-440e-8b62-52a5a498c984",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c8ee3e9-1ec1-4cee-ac88-e5fc2b43365b"
        },
        "item": {
          "id": "2a54d0fb-cbd4-462f-be68-7e7c9ed4a3ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c33399e-de54-481b-bd28-dcf861715433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5798c-2aae-46c5-8774-3eeeab941af7",
        "cursor": {
          "ref": "37b9d926-9126-474c-85be-ee3c21723d34",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d042456d-8254-4119-9b13-6204e2e31529"
        },
        "item": {
          "id": "9ce5798c-2aae-46c5-8774-3eeeab941af7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19f9771c-5159-4f8a-99f5-c733c905130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d530203-065b-4ead-b5ac-5476908bac43",
        "cursor": {
          "ref": "47abdbd7-678b-4ef4-bcba-713258316d97",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c6f7cd3a-22fb-4535-80b7-26427d5dd6aa"
        },
        "item": {
          "id": "7d530203-065b-4ead-b5ac-5476908bac43",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e44c879e-855e-4ff6-a092-462df6cf214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e87662-3713-42f8-969c-d070d94bdb36",
        "cursor": {
          "ref": "0614244d-7462-4137-a040-01b8904f9683",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6e0a472b-f3dc-4733-b08c-1f0d9db8d560"
        },
        "item": {
          "id": "48e87662-3713-42f8-969c-d070d94bdb36",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f4693e91-2d0c-4f25-95f9-38201bc2cd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1e5be8-64b0-4a9c-8410-a8a2d4b8980b",
        "cursor": {
          "ref": "6c16eb86-d0a7-464d-b2ea-c583728cb93d",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "87b7e33e-a338-427b-aaa9-cc4607af5512"
        },
        "item": {
          "id": "ec1e5be8-64b0-4a9c-8410-a8a2d4b8980b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a33eb6d4-6f09-46c4-91fa-e878fef7d9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07985534-efbf-4556-bf3e-9741cbf4ba83",
        "cursor": {
          "ref": "7d55f05e-1e4a-4362-817f-6209dd4a4e14",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "95597c0a-1a47-406f-b2c0-2bf405fc1ae7"
        },
        "item": {
          "id": "07985534-efbf-4556-bf3e-9741cbf4ba83",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "069ed29f-c002-4d0f-a7fb-9efb4cbe6f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c9ba0d-6869-4dfc-ad1e-303700b7837b",
        "cursor": {
          "ref": "b875a8e3-4b90-46c6-b1ea-c27b4d0b1efe",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ae43dcde-32bb-4264-9565-53d8410f63ef"
        },
        "item": {
          "id": "62c9ba0d-6869-4dfc-ad1e-303700b7837b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46a5ab31-3001-4a77-baad-1cd0a794573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa798ee5-3bad-4818-afe3-a97a61d278ff",
        "cursor": {
          "ref": "10a6d68d-a593-45f2-927e-37d2333f7037",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "990c56dd-d305-46f6-9ec2-2129c65fe5bf"
        },
        "item": {
          "id": "fa798ee5-3bad-4818-afe3-a97a61d278ff",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c06c7256-ea4d-4b02-8579-e7e944dbe0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42683b48-b848-4302-b466-15d91ffffdaf",
        "cursor": {
          "ref": "cf9aa698-5bbf-41cd-8e43-52693cc720f2",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "12d62fcf-812f-4278-894f-572e043600b9"
        },
        "item": {
          "id": "42683b48-b848-4302-b466-15d91ffffdaf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dff6b123-54fa-4141-8389-1e8d350fae02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e959858-ede5-49e7-bd49-69a6b1786896",
        "cursor": {
          "ref": "b65d046f-c0a4-4368-a68f-a17560ef9a02",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d1f3b0e9-47ce-4e03-ad0f-5415a88d1e8e"
        },
        "item": {
          "id": "9e959858-ede5-49e7-bd49-69a6b1786896",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f1b15e05-bc06-40c7-9ce9-847af3af98e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6045bfe2-4138-4916-b0f7-115d8e27a0f7",
        "cursor": {
          "ref": "b288aa8b-e2f3-43b2-9975-fb6cff4c49e8",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5618493b-03b9-412c-8e32-0ac20dbbcf1b"
        },
        "item": {
          "id": "6045bfe2-4138-4916-b0f7-115d8e27a0f7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b593ee9-5c6c-4cb8-a933-e27227bdf7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14990aa1-e5da-49be-9092-9c4054485604",
        "cursor": {
          "ref": "cbd351c9-d3a2-42e4-96f5-2668e3bc7873",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2fa95af9-4f13-43fa-94ce-11e48429f9af"
        },
        "item": {
          "id": "14990aa1-e5da-49be-9092-9c4054485604",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5f421c46-e0e6-458e-8022-cadbb3a43e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb2f0ba-3640-4c51-b031-df2cd0383857",
        "cursor": {
          "ref": "cc88a140-5bf7-4366-83ec-06d7c23b85a2",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7e29614d-a8e5-4363-8163-61d38d0156a7"
        },
        "item": {
          "id": "adb2f0ba-3640-4c51-b031-df2cd0383857",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "61ffb337-268c-415f-aaff-ef5f73b20cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e25f9e-b404-4cf4-be77-63cc56e635df",
        "cursor": {
          "ref": "6afdc9f0-1425-4d71-92aa-4ecce709f68f",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb9d5141-0ce2-4937-b8fa-d5943a5f3e7a"
        },
        "item": {
          "id": "24e25f9e-b404-4cf4-be77-63cc56e635df",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "919644d6-7f52-4d92-8cf1-92986b4630f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bc0f0f-3a15-480f-a810-aaa4e6562bf1",
        "cursor": {
          "ref": "401b04e1-eb4a-4bee-b951-c4c146584120",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1968fc6c-afed-42e2-b4a1-e6901240dd20"
        },
        "item": {
          "id": "b5bc0f0f-3a15-480f-a810-aaa4e6562bf1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1dbcfb6a-7be2-48ea-ace2-c1d81244b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0b525c-66a0-48ac-bbeb-c3b007f2a99a",
        "cursor": {
          "ref": "8d30714f-c9a8-42b3-a592-9dbafbd48bc5",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3df5c4c2-4710-4195-aa47-de9b2441e604"
        },
        "item": {
          "id": "8d0b525c-66a0-48ac-bbeb-c3b007f2a99a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5beab3b3-6daf-4868-940e-cda5e74a567f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da74c6a0-de81-491d-82d0-a37cb0d98d26",
        "cursor": {
          "ref": "9bab96ae-3e62-442d-945a-61cfd8556d83",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "92ef203e-8b1d-41c8-ac4f-13dd16ae5940"
        },
        "item": {
          "id": "da74c6a0-de81-491d-82d0-a37cb0d98d26",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "757a970c-652a-40b0-81d3-577a9becdb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fbccad-88a0-45a3-bf10-77467ac1948e",
        "cursor": {
          "ref": "f9c958f9-ac36-4513-a03a-e569063f56d1",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b86dd136-19db-4ef3-a5ae-d233d6fe2ce0"
        },
        "item": {
          "id": "78fbccad-88a0-45a3-bf10-77467ac1948e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ed2275bd-1515-4f38-a003-61e3ef03f94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a138dbae-083e-4088-a62e-77d6124084f2",
        "cursor": {
          "ref": "f7e8727c-7d37-423a-8d6b-cc0070e3db49",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "606fb958-028a-496d-bb25-b9279d8a0386"
        },
        "item": {
          "id": "a138dbae-083e-4088-a62e-77d6124084f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "754aa5ec-5c30-4b69-a76b-f89b6fa8a261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952876a0-45ae-4fd1-91fe-a99a1298b7f7",
        "cursor": {
          "ref": "2608dd9c-bd69-4c69-8a64-4a00e493dda1",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9b579dc4-d999-433b-81c8-81fb5bbb0654"
        },
        "item": {
          "id": "952876a0-45ae-4fd1-91fe-a99a1298b7f7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "263ce62a-538d-4dd8-8b45-f5da2f02e648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ad688-df71-4965-b412-4635d6e9bf73",
        "cursor": {
          "ref": "968417cc-c7bc-4eaf-90ee-a4e82b870ca7",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "92c1191f-ba37-4dda-8b43-8121341f8cbd"
        },
        "item": {
          "id": "482ad688-df71-4965-b412-4635d6e9bf73",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "43c7d85e-a863-4933-8ee3-7ffb5d776d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff07929-67f9-4480-9a9e-dd1d9c460b64",
        "cursor": {
          "ref": "d94b95cc-bcad-48b3-811b-fb340cd018e5",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b96c996e-7561-44a3-8c80-90396d486880"
        },
        "item": {
          "id": "1ff07929-67f9-4480-9a9e-dd1d9c460b64",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "75312d57-9a0c-4c28-82d2-be357b285972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bed91e-e81d-4a84-87fb-2d92ebc21238",
        "cursor": {
          "ref": "5e21cdfe-6a3f-4311-9020-e72a5ea181c2",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "57b2c262-4cc8-4df8-958a-3245c1272156"
        },
        "item": {
          "id": "44bed91e-e81d-4a84-87fb-2d92ebc21238",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8346a0eb-7f0d-414a-8501-944375523ce1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75a454b-4f4c-4f8a-932c-639ec07a277f",
        "cursor": {
          "ref": "71a2c7dc-c76a-4b9b-85b4-62dbb5bd8cd4",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba8aba91-d88f-4b06-9cb1-053151f5c715"
        },
        "item": {
          "id": "f75a454b-4f4c-4f8a-932c-639ec07a277f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c078161e-7375-4c75-82e6-90fda0c25d30",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 75,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f26828-7f69-4902-aefc-bfee909513bd",
        "cursor": {
          "ref": "3080481a-3b7a-4c77-9b25-43d06b8de82a",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a404107d-29bb-40b7-845b-f3d677c3c1f6"
        },
        "item": {
          "id": "b9f26828-7f69-4902-aefc-bfee909513bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c6d309ab-e7e5-472e-bdf8-3e5ee0756acd",
          "status": "OK",
          "code": 200,
          "responseTime": 1409,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844f7a42-4d1e-4b07-8add-1601562b81b5",
        "cursor": {
          "ref": "25cca7d2-4c28-4ebe-8525-5f98e8aba28d",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee48697e-586d-43a6-bd3b-ddd39d0fd409"
        },
        "item": {
          "id": "844f7a42-4d1e-4b07-8add-1601562b81b5",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "b3e5c7cc-4728-4cc9-ac15-7e4931740c0f",
          "status": "OK",
          "code": 200,
          "responseTime": 1850,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a4cc03-defa-4920-8e34-30622cc351b7",
        "cursor": {
          "ref": "a946ee9d-b53e-4034-b22d-f00122e58c5d",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b83fae78-94ab-49ab-b265-5b3ff3ffec9f"
        },
        "item": {
          "id": "58a4cc03-defa-4920-8e34-30622cc351b7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "114b6011-7969-418a-8a67-6cc09814d4b6",
          "status": "OK",
          "code": 200,
          "responseTime": 2559,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
        "cursor": {
          "ref": "5f8ac991-dc83-49fd-abdd-d17f80821608",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9bc1ebc6-fa22-42bd-b75c-d55cd3aedc7e"
        },
        "item": {
          "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45d9e535-5f41-41b0-b4de-4b1baef9a6dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
        "cursor": {
          "ref": "5f8ac991-dc83-49fd-abdd-d17f80821608",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9bc1ebc6-fa22-42bd-b75c-d55cd3aedc7e"
        },
        "item": {
          "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45d9e535-5f41-41b0-b4de-4b1baef9a6dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
        "cursor": {
          "ref": "5f8ac991-dc83-49fd-abdd-d17f80821608",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9bc1ebc6-fa22-42bd-b75c-d55cd3aedc7e"
        },
        "item": {
          "id": "17f03427-5917-4d7b-b70e-4d2bede5faac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45d9e535-5f41-41b0-b4de-4b1baef9a6dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167d1781-f945-47a1-99df-d5ceb2e0422d",
        "cursor": {
          "ref": "a9695c73-b38c-4f1f-bbe0-e4b72be83f6c",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "61b5c1e9-9052-4e96-aeed-add62f5525c8"
        },
        "item": {
          "id": "167d1781-f945-47a1-99df-d5ceb2e0422d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4a9a3b31-c4da-4900-a2dd-6764a6c5950b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 87,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca36618-68db-4151-af40-aa8a3e13fa34",
        "cursor": {
          "ref": "58cd869b-ff7d-46d0-a8e0-651701e8058f",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "27f29da8-9cd1-4c25-95b0-c4c9319f3818"
        },
        "item": {
          "id": "0ca36618-68db-4151-af40-aa8a3e13fa34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b235b8e6-d0d0-40cf-94c1-f650fd2213c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "0ca36618-68db-4151-af40-aa8a3e13fa34",
        "cursor": {
          "ref": "58cd869b-ff7d-46d0-a8e0-651701e8058f",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "27f29da8-9cd1-4c25-95b0-c4c9319f3818"
        },
        "item": {
          "id": "0ca36618-68db-4151-af40-aa8a3e13fa34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b235b8e6-d0d0-40cf-94c1-f650fd2213c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "ff122e82-d34a-4893-b532-fc4a86b8bf6a",
        "cursor": {
          "ref": "b0963342-169c-4e23-8120-82a66dabc245",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8b639479-b613-45b2-8f62-5729b6d2473b"
        },
        "item": {
          "id": "ff122e82-d34a-4893-b532-fc4a86b8bf6a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4e038534-8c46-4a91-9f80-20b444d713d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "1b092cd9-94f3-42bb-a38c-9e53f3aa9354",
        "cursor": {
          "ref": "6aa361b9-4100-4807-93f9-34b6e62158a2",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94630bd4-f57a-48ea-9718-33878e4fd1d7"
        },
        "item": {
          "id": "1b092cd9-94f3-42bb-a38c-9e53f3aa9354",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0af60000-ad5b-4992-a7d5-072c45614cdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b092cd9-94f3-42bb-a38c-9e53f3aa9354",
        "cursor": {
          "ref": "6aa361b9-4100-4807-93f9-34b6e62158a2",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94630bd4-f57a-48ea-9718-33878e4fd1d7"
        },
        "item": {
          "id": "1b092cd9-94f3-42bb-a38c-9e53f3aa9354",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0af60000-ad5b-4992-a7d5-072c45614cdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428cbcda-4c4d-476c-acc0-6b04aba84b38",
        "cursor": {
          "ref": "6fb390e4-218a-40ed-8fb2-0385685dfc5d",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f28bd56e-ec9c-482c-a0f5-75754815a83d"
        },
        "item": {
          "id": "428cbcda-4c4d-476c-acc0-6b04aba84b38",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "cd7931ad-2d47-4df9-9047-0a77077c16b7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 74,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}