{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "381ed0ed-24d9-4f7e-9ce9-3b4d2f360bac",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cef0f829-359a-4e9a-a593-3b17743f181a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "677da2c6-f1ab-403a-a144-391d5a1c62d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57cc1497-feb7-45a9-959c-fc3005f11961"
                }
              }
            ]
          },
          {
            "id": "d200f3ed-3379-47fc-9582-084f24492d06",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c472991-921b-4b0f-bd0a-1e07c1c48cca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "784ac1e1-361d-4ea6-bdff-12e0d4cf8564"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "612cd058-2f53-4533-8ede-2597230e20d4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a3270cf-3e04-44b4-8939-71b12a7786bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc79e3ed-b2b2-4d9b-ad48-326e5736bc43",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f226c6e-541e-4003-9c99-03efb9ac78d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6c36e00-33a0-45c2-9d06-04221276c0ab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ec9ac80-b4b9-43ca-8afd-58f2f548d63f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41113616-218f-42a0-9170-65d2e4d8265f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e47f767-30cf-409b-b02f-e3e0186cf0c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2b275d8-7b60-4431-ba28-23ae5a254ac8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5b62e1f-640e-4d51-a122-999ed9a3c7c4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ba1640c6-a9f5-45b5-95b6-a7dbc34830c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edd6381f-04e2-4041-932c-f61814040baa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23045c4b-0c8a-4b10-a319-5b902530179b"
            }
          }
        ]
      },
      {
        "id": "3e12ea28-a613-419f-b1be-35dd9339c3bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9def8ad4-2830-4f14-8ec3-de36319eff0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27dffd20-71a2-4c4a-a972-2b73c29ee1a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "215ade26-acaf-4baf-87f3-1e50e85afac7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14a9304-e7e6-40bb-ad1c-de02bc31cd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4a822e0-43ad-4c89-8c99-363889c1063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a110bb-ee7e-42a0-81ad-e0e9804ffb03",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cbd723-62ae-40f9-ade8-65cebef36839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25bf4cce-39ad-4e2e-9710-000372012143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bf00e1-5cce-46dd-96ab-02302c538b85",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da83f6b-8dc0-4401-8a33-d76f63f9d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abdff615-cf78-4426-ad44-70448832740d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71eae4fa-7bf0-4ba1-979c-29a9f85e5d54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0aac2df8-e841-47ae-bc85-ef797177d3de",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2d7ae1-ab8c-4c75-9761-d34cba2498e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ed7e64-bbc3-4237-8dd1-94bf60e69c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a4f2ff-8450-42b0-bc69-06da9e625e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d5534c-770a-46c7-b652-7ef8cb5c1446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5bea7b-7b5b-48da-9896-9e992c9f43fa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da23ae85-9c08-4102-8339-1122604c71c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c15d28ad-2e3b-40e3-b701-dc2d705c3ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0f12f3-f9c5-4a98-a29c-68bffd34248e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "865dedb4-6004-4ecd-9b17-8c50fc04c286"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "279ac5bb-724d-4f59-8724-9e97a3e5e5aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e58985e-c792-40c1-862c-0c11c2dea0da",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deea1bec-2951-4b17-8bd5-fe6f5e7d1425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d52a98fc-c626-458b-b673-b16ebbf24d13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd1ad3b5-2e9f-4256-b98e-df18dadf3098",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c766af8a-ac98-471f-99ee-cd7d95a8cfa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e89c3ff0-765c-4d8e-bb62-38c3154987d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "863486ea-e473-42e7-b5fe-641305c9ea6e"
            }
          }
        ]
      },
      {
        "id": "f13bc22f-26d2-4cb8-86f1-2ce301d56872",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2e0a6d0f-01c0-4e14-a3cd-2fa087a4a111",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c33ffa3b-c30e-4df8-bcde-4d68fbcdadde",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "18f4e6ee-ea34-415e-a8ad-f713e61aef42",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b92e87-0d21-4bdd-89ff-087eee6a0883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31e57d3-d47f-4647-b240-abdaddb8c2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5644fd92-5c1b-4518-8588-fd80fa7e876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffdeeb7f-c272-45e0-b977-62cfc67bd9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3323da2d-e85a-428a-952e-f3ad6a666804",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b78f7d-ee92-409d-b4fd-12317dbe8def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9541978d-9bc7-49bb-b3d4-fc509b38ae39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb0078d-e1d2-4c42-8999-8a634449496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15890115-3ce0-4f85-9a48-0282917c8e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8f27f3-894b-4d28-b2ff-ed436c48a7b7",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5693b26-1119-4fbb-8396-68f73cab32e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac076641-0bbf-4721-92b6-5c45e54b61da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce378a9-c0ad-4bc7-9d46-1f8baeb93f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70eeb9fa-045d-4814-84af-15823dcdb951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6822511-52d9-434e-9dfc-ca96eba33a30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35680ce-66ba-41c7-a24e-15357d3b5092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660126b4-95de-44c2-a76c-795ac0c7c0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e95793-7a70-40eb-9fb4-e81b6f3a02f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7deb7f7c-8417-4b1b-9bb3-0e536f3a4db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b59c3-c4bd-4637-852d-3581a1619655",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f81d133-86a9-4893-b027-98adc15708b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cdd512-33f8-4240-830e-a2d0eec0e631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb413e5-87c9-41f2-888a-ec3b8176f967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1b513f9-e592-404f-8d10-db7bb7f33e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d05c1b-54ba-4d03-a73d-877cdf5d4d84",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effc8382-c652-4d17-a575-7784bbf53fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4266069-4e96-4ca9-8b2e-aadb4f6eed5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e3fc4a-d241-4fdc-8281-25d9a5cda32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1e5f610-1f87-4f0e-8f75-a09302bda93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8cda9c-b629-40ae-9b6c-00e4fd9a6fde",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f59eb-fe2d-404e-9ca6-4f7014d41275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d4aa52-a171-41d4-b3ac-724050a4b879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63f838e-a9ef-49a8-8f13-5be695581a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c228533-c4d7-4059-8cec-8a4acf1eba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d9aa85-5dca-4b62-a4b2-e16a461791a5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d46e8f3-30f3-4a21-8b4f-0c7db4ba6643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57e7a0-3d19-4e8a-942b-a0f8efabeb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7299d62d-64a7-4957-832f-5a8be1020768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babe9182-fb1c-4e63-aac1-d4873d89519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c5ec9e-30e8-46d5-812f-80ba1dab57d3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b20231-c0e3-4ebd-96d3-9c5ba4a594c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2de16a-f4eb-49b1-86db-b2fae7e0cbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0e9482-5705-480a-a808-b5209f80b833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4605da4-73b6-4994-a488-6c3bfb7f2852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5512e6e5-1eae-485d-bbd1-7472421e5534",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a8b3d-49fc-4460-bcba-1bdc0415c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4abdde-0ab3-4df0-847b-96cd4392cd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfca11f3-7860-4f05-a832-c8c95260504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e4d6c7-57e8-41e3-a7be-216cbdb06ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962646b9-af5b-4204-b550-74f0c7ae485a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7953bbeb-adca-4738-ba2d-d8caa7adb6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3da8454-6811-45f3-bbc4-72454cba743e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a914df37-dd5d-45db-88ca-03f14e592727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de139999-d711-4ada-8947-134fcda35fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236cdb1-e441-4922-9c40-906d2ce0d2cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b645ea2d-3cb3-4832-9d2a-899053791e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6728fbc2-0ff2-4060-9583-7611db366b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69530b4-81f2-4612-b60b-f6db54eb2333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6695b08-1bd2-468b-93f5-4cb41d74087b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e74e48b-f289-4399-ba19-9a84f70f4f3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7204f33-c339-4c7b-8f38-318cd9f94d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d1a6a8-4afc-4d5b-b62a-54755f960b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad63931-72ea-4d66-887d-bde0469880f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f519cc6b-e051-4131-8d31-5988debeb2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d77f0-3fad-4666-9189-f3909b870c68",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31b96f-ae72-42f3-915c-d0c0956fff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a30d2c-51ed-4d52-8597-f0dbdca36a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b15b60e-f9ea-4699-b6bf-c7a483b8acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20ee8f6-f46e-4e77-b1a9-02028bb8219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336f7a5e-ae3b-4d8a-bb32-3b4aae004570",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a775e6c1-4aa8-4921-a7c7-a5017c523329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc3a471-84e1-45f0-9949-10186676c16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeb2c96-e07d-4b6c-abdd-d33c8194a347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4f9de24-b27d-4788-9483-6fad9624d256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e25b2d-c26e-49c1-92db-d4c3e2940ca1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d38656-214b-4097-a09e-6e4feeaefa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf241ac-1b09-4672-8e4c-abad70fc9aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3026940a-19ee-43f2-a074-f603e718f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29e0593-5a26-4c38-823b-03f3b1ee1fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ab3cc0-2bf8-4737-89b9-9887d6351817",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a0a53-fa4e-44b9-b20c-2ab182e7003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87118176-6c67-437d-912d-7f7c616d0a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05f3bd-ff4a-4043-bbac-69d8b03b2042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ede7ebc-5e59-48e5-90d3-396a01e84678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdaae3b-527d-490a-81cb-d1d325a76881",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dcb9bc-766a-4da7-8188-6130768f88d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ea90c0-82c1-4dc4-a768-e4f389197550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2e863-0fb3-4d39-9cf3-c620edef52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07dab9cc-de50-41b0-ac4c-0534fa1ffd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2ef07d-f230-485d-ba07-229295b05c05",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f38a2-0282-43f2-ad53-9892a0c43159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d097a5-10b5-4c80-aabc-6216cbd4a2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4df1ac-e94a-40e7-9172-ab1312fc40f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe28a04-37a1-4931-8a89-b3a36a634051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d24f80-0ceb-434c-9293-02857a1f25f2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10211cd2-6307-41f6-ac3c-a9b889464a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becb43b7-2340-4fef-ad4f-d71290ea0985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d022f2-bb0f-4c64-b8dc-38828fda29e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d18ba9-9234-4d73-9408-accf58f9f85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c565f1da-82cb-405f-aa0e-31661076c9a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0a8851-761c-4fa8-8bb0-315c9cee4a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9dcab08-be34-4824-8e8c-125cb6306465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b9a3c5-8640-40f6-9698-e8afe4d8cec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "955a6e13-21a2-4e32-9ccb-8dc34da810f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698efd1d-7ed4-45f1-8adc-017ed623bf3c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6afb39a-5644-4a2a-9543-931c0c5dfacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffc33db-f2f2-4964-8565-9f6c2be6e873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfce55a-af10-425f-a019-efc9e94958f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3185cde6-3c41-4fd6-9d9d-9890f2c98c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2cd142-fa74-49b6-84ad-59c2876eff75",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad10064b-360b-4f93-b871-a91089ac8e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13243349-ec7e-4323-91e3-84a37d511b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7add15d4-8142-419c-b2c5-d71188576ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf4d1c2-48fc-41d5-a489-820e3bd75980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b449f-1cbc-46e6-ab60-eb6963ea0513",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4342eb-c973-437c-bc93-feb19267be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ed045-9ccc-427e-9f7e-270794dd3ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3297f24c-ea98-4202-8143-856a5e7e9a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e70369-b3a5-4230-948e-2e3780454465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd19f52-cba3-40c4-a28f-a4bdfa7cc25c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87fed77-254d-4aa6-84f5-3ff4ef44d4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5103792-e5ed-4049-9cc6-58d36fdc93ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ddbda4-fac5-4cb5-ba98-fdaa76a29fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72092fb7-9a66-4a52-9e96-f8a929b555cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1120017f-6cef-4b59-811d-4ad3e0668fb8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501503a7-b474-4f78-b88c-52a0694829f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e820b634-57c5-4e5c-bd0f-4a56605e9784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c67791a-6c3b-481f-a4a6-1ca9d7361f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe51c75-a286-4446-a85d-133b27eaf72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e9fa5-ecff-41aa-8be0-1fb413959c15",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517de756-bd5d-4aed-8649-8ec81e48de15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a71ce4-9aca-41e8-a1d6-84da8f7a4b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0586c9d-7acd-434a-a136-8c774e7ce530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "058ebf78-25cc-4e53-9820-c374a7c3f71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ab089-3092-4d0c-a78d-3116718ca1c8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cb6a51-e219-4f41-ac5f-ad5e88aa47ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d49e0b1-5601-47f6-9c5d-0edfa41a8c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc6b364-774d-407a-a927-ff07d8cb498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70da6a7a-a453-4f95-8c8e-ed675e7dff70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98446404-e241-430a-be6c-1aef52fbf09c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7284ee43-6be8-4c12-a8a8-d9ced4349cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f56c1c-d0b3-410f-8443-ef7dd8e1a013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ded4096-bf0c-4e0e-9c45-0bd5380a7916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05a034b-5b80-4a09-9ecc-8e64693cd12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6d5e78-bd1b-4e4f-86ed-bc57b50d7b33",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e062e8-f2ed-436a-af0e-e35de0138dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec354ddd-5481-417c-a037-4f18a1058dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003df6b8-15ed-4cad-b4d3-cad8066a7333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fb7c10-a9b5-49d7-b7b2-5ae0a28db377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebb41fd-cc99-419b-80dd-a309b9d14ecd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2b06b5-85d3-4fef-af11-f960604b133c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84326e48-e76c-4f93-a4ee-39bbb890fe7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5d1cf9-9b8b-44b0-bb3c-3c065900b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5866f8-5520-45d0-9f95-edf727d76342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25dfa61-b784-4b7c-b7ee-0140f65033ee",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbc8643-d980-4bb4-8cb7-42673e5e659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0697f062-feee-4bfe-8458-c43480290bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09909ea-725c-47e6-92db-5d7769259e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbd5b57-1a21-4b37-a57a-dda072bdfc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6307c208-eba1-4a2b-9894-c23b3bc4499d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6d835-4d49-4167-b430-64e704fbad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a83b207-ae69-45c2-8cad-73bd225d35b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52b559b-cff7-4eb6-bc24-21d4c732efc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aab164f-2560-490a-88df-8ec6456a5e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e4d50-9a65-4688-ac0f-e27b068d944a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e62a16-f3d8-43ee-b321-e7ed130cfecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb2648d-50c2-4a8c-b61e-e2ba94c35acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dcecbe-a999-46cd-9fcf-13fa67baed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6aeb2e-6212-4c7f-9a71-809b767d6629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa1c4f6-e3cc-40b4-a323-f883885d0bed",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0085fa4-5482-424b-aaab-e09db8d25aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e6e98f-921c-40ad-a117-66c8f3f719e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4df8ced-bbb4-4443-b072-6fc328e69a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e76d750-5754-448f-b455-1631805218ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600903f5-8ffa-4484-aef6-d961acd03a31",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711813e4-cffc-481e-9ec9-65dc1e44c4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e06635-2ceb-4b3c-aa43-f4493be5ee70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37f36f6-d3df-4406-b8fa-4324bf1e1bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ac74cc-0d64-4d41-b61f-a250fb995a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d269a496-ca3d-4ec7-b5aa-3a8b8158b69d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c9a680-47d7-4299-a79a-01bfcd7deb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230e888f-6912-47a1-b560-e5febfb42dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e9a189-8641-4d98-ba28-974ffceae92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2eadadba-56e7-4da9-8206-1c51a1790cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0652a4-f175-41a4-a34e-99f17ed8cbe0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cd2d1b-fa0b-493f-9db8-f8932953676a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d1f72e8-051a-43b1-bfd4-c755d0c82cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712b3dcd-1f30-463f-9cfd-c6e98a4bd460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b07b82e-a9ee-49e9-9a56-3932f353dd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd633b0-589e-4638-b29f-c30be36d8391",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5111aff8-8c34-45bf-a022-57818fd2e323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e499f7b-951a-4a80-8491-38e3aed0c837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536ae24e-29e4-4783-9418-44de9007571a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbe6acb-e645-4f46-9c1a-469de5c8ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ea82ea-b6aa-4ec2-9f2d-d91c96488805",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeb0133-2e7c-4c08-94f9-7f6b640ee9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1d2445-69fd-415d-a73a-3eef62ba4cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7303cc9-a3e8-4321-abc9-e9badf4de65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d72cd5f5-35c7-464e-8b73-2076585be6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448d69de-1875-4296-91aa-a2aee5706778",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2272c336-e92f-44c8-9f36-592ebc40b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc74dcff-994a-4f34-a802-5a41d7cb60a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf0479b-f6df-4689-9b34-d831c584d381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "437abc33-c544-47a7-8cc9-445f4c7a6020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f84e894-4fd3-49cf-bc59-6beeb876a4c5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73289dd-534c-4f26-ae68-b2976ae06ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265784be-9650-4de6-81f8-127fd76393e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a4590-e41d-42fb-a7e6-49279805f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f268870f-3e49-498d-a702-974bbee6cb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02312f91-0298-4ea7-a840-ab062e038a1a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa097927-14e7-4cf0-9c0a-716ed4be02b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a2fc2c-fb4c-4d5b-9e34-da507025d083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448ed856-211c-40db-9cd3-c7503193a655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f39926aa-0239-40d9-a71e-96e71ff29072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653905fd-e144-405d-a7ae-94ae78552602",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e04b199-4c9c-4a40-9bf6-02ed2f0a8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1ea5cc-7f71-467c-b4a7-237c17e33ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d8d98b-36e5-4899-bf99-479ad7b3226a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c6397fb5-d6d8-40db-8fb6-4530bcea0e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5bf447-4405-488d-bad8-491adc3c3b6b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a251dab-68c6-49c4-9850-84bfea744ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa9785f-d801-4f24-bad4-74c098c04b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90139d8e-2035-4b52-83a5-7b2ccf488784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "623ce118-5c25-49d5-8b2d-bd63db0dd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59213d2e-9702-48eb-84d8-f139e5099ae2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12bc722-12da-44da-b788-43d15e9521bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8353680e-6da8-44e9-b5e8-64052bf2da2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd798c1-11d4-4334-a84f-c6ad50de9e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "acee46ee-a79e-4a0b-86f9-3672e6adcca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a54cd3-28c6-494e-b4ec-d39241492c1d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61e34aa-7d2c-4440-8e25-c6907033bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ae5867-9ba2-48ae-b866-7a75695b540c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c6b5c1-358f-427d-a8c3-23f4a1c1d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5db5ae-204c-4caa-ab5f-368db1401b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a1dd9e-d0e8-4b6e-a42f-a11b56892393",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f12561-7a69-4e69-ba8d-396d7869eda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73808bd3-c459-4839-a60c-750e8ce4ecb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f11e93-84b6-4467-a3c9-560efc4e63ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d294a92-dcf3-4779-bb1e-84f70f51c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74b0d43-6754-4963-8305-a56e14e0ebcd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c38ea6-076b-42d9-8d99-fd9e12c54688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a07137-a517-4eaf-8a9a-7401d09281e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423207b1-e9b8-434c-874d-45b629123ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e46d13-f132-494c-9a9e-70cee3271407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877496be-06d4-4f84-a225-10702baccb4b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9365da0-9f41-4ead-b364-ea09288d3047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c0f047-22ce-4a34-a140-1d61723ec5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce14eeaf-7243-4525-8675-15e92e489527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f321d4c9-85b4-4346-bbaf-0122c591eb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec274b8-7148-4bd0-ae6c-9e59b4756abb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad400f-8fdc-4229-9b0c-560725b9aad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93424a56-eab6-4a38-ab85-8c42bfcbc675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d641ef-3707-47bb-bbf8-7b4130d41bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92cd145-fb5c-435f-850e-22c4e2acfad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ffe10d-e9de-4e47-8b2d-f18fa9953f83",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46741c5-3091-41b1-95a5-5a20cb4c32c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903230d7-e89c-4792-934e-d1fa420fd6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06949fb-7b5c-4309-9690-75ec9ef4a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73e3d684-5651-41b2-903a-95dbb2bcba01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d563ced4-8cac-4b7d-8dd2-9ead245fd84b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c7a7b8-c910-4593-8b78-366208b2fe3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b829a9-3fbe-4c30-99a6-4b6a93f7b52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b379d7e-7c30-43da-af6d-e2508f56557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ca9484-e7d9-43d1-a6c9-fb6ac8797d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5990d897-be3c-4ee8-b393-5f2f6408f4cd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3fe631-04ca-4ab3-8461-504be9a8af0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9559ad45-b7af-4e8e-9b20-159ce8dbee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e319fb-e914-47f2-9928-ef1f032fcb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6797e6-129e-4357-b2af-6eb2811393ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b471c4c-851b-4af6-be29-84947fc93a63",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200ab941-d771-4f30-a9e7-bbf8852b27e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29850696-4bea-467c-ac9b-992246055df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cdda35-45d5-4b4c-866a-078180ed96cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b8e2be-4eb7-4690-84e7-826819880183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3863138c-4343-4a2e-b02a-359881070f33",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fcf3b0-7839-402f-9047-a1c853747f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd05b5a6-9095-4b66-bee8-4d0aed29b0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e200f2-8ebe-4376-905f-f184daf7e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4627929c-c56b-4a3e-80f5-65ac7b25e31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41262df3-1967-4d46-bed5-fbc4a72f725f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d85dd3-2d7e-4664-be54-32f9502d01ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa0dc22-94d2-4af4-bfb5-f665fb7d6cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e692c3-ec69-4ec5-b1f0-7db1cd0508eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "145bd4e9-6f41-4026-9515-4fdfb0b2db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad17bb9-88f7-4dd3-b0df-7fcf42c7cfb7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb820d4-3770-4b9c-a29e-e649ab982967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984c2c91-dc18-45cb-9a23-3df8de127860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449e687f-5240-4fc4-a5d6-eac01739bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "34afbc03-5fc1-4ab7-8ad5-001f09a59a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea7cee8-73c2-4dc5-8fe4-2cc9edac02a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3859209-fa0c-4ee3-9283-ac050207da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27ba644-e6c6-484f-8b3b-adda229c0d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abe6f45-7b16-433f-8471-bea50df4bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25da5774-400f-47ee-bee7-569a3ca4dd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04715415-8f7b-4d21-b18c-4b992f09691f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f297007-6a6f-407d-92dc-cbe4605c83df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27338595-045d-4dbf-a7c9-a39730f0aeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df412d4-ce65-49b2-a371-cad207ef6f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88a022b6-a896-4003-b6b8-15410b2f4455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317c8d9d-163a-4f34-86be-25c2d1db0db9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61853939-5232-481c-8848-730e1ad20236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf5425b-d2c6-467e-8342-58a69be038f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66541d50-38a4-4018-a27c-90e0c6c69d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eab2bb1-05e5-4950-8077-33830fba6647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae488ca4-a94e-4ea4-9707-ae3bdc7275ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200b9630-c9ba-459d-8e7f-1ad42faa2c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82ac099-5f42-4ef2-8899-03dfb26a147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f7b0d5-615d-4aec-8b3b-71aeffe4b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "494f8ba4-3cca-4953-b3dc-0b79d2fdf207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e126b98c-a2ac-45d1-a477-fd98e28f0ee0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7674f84-01ae-4df6-8377-529d556f3c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6353dc-dab7-43c0-83f3-12c585822ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f318f0-6b6d-4e2e-9519-ed960da60dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d464da2e-1ce2-4c8a-8924-eb2641af7713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aadf6de-8da3-472b-a648-7697740f6433",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa640f-a705-4279-a9c3-9b1a1f792dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53344326-9d3c-4000-8549-d33ee192d385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf5bfc9-25ec-45c9-9abc-48177e610a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e5b3ac-3bd5-4d05-8ead-1e815c07c1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b78d2d8-f320-4ea7-a41e-761fd03414db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d62b40-f086-475a-a3b7-bc77b6bc7069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6269f5a-0840-4e40-86cc-bc6346dbb358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4cfe8f-3a70-4f98-96f7-e472cffaa2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab5c43e-9d43-42c6-a82c-f44ef7b50452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd14486d-ab89-4914-903c-5d869e545fd0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d823859-1b3f-4d81-8269-bda49f91d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fde855-5195-42dc-86da-14129f8bb9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f53fde-eacb-4f8e-aa72-e77bb62ac94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfc652c-1791-48df-953c-f151135a5eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4ffe73-a203-43a4-8af6-2db4861d4187",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773cad87-fdf3-4897-802a-15b0dc4dd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeda9be5-6723-4279-8501-7947c3275ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a937bd8-1ade-487b-b19e-336cb50d740a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c3d616-ad36-4891-8e06-930a83c5907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4306f20-a4c2-4519-9cfd-0964be1dd54c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34659a9a-d6ed-470e-8d60-33133da9b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3ae488-ffef-4bc6-899e-b5e3ccfd0ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c378208f-a272-4281-94b4-e3dd8010adae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9061fecb-c234-4fd1-8e7b-e940e644045f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46ce0e-247c-4e70-a414-48941bf6fffc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa24d0d-4cd8-4672-89cc-e7b1f58b9a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b66311b-d0cf-4285-8b39-b0df90c08415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1807d84b-371b-406c-82f1-a92e95715059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29e05828-94d9-466e-84ec-91c9ff7e68af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eeefdf-202b-44d1-8e24-b1a88d959070",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9370b539-6c86-432e-83cc-e6fbb83f47f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01d9bd6-edf6-48da-ba5c-b4de92c85451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df77211-c083-41f9-93da-7a8af3135a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39fd83c7-f6b5-40e5-8150-e6b2cf1baee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2e8eb5-e6c5-46ba-93f7-ac2d5c372894",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7631508-3e57-4a4c-a2ef-7058a1d2fa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d80810-1b76-48da-b7ee-8202add264a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f154d40d-1dd5-48bc-bcc1-7219ccd7e73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa6e153-d7a5-485a-8248-e483e7bf5396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c840ee-5fef-42b5-b50b-e77a28b20fb6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb762aa4-577f-4de5-a08a-21425baa0b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943ea34f-b725-4e27-8891-03eda1bd64b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f5382e-2311-4ced-89ce-b5e215152491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54cea920-03d1-4bed-8dad-623272fcfdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2776261-339c-41c6-9b65-74ae125f9a23",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff0fa63-bcd5-42dd-bc00-71172ac1b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74422772-2452-4b62-9176-0f107644fabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff8cad-6e0f-4950-8780-5e978d1ff3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "119063f4-bd21-4d07-8922-201ffc49be42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca32ef71-d56c-47ef-82f5-d29722a9e379",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3c39b8-4684-4404-a5c4-40f0d7a0c0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8695c8ab-8007-4437-9da2-ef6a5f32b471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d07e8b-14e5-433d-afc2-62d7f6b16e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed4f238-f7a0-47eb-ba24-a21b19adce34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22444013-32fe-4f33-abe3-cdf66d1a319f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581323b6-ac93-4f2d-ac0f-9520de7d26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351bb4f9-0066-4ab0-8c87-93e6d3d96c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3049c759-d2ec-426b-bd12-dfe1ed702efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3435e91f-b6fa-47e3-9f22-aa3ac8f7d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c9301d-5f7a-40af-b872-92ed6690d7ca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da1cc6a-a65b-4fb0-8d4c-09c5dd275553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e708e57-b288-4a88-9396-0d1907682ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cfa035-5339-459c-9dc4-d467d5ecec3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aec92103-7aee-47d9-a328-9f8ef9e9ae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4bba06-fe8f-4980-8eac-3398ddc881c2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64859265-a957-49af-b86b-997ae0c3a728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fd3354-0b2e-4c4b-99a4-f74cf89a745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be2b6c8-9f73-4739-b0c5-5f99abaa1498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "076bf4bb-7af7-451d-a449-5f57a111c087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bcc136-353f-429e-a1cf-4e85e25d6717",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50def6b-0a58-4b9d-9d84-c7aa8a976121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830480d0-8d4f-46b7-b76e-ebbcb8a4580b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a15d0d7-28aa-4eee-89d8-bfa2b562324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc4ed1d-9c54-411d-823f-af3f4d6f5e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006ec97c-4ce9-4661-a962-65a21cb4d042",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139a150e-b998-4451-be98-8f78995c5387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e78f2bb-1ec5-49b9-8ffd-a0e8f9a36e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184804bd-0add-4eba-94b9-6fa9f7d6b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7240f5-711f-47b7-90eb-b49666422c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa69039-fc43-492c-9444-02ec5f8aba66",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f52cb5-b789-4c9f-b1c1-afb71a3e692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeac1bcf-6803-4436-9914-a0f9caa906a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f5ff04-a729-47c6-a50c-2611bc8270a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e197512-48f2-4633-93df-c71a90e881b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce9e3ec-a19d-42a9-bebd-5deee1070d51",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59fd789-724a-418b-adbf-14b9f2ed3e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43fc314-273a-4f1d-8a59-2269159d1700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b2c48e-a5f8-4b71-8e57-05bd128fd4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa3f5bf-9b06-43b5-9c8b-a8ec68d1e9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7060cb-8bcb-4e05-8329-bd6df1045908",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34c11c0-faf8-4366-a74c-036c75aa21fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd835a7-e5a5-4fc7-8f8f-e73565cfd188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b024ca-ca43-4622-b100-94d3c5e7069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c2080-188c-4799-8164-c14d8ca2e5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07a583f-58a8-4fac-8ae2-71eed78ae981",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385dd9a5-6b49-4cd2-9eba-78cd2b096eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99334cb-1567-41d4-b6bf-92618a63fddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236681d6-e940-42dd-94c0-dd2036bc7446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85dd23b6-1ad0-4744-be3b-e6a3217aeb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24c4a19-d8aa-40c5-9c3b-189a1eeff24e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfb9bcf-29d0-401e-8733-261fdcf36005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d796ffcf-da8a-445a-8b90-175614d1de29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e92766-4711-44a8-b76d-90979391a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c205011b-7600-4858-8105-4d6653044e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8c4c31-3524-4dfd-ad9c-e0108950ac3c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26f004d-8486-47f3-b45e-2a24102365d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dd1c93-3aa6-4947-8028-c775e6d44fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d725b6fe-640e-42c7-b3a5-13bf0a89173a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98fae7f4-aa27-4524-907d-7b289fcb5298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd68d15-646d-4fb5-aaed-721af5cab56b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1fe395-2e7a-4d9e-859a-f3551b708e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d00925d-74b0-405d-bec3-59d2a4064b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b186ab0b-dd5e-4491-99cb-3cd2704403b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32d1bd0-b078-4b0e-b5c7-9c12fe3e75a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22cc75-ed9b-42b9-b05b-6f100b89810d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ded7c3-8e1e-4300-8adc-bb067b7e69e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1680c1d3-d3fe-445d-b33a-d58178cf7377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f404e9-02af-4f95-839b-3fb6b2de847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bea0548-1c0c-4cba-8148-57d5dbf5b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa764a3d-d8d3-4b9e-8a12-9c8eb4865cfe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f6b73b-5806-4fac-87b6-46a708ce64d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7842d513-46ed-496c-bf8d-29b192f19c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a050ac5-dfe9-4c38-8c52-6c8e76aab6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "724a89b6-cd09-4bb3-ac57-192d31b29dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3332a8b-bcb2-4d51-b9f4-8f547b2f2643",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cfe8aa-fc51-4cd4-bb36-6a56f5fdf7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e7de24-57c8-42ba-b224-df960385bf00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a6cf2-6ae7-4a6b-b387-c9d803f1ed7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ff418e-3a08-4841-8aa7-9c9ae9730147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683b01f1-52b1-4736-90b9-118a8a50008a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ca7eeb-2609-4965-b6b5-15e12469f31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17f8015-5707-4256-9fc8-2fe1a61711e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c56e01-ae08-4337-841d-a857bf61ec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b632da75-deea-491c-a7cf-caa8bb013879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38715c36-3a9f-41f8-94a3-84acc4197ed9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6de6be-9edf-462f-974d-0da4c353bba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f823a219-5918-494a-b6da-3b94b5992596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117f5520-91c1-4be1-832f-fe69070605cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6776ef2e-4036-4d76-970b-fb0c993166a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6935ab8b-9290-48af-bf75-44d27b6fb1de",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb8d75-8719-4188-9868-e1697fa98760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da05e5c-8b62-4398-8563-5a577f99c15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54db6279-eabe-4fcc-bfcf-45e6fad57635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b899ed4-f8c4-4394-b317-eb9df4ae1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebe6f3b-ceb8-4ab9-b483-a00011d0be03",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcd38b3-e9d7-463a-a098-370842e0af65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fbd148-efbd-498d-a1fb-94ec346da097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab8961c-a355-45b9-9c86-c93315c37467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f11ff8-fe31-470d-bfce-e434cf89bc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad936f2-2617-4b61-ab9f-f4523643c0e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e375971-2104-4d6e-82c2-66c2da34fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9cb8ab27-630d-443d-931a-f2ce0933d4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f2e55-13c1-4a2f-b359-45741440e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e98d64e3-edcc-4ffb-bdfd-b86d726257b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "477c02bc-6a30-43af-94d4-0a33e128f76a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4f2561e-6dbf-48fe-aa35-f34b2a3e3295",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8e7235-cfbd-4fc1-8b6b-5ff315ce8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52a5bb2b-3494-4fef-b781-843016d2f0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c026e-ddce-48d4-96d3-ec59a31d9c35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "be445c00-6dec-4d3b-946b-b91e3cfc9dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2afe64-e512-4bf5-a182-04162758e43c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0d73f2-5e03-4d53-acd0-143eebf20e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3002d9e8-c5b4-41cb-87bf-b379b160919f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d22cf56-84d2-416d-bc8d-fd6a8e31b187",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "71e0d0c6-8a58-493e-aef9-8198c2ee466f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84d66ba9-ef15-4d43-bf2c-a2088c7a66bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902cc6d7-13b5-4c00-991e-34d3aa24a2b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c40555f-8036-4603-b2ec-d1db96d5a8bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b546cb1-8173-46aa-88c4-0f07490bea8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af003e3d-7b6a-4607-ba7c-ce9a930d5b74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb19870e-c922-4b3a-b06c-51a8f688f3eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8375d27e-72cc-457b-b23f-b3d946649a5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "562fd54d-1d59-4b6f-b1d8-d5bbc27742bc"
                }
              }
            ]
          },
          {
            "id": "7255a769-ac02-4c27-8359-62d5f739dc18",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9aa0d1fa-c718-4989-b9d7-fffa2ff0fbbc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9557e48-f480-4602-ac2e-4ad746bd97a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67540798-319a-446d-af06-6ba4a9137019"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee936091-29cc-47d5-85ab-29cfedcc3a0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7111395-51d0-42e4-a131-e0e7119ef483"
                    }
                  }
                ]
              },
              {
                "id": "f9ce0d6e-0c6b-4cb8-a867-d0c28b4085a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87954a7b-a79d-42e8-9542-45d16ebf0e3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43f36ef4-7433-4133-8dc5-7439adb44c3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bccd0c6f-ad09-4fa6-a25a-7dc421e8cf2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2874a8ca-166d-489b-a035-e8ce6551bfc9"
                    }
                  }
                ]
              },
              {
                "id": "6700aa14-40aa-4462-8775-d7da757dbf54",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecd3ffa7-64dc-4c29-ab9d-69a86298a70d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8afd0fdf-f41e-480f-851c-0ed951ec09e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3782716f-708f-480c-be8d-6f4ab694824b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0a81841d-f3fa-40d1-8181-cb43d09efcf8"
                    }
                  }
                ]
              },
              {
                "id": "5adade4c-a0eb-4027-aad5-b0591d604191",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90358356-6453-4003-802c-e9f67744a9f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70615970-b2d3-4572-a9c2-530336a3bace"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaf4e68d-0fa5-4256-85eb-28ccf38c3830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63635eb4-2c59-4434-a2a8-70a4cba4c9f5"
                    }
                  }
                ]
              },
              {
                "id": "cb39be64-0da3-43d6-b8da-846bef16e210",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8607330-f463-4009-a09c-0b9a8e017322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d586b7b-f838-403e-97cd-c786cb01e296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79864cc8-f631-4b95-9c7b-26bdf31d72f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9500bb4b-2389-4048-9153-2b26d597f8de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd01c303-ac69-411e-b9e9-4d3fe033b9e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e77bcb4-4490-4bac-b625-7e47399e5a4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "938bf6db-2636-4eaf-810f-21b77d4706cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bedd43a-708e-47c5-bc48-809b5a2f0932"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e189df01-ba54-4532-974f-9fc0269540fe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d8509fec-3852-465e-8399-27cefac91bd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "129ff868-66b6-41d5-871b-1cd58a1556f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aecdd106-8fb1-443a-8a61-33b384e46b17"
            }
          }
        ]
      },
      {
        "id": "71b9185e-f1bc-4935-9cbf-5aa9f2fc0355",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dd587286-87f5-4d3e-9cc9-47845d07d986",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ca030d6-7cd1-40e2-b165-7e7cd33d81fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dcf3121-28db-4280-acc7-4a5f2f1459b8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4d94cb-1649-4f6c-bdfa-1d5a5e3868d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3ef147-20ec-468b-a281-7c74b9aa6a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeb4810-c68c-46ba-9ba9-dc1a043e46e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a842828e-5b7e-42bb-a8c3-3abf48330b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4cafe4-4268-4ab7-b36f-18ea30a7e024",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9a45b8-c884-46c6-b445-1dd0e151c14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d6524b-2781-409a-bb2d-62c55c2ec76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc245816-48c0-4eac-82fc-ecf56302c9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fbc86a-fdad-42c5-8094-bb9ade04fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8b2ef1-e863-47c0-b2eb-59439610eb8f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9d3d3e-9fb4-4a6e-b29c-59b0b550ddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c562ebb6-a3cd-4f48-8b6a-89fca20d8ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadce09c-2498-4f22-a94c-94babe4b531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4123f078-ea90-4438-9890-43e69dc286c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49367bb0-0567-4950-919a-8a46f5e77859",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248b94b6-0643-478c-87ea-2c7edbaeffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a69b279-8e83-4535-9adc-6e89933bb4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e11a6c-abfe-44b1-808b-d023e297929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ad144d-f31c-4aba-8991-0ddbdd45dc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77dc131-28c6-4d35-8dcb-c69d1504b730",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db08a03-687f-4be6-9032-043fce0996f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd9823f-40ef-4298-9742-c09d8141b65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490d2041-dca5-4fc7-af62-5cc6458100b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde41631-5841-4cd6-99ce-f096f5ffa6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e896dae-970d-4d35-8594-73fd50a2b60c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5b07af-7ae1-4ccf-95d6-6cf6c6e3b92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad215dc-0939-4ae1-8e1e-12c2fc7c0b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f9c94d-0aa8-40c3-a2f6-a05c279bed38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2229ffea-1116-4510-8e29-0c29f1257804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d44fa4-2e61-4305-913a-b7a575e8fb8a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e72cea-6ea8-429f-bc8e-7f59ca0a8677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1363afd6-ac0a-4b2a-8faa-174136b93332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21c097d-5c7a-4d1e-9eb8-205319f0caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5377f62c-f57d-4a76-81e7-e91e1df7e8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8079bca0-e6d6-4f41-ae1e-25ddff6dc827",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad60e8c-e2c3-428f-9231-e2cdb045a19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4183fd-582f-4fcb-9138-fe2409c16966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003de03c-443d-4cb1-958b-4a4c52072ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeea116c-8cc8-4b9e-b145-9844179438b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691adc83-8f56-4fc3-b1e3-4ea948996e36",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37caec9-a2dc-49d8-817e-2a328eb477a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444df39d-37f9-42b9-87de-ca9800a2743b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c0a322-4c49-4476-a63c-13144c2f4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a2d65c-c29d-431d-b9dd-5364d60d08b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951c9a54-8f60-44cf-9c49-b579b65efa00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc4fcb0-821e-4767-bbc6-d4199b597bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88c7d12-56c8-469e-9db6-15ad283a2afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd86b791-600b-4df4-a723-288ef1853e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d66682c5-2c13-48f4-b0f4-22a23b3c87a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b123bedf-108c-4e75-b430-e92576020406",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e889f4-4612-4fbb-ad97-3900de8398f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122d1312-c8ae-44c6-9429-ce1b2483635e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fd4bbb-2f46-4f94-86f6-a02a80a80646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "691274ad-f2b0-475b-b1be-4ad2b1357fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713bad19-74a8-415f-8186-3ed9af6eadd2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb94cfd-61eb-44ec-85ef-d2dabc884740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf7f594-1e23-4f03-8ab4-454221e20a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34cb9b7-b7c3-4afe-bfb4-a4acc709932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31cfe623-fb3d-4ab1-b5b1-40b78c349729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c2babc-6428-4dd2-b4a3-fe16abde2ff5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d0a6f3-64ae-40d2-89da-6b7faaa8ae5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf5661e-ef5f-4c16-8217-96f9130977c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e63c73-e9fc-4d43-a532-5d9081247651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b37a849-4748-4a41-9af7-2593164ddb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe8f6d6-457b-45cf-9ae8-be8c608785e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9082a09-b418-4c3c-8362-48ea376d35be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0a8765-a33b-4490-a62b-565e3488f908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7b5de7-f266-4919-b82d-099085428793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f62728-0ee8-4436-a929-6839ce4e9f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919eab71-381c-4674-ad06-3bc729635e93",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b09b16-7000-4702-8188-96c37791930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd3da53-b4f2-4fa3-8fff-351277c09515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9a5d88-c5e0-492a-85ec-965de5d0c8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4b8e73-d82d-458c-ba9f-93974a79c7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d65f990-5f54-4d91-88b4-7556164ae7b7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bace7721-9f58-4d88-8914-78d065062e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba14b26-cf01-405a-93dc-419565eccde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9603dcdc-0ce9-4576-b455-47d6ce2f8144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c83ccfc5-0f8d-428e-811d-24b2847cc70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a875b578-2a41-4545-a0eb-36fa64b6d841",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a7d206-4033-40f5-bcdb-d4d75a0b6a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9388d637-15e8-4d61-b911-f41d8231a154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58894f44-c3df-45df-b617-edb14dc8cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c989a7eb-efff-426b-b0c4-ff26cdcdd950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db13c52-701c-4939-9dea-f2ae0ef84631",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3793ccc0-b92e-46f4-89d3-7d5d1e3de90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9969679-7224-4024-9142-e721b2a52ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01082f67-7a73-4789-a348-50e5bff64f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dd4244-6e7b-452c-b624-e867f90a8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fee7797-1346-4f47-95c7-2f8f16557c91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11b58ef-3685-4894-9d85-f0609baa03ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76234b82-1a3e-4101-ab65-9724643e6875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fdffed-d439-4a17-af2f-474f2284965e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1874dd21-42ed-4fec-a6b0-eeca7bc50cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc1b8f8-0ec5-466f-a2e6-17aafc9fe5b3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd04e7a-29ed-414d-aeed-19f11826aedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113fdccc-a647-4727-ad1a-993cb735d1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de629c2d-1ec1-4c98-9bcc-c749650ba551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90648aaa-e88c-4a80-bcf7-1956076091a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f086ff0-df7b-438e-b62d-f88f81c9a704",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bb849d-06bd-4fc1-9438-4130ea060aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf753d7-1203-4aa8-9c52-6aa2f372f61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31dc6d5-fc41-4a27-a890-e7d564f9e552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "349a3560-52eb-4431-aef0-1ee73170de4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db078d63-d8c5-4971-bd1d-a83c547095af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0379ba-024c-4363-a292-5daff9409ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3320c82c-3d26-41fb-97ec-ca3a8b400709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5d6995-d329-4a88-9724-6a2c8daf63a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "918fd9ed-0f26-4741-83ed-36adcf3aefc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ec3094-de4b-4ecb-bbf5-c0cef0e101a7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ef4c5-c719-4ab6-a633-dbea0fa8dd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb587ee-d359-44d9-9c45-9b769a67116d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5caeb8-1413-4629-bfde-50034698c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c369619-b0de-4d0c-8ef5-44e54bd44a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bb3aa0-8d08-46bc-b259-3d9ceaf63b0e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe61d9d-d6df-4988-afbb-cc64c086ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29570053-b4fc-486b-b576-bddf94bd0e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec9eb75-8b51-4a63-b200-5932fa93412e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbacc5ac-6fce-47b2-b87d-2c6aa5b466b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65603c38-f1d0-4c54-ac3b-91608698188a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729e95fc-6770-433d-a06f-7f332484b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f99a310-aef2-48f5-a3e1-19e9feb30167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576817bf-20e0-4c1b-8ab7-cc0be313f9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "413aca39-4f97-407a-b65a-2f225df01e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbbcf68-cf39-47ac-aa8b-2a46cd62d9a7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c0af93-e4a5-453b-ba3f-0c722bbed05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892278fb-34ac-4ace-9e38-af4515915789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66792e85-8b81-4504-a891-4b293a040b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c3ac9f-a341-464c-ad1d-4a9e0e41df47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc622ecd-385b-45ae-94be-6fc105ef4cb9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdae57cd-97d0-4f81-99d2-558079df2f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbb7528-6ae2-4b66-be02-af4731997df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8843f39-c9e5-46bd-8149-fbcaac1e015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c238f84-8deb-4ba3-9c58-d941cd313506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9e6652-eef6-40fe-b4a4-b6d11808c66d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1d878a-c5d5-4ea2-803a-46e767fd7277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6405c6fb-7dfc-4f45-802a-dcd1281f8501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0f2c90-b294-4348-86c3-dbc057f9e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01df9eab-8db0-4b38-879d-baa1f1a0021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b66c638-e2e5-4b3f-af97-3d8512ad76ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf0aad6-07bb-4055-b678-18d0115d010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8456805-0084-4055-8c73-b72b628a5947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb8312-f69e-4cb4-bf9f-9ecd064b0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671d386e-f523-4563-86e2-90d5daeb3afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6997f0c8-fd5e-4fce-89c9-8d2c26961799",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4b86a1-6cbd-41bb-a65a-c62554ae878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f31337-508a-4869-9f2b-ffafb7a986a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbe95f6-bd5b-46db-95d7-62bfba071cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0944e855-a8c0-41c3-8393-447233494d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1de197-f926-40cd-a1f0-7933a96a3f18",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed46ef91-026b-493a-bc97-ac21a80e1657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6060954c-37b7-4e34-888d-0e765eed3267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecaa699-6fcb-4746-b073-869167090e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdb418e-451d-4351-954c-12fa0c456da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f73758b-c682-4ab8-b35a-4d2e12b7b634",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f5123c-ca17-4a6c-8b92-66a99116ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9437f75-5081-4c43-8b03-afcab40fe5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3291598-5cee-43d8-8af6-46fbe9fcf41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4459fe-750b-49a0-b242-8ba6a5196a67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca4420cc-613f-4822-897f-cde8fac03ee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de1915b6-4140-4ce6-a5e1-120700d7297d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e809a7-7185-4abc-adb2-6acc5332ce21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a460d2a0-d84c-46c4-b02e-1410a778d4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15131466-2714-4de1-a679-3739d4ce5ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6e57627-d0f9-476c-8940-4271a0cfecab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41859fd1-719c-43da-8e03-a05bfb4cbeaa",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403309f5-823c-4887-b5ef-9ae9029ff35d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "348aa830-c2c1-4c3a-9c6f-23585f0dc647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388076c1-3794-4197-8f2e-092c2e69cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903b8fe0-e770-47f9-be3d-ed47fe7ca51c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db239d6-0929-4d8a-a763-93a16c53c9f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "621b0f03-bbc3-4b9c-9378-69747cdc9fc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e017893b-e19b-4d30-8e1c-2e700d8c5712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2072b27b-f051-4783-b2a1-3cefd48692d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "289e1446-5667-4ba0-9fab-5f19fb200164",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6061b780-6d04-46f7-851c-dfe4a127804f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73768434-125d-4dfe-a485-1739e27666c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb7611c-a715-4a6a-a697-8252dffe5bdc"
            }
          }
        ]
      },
      {
        "id": "315f0467-b779-4b6f-93c9-646b3f76ab69",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d09f8bb1-16ca-4e1a-95d5-21796e734dc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b6cabfd-1ebd-441b-bfec-97b6e12b6732",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94c0d591-a6d4-4160-b560-a5b376e45182",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42a7a1-19e5-4c65-afa4-e56394ba0a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5a8b57-86bf-4cb5-8058-b8b219394692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5972d2-c1f1-4158-9487-0bf20508cc5b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f2cbed-620e-4471-82fb-0e62466a5e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1dce5b-c507-477d-9f46-327f7c765316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd7ec3-49f7-4028-b9f1-c21dc264350d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8783298c-5f58-41dd-81e4-9fd4961b0433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2238a2bd-72a6-4db1-8128-523396b41faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b36f4-b34f-4708-90f2-e97b6c196134",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07555df-96c5-461a-b407-5195136335bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d5354e-960c-40b3-aca7-ba519fc51414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5e5b38-35b0-447e-a0bb-ef587088e69c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec0b5f-95b8-4c34-b482-f07e8ff73f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4625e-08f3-4289-9891-276844d5ff7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c25635-e3c8-46dd-aaec-84ce0cc123df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232ebdc6-9458-4ea1-9eeb-2bc3c4d01a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4014ed56-21dd-4b32-aae7-5a4d9353e27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca25743-fa96-4c10-abc9-89262b7c4748",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e64b7a-6c68-4c94-b122-70abe79a1b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c4c79f-7bfc-4045-a26e-7ef9e8f191df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26afe1c-b5d4-4b34-94f3-6976ca9f43fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731006d7-0343-4377-b06e-8ab97359bba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c9545c-4477-489a-9363-b6408e1966f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126fd0d-36b8-4d88-ae43-12bd69e37d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e355fb91-1066-42f0-9a75-211c265394ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc45b50-75c7-4f28-aa1a-6e7462cd01a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f45a1d9-e71b-46c9-bffe-8d81f7537022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dc102b-585f-4b91-af0c-08a5d08a8022",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9fa864-0022-4d44-b3eb-4a5f9f2eec33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e032d68-1eb4-4898-87b6-00c377ff8aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "094798b6-32d1-4dd5-a26e-d6b6439ac995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b5baf7-8f34-43c7-910e-d126968ab896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9cb1ea-5c36-40ef-98e2-1e1257a531c6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b014f0-1306-4b43-a58a-8f544e8bd0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff759344-a737-4f79-a533-3973d29a845a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a9b757-85cc-4b41-94ab-65e478bbdb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e78b3a1-1c8b-4c17-b16a-2867b161e4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8017fb8e-a3e2-47fb-aa51-1959fbe22fe6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a84675-633d-4daf-a113-9b92ef6fabbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea807e-df96-4d65-b583-68cfab26af4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563bfd0-6750-44a5-a838-8d22ef4362ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85ea77f-e78b-4dad-bf8b-c1e0fec1e4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410b0208-ef35-4abb-847e-39bb9878deb6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769e54b7-63e7-4b18-995f-17782793862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc84e22e-8eae-4b1c-bc39-fd3e228514b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa11072-b3df-45a1-9a17-6b4d357d8826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85028573-93bb-4770-b25f-d68b50367886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e874f-817b-40d3-b546-9af94bdba5d0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cbc342-d43f-4b3d-b399-3a5eac70810b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3dc49f-bdcd-44f2-9f5c-0031aeae4937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36bffe5-2017-4009-a790-fb00113e8b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0666c671-9a39-4df5-831e-a4813892e6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d093dc94-9593-4502-894e-fbe51d0c2080",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7fd999-582d-487e-a288-9a33a0f01405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e56c3a-d97a-4ece-96fe-5d6f8217e559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aff1760-f7b9-47de-887e-d4ab4ef644da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23818065-580b-4960-a53b-beccc550f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b86f72-40ad-4d06-ab32-9257a0494775",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37762623-f1a0-4966-92db-8c8af9b93f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8431de41-217f-4103-af79-7431d6eae97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd255a9-2084-449d-a64c-080f80c476b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8f355a-a9cf-4f30-9410-bc9045fe06f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7109750-2ff4-43c3-9c87-215083236550",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be5213e-056d-42c3-a2e4-0475802a8b05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b7d4bb-64d5-4ad8-8e5f-06d24104e244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08efc8c4-6618-4685-b3ed-1ae2deaded11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7338e732-1f0c-473d-9d78-93343750105b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d851d8-1bfa-45e7-bb78-26b10cae87a6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b1edd6-a700-4784-82cc-345ab1735a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2a6e7a-f5ae-4f56-b847-82a4ad379977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dca2589-b651-418d-9732-8c8ae2f6997d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad849143-0fc2-4fe3-8430-2d601873e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a164527-d693-4f11-bf74-b6667dcba7b9",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003f0655-f9c3-4a8e-a7e8-d49d3a1943d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d974029-4845-4feb-92ea-4ab1fcd73acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bbccfd-da20-4760-8712-22173a41137b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2e7fd4-b256-4110-9e31-6e0395f31f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055872eb-8701-4e0d-a686-5792db5c9ca4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3e8215-21c5-48a0-83d8-48d6374a501e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea81133-ca9b-4efb-a37c-eceecf3090c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db073d84-56b2-47be-a699-fb05adc2d390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0f79f9-f641-43e5-8061-7825f6d13cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdef4d23-ae7a-4ef6-9437-000be79465d5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98bbd80-bb0a-47e1-bdf7-f666efc3e426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9616f32b-a6f1-4775-a9c9-5a2e63e489d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91b6c3b-9c0d-4257-8b46-3fdeecc346ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d44349d-1ef6-4be5-bdd5-7a74af991391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6d9b21-850b-43f7-a2fe-2c659db128d0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a560b3d9-fc68-4dfe-ac7f-ae086092ef05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f848e4-192d-46d2-aa30-f21d4bfd1316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5206ce-3dc8-41cd-a026-1dcddcb344ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05aa2ba-e2d6-417a-92fb-15bbd2ba0da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53444ca4-8200-423d-a16d-698effc3f64c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b051ea5-c5e5-41e3-bfa2-e9409ed7f0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec9ee39-c390-4396-9edc-7125d524c6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835a22ba-ecad-4998-887c-c36a25d09d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b9ae1e-8c8b-44a2-9fcb-fb3189db5cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0fa65a-1c8a-4b87-9da3-5bd1ebfb3a3e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc02446-6bcf-4384-afd3-a40c18caba5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24098920-8c48-4bf3-b4c3-4d425bb9e4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13ab42-555c-4613-b43b-06923c29fab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89ae35b-4c3e-44ee-9d6d-c8ead0c85bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033246bf-7344-4895-8d1b-b99909ec9124",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b309701a-85c6-4675-baf5-eb50993a5e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d33d7b-de81-405a-8e35-ca72c6068f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631527ad-e156-4434-bd2b-009b939d6cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077f4a57-d86e-4ef7-8729-6c50700ba904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a4940f-3076-4d9a-9998-6eeeca9ca488",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42cfa9f-50d9-4575-a333-e6a100fcbc46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b957dae3-336c-4bb2-adda-b59251d0b51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f57265-4db7-4b35-a9ce-b275aa1993ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855dfd57-666f-4af1-8992-67b49c25adb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90cf644-5136-44b5-8bc3-3763953d166d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2ed658-b037-42a6-b2b9-03f28fcfff69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e2e339-de81-4857-82cd-25aa763528af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c96a02f-22b7-4d14-b05d-b0ba0279c1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ed41ef-686b-4766-bf52-4a72a79f9489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b46eaf1-9f28-4b89-b368-68dc93c8fe50",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44284abd-5aae-4846-833b-f80007a73545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65753a1-264a-483a-aad1-b37893459335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b353e4b-0daf-490f-9b12-6c2a423bdbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3d8a9c-f503-4c01-9102-f8ec47a895ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14bdcd9-79b7-48ee-9135-5d6f7044b3c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bedc73-daf3-4e4c-8eb5-28c1f9eaf340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4751ba69-f58b-4647-abf9-bb77607094b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774d60ab-5be2-4c2d-8e89-cb6778f7522a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99df0294-979b-47c9-83ba-fc604c53a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6dc3b-071a-4786-b48b-8f6ae363acdd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d567563-7ae3-4846-a5f9-fdaf57044bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105ba504-a187-4ed5-ae3d-6583b701bc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35a63b8-4987-48af-bebe-fbd17820e4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05498cca-8a25-4c12-b8f5-1a40c6dd3d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a058646-d1d1-464e-a0ae-b89f9d7b6cad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482bde3d-44f3-4742-989b-f1ac80aa0b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78a9b85-6676-4678-b612-d049710179f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f818c-7765-41a5-991d-e21889767a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe9f05e-bb74-4f28-8f4c-a1fa28e6b0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03489707-ed54-417a-a49d-4eeac38650d6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb3e345-0e8c-4bb4-9b31-868cf4b8d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc75138-62d9-4ccd-8036-952e4300ec4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aadf313-40b7-4f0f-bb18-164f5443438a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e26a137-dc0c-4975-86e1-eb670c756e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec7183a-cf13-404f-bb11-0ee3b5914c0a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcaf0cb-8eca-49c1-ab01-b23368ed983d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50862d1d-4dfd-4937-aa5d-e1c8727c033a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c81d3e-760f-46af-8bf3-72a6e262a414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038c4486-fdc7-4fdb-9aa3-fc09d8283817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f219154-f2dc-4220-908e-afdc27dec50c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83d7cd6-69dc-4ffa-aec2-24474e89c255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8050563c-bb3d-4056-8520-3ad4a8500549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a455fc-928e-45c6-b6f1-f9622b320f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65564f42-b492-4e7d-af68-550facc542b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364dbf07-b602-4f1b-af6f-3c25f7ec2815",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dc166e-8c4d-4188-a940-128a08037c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943e2736-c2fa-4080-adc1-0fd3570e8097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3839d3-aa76-4799-8522-90dd1a7aa182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceeb09a0-32b5-43b0-9e66-5a099476db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe03b8a-c17b-4199-bdce-f7aecc20fda1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5130d20-73a9-4f04-9b98-933809f73221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991b1ec3-dc8c-4ceb-8ea8-8c326b25239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e817fb5c-93dc-42d7-a527-09373265d28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aebd701-951a-4f3e-b5ae-8eae8067ba04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721aedb3-6d6e-40a2-b99b-197093d6347f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04876191-a573-4b3b-8f98-6efe00397c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9aef8c4-628f-435b-b7d3-9e65aba12a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf09041-b5f5-4a34-bfc2-31d87d9fdf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c3edc7-dbdd-4302-affd-5ed0af4b1ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4268281-1af0-4de4-a8c6-ecebc4433b65",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fcb0c8-9bc7-4c2a-b6fe-d3603328d292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9710f9-8b76-43a7-a0a7-54e6ec1e0ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831b2507-2a01-4de5-8c39-65854180001b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3692500b-222f-4bb8-9908-3d416942b0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f745f-1880-4bf8-8507-34e6cb63c218",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9de352-77d4-4759-8a65-253b2709033d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b903a7-6984-41f0-a762-fed429f4ec4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e428d4-223e-44cc-89f7-4820c04a4957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1582639-0801-4a57-9f69-26a306bbbbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ada49-0cdf-4d8c-8f78-b53bc3f642b4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fa7c05-b819-45d0-a2b9-5aec1372eafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef91e99-4e5d-4777-9e81-d6c18fcd54b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de05bbba-db82-4a7f-8790-ef8dfab7a153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fd4417-87e4-4667-8e1b-e41a1ac748e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a21746-722e-474a-8599-f22bd1fd7e5e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbc0d9b-1503-4e3a-b8c3-27e820193963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f091d0-09a2-47cf-ba3c-d63f90466111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa4de73-a909-41bb-a65b-e1f155c553ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347e6025-2f2c-46c3-8e29-9ea1dea57099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b50401e-3619-4576-82da-1d81f7983a96",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cf6d99-8138-4bd2-9c7a-6c0bcbd06ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96588b5-59bb-43b0-803c-f506230178f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e22f9af-7594-4b39-9eca-c43801fe7832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba347b82-65df-47f9-bd10-10f7399a96e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da853d-1c91-40f2-a7b9-9e11219b1425",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9d2ad5-a1a3-4031-959a-38ed6a0b8f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4963b2c0-8c51-4c76-b816-ec3c6cb18a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b93a60d-5192-4a6b-b9f5-92e74316f431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f50c15-441d-402a-87f5-cf91b4b39520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0e653-52aa-446e-b37a-2e841de35a33",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afc2b08-1f6d-48e2-b82f-2a70ba69edb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1500bb-fc8e-42e4-b622-2d946d48436c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d4aec-4088-4063-9298-9620b77583bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cf74f0-7696-4c84-a560-c55b49c1ec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec80d167-c775-46b0-a63d-cceeca107b84",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8b9083-8537-4f76-aa9b-ed7d3d962c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949c2159-a3f3-4d44-abd9-ea88751cd50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2158ae-38c3-41b5-b65d-85c69d791738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ba44e9-30bd-4c05-92b7-ffce15889ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f41d13b-53cf-4603-86f2-ec8924ddb405",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7486515-2c41-4811-a11c-24ea035f7d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d96974f-076c-467c-93ba-7b62d9ea3b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343c271-8650-4024-9022-05b1a60a4de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88df5981-b7ba-416a-937d-f382b8571815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d055d413-6a34-47af-9fc5-ffb239208a7d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d019505-b228-4939-8ef0-b6678501e5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75addac1-cc85-46b5-8304-10342a9a9145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f5b2e-c402-4765-b5af-7c628243167d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d91d33-d551-4efd-be55-170d6d812157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969baaa-cdd7-4a2a-8d5b-849d0467aab3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2a3f17-6f9d-4e69-a5aa-c241e2d01a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ea8d9e-2287-4ebb-89dd-a8d5ce3057d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f4530-019d-4edd-84db-4f6c233fa745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effb3ac0-cf8c-4ea0-af31-11b17fda464a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da7a70a-709f-468f-a9b8-5a27d97b6aa5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec549eef-eb80-49e6-bf2a-2fd001563244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d57fc1-64cb-4e2b-b9c8-5a81e1916a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067e34e7-bd36-42a8-84d7-b38239c6fb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44669a72-9122-49c5-a735-6b93cedc7af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bb6a3f-a243-4518-95f7-7fd53fb2c120",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c32502-eaae-4158-9434-b3f3f2373ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d964960-4d8b-4b6c-a0d6-c8ab08b19ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87714d2-775f-4ffa-b1f0-0912690eca6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb68f0ba-77a7-4f72-a737-9424005390fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df784ab-85da-410e-82c7-f710c82011a5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0549cf1a-5be5-4441-8505-1cbcdf94fe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c299c587-42d6-4f3f-aa00-73761d31c857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d433550b-21f6-4402-b24c-9d57a4c7f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6ed598-47da-48a8-96bd-c466f332d0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb2a45-6626-4356-96c7-37705a66344b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a9ae6-40c6-4576-a59d-d1b5bc172a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d892f922-b951-41ea-b867-339a9e201ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78342afc-b84c-4b83-9017-9475c9752880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c28a759-7fbb-4a0c-9269-5aa49c292051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9a4bc-011f-41b9-98d2-f9eb0642944a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6287c6b9-a188-4592-be91-3866f96d0dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e29db6-b820-46ca-bbf2-e86962bed31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b28dc-ec02-4be2-84f1-e5998bbd20aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5e96ca-8b65-4e17-88af-89419ed6626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274a228e-0395-4847-93ba-96c8f4fc4b87",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2fa482-ad16-4acb-a9e9-07f18bc96cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde69881-485d-40f5-9f16-6d2a075fe0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb6a71e-e502-4cb6-ba58-868e6a233a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcf27ea-4ed7-46fd-8f34-6ac351fd33d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464992da-eeec-4ac5-934e-b9d577c254b6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f83bc-a1b1-44ce-a203-7a569646d8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8041f319-b7dd-4263-a425-af5f6bbd0435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101f2aab-cf5e-4b59-95e2-9a69280da813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8e4694-dce5-4ffb-8ff7-19ea98075770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41101c2-bae9-436e-a54e-638e5c566e12",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6a3a1b-07f1-4f43-a6b9-194b10d4ebf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9d6737-ef31-4dbc-8c5c-4984eb4bd581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2c4594-226d-4d63-99b5-3faf0d03b9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b700eb7-e5e8-4870-a542-50e072dda9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8284152-548d-45f6-8ba2-1553413ac6b0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79780f80-716f-4737-83b8-688e3ec0a565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efee610-0ac7-4237-be06-c1f43f283bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9112078b-18e5-41fd-94a8-da694b643a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60ad07f-b7c6-4db2-a727-f317cd3e573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7936b642-128c-4eaa-b031-087a42468eba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f853a073-882f-40c3-934d-adf13da6de25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4ec809-8f03-4db2-b89f-7fb2bad8365f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc28028e-4e15-405b-b286-0d979c1f933f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd00ea2-fa81-4122-982f-5c58e353aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b204812c-9f94-40dd-8236-06184309daed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85c223f-a45d-4c4d-aed6-d925a9cbfd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c33827-2915-49bf-b3c1-cbb7783995e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c526917-d00c-4a26-aa47-56eea4f8df30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c073da58-d5ae-46e9-8fd9-fcfd5a540f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a70163-7013-48ad-8f21-bfc8fe6e03b0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144dfff2-15bf-4d0a-99fa-d88fcf590a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca63a5-c290-4c01-8a89-71b75980a10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c7863-3336-4d5a-972b-de11d5e25996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5ae3e-cfbe-49a7-a575-80b0730846a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884e705-9a5c-4aab-91c3-29a635a62f54",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3161fc9-c2cc-46e0-9ddc-a6ee0c92fe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43193a4e-f052-4af9-aaa9-81ba1c1b582d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "326745e6-8d94-4fca-a4ee-fc8e4c4c9587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e54cf2c-1b83-48d8-b27f-cc4d41ffacdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c99834-ba31-40bd-afb3-38015e4424f9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfba66f3-e533-457c-9488-86d6b191146c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc88851a-c20d-43ce-b25f-edb22f6e0fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2871672-4e0c-4b30-a99b-832e1299db3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae006825-ff0e-4b0f-818f-c3b37a321373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2b51b0-4904-4559-b139-d64a1bf5d934",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472cf72b-29a8-4a38-8e77-1ef88e5ce80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4113512-2c4a-40b1-8b13-5a8794854144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aab6117-e536-476f-9e22-4de191a6cea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6972466-c42e-4c1c-80e7-89436c8e7f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bac11f4-e1bc-4fd2-8f61-ef031da261c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98beb293-e528-4a83-8928-b42701b5827b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e29529b-9038-478a-8442-46390748af1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55b60cd-0a94-4005-bb24-2ba98d2bb417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01234681-9f81-4cad-b284-ca60781e5384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8befe521-5672-4a97-addc-b34cec8d61f3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bce4748-61ee-4cb7-ab2f-5581fea56697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8773526d-56c2-4b30-9c8f-b277f7df1708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08015bfd-edb9-450d-8527-d52e8e24479a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f4dac0-b30c-4756-a659-5288ebc0a974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf18a0-9cc4-4d82-9048-c2a8342042d9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b31871-813d-434f-bc88-0edeaf04ee77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e130662-7b43-4928-bfe7-f18951fe2809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb5a44-f443-4345-9ce1-c5dd66d85ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b254016-ae16-44f4-b200-2bac01ff19c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf30a12-250d-48b6-9ee6-d24819893244",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7950b3-5b91-4d22-b32d-ff1a925ba363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b262d9e3-be6b-4e5f-a6d5-f72730e3db13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fa6c6a-ccbc-4deb-96df-f5b6befc7165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f1af6d-0246-459b-ba0e-8bf6058c20bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a239c94-2933-4038-b7ae-f21026e9c125",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ee6bf0-29b2-4156-b948-850cee7e3b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b768c348-2179-4625-b257-9e3ff64a2e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20693e9-4fd4-4213-b222-571aa938414d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38eb6be-450d-44ac-a11c-1735c84f1003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f437b729-a52d-461c-9cc6-87fb2dc8b32f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0c946b-b9b7-4cda-847c-6fa5a7c57443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56aff00-e2e3-410b-8112-973bff8b612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32569658-e7d6-4cd9-bca9-80774758040b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508549be-29f5-4011-9de3-571a3e4342a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69af105c-6503-48b5-91ec-402e675645c4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a0a88c-6189-4f7e-90a5-864cc178e835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3b8026-bf58-40cf-9890-a01396fb6c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca201565-175b-471e-8361-799c8579e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e8071-9403-4066-a2d2-42fcdf08300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e581cc6-c77e-4feb-9092-6fc7cbe3af66",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49077dda-1ef4-46e7-8c2d-ddada3ddbf11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f9eed3-1ef9-4783-af10-9e57a41ed7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81848216-ad1b-494f-91ec-1d5904e794f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586e4b85-6fee-4cbe-b119-b4a5a42454bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d405d67-850c-4010-9452-a84fcbf2c3ff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306fa46f-dc91-45f9-a3f3-feaae49f2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54671543-2721-4ff6-999a-83351a84ff47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b63d4d-8986-4304-8a28-5e5dc752149e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a1f664-fddd-451c-9e6f-ab4e6fd5dbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac78ec-7a68-40be-b185-1c2729c31d92",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72615903-5c8d-4370-8118-8d6f61503e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686ea9e4-c4d3-413b-a7a6-1900634fffbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b722cb-53c5-413d-af28-a3aa8fbb09dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521d688c-3696-445f-920a-0168f68a36ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4424e4c-99cf-47e7-b67a-43cabd584a79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1ac55e-c289-4e72-99da-30788dd36525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea474a2f-d047-4bda-bfdd-f6cc280e8fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75796a90-3123-4442-848f-4dabad22a183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee00c80-213a-4c65-8a01-501614480f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7ae281-8997-4665-a225-81facea3e716",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386df9c3-b38e-4360-9ca1-ab59b10bd3a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9862678d-f71a-4b1e-929d-943436664e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309560c7-54c2-43b9-94fc-0aae02a560fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9212d993-34fa-4c63-aa65-45ea0dd86c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba6c699-50f0-4c32-a790-ab20627fc9db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45aff8f-d16e-4557-b7ff-e45e7bd4b624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f52bf5af-177e-4273-b077-dea200640607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be80e4-af23-4978-ac36-8fe1d8a9c0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86db1d37-9673-4798-8d9e-fb8409abe136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0daa2cd-a28b-49c4-a007-00e7175d4756",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6529a592-d4f9-42f9-b012-3c2408b32b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133f1947-471a-4cb4-8f58-4c6394e8a5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c1d7de-afb1-492e-bc86-97585467cfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad9622-7631-4177-8488-a1961c53e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343370d4-3657-48ca-973c-ab2e0f6d97cd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d757dce-3ad9-40d5-8439-9a9513f560e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5208ff17-f9fd-4411-9444-5bd4a6d5ce66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8814ef-ee68-423b-8276-b795e6726ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14010936-b7a8-4d7a-8e6f-8e947d119c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a692462-de45-4e6b-add1-e42db225c451",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c21f4b-b06d-4b65-bbdc-77d93e0ed379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fb8eda4-21e0-4013-aa2a-7df9bca679ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65d3116-236d-4fc7-b364-8e758a054622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39efdde4-11fe-4d83-a6d8-b9a985e29a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1f3a3d-e8c4-4ff1-8be6-fddfda556607",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f53c91-a97c-4562-a13f-16fdf081b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da223741-a6a4-446f-a3d6-c5dd81927b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c8ced-561f-41b8-9b48-a20ea6cd08e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49db0b-a791-4a4f-94fc-329e22677ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c589a4-b1d6-4cda-94b1-2d240e043c84",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5bfd00-1961-4e91-bc55-52c3d3c751c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47feec6-34ee-41bf-bab8-40811ab3ae43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9864e6-ebd9-4c03-bcca-53235e25aca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c279c31-b3eb-4b5d-91a3-2a4f461b8b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fd132d-3710-46a4-95fb-8d44f813d7e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072a3638-57c0-4602-bd80-b88ba279054d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fe6ed4-b106-4279-903d-dd47fa40da87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c4183-f9d0-4148-8803-2b0d5ab72553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f36f306-3d6e-4780-af9d-5ab78367d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a45b851-35f6-48ef-908f-7106e5260529",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f68cad-2e30-4e7c-9f07-381f0e6a0e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ee30e2-479a-46e4-816d-0802259d5e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c4121c-a0e6-4635-bbf0-80af6a46e9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa77fa8b-2724-4791-b6bd-8cb39e08e967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf1d9ea-e03f-4eee-8983-5a5a332a69e0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7ba151-440d-4c22-8429-9f2d6f2b91e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a014eb62-3b03-483d-aaf6-1cd33b28333e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb8e7d-070e-405b-8235-b951bd67258a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca8d8e9-7516-4596-bccf-079295ec618d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303ff97c-6508-4926-a6e4-9737c3b9ff34",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7d6fac-37ff-4886-82a3-0eaf0aa7b65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6291afb2-6634-4fb6-89eb-b512d0555f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042d5950-2e0d-4ff5-b66c-27f90c95bbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca54b56-8c0d-400c-bcf3-6d6940fb157b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64066ab-e06e-44f6-bd7f-93195fc351d1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8ee8df-4261-4aef-b340-0e751f47d971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df39bc85-720c-4caa-9676-6238b157887f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fe647d-c153-45f7-96b1-bb607639ccb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ff1981-1f09-48e6-a6f2-6eb94cd89cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e9ffbd-4bf1-4587-b4f4-4220c694ca08",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a198fd8c-aa19-4d5e-afe6-fa52e2426b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c898c5-e40c-469d-aef3-ce4ef83cbc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77443901-9201-4b7e-b5d9-6dfee619f5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34047356-0a94-4005-93f4-0fb7ce8a4fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8174eaca-81f3-4284-8e11-eb48e518c91f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb154f-e950-4e1d-9936-f948f86493da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880d1515-4d25-4ec7-acea-b73d7b9b93b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf59f45-68a7-4164-9760-5b9f7fe54164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cdc2cc-f0c6-40c3-b47c-5416e5610867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ce9978-5e90-4442-9e6b-5a7471151f56",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974c252f-9e16-4562-b362-f33b5405536b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417a7262-4373-4eee-b900-3a4533d5d5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed77de4-9162-4660-bfee-0d0852dc32e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5841afbf-9ec0-4533-b4e4-e337fc420ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e728928-4dcc-485c-b386-0b8258b1aee3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0b4fd-c715-4775-93fa-c5cb22b416b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1427fc6a-2f9a-4f48-8ee4-95e5f7c40f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ad407b-9cc9-4955-98ea-4a132a0c63e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc39c619-16c1-4432-a03c-90a7218ff103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7abe005-4902-4b85-aa52-46fb70f470de",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6335e77-a58b-4444-b076-0e95545ce5df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c03322-e1c4-4b6e-91ab-7b169b4a3794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e278e7b-891b-4d26-9ae9-3df150f3ff7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618d8ed3-5e0d-4462-8d47-6cbc78818730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8fa3c7-67e4-4fcd-b736-71eb219a1781",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656802d4-1881-48f4-9e0e-b935fa312eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fc071b-88a5-4475-8b3b-708afd9fd4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54474272-69a1-42d8-9fd8-3d0c312ee55d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7424ec36-562c-48a7-959d-e1e826a942fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38983934-2058-47b1-8146-ccc1bb445e29",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94458699-11f8-4281-9757-a1fe02dea2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5e439f-6684-476a-a55a-df58bc999109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773856f6-0e75-458d-99e0-e6ac679ae219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d355a551-f7b3-4c65-8d4f-16dd4aaa4a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d16cd9-233b-41b4-aab1-bb0e14068e77",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6f65a0-77f1-4784-83ca-99b8d47e0d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51263056-858c-4010-8449-9b866edd3ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f558ba8-87ad-432f-9f19-1785442d4886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089f7f90-908f-4ef9-874f-d775be642588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6b9aa3-5eaf-4903-a49c-2a811834a3a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ef0ae-6547-45a3-8d52-b7cfbb0e9f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3f76fc-dad6-4f7c-adfc-e9f9d2e3f070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51978d1-0ded-46fb-a960-3bc015d37fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77793147-f63a-4544-9802-dde9fcc6d661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4425aa8b-d22e-449a-86d3-0c382540aa2b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6251665-e175-47e5-997a-56444117ba7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39288983-b40e-478e-8b14-52169f26eb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0b76e0-53ec-463c-a981-e0a499e3f045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a2692-904a-4742-a1a6-99c8ac167c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107a9e2-ec41-4852-99c1-11f5a86a037a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac1bddb-c4ba-44b2-83b4-fdd8afa435ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978ad0ea-e2e8-4d24-89fd-c622ee2b3c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fad158-ff57-4c57-9e4a-c1ce552a8085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8079e517-6c83-481b-833a-c8da6b0d8d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7659aa70-bc9a-480b-b578-8d6d5ad5e8a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95badd78-2bcd-4571-ba88-a4bb1a693e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc315a3-5888-42a0-8eac-e54794c6809d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1acf377-d500-45c3-b85b-3bca689061fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5ea29d-b96d-4bac-afef-c4a3117a1437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155a0a54-d8c0-4ebf-8921-41ba369f8311",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e36e05-3acd-4e08-b7e8-db95d1ec0b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffcc2e16-0802-4351-b5c4-364d04eaa344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292102db-c73b-4ce6-b77f-05f5afa8d6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515f1cc5-8f76-4dcc-af14-cc153056180c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "183ff1a1-c2d6-4981-a478-30ec3e9352ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64a7c14d-129e-4ddc-8934-bf2e21e88e65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefe0d17-0904-4a1e-915e-5c3ef91571bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afc6df67-b773-46ef-ab62-c74d49687f74"
                    }
                  }
                ]
              },
              {
                "id": "4b76bfc6-24a4-4cfc-b92b-ba86f54b92c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aadd9cbc-c8c3-47d0-b049-2f1008ae12c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceddb408-3f56-4599-a992-f7a28409bea1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "186b70f1-f8fa-4def-95ec-6654aea32005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f502957-e040-400d-9321-882ac434e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79de4bf6-c72a-45f2-ae19-68445e82925e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c91d70-d9f0-45d1-b234-a1289dfc986f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b95741-e503-4add-979d-ac539a2c8149",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "405e1d3a-92f9-4ba3-bc3a-0a65b41e41fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce95ef9b-3922-4b89-bbdf-4428dd076968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bead0275-728d-4696-87dc-fb23bc97cafc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ffff467-407d-449c-a96e-520d2fa1b5d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "302b5f27-a04e-4450-81a6-f78077f12548"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa2bfd2-73d8-450d-8bb1-0ffac85ea17e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2822da3-47ae-4d09-a478-b06386afbc35"
                    }
                  }
                ]
              },
              {
                "id": "27e8514d-56e3-410c-b9f0-dc630dc0f704",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5bfc6c40-5b23-483b-9ea7-ea0ad414cf8e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ebd680-1951-4661-85f9-f957d8423ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a149fa7c-56e7-4ef5-90ff-d2661d6c1818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047254bc-3d14-4bdc-8a13-8705fb0b75e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dda5d54-1a30-467c-8b85-ad2abdb616cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "155c5599-9a1f-4361-a3a7-914460d46a8d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3092bdab-d59b-4b1c-8eec-5b68ed7dce70",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4c7df4c-1594-4a2d-b299-939b4d94b6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4185412-7bef-41ef-8df6-ebc08e65ba2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c6484a8-2d73-400e-98e7-d6c6255d42a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d49754f6-968f-44fb-9521-29dcc6d60ef8"
                    }
                  }
                ]
              },
              {
                "id": "192d7478-d45d-4fe2-b67e-1a9d25c1a5d6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c43c537-a490-47a6-96dc-b4939c2de33b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e479f55f-63d6-4c02-ba46-278c7c028be4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "587ae110-3c54-40e3-a716-4ecd8291805e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9134ab9d-8c3a-4472-9bd3-4939a5bf211c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "befc4017-9f8b-45ea-882a-72b43a6699fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f2317d88-54c8-4180-97ff-61ac4445d3f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd0161f5-d388-4d12-aae1-870568c61964",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2625abe7-b0dd-4e18-bb3b-3bb49dff5f2d"
            }
          }
        ]
      },
      {
        "id": "f64d81bc-4549-4005-bc41-166bd5f7be3f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4bbe3403-8a68-41e0-84ae-650cfc1eb72a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a729e86-5634-496d-986e-ed1575a772c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853082bb-bc1e-4122-8a16-7a97d2ddad56",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d633447c-9342-4441-ae9b-e86af411e5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb10899-04ae-4965-a4a7-f3782bbfb130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6917533a-fa65-449d-8f7c-cf79a2960fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b1ef4e-1e79-4d06-8549-2bca3389f636",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361508c-9f21-499b-8492-0451b5b900f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28200402-a6e6-4989-9f33-992e4efc1b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e07a84-8a22-4225-9899-987803c4ad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5593884d-7999-49f8-a583-db24c9074726"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d387406-19db-42a7-ad94-d5f6ef3bb881",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13705ec3-6ee4-4362-9451-467c9dbcc73f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae046308-59cf-46fb-a9a9-feedd43ced37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5e7dbe9-bc99-41a5-ab8e-4cab4998e568"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f6e3652-3494-4bad-80e7-a5d9e7a8993e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "54c0a593-6ae2-45b5-97d1-cbe28fd5f8d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc1b9016-b6c2-40bd-9e48-be976d39f566",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5e72a7b-dcdb-49ae-afe6-3e2bfd0dccb4"
            }
          }
        ]
      },
      {
        "id": "b46b538d-20b6-4dd9-a215-5ddd83d1d1dd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6589bd83-253d-4586-acfb-f46a9ded4aa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "348405e4-ef8b-46bd-97f0-4ca194a9915f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4af039c-d28d-49ba-b908-27d362110340",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa3ef5e-1e7f-4da8-86b0-7b15949f7cf9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba31f719-1299-48a7-b5b6-3d042b52ee92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4c62c4-0bd3-408b-904e-638b628d7c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf20f8d-df13-40d3-8552-d357ed99910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93109b3-dccb-41d0-8d88-7652f069d76a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001eeec1-0b6d-4986-af79-f355dce84023",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1980ac7b-1eab-4d58-8c5c-7169719ac990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5de563d-cc22-4a66-a44e-d81abceae35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35b51ddf-a34c-497e-81b2-406f6709fec4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f56ba08-8788-4757-8fe0-6e4ba81e7bc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de9bab2-5501-488a-9b76-28a1c6703954"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a5887ad-a0ed-4766-88b6-dada2a6ea63b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ebe10ce-63ba-489b-8d3e-777ddf156c52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cfccc77-e056-41c5-8744-91ad46aae121",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "125bdd8e-4ef1-4f77-b948-9c119629f61a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38f16efa-98d8-42e2-8d57-27eaa54021f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "721f125b-14ee-4635-9a75-eba5c7ca5427"
            }
          }
        ]
      },
      {
        "id": "fdd87fea-5e63-4d43-9837-280b303cd596",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aceb34ff-be6f-408c-a929-e2e97ce6ab3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9434e67-872e-4347-b8e7-f69913e384b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6dd9697-8c72-4d5d-bf8b-f576f2f2dfd9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dd3c1a-4155-4abe-a127-d3ab938b8eef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9476f551-4088-4d77-b19e-26546b5a6e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e66e8cb-a38a-4937-809c-c1bcbdbb8030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85d5986a-beb6-495c-90a2-d00eb2c3193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58931d7-dd71-4eb7-8f56-cb435569f24b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98df376-061d-4068-bab4-6fa113b2c19e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9f15c34-ab10-44ff-b495-3fbb71d64c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82bbcf4-3850-47dc-90f3-b342d7635ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5425ab96-2ba5-40e9-a1f5-ae43ae735c6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78816955-bb26-40b0-89a1-81878a0c08f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9578cc01-677a-49c5-b98d-ab964be3d598"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce689aae-ba3f-407f-8d1c-f2b0c6237cc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b13e71d9-9357-4d60-89cd-6e32258193aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d8b43aa-63ef-4684-8e09-e83757c71219",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ccf7d1e1-9eaf-44a1-b6c1-b4f98116b6d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a4311bf-472a-40fc-addb-aab90cb8ccb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb85683e-1f76-4d48-aea6-63006a44ece0"
            }
          }
        ]
      },
      {
        "id": "94d65f42-882a-4e03-af3b-c515da1a419f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a142973-ad97-41bc-9c10-975f30779d00",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad2a3fae-5a49-42ef-a2f0-bc53c111d833",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a7513873-059e-482f-adfb-4f2bb32a1b06",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27833d3f-9934-4b0a-a33e-538dd0c2d961",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d41dfcd0-f6bd-4329-90b1-687ceb447de0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 585.5954198473285,
      "responseMin": 11,
      "responseMax": 5234,
      "responseSd": 695.4507328424374,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672101464657,
      "completed": 1672101628621
    },
    "executions": [
      {
        "id": "cef0f829-359a-4e9a-a593-3b17743f181a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "110e854a-e76c-4b2e-a4ea-e2c6f7e8152a",
          "httpRequestId": "d047061c-401e-48c5-90ba-b3aef07f5243"
        },
        "item": {
          "id": "cef0f829-359a-4e9a-a593-3b17743f181a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f59f6c0d-f865-4a3c-894f-3fe0f1372975",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "d200f3ed-3379-47fc-9582-084f24492d06",
        "cursor": {
          "ref": "c8395fd8-c1c1-42d4-90e0-ed600519c772",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ed83deee-daca-47e5-b8c2-4a0a8f8e26eb"
        },
        "item": {
          "id": "d200f3ed-3379-47fc-9582-084f24492d06",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6e767829-37db-4402-8156-2d256d6ba19e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "bc79e3ed-b2b2-4d9b-ad48-326e5736bc43",
        "cursor": {
          "ref": "ee8aa07a-a339-4e7d-a0ca-a6fdb177d239",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fb3a9e29-7bc0-413e-8b57-6842cbb8e9a0"
        },
        "item": {
          "id": "bc79e3ed-b2b2-4d9b-ad48-326e5736bc43",
          "name": "did_json"
        },
        "response": {
          "id": "05383c6a-2220-4216-94f1-b7407d4c7e78",
          "status": "OK",
          "code": 200,
          "responseTime": 1185,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215ade26-acaf-4baf-87f3-1e50e85afac7",
        "cursor": {
          "ref": "4185a53b-d64d-4764-a8a4-39fd4cb6d923",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ebb956b3-22f6-4446-96e4-3c8a362b3702"
        },
        "item": {
          "id": "215ade26-acaf-4baf-87f3-1e50e85afac7",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d3233b8-d6a1-43a9-9da2-926fe38c72ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215ade26-acaf-4baf-87f3-1e50e85afac7",
        "cursor": {
          "ref": "4185a53b-d64d-4764-a8a4-39fd4cb6d923",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ebb956b3-22f6-4446-96e4-3c8a362b3702"
        },
        "item": {
          "id": "215ade26-acaf-4baf-87f3-1e50e85afac7",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d3233b8-d6a1-43a9-9da2-926fe38c72ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a110bb-ee7e-42a0-81ad-e0e9804ffb03",
        "cursor": {
          "ref": "3eef886f-bf92-49a8-9717-e9b052400431",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9e923d6f-90ec-43bc-a637-b1f7033d76ae"
        },
        "item": {
          "id": "a5a110bb-ee7e-42a0-81ad-e0e9804ffb03",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fdb310eb-4653-4095-ae44-4e9155e96341",
          "status": "Not Found",
          "code": 404,
          "responseTime": 587,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bf00e1-5cce-46dd-96ab-02302c538b85",
        "cursor": {
          "ref": "0a4863ac-ccf9-46c3-8d58-5ce6959d7f29",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e763e436-4a50-4be3-88f5-8747b5ca29d3"
        },
        "item": {
          "id": "96bf00e1-5cce-46dd-96ab-02302c538b85",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "187b3b37-832c-4233-a975-90fa2a129223",
          "status": "Not Found",
          "code": 404,
          "responseTime": 475,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aac2df8-e841-47ae-bc85-ef797177d3de",
        "cursor": {
          "ref": "a93e0b4a-4ffc-48ad-909b-d2d9a04ea27f",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f5aacbfe-cac8-43cc-960d-e957034225e0"
        },
        "item": {
          "id": "0aac2df8-e841-47ae-bc85-ef797177d3de",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6bf73e1d-e257-4531-9696-8af61c61981d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bea7b-7b5b-48da-9896-9e992c9f43fa",
        "cursor": {
          "ref": "0a3bc0ff-b74e-47b5-9d4b-621c4110ae9a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d42f21a-725b-4983-9780-9928c08b92db"
        },
        "item": {
          "id": "fe5bea7b-7b5b-48da-9896-9e992c9f43fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cca2893d-9001-4e7c-ba21-08a5539a5127",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bea7b-7b5b-48da-9896-9e992c9f43fa",
        "cursor": {
          "ref": "0a3bc0ff-b74e-47b5-9d4b-621c4110ae9a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d42f21a-725b-4983-9780-9928c08b92db"
        },
        "item": {
          "id": "fe5bea7b-7b5b-48da-9896-9e992c9f43fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cca2893d-9001-4e7c-ba21-08a5539a5127",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e58985e-c792-40c1-862c-0c11c2dea0da",
        "cursor": {
          "ref": "d6992ad8-f4fb-4b3a-9bdf-254340f10738",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6004a9f7-8de0-476c-abe7-15221228a2b2"
        },
        "item": {
          "id": "8e58985e-c792-40c1-862c-0c11c2dea0da",
          "name": "identifiers"
        },
        "response": {
          "id": "6543710d-ea28-4148-a088-c3771fcea1db",
          "status": "OK",
          "code": 200,
          "responseTime": 798,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f4e6ee-ea34-415e-a8ad-f713e61aef42",
        "cursor": {
          "ref": "088bd72c-a268-4922-81a5-51c5b375dbb2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "99ca2ceb-d283-4981-bc57-6573af8eb09a"
        },
        "item": {
          "id": "18f4e6ee-ea34-415e-a8ad-f713e61aef42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2795c1d8-1ac3-41b1-a90a-821a3c478755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f4e6ee-ea34-415e-a8ad-f713e61aef42",
        "cursor": {
          "ref": "088bd72c-a268-4922-81a5-51c5b375dbb2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "99ca2ceb-d283-4981-bc57-6573af8eb09a"
        },
        "item": {
          "id": "18f4e6ee-ea34-415e-a8ad-f713e61aef42",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2795c1d8-1ac3-41b1-a90a-821a3c478755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3323da2d-e85a-428a-952e-f3ad6a666804",
        "cursor": {
          "ref": "1d3542cd-538d-47eb-94ee-07af1d651828",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d5bce4ac-5a41-45fc-b19d-6743c5ca0816"
        },
        "item": {
          "id": "3323da2d-e85a-428a-952e-f3ad6a666804",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "71623502-4b3d-4efd-a83a-d20c3f36e334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8f27f3-894b-4d28-b2ff-ed436c48a7b7",
        "cursor": {
          "ref": "daa9612b-f2b6-46dc-a8b1-6a59af2e4117",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6b51c6c8-f6bc-4b9f-8cdb-be8f961978f0"
        },
        "item": {
          "id": "ff8f27f3-894b-4d28-b2ff-ed436c48a7b7",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "d3c5ab0d-ef61-4c10-918d-bf6bf4e77b18",
          "status": "Created",
          "code": 201,
          "responseTime": 2344,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "a6822511-52d9-434e-9dfc-ca96eba33a30",
        "cursor": {
          "ref": "bc5afb92-d9b3-48d7-8162-2d1947ffc57a",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "16cb56e6-41be-4a52-ace0-cd2f0afcf8e9"
        },
        "item": {
          "id": "a6822511-52d9-434e-9dfc-ca96eba33a30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e31627cb-a96a-4b6a-8d58-e390567d1729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b59c3-c4bd-4637-852d-3581a1619655",
        "cursor": {
          "ref": "cc41c621-6317-46ee-9905-ba7ef8bffbbf",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "767b0370-f900-4c26-a291-b07937390e74"
        },
        "item": {
          "id": "a99b59c3-c4bd-4637-852d-3581a1619655",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f252be00-2cc0-46fa-9a34-8a0d0300c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d05c1b-54ba-4d03-a73d-877cdf5d4d84",
        "cursor": {
          "ref": "f7911248-51c7-410e-bc7d-4bd22d643681",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "542df350-0b3a-4060-809d-cd22508f8dfc"
        },
        "item": {
          "id": "f2d05c1b-54ba-4d03-a73d-877cdf5d4d84",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "776d625a-611a-4351-9a9a-47e741c65f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8cda9c-b629-40ae-9b6c-00e4fd9a6fde",
        "cursor": {
          "ref": "825049da-44e6-41c7-a3b7-4208c6ea27ca",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3e67dce-7ed3-450a-ad4d-bb70c987c3e5"
        },
        "item": {
          "id": "2a8cda9c-b629-40ae-9b6c-00e4fd9a6fde",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "55a42d5b-41cd-4c75-9392-cc5a41355483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d9aa85-5dca-4b62-a4b2-e16a461791a5",
        "cursor": {
          "ref": "12f47b9d-b416-4d68-a7d3-f34326b64b94",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "27f97df5-4e7d-443d-af53-b08b8b7f1efd"
        },
        "item": {
          "id": "48d9aa85-5dca-4b62-a4b2-e16a461791a5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4deecde-01ac-40fc-af14-7f320f1c310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c5ec9e-30e8-46d5-812f-80ba1dab57d3",
        "cursor": {
          "ref": "d2ffb52d-ce85-4dd4-ae06-281c095a5230",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "45b5469f-3995-4837-b11b-ebc2dda54da2"
        },
        "item": {
          "id": "b1c5ec9e-30e8-46d5-812f-80ba1dab57d3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "863d6172-720b-4926-a30a-b6387649227f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5512e6e5-1eae-485d-bbd1-7472421e5534",
        "cursor": {
          "ref": "e95f9f71-11eb-49a7-98f9-9a6500e6bb30",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ef01d896-6c48-47b3-af1f-6bc4e08a0dd2"
        },
        "item": {
          "id": "5512e6e5-1eae-485d-bbd1-7472421e5534",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8a569226-2eb9-41a0-adc7-df8f7e85b2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962646b9-af5b-4204-b550-74f0c7ae485a",
        "cursor": {
          "ref": "dec38d79-0045-4ba6-be41-0c2989e4bc7c",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "63102bf7-fea3-4999-ab9d-0ee4c640b824"
        },
        "item": {
          "id": "962646b9-af5b-4204-b550-74f0c7ae485a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2ee1a97f-b9e7-4a7f-9639-2f7f2dc5b3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236cdb1-e441-4922-9c40-906d2ce0d2cf",
        "cursor": {
          "ref": "7933f18b-dc95-4381-8e18-3d090a0f134d",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b9f827a-32ee-4244-88b4-cc828cc7dbf8"
        },
        "item": {
          "id": "0236cdb1-e441-4922-9c40-906d2ce0d2cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4558ae69-53b1-41d0-babe-319f96835710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e74e48b-f289-4399-ba19-9a84f70f4f3a",
        "cursor": {
          "ref": "ab2d1c6e-57ca-4151-a62a-3b6e281ce785",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e2668029-8a60-49ed-809d-8e32400642f1"
        },
        "item": {
          "id": "8e74e48b-f289-4399-ba19-9a84f70f4f3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "db815237-0b5c-43b4-84a0-ba9380b99994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d77f0-3fad-4666-9189-f3909b870c68",
        "cursor": {
          "ref": "974efd60-1f13-4702-81de-a69dbf56f309",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5f521799-fcf2-4701-af8a-9f52fd0415dc"
        },
        "item": {
          "id": "f93d77f0-3fad-4666-9189-f3909b870c68",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "0850bf3a-8fcc-4d80-849b-0fa438a04bb4",
          "status": "Created",
          "code": 201,
          "responseTime": 4715,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "336f7a5e-ae3b-4d8a-bb32-3b4aae004570",
        "cursor": {
          "ref": "3d849ea3-4558-4690-9aeb-85e5332f81f4",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b6926e77-5c38-40f4-acf4-921733582954"
        },
        "item": {
          "id": "336f7a5e-ae3b-4d8a-bb32-3b4aae004570",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5a4dd8ff-8bf9-4db4-88d6-3e95f60a9f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e25b2d-c26e-49c1-92db-d4c3e2940ca1",
        "cursor": {
          "ref": "63fc2648-57eb-4217-8cf0-9822e73df4ea",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ecc603ba-a1cd-4783-81f4-14214709a26a"
        },
        "item": {
          "id": "d8e25b2d-c26e-49c1-92db-d4c3e2940ca1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ec6a9614-0d95-4e85-95f7-cff49e3f6af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ab3cc0-2bf8-4737-89b9-9887d6351817",
        "cursor": {
          "ref": "e63b8e51-ba70-4e88-8503-c5b87eff7996",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5f287e5e-ab0a-4256-8bbc-2f59356e672f"
        },
        "item": {
          "id": "94ab3cc0-2bf8-4737-89b9-9887d6351817",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e841b016-75cf-4a29-b6ed-91500d461e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdaae3b-527d-490a-81cb-d1d325a76881",
        "cursor": {
          "ref": "70b04c21-8a2b-4d54-b924-51388721091a",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a18ab2c8-ab1c-4a52-96f3-8874cf3613cc"
        },
        "item": {
          "id": "dcdaae3b-527d-490a-81cb-d1d325a76881",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "08732585-61e1-4e03-9b26-93b384fd5683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2ef07d-f230-485d-ba07-229295b05c05",
        "cursor": {
          "ref": "ef3b2380-4b15-40e5-a82f-d1b9fe8ea137",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb922aaf-e6ef-49f4-83a3-3a4bfaafc776"
        },
        "item": {
          "id": "8c2ef07d-f230-485d-ba07-229295b05c05",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dcea098a-db4c-4873-a7e0-0a870b757dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d24f80-0ceb-434c-9293-02857a1f25f2",
        "cursor": {
          "ref": "4d8f8393-9a17-4102-abfb-3f4c22bb537b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "88042c1a-2462-40d0-b097-ab58f7790a6d"
        },
        "item": {
          "id": "62d24f80-0ceb-434c-9293-02857a1f25f2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bfb96e2b-7fd0-48e6-8fa7-f660b91c512c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c565f1da-82cb-405f-aa0e-31661076c9a0",
        "cursor": {
          "ref": "3deeb533-509a-424f-a4ec-00af50c6012b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4936297a-aed2-43ea-8f4c-3dce676a1fb2"
        },
        "item": {
          "id": "c565f1da-82cb-405f-aa0e-31661076c9a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "78fb6a42-b403-4374-91f0-0ac5105e4c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698efd1d-7ed4-45f1-8adc-017ed623bf3c",
        "cursor": {
          "ref": "33c140f3-4053-43dd-a682-d865d28084cf",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "137fbbbd-fbca-4b13-a414-b141390e722b"
        },
        "item": {
          "id": "698efd1d-7ed4-45f1-8adc-017ed623bf3c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5b8c0ab7-1170-4fcf-ab56-8e9a3057b707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2cd142-fa74-49b6-84ad-59c2876eff75",
        "cursor": {
          "ref": "e5d643fb-9397-400f-9486-7b32705a8b90",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "476050ee-dce6-44c1-9b88-4c46b918aafd"
        },
        "item": {
          "id": "2c2cd142-fa74-49b6-84ad-59c2876eff75",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "01714447-c382-493f-b4c5-f2522aca6269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b449f-1cbc-46e6-ab60-eb6963ea0513",
        "cursor": {
          "ref": "bd14e807-b04c-4890-97e8-bf55eb381705",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fb28db2d-88f8-4a0f-9f5a-47ff58968196"
        },
        "item": {
          "id": "ed3b449f-1cbc-46e6-ab60-eb6963ea0513",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7a970b02-bf50-4d46-a681-41a33c6731c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd19f52-cba3-40c4-a28f-a4bdfa7cc25c",
        "cursor": {
          "ref": "dd274d13-73af-4948-87c3-fe9f2cae431a",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "699ea391-367a-4a97-8e00-ff1afcb96450"
        },
        "item": {
          "id": "5fd19f52-cba3-40c4-a28f-a4bdfa7cc25c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f4a02018-551a-4014-9700-ee5803521630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1120017f-6cef-4b59-811d-4ad3e0668fb8",
        "cursor": {
          "ref": "f12bfb54-ec57-4f98-a92d-75077f11316c",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5829ea2d-e119-45c0-a904-b2849c9011bf"
        },
        "item": {
          "id": "1120017f-6cef-4b59-811d-4ad3e0668fb8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9efd1987-136b-4b3f-bd3e-c09d39cee819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e9fa5-ecff-41aa-8be0-1fb413959c15",
        "cursor": {
          "ref": "d9089e3d-d6fb-42c7-a8d1-0f06cc5d9677",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5bfa3678-ae76-4c00-a47a-cf8670875938"
        },
        "item": {
          "id": "fa1e9fa5-ecff-41aa-8be0-1fb413959c15",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f040bc89-9467-4647-a27e-97a259ab7235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ab089-3092-4d0c-a78d-3116718ca1c8",
        "cursor": {
          "ref": "05199169-aa88-40c6-b1ea-a1a6bd83261b",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "184833cb-183d-42e0-b4b4-5d983671837e"
        },
        "item": {
          "id": "7e2ab089-3092-4d0c-a78d-3116718ca1c8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3fa895da-1785-4de1-9508-79e5bfd60dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98446404-e241-430a-be6c-1aef52fbf09c",
        "cursor": {
          "ref": "1b9a16c2-91a1-41a6-894a-aeb3b5cf9437",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "110b38d5-64f1-42e5-94a6-a03cbc9d74ba"
        },
        "item": {
          "id": "98446404-e241-430a-be6c-1aef52fbf09c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fd733d11-2ccd-4b44-9b76-37a01cc34910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6d5e78-bd1b-4e4f-86ed-bc57b50d7b33",
        "cursor": {
          "ref": "058fbed4-ccaf-4f20-be7d-cdb97c724a46",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4cb16d15-c65f-443a-b501-58b32098f8a5"
        },
        "item": {
          "id": "ac6d5e78-bd1b-4e4f-86ed-bc57b50d7b33",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "73be2979-b91f-4474-a9e4-6167ff8c5245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebb41fd-cc99-419b-80dd-a309b9d14ecd",
        "cursor": {
          "ref": "15fa5556-d8d0-480e-a79e-708295365554",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe7b3f6d-35e0-4e01-8a77-53a8880bd799"
        },
        "item": {
          "id": "bebb41fd-cc99-419b-80dd-a309b9d14ecd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "74e4dbb9-61d1-4c4b-b107-e5c43fe087e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25dfa61-b784-4b7c-b7ee-0140f65033ee",
        "cursor": {
          "ref": "0ab30421-2238-4fba-98a2-6527a94ecb4c",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b01fcfbd-6e0d-4d71-8a20-b17fd1bb541b"
        },
        "item": {
          "id": "b25dfa61-b784-4b7c-b7ee-0140f65033ee",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f6189ecc-ac9e-4f02-92d0-6729046b34de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6307c208-eba1-4a2b-9894-c23b3bc4499d",
        "cursor": {
          "ref": "d525e89e-6015-439c-b0ce-8a9c0de23075",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f6f0832a-73e0-467c-9471-6d4145304bd0"
        },
        "item": {
          "id": "6307c208-eba1-4a2b-9894-c23b3bc4499d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "263d30ab-68ac-401e-bb04-2399b23c9d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e4d50-9a65-4688-ac0f-e27b068d944a",
        "cursor": {
          "ref": "ef0be90c-acb1-4fee-a294-ece91dd1b99a",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63eafd36-4262-494b-aa05-f8369dd145f2"
        },
        "item": {
          "id": "8b4e4d50-9a65-4688-ac0f-e27b068d944a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5cd7b27f-67d6-495e-86bc-83194adc3638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa1c4f6-e3cc-40b4-a323-f883885d0bed",
        "cursor": {
          "ref": "6268a2ca-3861-4afa-96a2-7376f9c566d1",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eac69cb7-19f2-4a2f-b7aa-e1839a9af452"
        },
        "item": {
          "id": "4fa1c4f6-e3cc-40b4-a323-f883885d0bed",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2afbbf8-9a4b-4070-8773-e6ec241f3d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600903f5-8ffa-4484-aef6-d961acd03a31",
        "cursor": {
          "ref": "d87f96c5-ada0-4277-8cb8-d6950aa986f9",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c444cd01-7c35-4cb8-8adf-8b3c83c6635f"
        },
        "item": {
          "id": "600903f5-8ffa-4484-aef6-d961acd03a31",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a6174afe-2d6e-41fa-84a4-1212792344d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d269a496-ca3d-4ec7-b5aa-3a8b8158b69d",
        "cursor": {
          "ref": "8107a534-df87-448f-83c4-fa8558c7b745",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "35d298f9-9f64-45a5-a065-064bf5dac300"
        },
        "item": {
          "id": "d269a496-ca3d-4ec7-b5aa-3a8b8158b69d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d676dd8f-b645-4a10-b399-25839c576235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0652a4-f175-41a4-a34e-99f17ed8cbe0",
        "cursor": {
          "ref": "df8718cb-1f37-4475-98b8-5154f3f1ce97",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "edfcfd51-820f-4e88-980f-66a451028abf"
        },
        "item": {
          "id": "7b0652a4-f175-41a4-a34e-99f17ed8cbe0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "77131b4e-6937-4bc6-927e-45300cbe9b9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 567,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd633b0-589e-4638-b29f-c30be36d8391",
        "cursor": {
          "ref": "6dc51a8d-a454-4c30-af19-4e3557a8d890",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e11ef4a2-6edc-4399-8055-46d4b014378a"
        },
        "item": {
          "id": "abd633b0-589e-4638-b29f-c30be36d8391",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "29770ed4-01cd-4a72-8f5f-fd0b7bf89e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ea82ea-b6aa-4ec2-9f2d-d91c96488805",
        "cursor": {
          "ref": "dcedb6dd-6bdd-4a5a-a553-970b2f1de0f6",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "00614ddc-4cd9-45ce-b2f5-6395ee5c7234"
        },
        "item": {
          "id": "19ea82ea-b6aa-4ec2-9f2d-d91c96488805",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4bb60a50-b9c6-437f-8a38-a346eb75d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448d69de-1875-4296-91aa-a2aee5706778",
        "cursor": {
          "ref": "034022f2-8186-4f54-8c7a-dcc027217c4a",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "148425c9-ea2b-43dd-beba-b85da3d931ac"
        },
        "item": {
          "id": "448d69de-1875-4296-91aa-a2aee5706778",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8d3b1680-89a7-4748-b31d-c68b96b298c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f84e894-4fd3-49cf-bc59-6beeb876a4c5",
        "cursor": {
          "ref": "5d1ebfbb-b85a-4b8e-ae9c-07ae93e09f74",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c55ab23-2659-4064-ab64-43ea2b2f2a93"
        },
        "item": {
          "id": "1f84e894-4fd3-49cf-bc59-6beeb876a4c5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ca580058-4e33-49bc-9052-f8f67b8599d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02312f91-0298-4ea7-a840-ab062e038a1a",
        "cursor": {
          "ref": "2ad6e27c-33d5-4469-99c0-a6efe473fb40",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a47f53f7-81a8-459c-adf5-582d4e346e95"
        },
        "item": {
          "id": "02312f91-0298-4ea7-a840-ab062e038a1a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "15b88595-ed41-4ec6-a4a9-2971e9a368dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653905fd-e144-405d-a7ae-94ae78552602",
        "cursor": {
          "ref": "ffbe4d7c-61bd-4003-b7f1-ca15d499034b",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f1b94381-174b-43e6-b353-4789539f524b"
        },
        "item": {
          "id": "653905fd-e144-405d-a7ae-94ae78552602",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0c8bac13-50b3-4ec7-9d01-329eba57547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5bf447-4405-488d-bad8-491adc3c3b6b",
        "cursor": {
          "ref": "4b13a03d-8e88-4b79-8959-0d9b7b4e54c6",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "68da0977-f169-40f9-8f6c-48f819a980a1"
        },
        "item": {
          "id": "8d5bf447-4405-488d-bad8-491adc3c3b6b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0afdfbb9-23b3-4521-8927-1c14588490e6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 536,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59213d2e-9702-48eb-84d8-f139e5099ae2",
        "cursor": {
          "ref": "9cb1ec2e-3252-4bc4-940f-e87a2e6f6d77",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "506308ec-ef9f-4394-a9a3-72fe98587ebb"
        },
        "item": {
          "id": "59213d2e-9702-48eb-84d8-f139e5099ae2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ae9deeae-6b8a-438d-bcac-62abceb962e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a54cd3-28c6-494e-b4ec-d39241492c1d",
        "cursor": {
          "ref": "f92c1896-29d8-479f-beca-c46aa3612824",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "30d54e0e-c89c-4c1e-a6b5-f189c5e64cf1"
        },
        "item": {
          "id": "d5a54cd3-28c6-494e-b4ec-d39241492c1d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e58e1b81-e90b-4590-adcf-349ef8dbebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a1dd9e-d0e8-4b6e-a42f-a11b56892393",
        "cursor": {
          "ref": "dbdbd1cb-f968-45c4-ae9b-d4279d9c3b42",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2d143e54-816d-4488-9176-f19d50bf39ae"
        },
        "item": {
          "id": "a5a1dd9e-d0e8-4b6e-a42f-a11b56892393",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0651ed07-40df-4130-aeaf-c7183e9fcc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74b0d43-6754-4963-8305-a56e14e0ebcd",
        "cursor": {
          "ref": "119854ae-e6fb-488e-b740-172afd3ee8e2",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38596e14-48ba-4315-9cbb-21b5271a7c53"
        },
        "item": {
          "id": "b74b0d43-6754-4963-8305-a56e14e0ebcd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9dc465fc-3060-4cbb-ac42-dbd07f2d67c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877496be-06d4-4f84-a225-10702baccb4b",
        "cursor": {
          "ref": "67b1a662-1d37-4a75-9883-ec2d7b461166",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9b5df1b6-09b5-4f8b-8dd2-f1279d3cfb1f"
        },
        "item": {
          "id": "877496be-06d4-4f84-a225-10702baccb4b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5b2d3cb7-745a-47aa-aa71-818c68ca76ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec274b8-7148-4bd0-ae6c-9e59b4756abb",
        "cursor": {
          "ref": "13051ed1-5d9b-4052-bc4d-e1a70dd0bde5",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a67ce81a-6f3d-4c9d-b6b7-20c19a6a8c6d"
        },
        "item": {
          "id": "9ec274b8-7148-4bd0-ae6c-9e59b4756abb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "521297ac-17f4-4c3f-a3d4-46788a889e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ffe10d-e9de-4e47-8b2d-f18fa9953f83",
        "cursor": {
          "ref": "dd05442a-d113-4119-88db-3f93ecf0e1f3",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ff96803-e9d5-46e6-b615-f04cf25d1dfd"
        },
        "item": {
          "id": "f1ffe10d-e9de-4e47-8b2d-f18fa9953f83",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "95f90355-4815-45b6-8838-a8ca567ab7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d563ced4-8cac-4b7d-8dd2-9ead245fd84b",
        "cursor": {
          "ref": "a41d4f39-4c23-4b17-8e5c-477f842d4448",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad15fdc4-2351-404b-9358-c7baa473cdab"
        },
        "item": {
          "id": "d563ced4-8cac-4b7d-8dd2-9ead245fd84b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "569759fb-6483-4018-b659-d39425e74eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5990d897-be3c-4ee8-b393-5f2f6408f4cd",
        "cursor": {
          "ref": "fc57f4b2-c82b-4784-90d2-23d25373b87f",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e4175e0f-36fb-43a7-a336-31c810d4a9b9"
        },
        "item": {
          "id": "5990d897-be3c-4ee8-b393-5f2f6408f4cd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "17c2e148-fab7-4e0e-97c1-8fef668d694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b471c4c-851b-4af6-be29-84947fc93a63",
        "cursor": {
          "ref": "bcbc95d5-cb98-45b8-bffc-882462481dc1",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7479205c-92b4-4fee-b470-c74dffc5f57a"
        },
        "item": {
          "id": "0b471c4c-851b-4af6-be29-84947fc93a63",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "06064dec-08a7-4a98-9ac8-f81f8ca57ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3863138c-4343-4a2e-b02a-359881070f33",
        "cursor": {
          "ref": "b86cdda9-76e6-4bb2-82a1-4e38b2e46409",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2015c664-e23d-431c-bf3d-5ebd5dec6286"
        },
        "item": {
          "id": "3863138c-4343-4a2e-b02a-359881070f33",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "db07fcf7-13e3-43e4-8590-a386ebe91b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41262df3-1967-4d46-bed5-fbc4a72f725f",
        "cursor": {
          "ref": "608ec9ed-739a-44b8-9c5d-e17fae588556",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5b9a5f1-e1c5-4a15-a684-dcc6d0237671"
        },
        "item": {
          "id": "41262df3-1967-4d46-bed5-fbc4a72f725f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "663c9f0e-7722-4bc5-9c2a-dee61d739e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad17bb9-88f7-4dd3-b0df-7fcf42c7cfb7",
        "cursor": {
          "ref": "d803f8e5-e3dd-41c5-921a-250e68e4cde2",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5677024-67fa-442f-93d7-03bbb24187f8"
        },
        "item": {
          "id": "7ad17bb9-88f7-4dd3-b0df-7fcf42c7cfb7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9b968bee-417b-40de-becb-29e297804e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7cee8-73c2-4dc5-8fe4-2cc9edac02a1",
        "cursor": {
          "ref": "bb34d2d8-1440-4174-b053-2c4b45b6b0dc",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "06469d26-89f9-4f8a-becc-6ebc77af4714"
        },
        "item": {
          "id": "8ea7cee8-73c2-4dc5-8fe4-2cc9edac02a1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eff6a5a8-7e7e-45e4-bbcf-4e8dd594a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04715415-8f7b-4d21-b18c-4b992f09691f",
        "cursor": {
          "ref": "92d545f1-1ed9-484f-9ce9-ae3a93ea2ae6",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "de8d1163-ef96-466a-bdfd-ccfba38328de"
        },
        "item": {
          "id": "04715415-8f7b-4d21-b18c-4b992f09691f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9d48da8a-3cca-4da2-9dee-7f55ad5aa4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317c8d9d-163a-4f34-86be-25c2d1db0db9",
        "cursor": {
          "ref": "45d2a64e-02ea-4a84-b93d-e7a129ecaa64",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "453dcfcc-0f77-4eaa-a82e-0c18a1e0418f"
        },
        "item": {
          "id": "317c8d9d-163a-4f34-86be-25c2d1db0db9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d2027d13-6366-4057-b0f0-c917a1cc7775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae488ca4-a94e-4ea4-9707-ae3bdc7275ca",
        "cursor": {
          "ref": "76a914a3-4f9f-4ed8-8a43-8e4f9c8e4622",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0252f78d-32b5-4f2d-9139-7b4343453676"
        },
        "item": {
          "id": "ae488ca4-a94e-4ea4-9707-ae3bdc7275ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2df4dccf-7c9f-4d08-9357-baadd61c7986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e126b98c-a2ac-45d1-a477-fd98e28f0ee0",
        "cursor": {
          "ref": "1f932041-3c3c-4a6c-aa69-0d845a0fa54a",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6149ac2b-4afd-4d77-a210-77890f495b66"
        },
        "item": {
          "id": "e126b98c-a2ac-45d1-a477-fd98e28f0ee0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "32af2be6-3895-43d8-b65c-889ae20166de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aadf6de-8da3-472b-a648-7697740f6433",
        "cursor": {
          "ref": "60ab14fa-7e31-43f8-9f14-3e9d3fcd5b99",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9b1cc99a-f1a0-476d-9cb3-30513ff7835e"
        },
        "item": {
          "id": "6aadf6de-8da3-472b-a648-7697740f6433",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "799b4ea0-5a64-4c83-863c-447b087120da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b78d2d8-f320-4ea7-a41e-761fd03414db",
        "cursor": {
          "ref": "b9be185e-6988-471a-ab31-9205df21b7fe",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "797298b5-91f0-4e5d-a387-e530adda24ea"
        },
        "item": {
          "id": "5b78d2d8-f320-4ea7-a41e-761fd03414db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2133216-8a99-473c-8d83-f0007721f07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd14486d-ab89-4914-903c-5d869e545fd0",
        "cursor": {
          "ref": "d708cace-ef3c-40cd-a7fa-1e9671460c98",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b721315c-b8e5-4d00-b833-91c04e0a0c13"
        },
        "item": {
          "id": "fd14486d-ab89-4914-903c-5d869e545fd0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "158f1bb2-ad0b-4e45-8c64-d47b2404218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4ffe73-a203-43a4-8af6-2db4861d4187",
        "cursor": {
          "ref": "4524ddad-856d-467f-a185-1df1284bf6ad",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cd18ffcb-1288-402f-bb79-3c4b3625d9c7"
        },
        "item": {
          "id": "3c4ffe73-a203-43a4-8af6-2db4861d4187",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dce1a7fc-9fbc-4b21-a7bd-59a2480ec996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4306f20-a4c2-4519-9cfd-0964be1dd54c",
        "cursor": {
          "ref": "7965f4b6-d224-4818-ae3d-a5138d0bd27b",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bd4faa00-816e-4ba7-a76e-b47e5ff4f253"
        },
        "item": {
          "id": "b4306f20-a4c2-4519-9cfd-0964be1dd54c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51c32c2f-f097-4e70-a06a-08f2ff21d983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46ce0e-247c-4e70-a414-48941bf6fffc",
        "cursor": {
          "ref": "e109eb98-39f3-4802-9e34-ddde99ed3dc1",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b9c82c16-eeff-41aa-82cb-00e69f78d4c1"
        },
        "item": {
          "id": "dc46ce0e-247c-4e70-a414-48941bf6fffc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b9b400e3-a174-4636-824a-0be75550ff82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eeefdf-202b-44d1-8e24-b1a88d959070",
        "cursor": {
          "ref": "970bd1fa-5813-4a9d-8f81-9e61ee3383f1",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d0bf1732-baf3-4c80-9810-d526ef14c4dd"
        },
        "item": {
          "id": "b2eeefdf-202b-44d1-8e24-b1a88d959070",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d3960838-ce79-4a3a-a055-4deb07ea2a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2e8eb5-e6c5-46ba-93f7-ac2d5c372894",
        "cursor": {
          "ref": "f9341b58-834e-4860-bff4-87027bc2f2f4",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "951277cc-6685-45b2-9e83-7690cbb13c61"
        },
        "item": {
          "id": "be2e8eb5-e6c5-46ba-93f7-ac2d5c372894",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0384c92a-0e3c-421a-83bd-83aa0d2fdd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c840ee-5fef-42b5-b50b-e77a28b20fb6",
        "cursor": {
          "ref": "818e7fe1-df6d-4b67-a889-edc3a9c50c20",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dc55bcfc-205e-4967-8ddf-067f024ae93d"
        },
        "item": {
          "id": "f0c840ee-5fef-42b5-b50b-e77a28b20fb6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "af979f01-b17f-4340-9819-833fe67df3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2776261-339c-41c6-9b65-74ae125f9a23",
        "cursor": {
          "ref": "4e3c7f96-a0a8-4afe-925a-6fe9826a04c5",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4a47e4cc-a39c-4377-af28-53fe1449c675"
        },
        "item": {
          "id": "e2776261-339c-41c6-9b65-74ae125f9a23",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8d26691a-2139-482e-9915-90c94d03e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca32ef71-d56c-47ef-82f5-d29722a9e379",
        "cursor": {
          "ref": "4cb5e1f1-b781-4efd-8f5f-2e3728771cab",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b75c311e-ae12-42ef-9e15-831de7194d8c"
        },
        "item": {
          "id": "ca32ef71-d56c-47ef-82f5-d29722a9e379",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "94f3c5d1-989a-4090-8819-9693f02d9227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22444013-32fe-4f33-abe3-cdf66d1a319f",
        "cursor": {
          "ref": "003fc6f5-a3e7-496f-a216-74f843e87a4b",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ac93bb27-5516-4ea0-b158-027adc663d36"
        },
        "item": {
          "id": "22444013-32fe-4f33-abe3-cdf66d1a319f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d392c493-0078-4928-9916-5f2aa6cd1dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c9301d-5f7a-40af-b872-92ed6690d7ca",
        "cursor": {
          "ref": "de8f3491-0de5-4b38-b024-5ad846a1aab4",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "31b63734-945d-4427-a30a-e01c55a72426"
        },
        "item": {
          "id": "85c9301d-5f7a-40af-b872-92ed6690d7ca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "abfaafab-a7e6-416d-a5a7-246bd165997b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4bba06-fe8f-4980-8eac-3398ddc881c2",
        "cursor": {
          "ref": "5e079249-ca69-4284-a4d3-acea075a8bbc",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5396b466-ff55-4663-a23e-12514e4337f2"
        },
        "item": {
          "id": "ea4bba06-fe8f-4980-8eac-3398ddc881c2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "34a58d5c-bf7a-425a-8df7-68a9a04abb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bcc136-353f-429e-a1cf-4e85e25d6717",
        "cursor": {
          "ref": "bdd4e04e-c34e-4525-9a45-54a5ebe3167a",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4b1c83aa-265a-43b9-b90b-387cbdbc68e3"
        },
        "item": {
          "id": "e0bcc136-353f-429e-a1cf-4e85e25d6717",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d4ef176d-6f74-4f64-a484-df12f58b7b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006ec97c-4ce9-4661-a962-65a21cb4d042",
        "cursor": {
          "ref": "31ae2c88-70e5-4b3d-bd17-5615e9c5e4ed",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fe1e1654-f763-4e5d-b4d9-3a44f5a0459f"
        },
        "item": {
          "id": "006ec97c-4ce9-4661-a962-65a21cb4d042",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8b39c05d-7606-4a5f-8209-4a773922774a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa69039-fc43-492c-9444-02ec5f8aba66",
        "cursor": {
          "ref": "b67c4819-123f-4806-978d-1e81702afcd8",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "96b62cdd-cc9c-4be2-ab39-0cc4a1f183e4"
        },
        "item": {
          "id": "0aa69039-fc43-492c-9444-02ec5f8aba66",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6780b471-66f8-4a2f-9621-483e2bde2ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce9e3ec-a19d-42a9-bebd-5deee1070d51",
        "cursor": {
          "ref": "88d17ace-7696-4c8d-9988-c74b9f4fa5fd",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "abcc76f7-2ed5-4e42-a96d-2a393d9a1ace"
        },
        "item": {
          "id": "fce9e3ec-a19d-42a9-bebd-5deee1070d51",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dba1baf6-3a1f-4d48-b130-eb6f5c00ce1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7060cb-8bcb-4e05-8329-bd6df1045908",
        "cursor": {
          "ref": "39528bcc-589b-473f-a95b-8a44cea50577",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9f633cd8-7676-408a-9bba-ad1e17cedc96"
        },
        "item": {
          "id": "ee7060cb-8bcb-4e05-8329-bd6df1045908",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d14340e3-2aef-49dc-923c-a064c6d5567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07a583f-58a8-4fac-8ae2-71eed78ae981",
        "cursor": {
          "ref": "a43cad38-d98f-4991-83e4-b94c6afbf4de",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4ec365c-509f-480a-9393-08b48f371b54"
        },
        "item": {
          "id": "e07a583f-58a8-4fac-8ae2-71eed78ae981",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a2ed51be-95d8-489c-91d2-88f2508d877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24c4a19-d8aa-40c5-9c3b-189a1eeff24e",
        "cursor": {
          "ref": "c4422503-9f35-429c-a930-a371d5076a97",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7fa3748b-b90b-4435-9e95-b747ac311d2f"
        },
        "item": {
          "id": "e24c4a19-d8aa-40c5-9c3b-189a1eeff24e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4542d00c-f1c8-4cf2-b9b8-2725fbb63ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8c4c31-3524-4dfd-ad9c-e0108950ac3c",
        "cursor": {
          "ref": "bb5f911f-5b9f-43f5-b4e9-7bc08c4b5ca8",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43f06d43-53d2-4dfc-835d-6293c04fc5b4"
        },
        "item": {
          "id": "4c8c4c31-3524-4dfd-ad9c-e0108950ac3c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f4fdb03b-2374-45b1-b5b4-0eba519cd6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd68d15-646d-4fb5-aaed-721af5cab56b",
        "cursor": {
          "ref": "d7a03f4c-758c-4710-a5f8-0867540f5b08",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "79378337-1a03-4a4b-bdc4-f0aa4e66b436"
        },
        "item": {
          "id": "dcd68d15-646d-4fb5-aaed-721af5cab56b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "964ed1f1-8d43-4375-8b6c-012b886bee3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22cc75-ed9b-42b9-b05b-6f100b89810d",
        "cursor": {
          "ref": "197bae8c-3044-4db3-83c5-5a4f5baa5eb1",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "483dd08b-163b-40d2-b1f3-098cc0a22723"
        },
        "item": {
          "id": "5a22cc75-ed9b-42b9-b05b-6f100b89810d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e8a2741a-6b66-460c-859a-3a7d3444afa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa764a3d-d8d3-4b9e-8a12-9c8eb4865cfe",
        "cursor": {
          "ref": "571d82d9-ec0d-4cee-8d41-1f8f692b74b0",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7487b872-bdc3-48f8-96e8-8e2602f67418"
        },
        "item": {
          "id": "aa764a3d-d8d3-4b9e-8a12-9c8eb4865cfe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "869c6388-ca12-4b0c-817d-673a6944cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3332a8b-bcb2-4d51-b9f4-8f547b2f2643",
        "cursor": {
          "ref": "73982d60-9f63-45cb-aebe-43e8c88addae",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4b531894-af32-46a3-974b-232206e81e49"
        },
        "item": {
          "id": "d3332a8b-bcb2-4d51-b9f4-8f547b2f2643",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "255d6bd8-e837-46fe-a36d-6f71342b9cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683b01f1-52b1-4736-90b9-118a8a50008a",
        "cursor": {
          "ref": "c1a39888-48da-469a-af74-f4f914c746eb",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f44b3346-1335-4ddc-b643-963cd9d59d8e"
        },
        "item": {
          "id": "683b01f1-52b1-4736-90b9-118a8a50008a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e025f489-0e45-4cfd-8c9e-055643b3adfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38715c36-3a9f-41f8-94a3-84acc4197ed9",
        "cursor": {
          "ref": "8ae0dba8-b07a-45f9-9bf0-920e9b5e7215",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4bf2b2c5-c70e-4e4a-ad86-5d570756d11b"
        },
        "item": {
          "id": "38715c36-3a9f-41f8-94a3-84acc4197ed9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75ef5787-088f-41bc-8270-e479d748b265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6935ab8b-9290-48af-bf75-44d27b6fb1de",
        "cursor": {
          "ref": "7f224308-a7ae-4b62-ab9b-0db9e647c1a5",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "380f490b-6410-4b37-a6cf-5fbe41b9b4d5"
        },
        "item": {
          "id": "6935ab8b-9290-48af-bf75-44d27b6fb1de",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dd901900-c05a-47f5-9c14-c14015c6e8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebe6f3b-ceb8-4ab9-b483-a00011d0be03",
        "cursor": {
          "ref": "c40917ac-3879-44cc-bb6e-554a35274aa2",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c59db85a-a378-4159-a718-c4cd542f6742"
        },
        "item": {
          "id": "4ebe6f3b-ceb8-4ab9-b483-a00011d0be03",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "206467ee-c554-49d4-8936-502df1618c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad936f2-2617-4b61-ab9f-f4523643c0e0",
        "cursor": {
          "ref": "20feaea5-ecc1-4fb6-b268-1088c04e58e3",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d0a4dbed-1f27-47d0-813c-48e3dbbcfe4a"
        },
        "item": {
          "id": "1ad936f2-2617-4b61-ab9f-f4523643c0e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "078c53f4-ab25-4cb7-bf9f-0b6f1fb02e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f2561e-6dbf-48fe-aa35-f34b2a3e3295",
        "cursor": {
          "ref": "b6eefba4-9eab-42e6-b35a-af863092e27c",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "05d93449-5ed9-41a5-bc02-8ff57bf5f22b"
        },
        "item": {
          "id": "a4f2561e-6dbf-48fe-aa35-f34b2a3e3295",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2fee4c53-5ca2-4642-bd81-ddcbe42eed1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2afe64-e512-4bf5-a182-04162758e43c",
        "cursor": {
          "ref": "ed6a9e4f-5438-48ea-bad6-3fc396e5a616",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aff6f285-c34d-41b8-84f6-85f7fb171e49"
        },
        "item": {
          "id": "dd2afe64-e512-4bf5-a182-04162758e43c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0b04b138-bc78-4451-9e7c-8c7fa5c5df11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa0d1fa-c718-4989-b9d7-fffa2ff0fbbc",
        "cursor": {
          "ref": "eec8affa-ffce-402b-bf8b-3e61d9e36bdc",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "61504006-6a7f-4803-b9d9-a41e418988d5"
        },
        "item": {
          "id": "9aa0d1fa-c718-4989-b9d7-fffa2ff0fbbc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "698181ed-0fd7-46e5-9f2d-26ea4a13feb2",
          "status": "Created",
          "code": 201,
          "responseTime": 3990,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "f9ce0d6e-0c6b-4cb8-a867-d0c28b4085a3",
        "cursor": {
          "ref": "2657d764-61ee-4976-b58d-6368c263835a",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c2115eb4-ac39-4c6a-bca8-9ea791a2a2c6"
        },
        "item": {
          "id": "f9ce0d6e-0c6b-4cb8-a867-d0c28b4085a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "68db1a50-2b58-4297-9aec-c4f58611edfd",
          "status": "Created",
          "code": 201,
          "responseTime": 3834,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "6700aa14-40aa-4462-8775-d7da757dbf54",
        "cursor": {
          "ref": "40d0cd90-b3c8-4806-9514-bd87586251d5",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "082a715f-a120-4695-8658-9ce9669608ba"
        },
        "item": {
          "id": "6700aa14-40aa-4462-8775-d7da757dbf54",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "03ff8c7c-7398-4701-add5-afeab1656c38",
          "status": "Created",
          "code": 201,
          "responseTime": 3848,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "5adade4c-a0eb-4027-aad5-b0591d604191",
        "cursor": {
          "ref": "4b3a923c-4fb9-4b3c-b88d-ece879be7faa",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5eaf6af4-03ab-420c-9d16-afe38b2b47b8"
        },
        "item": {
          "id": "5adade4c-a0eb-4027-aad5-b0591d604191",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6cf709c7-9f33-4b35-91b6-ccb5f94ada8d",
          "status": "Created",
          "code": 201,
          "responseTime": 5024,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "cb39be64-0da3-43d6-b8da-846bef16e210",
        "cursor": {
          "ref": "4b0081a8-425f-43c6-ac9d-69884395ac19",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bca23070-237d-4cc0-96cf-9a4961e27291"
        },
        "item": {
          "id": "cb39be64-0da3-43d6-b8da-846bef16e210",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1a876afb-1512-4ad3-b05c-5e7cee4f89fc",
          "status": "Created",
          "code": 201,
          "responseTime": 5234,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "6dcf3121-28db-4280-acc7-4a5f2f1459b8",
        "cursor": {
          "ref": "ab8a42d7-7dcf-4bd3-ba55-0d74eb442eed",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6a698d5c-2bf5-4d07-b74a-3aa59349b1c1"
        },
        "item": {
          "id": "6dcf3121-28db-4280-acc7-4a5f2f1459b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1cd2be61-afa9-4446-ac73-d1129bae1f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcf3121-28db-4280-acc7-4a5f2f1459b8",
        "cursor": {
          "ref": "ab8a42d7-7dcf-4bd3-ba55-0d74eb442eed",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6a698d5c-2bf5-4d07-b74a-3aa59349b1c1"
        },
        "item": {
          "id": "6dcf3121-28db-4280-acc7-4a5f2f1459b8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1cd2be61-afa9-4446-ac73-d1129bae1f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4cafe4-4268-4ab7-b36f-18ea30a7e024",
        "cursor": {
          "ref": "d1657ed9-31ef-4961-be32-9b3b5045858a",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "03c4c940-7ccd-4601-aa3b-452543a9a625"
        },
        "item": {
          "id": "ea4cafe4-4268-4ab7-b36f-18ea30a7e024",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0e8ff34f-c714-4fe9-a8c3-90df8881d448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8b2ef1-e863-47c0-b2eb-59439610eb8f",
        "cursor": {
          "ref": "6175aa0b-6bbd-47d8-8254-0d89529b19a0",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b3165f8e-e8bf-40ab-bab2-4bc0ed11c0de"
        },
        "item": {
          "id": "2b8b2ef1-e863-47c0-b2eb-59439610eb8f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "58f9c524-22e1-4509-95d7-fc3b9c3d753f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49367bb0-0567-4950-919a-8a46f5e77859",
        "cursor": {
          "ref": "12a6705b-56e1-4326-9bf6-ddb60949bc84",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f926acf8-a4ab-432c-b514-597b9cf95d2a"
        },
        "item": {
          "id": "49367bb0-0567-4950-919a-8a46f5e77859",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6f4af8bb-3266-4e36-89a7-c28468f5e1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77dc131-28c6-4d35-8dcb-c69d1504b730",
        "cursor": {
          "ref": "b1f7f522-3263-4c2e-b578-9cce3d029437",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4107f86a-7b3d-4eed-8bb6-c91739488f0d"
        },
        "item": {
          "id": "a77dc131-28c6-4d35-8dcb-c69d1504b730",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e90041b0-72c8-4e90-a58e-2f93b0a1bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e896dae-970d-4d35-8594-73fd50a2b60c",
        "cursor": {
          "ref": "a74a9f32-dd11-4c77-aeac-3309280b36f4",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4e49a3c5-4db2-4e5c-959e-9f0c01ce5976"
        },
        "item": {
          "id": "3e896dae-970d-4d35-8594-73fd50a2b60c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "84c495b6-4ff6-46d9-9986-e2386a2d2fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d44fa4-2e61-4305-913a-b7a575e8fb8a",
        "cursor": {
          "ref": "6413d354-3429-4187-8d89-cc27f49a091a",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2d9e884b-4616-45d3-925f-7b0a56c9d868"
        },
        "item": {
          "id": "43d44fa4-2e61-4305-913a-b7a575e8fb8a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca99c72e-c54e-419c-91b3-e1a721652ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8079bca0-e6d6-4f41-ae1e-25ddff6dc827",
        "cursor": {
          "ref": "fc6c2da3-bab3-4d8b-9d65-f57aa3d34f2b",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d351fca3-b894-48d0-963c-49526caf1f31"
        },
        "item": {
          "id": "8079bca0-e6d6-4f41-ae1e-25ddff6dc827",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "54384a91-9343-4059-9d99-7069c9ad7bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691adc83-8f56-4fc3-b1e3-4ea948996e36",
        "cursor": {
          "ref": "a6b120d2-4156-41d5-825a-0c141c0af688",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "213a101e-8976-48b2-9341-4bc8982db50a"
        },
        "item": {
          "id": "691adc83-8f56-4fc3-b1e3-4ea948996e36",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "26947de8-892f-4821-b3c1-3244e7795c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951c9a54-8f60-44cf-9c49-b579b65efa00",
        "cursor": {
          "ref": "4fbeb1da-3f7e-490b-9944-16a1abf2050e",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8f443ed8-7179-477f-a71c-a0feed9d5ef1"
        },
        "item": {
          "id": "951c9a54-8f60-44cf-9c49-b579b65efa00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b3ab2e6-9b25-4d83-98c6-db252fb6732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123bedf-108c-4e75-b430-e92576020406",
        "cursor": {
          "ref": "893f635e-8d6e-4533-b6cc-b939d0f3bb47",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c76c7305-66af-4a45-848f-4e7c43113869"
        },
        "item": {
          "id": "b123bedf-108c-4e75-b430-e92576020406",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c9051296-3e58-46bb-8843-9d6ab9c4074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713bad19-74a8-415f-8186-3ed9af6eadd2",
        "cursor": {
          "ref": "0b7e9f7a-f08c-437a-948e-383888d90fd5",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fcc9421e-5b83-4f22-b88a-8146d21870d8"
        },
        "item": {
          "id": "713bad19-74a8-415f-8186-3ed9af6eadd2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9a5834ee-78a0-43da-9d4c-98627abc96e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c2babc-6428-4dd2-b4a3-fe16abde2ff5",
        "cursor": {
          "ref": "f3f41e01-f0e5-4ba3-ac5d-9ec57cce02c8",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ded09c4a-ba4f-4e61-a2f5-7d26a345d7a8"
        },
        "item": {
          "id": "87c2babc-6428-4dd2-b4a3-fe16abde2ff5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6108f3f-a6b5-4afc-bc36-65072ef2672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8f6d6-457b-45cf-9ae8-be8c608785e7",
        "cursor": {
          "ref": "70b6db94-29e8-404a-87fd-d24d98240086",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3077f9f0-cfd4-465d-bedc-4f62b3eff778"
        },
        "item": {
          "id": "cfe8f6d6-457b-45cf-9ae8-be8c608785e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "97ff2807-d0c6-43d2-88a7-21bc93079231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919eab71-381c-4674-ad06-3bc729635e93",
        "cursor": {
          "ref": "8c762396-96d4-4066-9a1c-dc60124c4d82",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff6a5e64-2654-4692-8340-be11b04edff9"
        },
        "item": {
          "id": "919eab71-381c-4674-ad06-3bc729635e93",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77bada82-eb11-4275-a4e8-a145dd658edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d65f990-5f54-4d91-88b4-7556164ae7b7",
        "cursor": {
          "ref": "8d12ec4a-9e63-40cc-a253-abdb5c192a21",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4a71da56-d6d9-4f0a-951c-797642404452"
        },
        "item": {
          "id": "5d65f990-5f54-4d91-88b4-7556164ae7b7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "44b3a57b-7fbf-44e3-b393-159b164311b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a875b578-2a41-4545-a0eb-36fa64b6d841",
        "cursor": {
          "ref": "52741fa9-e020-4906-843c-5e95bfa432c5",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f30dce5c-d52a-44e1-8dc1-c5d2dbf66353"
        },
        "item": {
          "id": "a875b578-2a41-4545-a0eb-36fa64b6d841",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e487c8bf-38fb-4f51-8d5f-76cc93bf4b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db13c52-701c-4939-9dea-f2ae0ef84631",
        "cursor": {
          "ref": "bbfc64c2-7bfb-4519-b573-82c47baaaf53",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "122ef1ce-baf7-4379-90e5-13af72dec9e3"
        },
        "item": {
          "id": "5db13c52-701c-4939-9dea-f2ae0ef84631",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e6174ed7-01ee-4550-86d8-457952a6ad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fee7797-1346-4f47-95c7-2f8f16557c91",
        "cursor": {
          "ref": "182d3fb0-3e46-49ca-94e3-4081b2044cf6",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c69a811d-3374-462f-b7bc-74dfcb875e49"
        },
        "item": {
          "id": "2fee7797-1346-4f47-95c7-2f8f16557c91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "150a101b-bbd7-44b9-a3c9-981a5a81b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc1b8f8-0ec5-466f-a2e6-17aafc9fe5b3",
        "cursor": {
          "ref": "ce70b25a-99c1-440b-bcb2-fc5aa0c0b16e",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d8f08161-5d3e-4828-8cc4-52f5605e364b"
        },
        "item": {
          "id": "6bc1b8f8-0ec5-466f-a2e6-17aafc9fe5b3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dab18acf-8341-4933-bc93-db728bb57160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f086ff0-df7b-438e-b62d-f88f81c9a704",
        "cursor": {
          "ref": "c5a5729c-c150-41c9-a573-b1d99faefa27",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "48066451-3283-41d6-87af-1c9f7ca316f5"
        },
        "item": {
          "id": "6f086ff0-df7b-438e-b62d-f88f81c9a704",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "642fb861-df78-4870-bb77-3bcfef7419f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db078d63-d8c5-4971-bd1d-a83c547095af",
        "cursor": {
          "ref": "fb48dc96-3abc-4aac-b5d2-5263e200282e",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0e98a91f-646c-4dce-8c8e-54c9a9fc2159"
        },
        "item": {
          "id": "db078d63-d8c5-4971-bd1d-a83c547095af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e472566-865a-402a-83b0-11260b5b906e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ec3094-de4b-4ecb-bbf5-c0cef0e101a7",
        "cursor": {
          "ref": "04a5e627-d2ca-4c17-826b-89184e3679b5",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d77a96b-4e66-4b0f-9a17-6e13f63cc76d"
        },
        "item": {
          "id": "65ec3094-de4b-4ecb-bbf5-c0cef0e101a7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c75027c8-7037-4016-96a1-a24e08f1dbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bb3aa0-8d08-46bc-b259-3d9ceaf63b0e",
        "cursor": {
          "ref": "4ec8f117-762b-46f3-9509-264345bcff4b",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a5842336-6598-4a02-ad17-ed2a93df7c63"
        },
        "item": {
          "id": "d6bb3aa0-8d08-46bc-b259-3d9ceaf63b0e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fbd845d8-6a8c-43fe-bd0a-8b133e5d45b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65603c38-f1d0-4c54-ac3b-91608698188a",
        "cursor": {
          "ref": "20c8a61e-be6a-460c-9169-88470ba11630",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d9b32bc5-2f24-41a6-84a2-d18d7af275a9"
        },
        "item": {
          "id": "65603c38-f1d0-4c54-ac3b-91608698188a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91481414-8de5-477d-adff-40c840dffa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbbcf68-cf39-47ac-aa8b-2a46cd62d9a7",
        "cursor": {
          "ref": "3dfc2060-137f-4bbb-8b83-866b6c55ddae",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "077a0d0f-2cda-4b7c-a2da-12165fa1a1d7"
        },
        "item": {
          "id": "2bbbcf68-cf39-47ac-aa8b-2a46cd62d9a7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0690de20-2f8f-430c-b58b-5f4e4b8e348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc622ecd-385b-45ae-94be-6fc105ef4cb9",
        "cursor": {
          "ref": "26c5219c-ca6f-442e-8ab1-6f867e8f67e4",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "599ca4ed-1554-40bd-950f-9b17398661da"
        },
        "item": {
          "id": "bc622ecd-385b-45ae-94be-6fc105ef4cb9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "412a899a-8b7c-40e8-9401-1af9d0a226be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9e6652-eef6-40fe-b4a4-b6d11808c66d",
        "cursor": {
          "ref": "5d819f94-2bd4-47c8-85e4-349293fb195f",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "370158e1-e102-45b8-9809-1ee3e7d59bc6"
        },
        "item": {
          "id": "fa9e6652-eef6-40fe-b4a4-b6d11808c66d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91f03598-03c8-4ab4-b65c-a725eb699689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b66c638-e2e5-4b3f-af97-3d8512ad76ad",
        "cursor": {
          "ref": "80746c66-6a07-4caa-bddb-6a9c5b226e7c",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b3a5df36-989f-48d4-a81f-8406d8e09042"
        },
        "item": {
          "id": "9b66c638-e2e5-4b3f-af97-3d8512ad76ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "050c6bf5-ecbf-4a76-8125-b4b130bbdc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6997f0c8-fd5e-4fce-89c9-8d2c26961799",
        "cursor": {
          "ref": "409e8c4d-f66c-4606-8c09-9689b193ce8a",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8a5651f7-df0e-43e6-8a2d-9a69fca3d55f"
        },
        "item": {
          "id": "6997f0c8-fd5e-4fce-89c9-8d2c26961799",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9fe2968-87ed-4a3b-bd9c-b3dbe673120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1de197-f926-40cd-a1f0-7933a96a3f18",
        "cursor": {
          "ref": "ffa43ed8-b134-4634-aaad-2d1110f030a8",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b6626f9-05ce-4b41-afd4-34ca9613d32b"
        },
        "item": {
          "id": "3e1de197-f926-40cd-a1f0-7933a96a3f18",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7239438-042a-4ba4-8d7c-6b47f5e5ecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f73758b-c682-4ab8-b35a-4d2e12b7b634",
        "cursor": {
          "ref": "9c15247b-1013-4428-b20d-8c2a921488a1",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2ecc8c1b-63cf-49f6-91a7-4d8fd360a358"
        },
        "item": {
          "id": "1f73758b-c682-4ab8-b35a-4d2e12b7b634",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "74e88b59-38d2-4cc7-b571-0fa44c694b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1915b6-4140-4ce6-a5e1-120700d7297d",
        "cursor": {
          "ref": "496d4451-916d-4f34-bf62-7e56d7bbf5e5",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4b084e7f-fa4a-45b1-9067-40c14533d631"
        },
        "item": {
          "id": "de1915b6-4140-4ce6-a5e1-120700d7297d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e426c1f3-0fcd-4abf-a4fe-f78b59d596d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41859fd1-719c-43da-8e03-a05bfb4cbeaa",
        "cursor": {
          "ref": "f98f2c6b-c074-46f9-a6fa-ac5f6b7c32cf",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e057e87b-2aca-46ab-afc4-86107b553979"
        },
        "item": {
          "id": "41859fd1-719c-43da-8e03-a05bfb4cbeaa",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b868eb26-b327-44f0-a73b-0ea061ca6fdd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 798,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0d591-a6d4-4160-b560-a5b376e45182",
        "cursor": {
          "ref": "b715f442-5eed-4b1c-b272-c6fff285add5",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0ee746a-4630-42b4-aee5-fb02eb7aab03"
        },
        "item": {
          "id": "94c0d591-a6d4-4160-b560-a5b376e45182",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17f36125-f5d3-4793-b726-b1d5f16cbfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0d591-a6d4-4160-b560-a5b376e45182",
        "cursor": {
          "ref": "b715f442-5eed-4b1c-b272-c6fff285add5",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0ee746a-4630-42b4-aee5-fb02eb7aab03"
        },
        "item": {
          "id": "94c0d591-a6d4-4160-b560-a5b376e45182",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17f36125-f5d3-4793-b726-b1d5f16cbfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5972d2-c1f1-4158-9487-0bf20508cc5b",
        "cursor": {
          "ref": "55b3db4c-34c5-42cf-9ec8-6a2956400180",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "81f0a1ba-49a1-4c0f-bf3b-ea45e590d2f1"
        },
        "item": {
          "id": "4c5972d2-c1f1-4158-9487-0bf20508cc5b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "140afec5-b83d-4806-a07b-71a3de0843d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd7ec3-49f7-4028-b9f1-c21dc264350d",
        "cursor": {
          "ref": "216a060d-0508-488c-ad56-f0925a78404c",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3aeb6e31-41ed-4b9d-802b-f55718263506"
        },
        "item": {
          "id": "f8fd7ec3-49f7-4028-b9f1-c21dc264350d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c9fe4465-cf64-4b6b-845e-3f2833b8957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b36f4-b34f-4708-90f2-e97b6c196134",
        "cursor": {
          "ref": "548d9637-11ed-47c4-921e-addaf0411421",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b651bc43-8fc1-468e-879d-22996dae1404"
        },
        "item": {
          "id": "720b36f4-b34f-4708-90f2-e97b6c196134",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f38410b5-cfbd-43ef-b9b5-74c7c7ff3ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5e5b38-35b0-447e-a0bb-ef587088e69c",
        "cursor": {
          "ref": "3b9523b2-8662-4918-8897-920766feb63e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8f5249fa-6e01-4a88-9a31-c57b970aad71"
        },
        "item": {
          "id": "0e5e5b38-35b0-447e-a0bb-ef587088e69c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0fd1f162-c37c-4648-9dfa-1ea30889091d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c25635-e3c8-46dd-aaec-84ce0cc123df",
        "cursor": {
          "ref": "354be178-eb82-4b02-9f05-82c9a7e910b0",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a386f072-28d0-4867-b0df-4811bed22091"
        },
        "item": {
          "id": "d6c25635-e3c8-46dd-aaec-84ce0cc123df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6fc1bf7a-99f3-4898-b1f0-0b66ac55772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca25743-fa96-4c10-abc9-89262b7c4748",
        "cursor": {
          "ref": "2c7fa699-3563-4bec-be48-3a8496b8de76",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e32031db-95dd-4e07-9073-60aa79e979b8"
        },
        "item": {
          "id": "6ca25743-fa96-4c10-abc9-89262b7c4748",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "20a10ece-6d05-4ad8-bb79-833bd6d0f65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c9545c-4477-489a-9363-b6408e1966f1",
        "cursor": {
          "ref": "200118a1-5319-4f4c-81b3-728ac274ce26",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4c01f3cc-8108-413c-91cf-90977c3b5da6"
        },
        "item": {
          "id": "e8c9545c-4477-489a-9363-b6408e1966f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c1d4e1d0-704b-4036-aa5a-43064c714366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dc102b-585f-4b91-af0c-08a5d08a8022",
        "cursor": {
          "ref": "1541f19c-01eb-4c37-96f3-c681e99c6b12",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1bfee590-6eb2-4424-a710-1388b265d3d4"
        },
        "item": {
          "id": "d6dc102b-585f-4b91-af0c-08a5d08a8022",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "feed243f-9221-4b21-a67d-2ee945ff1d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9cb1ea-5c36-40ef-98e2-1e1257a531c6",
        "cursor": {
          "ref": "ec4b0209-3657-4035-aa69-e028e4bc7861",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "06fb8a70-a382-487f-b819-8e0d8abfb3d4"
        },
        "item": {
          "id": "ab9cb1ea-5c36-40ef-98e2-1e1257a531c6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6c541670-d0cf-4efa-8657-11277edce3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8017fb8e-a3e2-47fb-aa51-1959fbe22fe6",
        "cursor": {
          "ref": "2bc71237-1129-48d9-a6a9-771f3f48a6ea",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c8e5d137-0681-4efb-a017-62ea7a9201e7"
        },
        "item": {
          "id": "8017fb8e-a3e2-47fb-aa51-1959fbe22fe6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f918bfe2-7882-4777-b821-2a57868848e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410b0208-ef35-4abb-847e-39bb9878deb6",
        "cursor": {
          "ref": "876927f1-8f92-456c-afcd-4fd42663ecf4",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "02d7a112-5479-408f-9a73-cd1d749ea8e3"
        },
        "item": {
          "id": "410b0208-ef35-4abb-847e-39bb9878deb6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18e49b3a-103d-4eba-bde2-7d5389120b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e874f-817b-40d3-b546-9af94bdba5d0",
        "cursor": {
          "ref": "85566eb5-2ae6-4658-b971-09f2e945af8e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "17cd3ece-0656-4555-a037-17d1b434860c"
        },
        "item": {
          "id": "9e8e874f-817b-40d3-b546-9af94bdba5d0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c8a92c55-0729-483c-848e-bde9a7f27843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d093dc94-9593-4502-894e-fbe51d0c2080",
        "cursor": {
          "ref": "7d9270cc-5e07-4aff-a0e9-ff5d70915480",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f86e4407-e2e5-45f5-94f7-2c643274ef70"
        },
        "item": {
          "id": "d093dc94-9593-4502-894e-fbe51d0c2080",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0e5eca03-9080-4bb6-9ed2-bda36213a9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b86f72-40ad-4d06-ab32-9257a0494775",
        "cursor": {
          "ref": "7d6f3ed3-e029-4b80-8ac4-79857b0575a1",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "45f11c39-58c0-4d08-9edb-e0bd51bdbc58"
        },
        "item": {
          "id": "38b86f72-40ad-4d06-ab32-9257a0494775",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "172b807e-028c-4c7c-a888-d884ee3c7137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7109750-2ff4-43c3-9c87-215083236550",
        "cursor": {
          "ref": "ce01b641-9f86-40c0-83e3-10be1a01c613",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c527eaf6-5e17-43fd-b114-3528bb7919b5"
        },
        "item": {
          "id": "b7109750-2ff4-43c3-9c87-215083236550",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79b33f32-c7fa-4193-a39e-59f7b94db465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d851d8-1bfa-45e7-bb78-26b10cae87a6",
        "cursor": {
          "ref": "4e2ab3fe-baad-43d3-963e-20901b49b8d3",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "452b19fd-ce0d-4b90-aed5-471f32fe5d20"
        },
        "item": {
          "id": "28d851d8-1bfa-45e7-bb78-26b10cae87a6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fd556def-c7f6-4b3e-8826-bd37f5984108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a164527-d693-4f11-bf74-b6667dcba7b9",
        "cursor": {
          "ref": "88c8509a-3519-42a9-a016-0afac7f78dfe",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4f19e7ce-3a95-4678-ae8d-2462a948ab51"
        },
        "item": {
          "id": "0a164527-d693-4f11-bf74-b6667dcba7b9",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "8b78ae3f-7c46-4ce7-b0eb-17802c1f599f",
          "status": "OK",
          "code": 200,
          "responseTime": 3353,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "055872eb-8701-4e0d-a686-5792db5c9ca4",
        "cursor": {
          "ref": "52ee1f1f-28e6-4d69-8a28-1ff2449cf9f7",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87e5ea1d-32ae-42d2-a7b2-b971c507c642"
        },
        "item": {
          "id": "055872eb-8701-4e0d-a686-5792db5c9ca4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c1c0d63f-1259-43e4-ac48-2b3608c42372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdef4d23-ae7a-4ef6-9437-000be79465d5",
        "cursor": {
          "ref": "d3bd5fc7-b5de-418f-9479-548e2d37a718",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce4d2caa-f7ea-45b9-94a6-8d2e44c897b1"
        },
        "item": {
          "id": "bdef4d23-ae7a-4ef6-9437-000be79465d5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b34ee729-673f-457f-b9fc-071c541b5ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6d9b21-850b-43f7-a2fe-2c659db128d0",
        "cursor": {
          "ref": "3f3c28a9-5206-4833-a9a5-4360aba38786",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "12ddc179-8115-410b-8261-8982fcd9dea2"
        },
        "item": {
          "id": "6d6d9b21-850b-43f7-a2fe-2c659db128d0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b69295ec-4961-48b3-917e-d32929afd0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53444ca4-8200-423d-a16d-698effc3f64c",
        "cursor": {
          "ref": "6ec183e2-87dd-458e-a8a9-556f4bd45eb7",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0d1523b0-e180-470c-bae2-f1fa69d75718"
        },
        "item": {
          "id": "53444ca4-8200-423d-a16d-698effc3f64c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "98ca04cf-6034-4007-a79b-ce96ffd09fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0fa65a-1c8a-4b87-9da3-5bd1ebfb3a3e",
        "cursor": {
          "ref": "96df6a3b-c646-4997-be4e-854274d8489b",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c84ab29a-9504-4c99-8c8d-639f89f089ba"
        },
        "item": {
          "id": "2f0fa65a-1c8a-4b87-9da3-5bd1ebfb3a3e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e059b81-92a3-4136-8812-3b9476b5c628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033246bf-7344-4895-8d1b-b99909ec9124",
        "cursor": {
          "ref": "a4e98aaf-eee3-428a-a4c8-2632ed612149",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d53f659e-cf50-469e-8bbf-42eceae11b18"
        },
        "item": {
          "id": "033246bf-7344-4895-8d1b-b99909ec9124",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cbdea011-89b7-4c31-bd01-7443a9ed5da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a4940f-3076-4d9a-9998-6eeeca9ca488",
        "cursor": {
          "ref": "34f40dd5-5050-4e04-95b8-5120595ec64b",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4240e5b0-7c9d-490c-945c-d71ee397d766"
        },
        "item": {
          "id": "93a4940f-3076-4d9a-9998-6eeeca9ca488",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c21e5cec-fbfe-4b9e-acbd-75da612d3c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90cf644-5136-44b5-8bc3-3763953d166d",
        "cursor": {
          "ref": "1cf51af9-1bc6-4436-8f59-5bf0a38b4cb4",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "817010b8-92b2-4504-9f72-de8a025fef0c"
        },
        "item": {
          "id": "a90cf644-5136-44b5-8bc3-3763953d166d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2af52b28-1976-4b95-a70c-2eadf95cd490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b46eaf1-9f28-4b89-b368-68dc93c8fe50",
        "cursor": {
          "ref": "ed71c49b-f3b7-4742-b0bd-2ae161e0001d",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e24d7123-f150-4a23-92de-347c7392d9ae"
        },
        "item": {
          "id": "0b46eaf1-9f28-4b89-b368-68dc93c8fe50",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8cdd2b01-a69c-46e6-bd4b-f1ef52505ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14bdcd9-79b7-48ee-9135-5d6f7044b3c3",
        "cursor": {
          "ref": "84b45264-7f9b-42fe-b13b-6fe3c998fead",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1ca67a0e-247a-435a-8fd9-9e3d6fedb30a"
        },
        "item": {
          "id": "c14bdcd9-79b7-48ee-9135-5d6f7044b3c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac63a990-df39-409a-bc47-d4950ef05430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6dc3b-071a-4786-b48b-8f6ae363acdd",
        "cursor": {
          "ref": "efa0b7b4-11cd-4e8f-9d6a-b0076d1e0678",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8097c77a-c372-4786-9668-675392364fe3"
        },
        "item": {
          "id": "81f6dc3b-071a-4786-b48b-8f6ae363acdd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aeba6bd9-ed7d-4373-a58a-8a61f8d32661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a058646-d1d1-464e-a0ae-b89f9d7b6cad",
        "cursor": {
          "ref": "cd32945d-f22a-4844-ac2b-4155c45610bb",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5e055cc7-77b7-446a-94a3-ff4cb5f8c9db"
        },
        "item": {
          "id": "2a058646-d1d1-464e-a0ae-b89f9d7b6cad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d97a3ec9-fa71-4d45-a9bc-6226e370d77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03489707-ed54-417a-a49d-4eeac38650d6",
        "cursor": {
          "ref": "a74f2d13-bed3-49cf-8c8c-c3e72b50d578",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "761f0ba7-a9b6-484c-8ff7-7daa43dcf442"
        },
        "item": {
          "id": "03489707-ed54-417a-a49d-4eeac38650d6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "81e4a359-253d-4d2b-a033-785ec996c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec7183a-cf13-404f-bb11-0ee3b5914c0a",
        "cursor": {
          "ref": "84191546-d64f-4901-9506-32343eb5a2dd",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b1e46c12-4664-4e87-acc7-d6d1b9ebc232"
        },
        "item": {
          "id": "bec7183a-cf13-404f-bb11-0ee3b5914c0a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9b4941cc-0b9b-4563-b314-468f53b1c18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f219154-f2dc-4220-908e-afdc27dec50c",
        "cursor": {
          "ref": "e18f82ef-9dcf-4781-9179-abfbc3360d0d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "98b927d0-cee7-45b6-9cdc-3b96033fb37d"
        },
        "item": {
          "id": "9f219154-f2dc-4220-908e-afdc27dec50c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "faaea984-0dab-4a73-bb62-e701722275a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364dbf07-b602-4f1b-af6f-3c25f7ec2815",
        "cursor": {
          "ref": "fddf6a8e-4ea1-44cd-aa94-1b570657b715",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3fef8d4d-4c62-4ce4-9d00-2ea51ff3e1a0"
        },
        "item": {
          "id": "364dbf07-b602-4f1b-af6f-3c25f7ec2815",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "efc26dc9-9ce9-4fb1-b64c-50c2e7160893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe03b8a-c17b-4199-bdce-f7aecc20fda1",
        "cursor": {
          "ref": "5fad3144-9036-4807-9273-b17c41da46e6",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99e56d27-1d2d-4553-b123-1de1a11ec1a2"
        },
        "item": {
          "id": "efe03b8a-c17b-4199-bdce-f7aecc20fda1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "282a2714-8f2b-4e8b-9370-4664c6ced5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721aedb3-6d6e-40a2-b99b-197093d6347f",
        "cursor": {
          "ref": "4f548f3e-4528-4a1d-868d-dc374de1f6fe",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "acc4f587-46b1-4830-9fac-9caec1590ef5"
        },
        "item": {
          "id": "721aedb3-6d6e-40a2-b99b-197093d6347f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "843c5e2d-bbf3-4287-8d87-9cfbde67074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4268281-1af0-4de4-a8c6-ecebc4433b65",
        "cursor": {
          "ref": "45fbb8b4-6ea6-4c13-bca4-bb2accbd4ffc",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6376090d-3d28-44c8-85e6-ca81c3735e70"
        },
        "item": {
          "id": "f4268281-1af0-4de4-a8c6-ecebc4433b65",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9ad0a3be-7bb1-4241-8a37-fef549f834b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f745f-1880-4bf8-8507-34e6cb63c218",
        "cursor": {
          "ref": "725cc2da-697d-493e-99e9-5e4cc4de1689",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c3a80016-794d-43ec-89b8-1067ddd684bb"
        },
        "item": {
          "id": "109f745f-1880-4bf8-8507-34e6cb63c218",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "38a408c7-1e0e-4d43-ae85-42590c2c2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ada49-0cdf-4d8c-8f78-b53bc3f642b4",
        "cursor": {
          "ref": "567eb154-15f8-474f-b502-919430f11c7b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b14efc3b-e422-43a6-9a9d-44fb5ede4710"
        },
        "item": {
          "id": "ba9ada49-0cdf-4d8c-8f78-b53bc3f642b4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ce3aea3b-e35b-4ef7-b42a-9a5b9ee03b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a21746-722e-474a-8599-f22bd1fd7e5e",
        "cursor": {
          "ref": "a2d71677-47c6-4d48-83b9-bc21902bde55",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8551b941-4253-4e6e-af0d-f49a218254b0"
        },
        "item": {
          "id": "b9a21746-722e-474a-8599-f22bd1fd7e5e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "47d9fec9-ffb8-479c-bc9d-7fd62f2a46a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b50401e-3619-4576-82da-1d81f7983a96",
        "cursor": {
          "ref": "2f7026bf-6fcf-4f00-a261-9696b091d8fb",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64818002-eda1-48d3-afb8-47c9f2494df2"
        },
        "item": {
          "id": "7b50401e-3619-4576-82da-1d81f7983a96",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c598728-5192-443d-961f-5fcffb3e3abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da853d-1c91-40f2-a7b9-9e11219b1425",
        "cursor": {
          "ref": "d991438a-7904-46cf-91c8-058b87a97ef3",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8dee11b3-6c0b-418f-a9ca-c2e7f5f864a1"
        },
        "item": {
          "id": "44da853d-1c91-40f2-a7b9-9e11219b1425",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "63e3410c-48ee-4380-8b4c-b8bd084efc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0e653-52aa-446e-b37a-2e841de35a33",
        "cursor": {
          "ref": "9042d4df-7f99-41f6-ba88-a71cded622a7",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e452441e-4eff-4c2d-aa9b-1ec7fbb4d2cb"
        },
        "item": {
          "id": "15f0e653-52aa-446e-b37a-2e841de35a33",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4e63125d-0d47-4606-9dc9-27836847c1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec80d167-c775-46b0-a63d-cceeca107b84",
        "cursor": {
          "ref": "67186fb3-9529-444d-858b-5f2a16fbd377",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e10dfff-7d18-4349-86ea-97b197951b6d"
        },
        "item": {
          "id": "ec80d167-c775-46b0-a63d-cceeca107b84",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "33f6b7db-a190-4bb4-9432-2357109a8ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f41d13b-53cf-4603-86f2-ec8924ddb405",
        "cursor": {
          "ref": "d5e4345c-a4e5-4eb4-9b0b-8d38c56b24b9",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c22bea54-2369-452c-b02f-788ac6773976"
        },
        "item": {
          "id": "6f41d13b-53cf-4603-86f2-ec8924ddb405",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "691d7a0a-1b80-42fb-abda-1107ad46a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d055d413-6a34-47af-9fc5-ffb239208a7d",
        "cursor": {
          "ref": "9a1e39e7-d3fc-4fc9-abfc-49aed2087767",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "038fad0b-d59e-4cce-91c5-064f605a7766"
        },
        "item": {
          "id": "d055d413-6a34-47af-9fc5-ffb239208a7d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "25bd28ca-be06-4a61-914e-04b85d02373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969baaa-cdd7-4a2a-8d5b-849d0467aab3",
        "cursor": {
          "ref": "a8401ef7-e5b7-4a2d-8807-966291f30c45",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6fcb7325-6448-4a68-9ce4-d6488b812d76"
        },
        "item": {
          "id": "5969baaa-cdd7-4a2a-8d5b-849d0467aab3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d75c5a9-cffb-4c03-8300-a12235d63d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da7a70a-709f-468f-a9b8-5a27d97b6aa5",
        "cursor": {
          "ref": "b4f1b3fb-ebd6-4ab8-b46e-909973791dcd",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d64a8e10-671f-4cb6-9b3a-46e73a902089"
        },
        "item": {
          "id": "8da7a70a-709f-468f-a9b8-5a27d97b6aa5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "95b6c8a0-02a0-4f4d-bcd6-3a399548206f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bb6a3f-a243-4518-95f7-7fd53fb2c120",
        "cursor": {
          "ref": "b2583514-da61-4f46-b082-6a167af39c7c",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "40f9ce95-0a79-4975-866b-110f134c46e9"
        },
        "item": {
          "id": "58bb6a3f-a243-4518-95f7-7fd53fb2c120",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7ed68b8c-fd46-43ca-ac5a-84dcbf1e932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df784ab-85da-410e-82c7-f710c82011a5",
        "cursor": {
          "ref": "eced3031-a584-40f2-a896-c1c4cdc2d5c5",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f8d72be6-1671-43c4-99e0-96e512e6f24a"
        },
        "item": {
          "id": "9df784ab-85da-410e-82c7-f710c82011a5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9efb8b51-45d7-41a4-94db-386ac7253d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb2a45-6626-4356-96c7-37705a66344b",
        "cursor": {
          "ref": "ad32f45f-445f-49e6-b501-849d29de6ab9",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "99facb13-f28f-4ec3-a317-b6f598baef6e"
        },
        "item": {
          "id": "cecb2a45-6626-4356-96c7-37705a66344b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "13ed0073-8ba2-48c4-a1d8-8d86959c83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9a4bc-011f-41b9-98d2-f9eb0642944a",
        "cursor": {
          "ref": "c8c565c9-02f4-48c3-83c2-48b373290b44",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0d392f45-575b-4964-8c2f-e5d8896ccb26"
        },
        "item": {
          "id": "42b9a4bc-011f-41b9-98d2-f9eb0642944a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cf71d16a-9a3f-48b0-99d7-b343795d0cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274a228e-0395-4847-93ba-96c8f4fc4b87",
        "cursor": {
          "ref": "6c9f0210-0a5e-4ad3-a15d-13568e47d632",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d975ae6-e97f-467e-8034-d4f5a253094f"
        },
        "item": {
          "id": "274a228e-0395-4847-93ba-96c8f4fc4b87",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "239e3c24-ce5b-453b-b0fe-b499e3ec1176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464992da-eeec-4ac5-934e-b9d577c254b6",
        "cursor": {
          "ref": "09b87010-4dce-4139-ad23-288f8de4d49d",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b35dc3e4-df33-42a1-a984-e2011a77c5c3"
        },
        "item": {
          "id": "464992da-eeec-4ac5-934e-b9d577c254b6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "423683bd-7490-4248-80d1-d6ea3352ddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41101c2-bae9-436e-a54e-638e5c566e12",
        "cursor": {
          "ref": "48faae32-b507-492e-9985-0a2d61907676",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2d8979d9-1d39-41ff-a5bd-c4afb4f54566"
        },
        "item": {
          "id": "b41101c2-bae9-436e-a54e-638e5c566e12",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fa927c11-6cf0-4b33-b782-d8cafcc2ff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8284152-548d-45f6-8ba2-1553413ac6b0",
        "cursor": {
          "ref": "cf7dd6f9-cc84-469a-9900-05764b3c1e7e",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fd3e575a-c123-46a5-88dd-428df91a08e4"
        },
        "item": {
          "id": "b8284152-548d-45f6-8ba2-1553413ac6b0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dc5d4587-16ba-4ec7-a92b-cae6eee56796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7936b642-128c-4eaa-b031-087a42468eba",
        "cursor": {
          "ref": "4574c0f5-0425-477e-8651-0d0e1d9636ca",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "150dedc5-ac31-4c33-8a3c-65e134c1cc74"
        },
        "item": {
          "id": "7936b642-128c-4eaa-b031-087a42468eba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b6c7d47a-6c5d-4e78-9755-9424e891e6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b204812c-9f94-40dd-8236-06184309daed",
        "cursor": {
          "ref": "8357359c-c221-440d-8247-82023452f53d",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c0f34f7-096e-42e9-ad84-f2ed26c6a100"
        },
        "item": {
          "id": "b204812c-9f94-40dd-8236-06184309daed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "23743f53-9f2f-447d-b8e2-f6883d2a5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a70163-7013-48ad-8f21-bfc8fe6e03b0",
        "cursor": {
          "ref": "3904ec56-f7b5-42e3-acc1-a194ffd85e01",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d6c2ebf-ea9d-4354-aca8-cc0461fe6f9a"
        },
        "item": {
          "id": "43a70163-7013-48ad-8f21-bfc8fe6e03b0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2938e494-c5df-44bc-bef9-8459b303375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884e705-9a5c-4aab-91c3-29a635a62f54",
        "cursor": {
          "ref": "f0fcfc9e-522d-4625-920f-ec237d878385",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "786d99e8-7181-4ae0-a01f-2abd0c5c2728"
        },
        "item": {
          "id": "7884e705-9a5c-4aab-91c3-29a635a62f54",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e3efdf30-5b46-474b-8906-e8571e046da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c99834-ba31-40bd-afb3-38015e4424f9",
        "cursor": {
          "ref": "7ffd4bfb-4931-4727-934e-a61c5df6d03c",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "86bd214d-da64-4271-b7a7-5ab20ffbe7fa"
        },
        "item": {
          "id": "57c99834-ba31-40bd-afb3-38015e4424f9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e5055e6-da57-439d-a34e-53243eeaf4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2b51b0-4904-4559-b139-d64a1bf5d934",
        "cursor": {
          "ref": "50faa2fd-d691-408e-baf4-0dc4b7b39100",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e4168289-d839-40eb-b95a-f24d6f1693b1"
        },
        "item": {
          "id": "ff2b51b0-4904-4559-b139-d64a1bf5d934",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af9080c5-85ba-45e5-8170-c51658d4d125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bac11f4-e1bc-4fd2-8f61-ef031da261c9",
        "cursor": {
          "ref": "b0b180e1-888c-4d62-8db2-131b7be189e5",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e646b93e-b074-4378-8c02-a61bfb605176"
        },
        "item": {
          "id": "4bac11f4-e1bc-4fd2-8f61-ef031da261c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b2ff09d-f44a-4727-a672-00ded7226cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8befe521-5672-4a97-addc-b34cec8d61f3",
        "cursor": {
          "ref": "ad6db739-1192-4dbb-8e8a-308bc211ad50",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f54681ec-f284-440f-8d6d-8c3d9e260ba8"
        },
        "item": {
          "id": "8befe521-5672-4a97-addc-b34cec8d61f3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66da2c2e-22b2-4a18-a8a2-4d2aa416e386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf18a0-9cc4-4d82-9048-c2a8342042d9",
        "cursor": {
          "ref": "2cc6d268-6791-4bef-8fba-927388372ae0",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f1369357-5c21-4a99-827d-0dff73ec7e74"
        },
        "item": {
          "id": "cecf18a0-9cc4-4d82-9048-c2a8342042d9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5aadb15a-cc77-406d-b3ad-0c3852f29a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf30a12-250d-48b6-9ee6-d24819893244",
        "cursor": {
          "ref": "6e3a78f4-f089-49ea-a735-4673fbf54805",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5da905db-e6d0-4ce5-8d25-c3d84e67baf3"
        },
        "item": {
          "id": "4bf30a12-250d-48b6-9ee6-d24819893244",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "29c4e891-d946-4aa9-9f35-35e9ec9e389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a239c94-2933-4038-b7ae-f21026e9c125",
        "cursor": {
          "ref": "7766c459-3423-475b-8efb-2871103bd251",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a5034f5b-4520-4d3b-9175-727b9b9e97d6"
        },
        "item": {
          "id": "4a239c94-2933-4038-b7ae-f21026e9c125",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fadd95ef-ccbb-4caf-abcb-87ccaaf8a117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f437b729-a52d-461c-9cc6-87fb2dc8b32f",
        "cursor": {
          "ref": "cd8d2aa3-2911-4f79-b204-947b07e87df7",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "61e7cdf3-9d18-4270-97b5-6a8dd1471b88"
        },
        "item": {
          "id": "f437b729-a52d-461c-9cc6-87fb2dc8b32f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ffdabc7c-e685-43d8-9997-b1cf1b75cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69af105c-6503-48b5-91ec-402e675645c4",
        "cursor": {
          "ref": "57c5a4f0-580b-44c1-acdc-8305f743443b",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1e2bf167-85b6-4739-b519-6aea872a2e37"
        },
        "item": {
          "id": "69af105c-6503-48b5-91ec-402e675645c4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "63132ca1-2c99-46a1-9e40-18ef332159dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e581cc6-c77e-4feb-9092-6fc7cbe3af66",
        "cursor": {
          "ref": "51de4d0a-cbab-40eb-b867-831f7c5b1912",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0ff2ba5f-23ad-42d3-be86-33e02f99c6d1"
        },
        "item": {
          "id": "3e581cc6-c77e-4feb-9092-6fc7cbe3af66",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d361203c-82a9-4ac2-ad7a-4b638a6dbfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d405d67-850c-4010-9452-a84fcbf2c3ff",
        "cursor": {
          "ref": "46f9e2f8-4864-4085-b16d-ad8979554d72",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "734b473a-c8f3-497d-86b3-912dd765027e"
        },
        "item": {
          "id": "9d405d67-850c-4010-9452-a84fcbf2c3ff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e895561c-e17e-43e3-8085-beab67b59b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac78ec-7a68-40be-b185-1c2729c31d92",
        "cursor": {
          "ref": "b6d820a4-b0f0-4328-a466-ac339840941c",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f051c1ba-a192-400a-8359-89efed4c62ec"
        },
        "item": {
          "id": "98ac78ec-7a68-40be-b185-1c2729c31d92",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1c4b96ea-62e3-4c67-9db6-cb432fc252fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4424e4c-99cf-47e7-b67a-43cabd584a79",
        "cursor": {
          "ref": "5c045291-7f15-4b95-9350-d6d3fa6e6c57",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "27203771-964a-42ba-ad62-19dc20f337fd"
        },
        "item": {
          "id": "c4424e4c-99cf-47e7-b67a-43cabd584a79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a1ce2873-0296-482c-a597-dda2e3bf4b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7ae281-8997-4665-a225-81facea3e716",
        "cursor": {
          "ref": "0a2c7b13-58fa-42ae-9894-274144256d1c",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98e6b0a0-ae90-4a27-a407-2112313d8247"
        },
        "item": {
          "id": "ff7ae281-8997-4665-a225-81facea3e716",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a5466d2-f450-4479-9e81-7892988b561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba6c699-50f0-4c32-a790-ab20627fc9db",
        "cursor": {
          "ref": "a862a91d-8788-4b4f-8476-df67c84d74b3",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f56d573c-782c-48fa-b9bd-d11ad6a38975"
        },
        "item": {
          "id": "8ba6c699-50f0-4c32-a790-ab20627fc9db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cc0ee559-84e5-4f0e-9a3a-9474eee6d432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0daa2cd-a28b-49c4-a007-00e7175d4756",
        "cursor": {
          "ref": "5890d45e-3cb0-4640-829b-1cd728416067",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0a6d16e4-f9a7-4f57-8897-c24a832f80c6"
        },
        "item": {
          "id": "f0daa2cd-a28b-49c4-a007-00e7175d4756",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "141ebde8-3bd6-46d7-b70d-1dcbd1e3ba2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343370d4-3657-48ca-973c-ab2e0f6d97cd",
        "cursor": {
          "ref": "c8aa2df4-198c-4bf9-afd0-d0160c2f4beb",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ef2dac66-3c1c-4108-897c-84dd5755c72b"
        },
        "item": {
          "id": "343370d4-3657-48ca-973c-ab2e0f6d97cd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73f4c7ad-4c8a-41f4-9eac-dc248d1d1eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a692462-de45-4e6b-add1-e42db225c451",
        "cursor": {
          "ref": "24ae1064-7779-4adb-9b7a-d3dedc3a4b28",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "463c0346-5030-430c-a854-e4b7b8c7c3c3"
        },
        "item": {
          "id": "2a692462-de45-4e6b-add1-e42db225c451",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1accba87-0aa3-4c33-ab15-32221383b5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1f3a3d-e8c4-4ff1-8be6-fddfda556607",
        "cursor": {
          "ref": "8e57668a-38a1-4bb4-8c82-73ac4493feda",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1e5c9003-26a7-4164-95a2-3bfa576fc374"
        },
        "item": {
          "id": "df1f3a3d-e8c4-4ff1-8be6-fddfda556607",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "76d46de1-07ed-47a8-a928-39fdf590c27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c589a4-b1d6-4cda-94b1-2d240e043c84",
        "cursor": {
          "ref": "92821a15-701d-4ae0-8e99-9531575c6521",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "985da941-0188-4389-99ec-c79c176eac0a"
        },
        "item": {
          "id": "76c589a4-b1d6-4cda-94b1-2d240e043c84",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6b13a6e1-23dc-40fa-8e61-8487ad3266c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fd132d-3710-46a4-95fb-8d44f813d7e5",
        "cursor": {
          "ref": "a60cbc5f-6ad3-446d-91de-3ad50825a4cd",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "81846e2d-efe9-412b-94c0-54e19c93ddc5"
        },
        "item": {
          "id": "78fd132d-3710-46a4-95fb-8d44f813d7e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ebb71d3-7f0f-4910-a0c4-fdc100b6ff1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a45b851-35f6-48ef-908f-7106e5260529",
        "cursor": {
          "ref": "c9636281-70e1-4a75-a06d-ba52720d73a2",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0f872631-7623-422f-9b28-abb34fffcb7a"
        },
        "item": {
          "id": "9a45b851-35f6-48ef-908f-7106e5260529",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "40a3c0eb-b524-43f7-bfdc-169706d46827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1d9ea-e03f-4eee-8983-5a5a332a69e0",
        "cursor": {
          "ref": "783bd185-6e70-4a14-b378-3d2166bd4ce2",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9c0c6752-019a-4738-bcb1-f2f4c3c2c0f9"
        },
        "item": {
          "id": "4cf1d9ea-e03f-4eee-8983-5a5a332a69e0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "881b3560-6bfc-42b4-9635-5c9aad1a76ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303ff97c-6508-4926-a6e4-9737c3b9ff34",
        "cursor": {
          "ref": "f839a9ea-ca9f-4ead-8090-e2d668061cf3",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4bb0bb6b-206b-4d9e-a9b3-5d2eab3b9328"
        },
        "item": {
          "id": "303ff97c-6508-4926-a6e4-9737c3b9ff34",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6f2c0890-2c0e-4546-b10f-2ec4689a3b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64066ab-e06e-44f6-bd7f-93195fc351d1",
        "cursor": {
          "ref": "310b3ab5-53b6-48d1-9a3a-3ab688099181",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b7334767-2696-4353-913e-9355a2ff8e18"
        },
        "item": {
          "id": "f64066ab-e06e-44f6-bd7f-93195fc351d1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "042f5344-54bb-47c9-8bba-7ee76948b012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e9ffbd-4bf1-4587-b4f4-4220c694ca08",
        "cursor": {
          "ref": "99ba1cd8-53ad-4a38-a950-1ba65b358be3",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "74de9e65-13c5-4e6f-8d37-1b09cb46ac74"
        },
        "item": {
          "id": "61e9ffbd-4bf1-4587-b4f4-4220c694ca08",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7810feed-35a7-44f7-be00-102449f077aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8174eaca-81f3-4284-8e11-eb48e518c91f",
        "cursor": {
          "ref": "b854c5c6-854f-46bd-a4cd-1939d3c16b8c",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "af366bed-f2be-461d-b8a5-7999c971423b"
        },
        "item": {
          "id": "8174eaca-81f3-4284-8e11-eb48e518c91f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0a625352-e6bb-4ce7-b1a0-f1ec413b5061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ce9978-5e90-4442-9e6b-5a7471151f56",
        "cursor": {
          "ref": "f5d77de4-ac2f-4ef4-90e8-a2f18d7d9a7c",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b853f663-62c1-4168-a613-5fd694733064"
        },
        "item": {
          "id": "c2ce9978-5e90-4442-9e6b-5a7471151f56",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fd2d328f-aad6-4a9d-9c36-a7adcd3c7779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e728928-4dcc-485c-b386-0b8258b1aee3",
        "cursor": {
          "ref": "c7714b2d-ca83-40ce-8c37-60d4ea9fffb6",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "438c1cb5-c773-4fda-ada3-f76be62e1596"
        },
        "item": {
          "id": "9e728928-4dcc-485c-b386-0b8258b1aee3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "006a8ab8-3c4c-462a-b19b-b3986b58c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7abe005-4902-4b85-aa52-46fb70f470de",
        "cursor": {
          "ref": "cce57bb7-0965-4837-bccb-3d9d81e40ba8",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "98603ad4-d8f9-4727-9ddb-3e6a769e674c"
        },
        "item": {
          "id": "f7abe005-4902-4b85-aa52-46fb70f470de",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d9263f2b-3e15-46a0-a1c0-c001f30ec538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8fa3c7-67e4-4fcd-b736-71eb219a1781",
        "cursor": {
          "ref": "3eca6b13-f448-4bca-b73a-3bc24e69e098",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "08797f0f-6527-45bf-bf27-31d792dd9d5b"
        },
        "item": {
          "id": "dc8fa3c7-67e4-4fcd-b736-71eb219a1781",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ef417a38-ef02-4a81-a1fc-67f69a9ec50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38983934-2058-47b1-8146-ccc1bb445e29",
        "cursor": {
          "ref": "5a26bd7f-c0c7-43e6-bd75-8de586d9bca6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a967ee14-ab89-4beb-9a12-a9a6285b5ecf"
        },
        "item": {
          "id": "38983934-2058-47b1-8146-ccc1bb445e29",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "51cd0e66-4bfe-42d6-879c-cf1c0f86c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d16cd9-233b-41b4-aab1-bb0e14068e77",
        "cursor": {
          "ref": "6ebfba24-21ae-49da-aef0-98042d6a0e56",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5cb2b308-b5b5-4d05-aaca-37f410cf1677"
        },
        "item": {
          "id": "72d16cd9-233b-41b4-aab1-bb0e14068e77",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a9f9cec3-6000-41f2-8d3f-c13243eca59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6b9aa3-5eaf-4903-a49c-2a811834a3a9",
        "cursor": {
          "ref": "75e8e213-92cf-4080-9a05-bd630c828f23",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2082025b-9d02-4e1f-be75-721d318bd38d"
        },
        "item": {
          "id": "2c6b9aa3-5eaf-4903-a49c-2a811834a3a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e81b4303-41c0-48d4-ad38-b2a0dc7dce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4425aa8b-d22e-449a-86d3-0c382540aa2b",
        "cursor": {
          "ref": "54eaa4a0-b708-48cb-9929-7034ab0c4863",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "046407c1-06a7-47b7-8f4b-67183bcf0a06"
        },
        "item": {
          "id": "4425aa8b-d22e-449a-86d3-0c382540aa2b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "063e58ec-664e-4e65-bfe3-1a3e4a063916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107a9e2-ec41-4852-99c1-11f5a86a037a",
        "cursor": {
          "ref": "9d77e225-ac86-4a9b-a531-816d05196b30",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8810320c-f134-49c1-887d-382a588248ea"
        },
        "item": {
          "id": "c107a9e2-ec41-4852-99c1-11f5a86a037a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8dd7bd51-a39b-4c31-881a-119451031726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7659aa70-bc9a-480b-b578-8d6d5ad5e8a6",
        "cursor": {
          "ref": "480467b0-d3f5-492e-9fd0-65c89756d20a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "89aa9004-a2bf-4642-ae37-894386ed312a"
        },
        "item": {
          "id": "7659aa70-bc9a-480b-b578-8d6d5ad5e8a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e83099cc-6b18-43a6-89a9-cbab89f0443b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155a0a54-d8c0-4ebf-8921-41ba369f8311",
        "cursor": {
          "ref": "eec74f6b-da2d-45b3-b308-d0cee98d9e69",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c039c8ac-1bbd-4767-8853-635f090fcefd"
        },
        "item": {
          "id": "155a0a54-d8c0-4ebf-8921-41ba369f8311",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5fce31e2-bc9a-40a3-933e-63e362c22c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadd9cbc-c8c3-47d0-b049-2f1008ae12c3",
        "cursor": {
          "ref": "c7de7ea4-47ae-47f7-9139-c56e907d2da1",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4fc9ab01-90b3-4fe2-a521-117a6ef7837d"
        },
        "item": {
          "id": "aadd9cbc-c8c3-47d0-b049-2f1008ae12c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "48566e0d-e0cf-4f58-bdfa-93169fa9dd0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c91d70-d9f0-45d1-b234-a1289dfc986f",
        "cursor": {
          "ref": "5c6927ec-d57e-4ac6-af17-9f2890689899",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ea93a6c6-0464-45f8-bc4a-80204e4a69af"
        },
        "item": {
          "id": "30c91d70-d9f0-45d1-b234-a1289dfc986f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8aa6f8b7-af4e-48a2-8ded-b36860faea24",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 289,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc6c40-5b23-483b-9ea7-ea0ad414cf8e",
        "cursor": {
          "ref": "0191d88e-bb03-46ff-88b8-a0af360f00c2",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b885cb25-507d-487b-a73a-365d7df128ea"
        },
        "item": {
          "id": "5bfc6c40-5b23-483b-9ea7-ea0ad414cf8e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f60f279d-730f-43e0-a5b8-ed8cf49bcbba",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092bdab-d59b-4b1c-8eec-5b68ed7dce70",
        "cursor": {
          "ref": "04b5337f-2dbc-4ce7-8ad7-4195f1933aad",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c6e03c23-a89f-4072-9a68-2669a3563491"
        },
        "item": {
          "id": "3092bdab-d59b-4b1c-8eec-5b68ed7dce70",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4a686138-fbfe-419d-9993-2c82f2e279e9",
          "status": "OK",
          "code": 200,
          "responseTime": 3311,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d7478-d45d-4fe2-b67e-1a9d25c1a5d6",
        "cursor": {
          "ref": "63397bf6-36b6-41b9-bd54-ff3879df27a5",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c4e52fd-90f4-47cf-8541-0f989e1978f0"
        },
        "item": {
          "id": "192d7478-d45d-4fe2-b67e-1a9d25c1a5d6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b919cf42-7b6a-456a-b255-98c7699e4e82",
          "status": "OK",
          "code": 200,
          "responseTime": 3245,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
        "cursor": {
          "ref": "560b7615-a8df-40f4-a96e-91f8906eff76",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ca057e6-f35b-4eba-ac7e-6f228e3af634"
        },
        "item": {
          "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e48ea1ee-6701-467a-8604-fba9fcd79eb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
        "cursor": {
          "ref": "560b7615-a8df-40f4-a96e-91f8906eff76",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ca057e6-f35b-4eba-ac7e-6f228e3af634"
        },
        "item": {
          "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e48ea1ee-6701-467a-8604-fba9fcd79eb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
        "cursor": {
          "ref": "560b7615-a8df-40f4-a96e-91f8906eff76",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ca057e6-f35b-4eba-ac7e-6f228e3af634"
        },
        "item": {
          "id": "a1b6ebe8-4a95-4f3b-b09d-7080227b950c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e48ea1ee-6701-467a-8604-fba9fcd79eb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b1ef4e-1e79-4d06-8549-2bca3389f636",
        "cursor": {
          "ref": "7abf627a-6021-4f0e-85aa-6fb4d0ad5e1f",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5e8fef79-bbc3-435b-b0ab-76c6bbaa7f61"
        },
        "item": {
          "id": "a5b1ef4e-1e79-4d06-8549-2bca3389f636",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "eb45edf6-7abf-4443-bb5e-7a2cbfc57058",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 316,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af039c-d28d-49ba-b908-27d362110340",
        "cursor": {
          "ref": "1e243495-3067-4aab-a4b4-cbc66e02893f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "523ce4f9-e0a7-47db-8863-c6eda1c4731c"
        },
        "item": {
          "id": "d4af039c-d28d-49ba-b908-27d362110340",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bd3f73e4-f52c-456e-8a18-2ffdb1e97292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af039c-d28d-49ba-b908-27d362110340",
        "cursor": {
          "ref": "1e243495-3067-4aab-a4b4-cbc66e02893f",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "523ce4f9-e0a7-47db-8863-c6eda1c4731c"
        },
        "item": {
          "id": "d4af039c-d28d-49ba-b908-27d362110340",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bd3f73e4-f52c-456e-8a18-2ffdb1e97292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93109b3-dccb-41d0-8d88-7652f069d76a",
        "cursor": {
          "ref": "fb65b0a2-85fc-41cb-a89a-ba0ee76e34ec",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a014f368-86b6-426b-a03f-e843ce8a198b"
        },
        "item": {
          "id": "e93109b3-dccb-41d0-8d88-7652f069d76a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "408aac4a-79bd-4901-a606-fb04af51f048",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dd9697-8c72-4d5d-bf8b-f576f2f2dfd9",
        "cursor": {
          "ref": "929b7c84-54aa-4047-94ec-1134b03b4fcf",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c2b4de15-1f10-405d-89bf-20354dc9ab27"
        },
        "item": {
          "id": "e6dd9697-8c72-4d5d-bf8b-f576f2f2dfd9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8e3f87e-38ac-4889-a8b2-79a9fd5bb808",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dd9697-8c72-4d5d-bf8b-f576f2f2dfd9",
        "cursor": {
          "ref": "929b7c84-54aa-4047-94ec-1134b03b4fcf",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c2b4de15-1f10-405d-89bf-20354dc9ab27"
        },
        "item": {
          "id": "e6dd9697-8c72-4d5d-bf8b-f576f2f2dfd9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8e3f87e-38ac-4889-a8b2-79a9fd5bb808",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58931d7-dd71-4eb7-8f56-cb435569f24b",
        "cursor": {
          "ref": "2ea2583f-1e7b-4bd5-8d6d-5cbce21874f8",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "01eb7a14-4281-445e-837f-470c6d9742d5"
        },
        "item": {
          "id": "e58931d7-dd71-4eb7-8f56-cb435569f24b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "57335ab9-0d4f-42ff-ad0d-ffcd70c9c58a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}